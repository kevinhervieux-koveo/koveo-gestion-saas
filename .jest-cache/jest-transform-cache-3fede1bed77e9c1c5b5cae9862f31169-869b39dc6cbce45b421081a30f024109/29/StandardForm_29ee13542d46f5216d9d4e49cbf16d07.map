{"version":3,"names":["cov_cmnjk1i9e","actualCoverage","exports","StandardForm","s","useStandardForm","FormValidationSummary","react_1","__importDefault","require","form_1","card_1","alert_1","lucide_react_1","utils_1","StandardFormField_1","form","onSubmit","title","description","children","isLoading","b","submitText","loadingText","className","formName","showCard","errorMessage","successMessage","resetOnSuccess","maxWidth","f","handleSubmit","data","reset","error","console","maxWidthClasses","sm","md","lg","xl","full","FormContent","jsx_runtime_1","jsx","Form","jsxs","cn","noValidate","Alert","variant","AlertCircle","AlertDescription","CheckCircle","StandardSubmitButton","disabled","Card","CardHeader","CardTitle","CardDescription","CardContent","options","setIsLoading","default","useState","setErrorMessage","setSuccessMessage","showSuccessMessage","successMessageDuration","useEffect","timer","setTimeout","clearTimeout","useCallback","submitFn","successMsg","response","message","clearMessages","errors","errorEntries","Object","entries","filter","length","map","field","charAt","toUpperCase","slice"],"sources":["/home/runner/workspace/client/src/components/forms/StandardForm.tsx"],"sourcesContent":["import React from 'react';\nimport { UseFormReturn, FieldValues } from 'react-hook-form';\nimport { Form } from '@/components/ui/form';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { StandardSubmitButton, FormSection } from './StandardFormField';\n\n/**\n * Props for the standardized form wrapper\n */\ninterface StandardFormProps<T extends FieldValues> {\n  form: UseFormReturn<T>;\n  onSubmit: (data: T) => void | Promise<void>;\n  title?: string;\n  description?: string;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  submitText?: string;\n  loadingText?: string;\n  className?: string;\n  formName?: string;\n  showCard?: boolean;\n  errorMessage?: string;\n  successMessage?: string;\n  resetOnSuccess?: boolean;\n  maxWidth?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\n}\n\n/**\n * Standardized form wrapper that provides consistent styling, layout,\n * error handling, and accessibility features for all forms in the application.\n * \n * Features:\n * - Consistent form layout and styling\n * - Quebec compliance standards\n * - Built-in error and success messaging\n * - Responsive design\n * - Automatic test ID generation\n * - Loading states with proper UX\n * - Optional card wrapper for better visual hierarchy\n * \n * @param props - Configuration for the form wrapper\n */\nexport function StandardForm<T extends FieldValues>({\n  form,\n  onSubmit,\n  title,\n  description,\n  children,\n  isLoading = false,\n  submitText = 'Submit',\n  loadingText = 'Submitting...',\n  className = '',\n  formName = 'standard-form',\n  showCard = true,\n  errorMessage,\n  successMessage,\n  resetOnSuccess = false,\n  maxWidth = 'md',\n}: StandardFormProps<T>) {\n  // Handle form submission with error boundary\n  const handleSubmit = async (data: T) => {\n    try {\n      await onSubmit(data);\n      if (resetOnSuccess) {\n        form.reset();\n      }\n    } catch (error) {\n      console.error('Form submission error:', error);\n      // Error is handled by parent component through errorMessage prop\n    }\n  };\n\n  // Get max-width classes based on prop\n  const maxWidthClasses = {\n    sm: 'max-w-sm',\n    md: 'max-w-md',\n    lg: 'max-w-lg',\n    xl: 'max-w-xl',\n    '2xl': 'max-w-2xl',\n    full: 'max-w-full',\n  };\n\n  const FormContent = () => (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(handleSubmit)}\n        className={cn('space-y-6', className)}\n        data-testid={`${formName}-form`}\n        noValidate // We handle validation with Zod\n      >\n        {/* Error Alert */}\n        {errorMessage && (\n          <Alert variant=\"destructive\" data-testid={`${formName}-error-alert`}>\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription>{errorMessage}</AlertDescription>\n          </Alert>\n        )}\n\n        {/* Success Alert */}\n        {successMessage && (\n          <Alert variant=\"default\" className=\"border-green-500 text-green-700\" data-testid={`${formName}-success-alert`}>\n            <CheckCircle className=\"h-4 w-4\" />\n            <AlertDescription>{successMessage}</AlertDescription>\n          </Alert>\n        )}\n\n        {/* Form Fields */}\n        <div className=\"space-y-4\">\n          {children}\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"flex justify-end pt-4\">\n          <StandardSubmitButton\n            isLoading={isLoading}\n            loadingText={loadingText}\n            formName={formName}\n            disabled={isLoading}\n          >\n            {submitText}\n          </StandardSubmitButton>\n        </div>\n      </form>\n    </Form>\n  );\n\n  if (!showCard) {\n    return (\n      <div className={cn('w-full mx-auto', maxWidthClasses[maxWidth])}>\n        <FormContent />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('w-full mx-auto', maxWidthClasses[maxWidth])}>\n      <Card data-testid={`${formName}-card`}>\n        {(title || description) && (\n          <CardHeader>\n            {title && (\n              <CardTitle className=\"text-xl font-semibold text-gray-900\">\n                {title}\n              </CardTitle>\n            )}\n            {description && (\n              <CardDescription className=\"text-gray-600\">\n                {description}\n              </CardDescription>\n            )}\n          </CardHeader>\n        )}\n        <CardContent>\n          <FormContent />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n/**\n * Hook for managing form state with standardized error handling\n */\ninterface UseStandardFormOptions {\n  resetOnSuccess?: boolean;\n  showSuccessMessage?: boolean;\n  successMessageDuration?: number;\n}\n\nexport function useStandardForm(options: UseStandardFormOptions = {}) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>('');\n  const [successMessage, setSuccessMessage] = React.useState<string>('');\n\n  const {\n    resetOnSuccess = false,\n    showSuccessMessage = true,\n    successMessageDuration = 3000,\n  } = options;\n\n  // Clear success message after duration\n  React.useEffect(() => {\n    if (successMessage && successMessageDuration > 0) {\n      const timer = setTimeout(() => {\n        setSuccessMessage('');\n      }, successMessageDuration);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage, successMessageDuration]);\n\n  const handleSubmit = React.useCallback(\n    async <T extends FieldValues>(\n      submitFn: (data: T) => Promise<void>,\n      form: UseFormReturn<T>,\n      successMsg: string = 'Operation completed successfully'\n    ) => {\n      return async (data: T) => {\n        setIsLoading(true);\n        setErrorMessage('');\n        setSuccessMessage('');\n\n        try {\n          await submitFn(data);\n          \n          if (showSuccessMessage) {\n            setSuccessMessage(successMsg);\n          }\n          \n          if (resetOnSuccess) {\n            form.reset();\n          }\n        } catch (error: any) {\n          console.error('Form submission error:', error);\n          setErrorMessage(\n            error.response?.data?.message || \n            error.message || \n            'An unexpected error occurred. Please try again.'\n          );\n        } finally {\n          setIsLoading(false);\n        }\n      };\n    },\n    [resetOnSuccess, showSuccessMessage]\n  );\n\n  const clearMessages = React.useCallback(() => {\n    setErrorMessage('');\n    setSuccessMessage('');\n  }, []);\n\n  return {\n    isLoading,\n    errorMessage,\n    successMessage,\n    handleSubmit,\n    clearMessages,\n    setIsLoading,\n    setErrorMessage,\n    setSuccessMessage,\n  };\n}\n\n/**\n * Standardized form validation error display component\n */\ninterface FormValidationSummaryProps {\n  errors: Record<string, any>;\n  formName?: string;\n  className?: string;\n}\n\nexport function FormValidationSummary({\n  errors,\n  formName = 'form',\n  className = '',\n}: FormValidationSummaryProps) {\n  const errorEntries = Object.entries(errors).filter(([, error]) => error?.message);\n\n  if (errorEntries.length === 0) {\n    return null;\n  }\n\n  return (\n    <Alert variant=\"destructive\" className={className} data-testid={`${formName}-validation-summary`}>\n      <AlertCircle className=\"h-4 w-4\" />\n      <AlertDescription>\n        <div className=\"space-y-1\">\n          <p className=\"font-medium\">Please correct the following errors:</p>\n          <ul className=\"list-disc list-inside space-y-1 text-sm\">\n            {errorEntries.map(([field, error]) => (\n              <li key={field}>\n                <strong>{field.charAt(0).toUpperCase() + field.slice(1)}:</strong> {error.message}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </AlertDescription>\n    </Alert>\n  );\n}"],"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","ignoreList":[]}