f30cdda41380d167421c9eb623c480af
"use strict";

/* istanbul ignore next */
function cov_cmnjk1i9e() {
  var path = "/home/runner/workspace/client/src/components/forms/StandardForm.tsx";
  var hash = "db4bd9573e29821ff2f139a3182aade815890588";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/components/forms/StandardForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "7": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "9": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "10": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "11": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "12": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "13": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 58
        }
      },
      "14": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "17": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "18": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 59
        }
      },
      "20": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "21": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 56,
          column: 1018
        }
      },
      "22": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 56,
          column: 1017
        }
      },
      "23": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "24": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 175
        }
      },
      "25": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 650
        }
      },
      "26": {
        start: {
          line: 63,
          column: 38
        },
        end: {
          line: 63,
          column: 69
        }
      },
      "27": {
        start: {
          line: 64,
          column: 44
        },
        end: {
          line: 64,
          column: 72
        }
      },
      "28": {
        start: {
          line: 65,
          column: 48
        },
        end: {
          line: 65,
          column: 76
        }
      },
      "29": {
        start: {
          line: 66,
          column: 98
        },
        end: {
          line: 66,
          column: 105
        }
      },
      "30": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "31": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "32": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 72,
          column: 38
        }
      },
      "33": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 38
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "35": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "36": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 100,
          column: 44
        }
      },
      "37": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "38": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "39": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 32
        }
      },
      "40": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 34
        }
      },
      "41": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "42": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 37
        }
      },
      "43": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 85,
          column: 17
        }
      },
      "44": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 50
        }
      },
      "45": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "46": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 33
        }
      },
      "47": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 63
        }
      },
      "48": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 94,
          column: 71
        }
      },
      "49": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 36
        }
      },
      "50": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "51": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 28
        }
      },
      "52": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "53": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "54": {
        start: {
          line: 117,
          column: 25
        },
        end: {
          line: 117,
          column: 85
        }
      },
      "55": {
        start: {
          line: 117,
          column: 70
        },
        end: {
          line: 117,
          column: 84
        }
      },
      "56": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "57": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 20
        }
      },
      "58": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 802
        }
      },
      "59": {
        start: {
          line: 121,
          column: 608
        },
        end: {
          line: 121,
          column: 784
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "StandardForm",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 21
          }
        },
        loc: {
          start: {
            line: 32,
            column: 278
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 34,
            column: 26
          }
        },
        loc: {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 55,
            column: 25
          }
        },
        loc: {
          start: {
            line: 55,
            column: 31
          },
          end: {
            line: 56,
            column: 1017
          }
        },
        line: 55
      },
      "4": {
        name: "useStandardForm",
        decl: {
          start: {
            line: 62,
            column: 9
          },
          end: {
            line: 62,
            column: 24
          }
        },
        loc: {
          start: {
            line: 62,
            column: 39
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 68,
            column: 31
          }
        },
        loc: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 37
          },
          end: {
            line: 70,
            column: 38
          }
        },
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 72,
            column: 13
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 20
          }
        },
        loc: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 44
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 53
          },
          end: {
            line: 76,
            column: 54
          }
        },
        loc: {
          start: {
            line: 76,
            column: 128
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 16
          }
        },
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 77
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 55
          }
        },
        loc: {
          start: {
            line: 101,
            column: 60
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 101
      },
      "11": {
        name: "FormValidationSummary",
        decl: {
          start: {
            line: 116,
            column: 9
          },
          end: {
            line: 116,
            column: 30
          }
        },
        loc: {
          start: {
            line: 116,
            column: 79
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 55
          },
          end: {
            line: 117,
            column: 56
          }
        },
        loc: {
          start: {
            line: 117,
            column: 70
          },
          end: {
            line: 117,
            column: 84
          }
        },
        line: 117
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 121,
            column: 587
          },
          end: {
            line: 121,
            column: 588
          }
        },
        loc: {
          start: {
            line: 121,
            column: 608
          },
          end: {
            line: 121,
            column: 784
          }
        },
        line: 121
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 70
          },
          end: {
            line: 32,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 82
          },
          end: {
            line: 32,
            column: 87
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 89
          },
          end: {
            line: 32,
            column: 110
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 102
          },
          end: {
            line: 32,
            column: 110
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 112
          },
          end: {
            line: 32,
            column: 141
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 126
          },
          end: {
            line: 32,
            column: 141
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 143
          },
          end: {
            line: 32,
            column: 157
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 155
          },
          end: {
            line: 32,
            column: 157
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 159
          },
          end: {
            line: 32,
            column: 185
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 170
          },
          end: {
            line: 32,
            column: 185
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 32,
            column: 187
          },
          end: {
            line: 32,
            column: 202
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 198
          },
          end: {
            line: 32,
            column: 202
          }
        }],
        line: 32
      },
      "9": {
        loc: {
          start: {
            line: 32,
            column: 234
          },
          end: {
            line: 32,
            column: 256
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 251
          },
          end: {
            line: 32,
            column: 256
          }
        }],
        line: 32
      },
      "10": {
        loc: {
          start: {
            line: 32,
            column: 258
          },
          end: {
            line: 32,
            column: 273
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 269
          },
          end: {
            line: 32,
            column: 273
          }
        }],
        line: 32
      },
      "11": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 56,
            column: 325
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 56,
            column: 43
          }
        }, {
          start: {
            line: 56,
            column: 48
          },
          end: {
            line: 56,
            column: 324
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 327
          },
          end: {
            line: 56,
            column: 669
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 327
          },
          end: {
            line: 56,
            column: 341
          }
        }, {
          start: {
            line: 56,
            column: 346
          },
          end: {
            line: 56,
            column: 668
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 212
          },
          end: {
            line: 60,
            column: 542
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 213
          },
          end: {
            line: 60,
            column: 218
          }
        }, {
          start: {
            line: 60,
            column: 222
          },
          end: {
            line: 60,
            column: 233
          }
        }, {
          start: {
            line: 60,
            column: 239
          },
          end: {
            line: 60,
            column: 541
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 60,
            column: 295
          },
          end: {
            line: 60,
            column: 417
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 295
          },
          end: {
            line: 60,
            column: 300
          }
        }, {
          start: {
            line: 60,
            column: 305
          },
          end: {
            line: 60,
            column: 416
          }
        }],
        line: 60
      },
      "17": {
        loc: {
          start: {
            line: 60,
            column: 419
          },
          end: {
            line: 60,
            column: 537
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 419
          },
          end: {
            line: 60,
            column: 430
          }
        }, {
          start: {
            line: 60,
            column: 435
          },
          end: {
            line: 60,
            column: 536
          }
        }],
        line: 60
      },
      "18": {
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 35
          },
          end: {
            line: 62,
            column: 37
          }
        }],
        line: 62
      },
      "19": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 34
          }
        }],
        line: 66
      },
      "20": {
        loc: {
          start: {
            line: 66,
            column: 36
          },
          end: {
            line: 66,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 57
          },
          end: {
            line: 66,
            column: 61
          }
        }],
        line: 66
      },
      "21": {
        loc: {
          start: {
            line: 66,
            column: 63
          },
          end: {
            line: 66,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 88
          },
          end: {
            line: 66,
            column: 92
          }
        }],
        line: 66
      },
      "22": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "23": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 26
          }
        }, {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 69,
            column: 56
          }
        }],
        line: 69
      },
      "24": {
        loc: {
          start: {
            line: 76,
            column: 76
          },
          end: {
            line: 76,
            column: 123
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 89
          },
          end: {
            line: 76,
            column: 123
          }
        }],
        line: 76
      },
      "25": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 85,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 85,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "26": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "27": {
        loc: {
          start: {
            line: 92,
            column: 32
          },
          end: {
            line: 94,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 32
          },
          end: {
            line: 92,
            column: 61
          }
        }, {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 33
          }
        }, {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 69
          }
        }],
        line: 92
      },
      "28": {
        loc: {
          start: {
            line: 116,
            column: 41
          },
          end: {
            line: 116,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 52
          },
          end: {
            line: 116,
            column: 58
          }
        }],
        line: 116
      },
      "29": {
        loc: {
          start: {
            line: 116,
            column: 60
          },
          end: {
            line: 116,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 72
          },
          end: {
            line: 116,
            column: 74
          }
        }],
        line: 116
      },
      "30": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0],
      "29": [0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/components/forms/StandardForm.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/components/forms/StandardForm.tsx"],
      sourcesContent: ["import React from 'react';\nimport { UseFormReturn, FieldValues } from 'react-hook-form';\nimport { Form } from '@/components/ui/form';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { StandardSubmitButton, FormSection } from './StandardFormField';\n\n/**\n * Props for the standardized form wrapper\n */\ninterface StandardFormProps<T extends FieldValues> {\n  form: UseFormReturn<T>;\n  onSubmit: (data: T) => void | Promise<void>;\n  title?: string;\n  description?: string;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  submitText?: string;\n  loadingText?: string;\n  className?: string;\n  formName?: string;\n  showCard?: boolean;\n  errorMessage?: string;\n  successMessage?: string;\n  resetOnSuccess?: boolean;\n  maxWidth?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\n}\n\n/**\n * Standardized form wrapper that provides consistent styling, layout,\n * error handling, and accessibility features for all forms in the application.\n * \n * Features:\n * - Consistent form layout and styling\n * - Quebec compliance standards\n * - Built-in error and success messaging\n * - Responsive design\n * - Automatic test ID generation\n * - Loading states with proper UX\n * - Optional card wrapper for better visual hierarchy\n * \n * @param props - Configuration for the form wrapper\n */\nexport function StandardForm<T extends FieldValues>({\n  form,\n  onSubmit,\n  title,\n  description,\n  children,\n  isLoading = false,\n  submitText = 'Submit',\n  loadingText = 'Submitting...',\n  className = '',\n  formName = 'standard-form',\n  showCard = true,\n  errorMessage,\n  successMessage,\n  resetOnSuccess = false,\n  maxWidth = 'md',\n}: StandardFormProps<T>) {\n  // Handle form submission with error boundary\n  const handleSubmit = async (data: T) => {\n    try {\n      await onSubmit(data);\n      if (resetOnSuccess) {\n        form.reset();\n      }\n    } catch (error) {\n      console.error('Form submission error:', error);\n      // Error is handled by parent component through errorMessage prop\n    }\n  };\n\n  // Get max-width classes based on prop\n  const maxWidthClasses = {\n    sm: 'max-w-sm',\n    md: 'max-w-md',\n    lg: 'max-w-lg',\n    xl: 'max-w-xl',\n    '2xl': 'max-w-2xl',\n    full: 'max-w-full',\n  };\n\n  const FormContent = () => (\n    <Form {...form}>\n      <form\n        onSubmit={form.handleSubmit(handleSubmit)}\n        className={cn('space-y-6', className)}\n        data-testid={`${formName}-form`}\n        noValidate // We handle validation with Zod\n      >\n        {/* Error Alert */}\n        {errorMessage && (\n          <Alert variant=\"destructive\" data-testid={`${formName}-error-alert`}>\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription>{errorMessage}</AlertDescription>\n          </Alert>\n        )}\n\n        {/* Success Alert */}\n        {successMessage && (\n          <Alert variant=\"default\" className=\"border-green-500 text-green-700\" data-testid={`${formName}-success-alert`}>\n            <CheckCircle className=\"h-4 w-4\" />\n            <AlertDescription>{successMessage}</AlertDescription>\n          </Alert>\n        )}\n\n        {/* Form Fields */}\n        <div className=\"space-y-4\">\n          {children}\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"flex justify-end pt-4\">\n          <StandardSubmitButton\n            isLoading={isLoading}\n            loadingText={loadingText}\n            formName={formName}\n            disabled={isLoading}\n          >\n            {submitText}\n          </StandardSubmitButton>\n        </div>\n      </form>\n    </Form>\n  );\n\n  if (!showCard) {\n    return (\n      <div className={cn('w-full mx-auto', maxWidthClasses[maxWidth])}>\n        <FormContent />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('w-full mx-auto', maxWidthClasses[maxWidth])}>\n      <Card data-testid={`${formName}-card`}>\n        {(title || description) && (\n          <CardHeader>\n            {title && (\n              <CardTitle className=\"text-xl font-semibold text-gray-900\">\n                {title}\n              </CardTitle>\n            )}\n            {description && (\n              <CardDescription className=\"text-gray-600\">\n                {description}\n              </CardDescription>\n            )}\n          </CardHeader>\n        )}\n        <CardContent>\n          <FormContent />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n/**\n * Hook for managing form state with standardized error handling\n */\ninterface UseStandardFormOptions {\n  resetOnSuccess?: boolean;\n  showSuccessMessage?: boolean;\n  successMessageDuration?: number;\n}\n\nexport function useStandardForm(options: UseStandardFormOptions = {}) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>('');\n  const [successMessage, setSuccessMessage] = React.useState<string>('');\n\n  const {\n    resetOnSuccess = false,\n    showSuccessMessage = true,\n    successMessageDuration = 3000,\n  } = options;\n\n  // Clear success message after duration\n  React.useEffect(() => {\n    if (successMessage && successMessageDuration > 0) {\n      const timer = setTimeout(() => {\n        setSuccessMessage('');\n      }, successMessageDuration);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage, successMessageDuration]);\n\n  const handleSubmit = React.useCallback(\n    async <T extends FieldValues>(\n      submitFn: (data: T) => Promise<void>,\n      form: UseFormReturn<T>,\n      successMsg: string = 'Operation completed successfully'\n    ) => {\n      return async (data: T) => {\n        setIsLoading(true);\n        setErrorMessage('');\n        setSuccessMessage('');\n\n        try {\n          await submitFn(data);\n          \n          if (showSuccessMessage) {\n            setSuccessMessage(successMsg);\n          }\n          \n          if (resetOnSuccess) {\n            form.reset();\n          }\n        } catch (error: any) {\n          console.error('Form submission error:', error);\n          setErrorMessage(\n            error.response?.data?.message || \n            error.message || \n            'An unexpected error occurred. Please try again.'\n          );\n        } finally {\n          setIsLoading(false);\n        }\n      };\n    },\n    [resetOnSuccess, showSuccessMessage]\n  );\n\n  const clearMessages = React.useCallback(() => {\n    setErrorMessage('');\n    setSuccessMessage('');\n  }, []);\n\n  return {\n    isLoading,\n    errorMessage,\n    successMessage,\n    handleSubmit,\n    clearMessages,\n    setIsLoading,\n    setErrorMessage,\n    setSuccessMessage,\n  };\n}\n\n/**\n * Standardized form validation error display component\n */\ninterface FormValidationSummaryProps {\n  errors: Record<string, any>;\n  formName?: string;\n  className?: string;\n}\n\nexport function FormValidationSummary({\n  errors,\n  formName = 'form',\n  className = '',\n}: FormValidationSummaryProps) {\n  const errorEntries = Object.entries(errors).filter(([, error]) => error?.message);\n\n  if (errorEntries.length === 0) {\n    return null;\n  }\n\n  return (\n    <Alert variant=\"destructive\" className={className} data-testid={`${formName}-validation-summary`}>\n      <AlertCircle className=\"h-4 w-4\" />\n      <AlertDescription>\n        <div className=\"space-y-1\">\n          <p className=\"font-medium\">Please correct the following errors:</p>\n          <ul className=\"list-disc list-inside space-y-1 text-sm\">\n            {errorEntries.map(([field, error]) => (\n              <li key={field}>\n                <strong>{field.charAt(0).toUpperCase() + field.slice(1)}:</strong> {error.message}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </AlertDescription>\n    </Alert>\n  );\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "db4bd9573e29821ff2f139a3182aade815890588"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cmnjk1i9e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cmnjk1i9e();
var __importDefault =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[0]++,
/* istanbul ignore next */
(cov_cmnjk1i9e().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_cmnjk1i9e().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_cmnjk1i9e().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_cmnjk1i9e().f[0]++;
  cov_cmnjk1i9e().s[1]++;
  return /* istanbul ignore next */(cov_cmnjk1i9e().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_cmnjk1i9e().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_cmnjk1i9e().s[3]++;
exports.StandardForm = StandardForm;
/* istanbul ignore next */
cov_cmnjk1i9e().s[4]++;
exports.useStandardForm = useStandardForm;
/* istanbul ignore next */
cov_cmnjk1i9e().s[5]++;
exports.FormValidationSummary = FormValidationSummary;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[6]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[7]++, __importDefault(require("react")));
const form_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[8]++, require("@/components/ui/form"));
const card_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[9]++, require("@/components/ui/card"));
const alert_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[10]++, require("@/components/ui/alert"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[11]++, require("lucide-react"));
const utils_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[12]++, require("@/lib/utils"));
const StandardFormField_1 =
/* istanbul ignore next */
(cov_cmnjk1i9e().s[13]++, require("./StandardFormField"));
/**
 * Standardized form wrapper that provides consistent styling, layout,
 * error handling, and accessibility features for all forms in the application.
 *
 * Features:
 * - Consistent form layout and styling
 * - Quebec compliance standards
 * - Built-in error and success messaging
 * - Responsive design
 * - Automatic test ID generation
 * - Loading states with proper UX
 * - Optional card wrapper for better visual hierarchy
 *
 * @param props - Configuration for the form wrapper
 */
function StandardForm({
  form,
  onSubmit,
  title,
  description,
  children,
  isLoading =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[3][0]++, false),
  submitText =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[4][0]++, 'Submit'),
  loadingText =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[5][0]++, 'Submitting...'),
  className =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[6][0]++, ''),
  formName =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[7][0]++, 'standard-form'),
  showCard =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[8][0]++, true),
  errorMessage,
  successMessage,
  resetOnSuccess =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[9][0]++, false),
  maxWidth =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[10][0]++, 'md')
}) {
  /* istanbul ignore next */
  cov_cmnjk1i9e().f[1]++;
  cov_cmnjk1i9e().s[14]++;
  // Handle form submission with error boundary
  const handleSubmit = async data => {
    /* istanbul ignore next */
    cov_cmnjk1i9e().f[2]++;
    cov_cmnjk1i9e().s[15]++;
    try {
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[16]++;
      await onSubmit(data);
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[17]++;
      if (resetOnSuccess) {
        /* istanbul ignore next */
        cov_cmnjk1i9e().b[11][0]++;
        cov_cmnjk1i9e().s[18]++;
        form.reset();
      } else
      /* istanbul ignore next */
      {
        cov_cmnjk1i9e().b[11][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[19]++;
      console.error('Form submission error:', error);
      // Error is handled by parent component through errorMessage prop
    }
  };
  // Get max-width classes based on prop
  const maxWidthClasses =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[20]++, {
    sm: 'max-w-sm',
    md: 'max-w-md',
    lg: 'max-w-lg',
    xl: 'max-w-xl',
    '2xl': 'max-w-2xl',
    full: 'max-w-full'
  });
  /* istanbul ignore next */
  cov_cmnjk1i9e().s[21]++;
  const FormContent = () => {
    /* istanbul ignore next */
    cov_cmnjk1i9e().f[3]++;
    cov_cmnjk1i9e().s[22]++;
    return (0, jsx_runtime_1.jsx)(form_1.Form, {
      ...form,
      children: (0, jsx_runtime_1.jsxs)("form", {
        onSubmit: form.handleSubmit(handleSubmit),
        className: (0, utils_1.cn)('space-y-6', className),
        "data-testid": `${formName}-form`,
        noValidate // We handle validation with Zod
        : true,
        children: [
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[12][0]++, errorMessage) &&
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[12][1]++, (0, jsx_runtime_1.jsxs)(alert_1.Alert, {
          variant: "destructive",
          "data-testid": `${formName}-error-alert`,
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertCircle, {
            className: "h-4 w-4"
          }), (0, jsx_runtime_1.jsx)(alert_1.AlertDescription, {
            children: errorMessage
          })]
        })),
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[13][0]++, successMessage) &&
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[13][1]++, (0, jsx_runtime_1.jsxs)(alert_1.Alert, {
          variant: "default",
          className: "border-green-500 text-green-700",
          "data-testid": `${formName}-success-alert`,
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.CheckCircle, {
            className: "h-4 w-4"
          }), (0, jsx_runtime_1.jsx)(alert_1.AlertDescription, {
            children: successMessage
          })]
        })), (0, jsx_runtime_1.jsx)("div", {
          className: "space-y-4",
          children: children
        }), (0, jsx_runtime_1.jsx)("div", {
          className: "flex justify-end pt-4",
          children: (0, jsx_runtime_1.jsx)(StandardFormField_1.StandardSubmitButton, {
            isLoading: isLoading,
            loadingText: loadingText,
            formName: formName,
            disabled: isLoading,
            children: submitText
          })
        })]
      })
    });
  };
  /* istanbul ignore next */
  cov_cmnjk1i9e().s[23]++;
  if (!showCard) {
    /* istanbul ignore next */
    cov_cmnjk1i9e().b[14][0]++;
    cov_cmnjk1i9e().s[24]++;
    return (0, jsx_runtime_1.jsx)("div", {
      className: (0, utils_1.cn)('w-full mx-auto', maxWidthClasses[maxWidth]),
      children: (0, jsx_runtime_1.jsx)(FormContent, {})
    });
  } else
  /* istanbul ignore next */
  {
    cov_cmnjk1i9e().b[14][1]++;
  }
  cov_cmnjk1i9e().s[25]++;
  return (0, jsx_runtime_1.jsx)("div", {
    className: (0, utils_1.cn)('w-full mx-auto', maxWidthClasses[maxWidth]),
    children: (0, jsx_runtime_1.jsxs)(card_1.Card, {
      "data-testid": `${formName}-card`,
      children: [(
      /* istanbul ignore next */
      (cov_cmnjk1i9e().b[15][0]++, title) ||
      /* istanbul ignore next */
      (cov_cmnjk1i9e().b[15][1]++, description)) &&
      /* istanbul ignore next */
      (cov_cmnjk1i9e().b[15][2]++, (0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
        children: [
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[16][0]++, title) &&
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[16][1]++, (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
          className: "text-xl font-semibold text-gray-900",
          children: title
        })),
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[17][0]++, description) &&
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[17][1]++, (0, jsx_runtime_1.jsx)(card_1.CardDescription, {
          className: "text-gray-600",
          children: description
        }))]
      })), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
        children: (0, jsx_runtime_1.jsx)(FormContent, {})
      })]
    })
  });
}
function useStandardForm(options =
/* istanbul ignore next */
(cov_cmnjk1i9e().b[18][0]++, {})) {
  /* istanbul ignore next */
  cov_cmnjk1i9e().f[4]++;
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[26]++, react_1.default.useState(false));
  const [errorMessage, setErrorMessage] =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[27]++, react_1.default.useState(''));
  const [successMessage, setSuccessMessage] =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[28]++, react_1.default.useState(''));
  const {
    resetOnSuccess =
    /* istanbul ignore next */
    (cov_cmnjk1i9e().b[19][0]++, false),
    showSuccessMessage =
    /* istanbul ignore next */
    (cov_cmnjk1i9e().b[20][0]++, true),
    successMessageDuration =
    /* istanbul ignore next */
    (cov_cmnjk1i9e().b[21][0]++, 3000)
  } =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[29]++, options);
  // Clear success message after duration
  /* istanbul ignore next */
  cov_cmnjk1i9e().s[30]++;
  react_1.default.useEffect(() => {
    /* istanbul ignore next */
    cov_cmnjk1i9e().f[5]++;
    cov_cmnjk1i9e().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_cmnjk1i9e().b[23][0]++, successMessage) &&
    /* istanbul ignore next */
    (cov_cmnjk1i9e().b[23][1]++, successMessageDuration > 0)) {
      /* istanbul ignore next */
      cov_cmnjk1i9e().b[22][0]++;
      const timer =
      /* istanbul ignore next */
      (cov_cmnjk1i9e().s[32]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_cmnjk1i9e().f[6]++;
        cov_cmnjk1i9e().s[33]++;
        setSuccessMessage('');
      }, successMessageDuration));
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[34]++;
      return () => {
        /* istanbul ignore next */
        cov_cmnjk1i9e().f[7]++;
        cov_cmnjk1i9e().s[35]++;
        return clearTimeout(timer);
      };
    } else
    /* istanbul ignore next */
    {
      cov_cmnjk1i9e().b[22][1]++;
    }
  }, [successMessage, successMessageDuration]);
  const handleSubmit =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[36]++, react_1.default.useCallback(async (submitFn, form, successMsg =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[24][0]++, 'Operation completed successfully')) => {
    /* istanbul ignore next */
    cov_cmnjk1i9e().f[8]++;
    cov_cmnjk1i9e().s[37]++;
    return async data => {
      /* istanbul ignore next */
      cov_cmnjk1i9e().f[9]++;
      cov_cmnjk1i9e().s[38]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[39]++;
      setErrorMessage('');
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[40]++;
      setSuccessMessage('');
      /* istanbul ignore next */
      cov_cmnjk1i9e().s[41]++;
      try {
        /* istanbul ignore next */
        cov_cmnjk1i9e().s[42]++;
        await submitFn(data);
        /* istanbul ignore next */
        cov_cmnjk1i9e().s[43]++;
        if (showSuccessMessage) {
          /* istanbul ignore next */
          cov_cmnjk1i9e().b[25][0]++;
          cov_cmnjk1i9e().s[44]++;
          setSuccessMessage(successMsg);
        } else
        /* istanbul ignore next */
        {
          cov_cmnjk1i9e().b[25][1]++;
        }
        cov_cmnjk1i9e().s[45]++;
        if (resetOnSuccess) {
          /* istanbul ignore next */
          cov_cmnjk1i9e().b[26][0]++;
          cov_cmnjk1i9e().s[46]++;
          form.reset();
        } else
        /* istanbul ignore next */
        {
          cov_cmnjk1i9e().b[26][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_cmnjk1i9e().s[47]++;
        console.error('Form submission error:', error);
        /* istanbul ignore next */
        cov_cmnjk1i9e().s[48]++;
        setErrorMessage(
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[27][0]++, error.response?.data?.message) ||
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[27][1]++, error.message) ||
        /* istanbul ignore next */
        (cov_cmnjk1i9e().b[27][2]++, 'An unexpected error occurred. Please try again.'));
      } finally {
        /* istanbul ignore next */
        cov_cmnjk1i9e().s[49]++;
        setIsLoading(false);
      }
    };
  }, [resetOnSuccess, showSuccessMessage]));
  const clearMessages =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[50]++, react_1.default.useCallback(() => {
    /* istanbul ignore next */
    cov_cmnjk1i9e().f[10]++;
    cov_cmnjk1i9e().s[51]++;
    setErrorMessage('');
    /* istanbul ignore next */
    cov_cmnjk1i9e().s[52]++;
    setSuccessMessage('');
  }, []));
  /* istanbul ignore next */
  cov_cmnjk1i9e().s[53]++;
  return {
    isLoading,
    errorMessage,
    successMessage,
    handleSubmit,
    clearMessages,
    setIsLoading,
    setErrorMessage,
    setSuccessMessage
  };
}
function FormValidationSummary({
  errors,
  formName =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[28][0]++, 'form'),
  className =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().b[29][0]++, '')
}) {
  /* istanbul ignore next */
  cov_cmnjk1i9e().f[11]++;
  const errorEntries =
  /* istanbul ignore next */
  (cov_cmnjk1i9e().s[54]++, Object.entries(errors).filter(([, error]) => {
    /* istanbul ignore next */
    cov_cmnjk1i9e().f[12]++;
    cov_cmnjk1i9e().s[55]++;
    return error?.message;
  }));
  /* istanbul ignore next */
  cov_cmnjk1i9e().s[56]++;
  if (errorEntries.length === 0) {
    /* istanbul ignore next */
    cov_cmnjk1i9e().b[30][0]++;
    cov_cmnjk1i9e().s[57]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_cmnjk1i9e().b[30][1]++;
  }
  cov_cmnjk1i9e().s[58]++;
  return (0, jsx_runtime_1.jsxs)(alert_1.Alert, {
    variant: "destructive",
    className: className,
    "data-testid": `${formName}-validation-summary`,
    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertCircle, {
      className: "h-4 w-4"
    }), (0, jsx_runtime_1.jsx)(alert_1.AlertDescription, {
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: "space-y-1",
        children: [(0, jsx_runtime_1.jsx)("p", {
          className: "font-medium",
          children: "Please correct the following errors:"
        }), (0, jsx_runtime_1.jsx)("ul", {
          className: "list-disc list-inside space-y-1 text-sm",
          children: errorEntries.map(([field, error]) => {
            /* istanbul ignore next */
            cov_cmnjk1i9e().f[13]++;
            cov_cmnjk1i9e().s[59]++;
            return (0, jsx_runtime_1.jsxs)("li", {
              children: [(0, jsx_runtime_1.jsxs)("strong", {
                children: [field.charAt(0).toUpperCase() + field.slice(1), ":"]
              }), " ", error.message]
            }, field);
          })
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,