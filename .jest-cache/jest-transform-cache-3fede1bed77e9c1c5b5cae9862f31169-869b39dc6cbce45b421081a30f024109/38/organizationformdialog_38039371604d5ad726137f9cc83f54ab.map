{"file":"/home/runner/workspace/client/src/components/admin/organization-form-dialog.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/admin/organization-form-dialog.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\nimport type { Organization } from '@shared/schema';\n\n// Organization form schema matching the database schema\nconst organizationSchema = z.object({\n  name: z.string().min(1, 'Organization name is required (example: Maple Property Management)').max(200, 'Organization name must be less than 200 characters'),\n  type: z.string().min(1, 'Please select an organization type from the dropdown'),\n  address: z.string().min(1, 'Street address is required (example: 123 Rue Saint-Denis)').max(300, 'Address must be less than 300 characters'),\n  city: z.string().min(1, 'City name is required (example: Montréal)').max(100, 'City name must be less than 100 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'City name can only contain letters, spaces, apostrophes and hyphens'),\n  province: z.string().min(1, 'Province is required'),\n  postalCode: z.string().min(1, 'Postal code is required').regex(/^[A-Z]\\d[A-Z]\\s?\\d[A-Z]\\d$/, 'Postal code must follow Canadian format (example: H1A 1B1)'),\n  phone: z.string().optional().refine((val) => {\n    if (!val) return true;\n    return /^(\\+1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/.test(val);\n  }, 'Phone number must be a valid North American format (example: (514) 123-4567)'),\n  email: z.string().email('Please enter a valid email address (example: contact@organization.com)').optional().or(z.literal('')),\n  website: z.string().url('Website must be a valid URL (example: https://www.organization.com)').optional().or(z.literal('')),\n  registrationNumber: z.string().max(50, 'Registration number must be less than 50 characters').optional(),\n});\n\n/**\n * Form data type for organization creation and editing.\n */\ntype OrganizationFormData = z.infer<typeof organizationSchema>;\n\n/**\n * Props for the OrganizationFormDialog component.\n */\ninterface OrganizationFormDialogProps {\n  open?: boolean;\n  onOpenChange: (_open: boolean) => void;\n  organization?: Organization | null;\n  onSuccess?: () => void;\n}\n\n/**\n * Dialog component for creating and editing organizations with form validation.\n *\n * @param props - Component properties.\n * @param props.open - Whether the dialog is open.\n * @param props.onOpenChange - Callback to handle dialog open state changes.\n * @param props.organization - Organization data for editing, null for creating new.\n * @param props.onSuccess - Callback called after successful form submission.\n * @returns JSX element for the organization form dialog.\n */\nexport function OrganizationFormDialog({\n  open,\n  onOpenChange,\n  organization,\n  onSuccess,\n}: OrganizationFormDialogProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const isEditing = !!organization;\n\n  const form = useForm<OrganizationFormData>({\n    resolver: zodResolver(organizationSchema),\n    defaultValues: {\n      name: '',\n      type: 'management_company',\n      address: '',\n      city: '',\n      province: 'QC',\n      postalCode: '',\n      phone: '',\n      email: '',\n      website: '',\n      registrationNumber: '',\n    },\n  });\n\n  // Reset form when organization data changes\n  useEffect(() => {\n    if (organization) {\n      form.reset({\n        name: organization.name || '',\n        type: organization.type || 'management_company',\n        address: organization.address || '',\n        city: organization.city || '',\n        province: organization.province || 'QC',\n        postalCode: organization.postalCode || '',\n        phone: organization.phone || '',\n        email: organization.email || '',\n        website: organization.website || '',\n        registrationNumber: organization.registrationNumber || '',\n      });\n    } else {\n      form.reset({\n        name: '',\n        type: 'management_company',\n        address: '',\n        city: '',\n        province: 'QC',\n        postalCode: '',\n        phone: '',\n        email: '',\n        website: '',\n        registrationNumber: '',\n      });\n    }\n  }, [organization, form]);\n\n  const mutation = useMutation({\n    mutationFn: async (_data: OrganizationFormData) => {\n      const url = isEditing ? `/api/organizations/${organization.id}` : '/api/organizations';\n      const method = isEditing ? 'PUT' : 'POST';\n      return apiRequest(method, url, _data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/organizations'] });\n      toast({\n        title: isEditing ? 'Organization Updated' : 'Organization Created',\n        description: isEditing\n          ? 'Organization updated successfully'\n          : 'Organization created successfully',\n      });\n      onOpenChange(false);\n      form.reset();\n      onSuccess?.();\n    },\n    onError: (_error: Error) => {\n      toast({\n        title: 'Error',\n        description: _error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onSubmit = (_data: OrganizationFormData) => {\n    mutation.mutate(_data);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className='max-w-2xl max-h-[90vh] overflow-y-auto'>\n        <DialogHeader>\n          <DialogTitle>{isEditing ? 'Edit Organization' : 'Create Organization'}</DialogTitle>\n          <DialogDescription>\n            {isEditing\n              ? 'Update the organization information below.'\n              : 'Fill in the details to create a new organization.'}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-4'>\n            <div className='grid grid-cols-2 gap-4'>\n              <FormField\n                control={form.control}\n                name='name'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Organization Name *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter organization name' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='type'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Organization Type *</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder='Select type' />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value='management_company'>Management Company</SelectItem>\n                        <SelectItem value='syndicate'>Syndicate</SelectItem>\n                        <SelectItem value='cooperative'>Cooperative</SelectItem>\n                        <SelectItem value='condo_association'>Condo Association</SelectItem>\n                        <SelectItem value='demo'>Demo</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name='address'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Address *</FormLabel>\n                  <FormControl>\n                    <Input placeholder='Enter address' {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className='grid grid-cols-3 gap-4'>\n              <FormField\n                control={form.control}\n                name='city'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>City *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter city' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='province'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Province *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='QC' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='postalCode'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Postal Code *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='H1H 1H1' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className='grid grid-cols-2 gap-4'>\n              <FormField\n                control={form.control}\n                name='phone'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Phone</FormLabel>\n                    <FormControl>\n                      <Input placeholder='+1 (514) 555-0123' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='email'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Contact email' type='email' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name='website'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Website</FormLabel>\n                  <FormControl>\n                    <Input placeholder='Website URL' {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name='registrationNumber'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Registration Number</FormLabel>\n                  <FormControl>\n                    <Input placeholder='Enter registration number' {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <DialogFooter>\n              <Button type='button' variant='outline' onClick={() => onOpenChange(false)}>\n                Cancel\n              </Button>\n              <Button type='submit' disabled={mutation.isPending}>\n                {mutation.isPending\n                  ? 'Saving...'\n                  : isEditing\n                    ? 'Update Organization'\n                    : 'Create Organization'}\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"version":3}