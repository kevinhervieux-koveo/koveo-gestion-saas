f19be1dd5b85bb302663a777d652ad92
"use strict";

/* istanbul ignore next */
function cov_rpg834h00() {
  var path = "/home/runner/workspace/shared/schemas/operations.ts";
  var hash = "90b6831b9e057d003e2a8ddb48d97d6d332a9c6b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/shared/schemas/operations.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 721
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 28
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "6": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "8": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "9": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "10": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "11": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "12": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "13": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 54,
          column: 103
        }
      },
      "14": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "15": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "16": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "17": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 116,
          column: 3
        }
      },
      "18": {
        start: {
          line: 98,
          column: 26
        },
        end: {
          line: 98,
          column: 50
        }
      },
      "19": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "20": {
        start: {
          line: 102,
          column: 71
        },
        end: {
          line: 102,
          column: 86
        }
      },
      "21": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "22": {
        start: {
          line: 127,
          column: 26
        },
        end: {
          line: 127,
          column: 41
        }
      },
      "23": {
        start: {
          line: 141,
          column: 0
        },
        end: {
          line: 166,
          column: 3
        }
      },
      "24": {
        start: {
          line: 147,
          column: 26
        },
        end: {
          line: 147,
          column: 41
        }
      },
      "25": {
        start: {
          line: 149,
          column: 96
        },
        end: {
          line: 149,
          column: 120
        }
      },
      "26": {
        start: {
          line: 150,
          column: 94
        },
        end: {
          line: 150,
          column: 117
        }
      },
      "27": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "28": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 159,
          column: 49
        }
      },
      "29": {
        start: {
          line: 161,
          column: 71
        },
        end: {
          line: 161,
          column: 86
        }
      },
      "30": {
        start: {
          line: 171,
          column: 0
        },
        end: {
          line: 186,
          column: 3
        }
      },
      "31": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 177,
          column: 44
        }
      },
      "32": {
        start: {
          line: 180,
          column: 26
        },
        end: {
          line: 180,
          column: 41
        }
      },
      "33": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 217,
          column: 3
        }
      },
      "34": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 198,
          column: 41
        }
      },
      "35": {
        start: {
          line: 205,
          column: 71
        },
        end: {
          line: 205,
          column: 86
        }
      },
      "36": {
        start: {
          line: 207,
          column: 71
        },
        end: {
          line: 207,
          column: 86
        }
      },
      "37": {
        start: {
          line: 223,
          column: 0
        },
        end: {
          line: 248,
          column: 3
        }
      },
      "38": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 41
        }
      },
      "39": {
        start: {
          line: 237,
          column: 71
        },
        end: {
          line: 237,
          column: 86
        }
      },
      "40": {
        start: {
          line: 238,
          column: 71
        },
        end: {
          line: 238,
          column: 86
        }
      },
      "41": {
        start: {
          line: 253,
          column: 0
        },
        end: {
          line: 264,
          column: 3
        }
      },
      "42": {
        start: {
          line: 259,
          column: 26
        },
        end: {
          line: 259,
          column: 52
        }
      },
      "43": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 41
        }
      },
      "44": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 278,
          column: 3
        }
      },
      "45": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 286,
          column: 3
        }
      },
      "46": {
        start: {
          line: 287,
          column: 0
        },
        end: {
          line: 303,
          column: 3
        }
      },
      "47": {
        start: {
          line: 304,
          column: 0
        },
        end: {
          line: 313,
          column: 3
        }
      },
      "48": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 334,
          column: 3
        }
      },
      "49": {
        start: {
          line: 335,
          column: 0
        },
        end: {
          line: 366,
          column: 3
        }
      },
      "50": {
        start: {
          line: 367,
          column: 0
        },
        end: {
          line: 370,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        },
        loc: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 98,
            column: 50
          }
        },
        line: 98
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 21
          }
        },
        loc: {
          start: {
            line: 101,
            column: 26
          },
          end: {
            line: 101,
            column: 41
          }
        },
        line: 101
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 102,
            column: 65
          },
          end: {
            line: 102,
            column: 66
          }
        },
        loc: {
          start: {
            line: 102,
            column: 71
          },
          end: {
            line: 102,
            column: 86
          }
        },
        line: 102
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 21
          }
        },
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 41
          }
        },
        line: 127
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 147,
            column: 20
          },
          end: {
            line: 147,
            column: 21
          }
        },
        loc: {
          start: {
            line: 147,
            column: 26
          },
          end: {
            line: 147,
            column: 41
          }
        },
        line: 147
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 90
          },
          end: {
            line: 149,
            column: 91
          }
        },
        loc: {
          start: {
            line: 149,
            column: 96
          },
          end: {
            line: 149,
            column: 120
          }
        },
        line: 149
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 150,
            column: 88
          },
          end: {
            line: 150,
            column: 89
          }
        },
        loc: {
          start: {
            line: 150,
            column: 94
          },
          end: {
            line: 150,
            column: 117
          }
        },
        line: 150
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 21
          }
        },
        loc: {
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 50
          }
        },
        line: 156
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 159,
            column: 20
          },
          end: {
            line: 159,
            column: 21
          }
        },
        loc: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 49
          }
        },
        line: 159
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 161,
            column: 65
          },
          end: {
            line: 161,
            column: 66
          }
        },
        loc: {
          start: {
            line: 161,
            column: 71
          },
          end: {
            line: 161,
            column: 86
          }
        },
        line: 161
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 21
          }
        },
        loc: {
          start: {
            line: 177,
            column: 26
          },
          end: {
            line: 177,
            column: 44
          }
        },
        line: 177
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 21
          }
        },
        loc: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 41
          }
        },
        line: 180
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 21
          }
        },
        loc: {
          start: {
            line: 198,
            column: 26
          },
          end: {
            line: 198,
            column: 41
          }
        },
        line: 198
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 205,
            column: 65
          },
          end: {
            line: 205,
            column: 66
          }
        },
        loc: {
          start: {
            line: 205,
            column: 71
          },
          end: {
            line: 205,
            column: 86
          }
        },
        line: 205
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 207,
            column: 65
          },
          end: {
            line: 207,
            column: 66
          }
        },
        loc: {
          start: {
            line: 207,
            column: 71
          },
          end: {
            line: 207,
            column: 86
          }
        },
        line: 207
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 21
          }
        },
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 41
          }
        },
        line: 229
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 237,
            column: 65
          },
          end: {
            line: 237,
            column: 66
          }
        },
        loc: {
          start: {
            line: 237,
            column: 71
          },
          end: {
            line: 237,
            column: 86
          }
        },
        line: 237
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 238,
            column: 65
          },
          end: {
            line: 238,
            column: 66
          }
        },
        loc: {
          start: {
            line: 238,
            column: 71
          },
          end: {
            line: 238,
            column: 86
          }
        },
        line: 238
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 259,
            column: 21
          }
        },
        loc: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 52
          }
        },
        line: 259
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 262,
            column: 20
          },
          end: {
            line: 262,
            column: 21
          }
        },
        loc: {
          start: {
            line: 262,
            column: 26
          },
          end: {
            line: 262,
            column: 41
          }
        },
        line: 262
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/runner/workspace/shared/schemas/operations.ts",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/shared/schemas/operations.ts"],
      sourcesContent: ["import { sql } from 'drizzle-orm';\nimport {\n  pgTable,\n  text,\n  timestamp,\n  jsonb,\n  uuid,\n  pgEnum,\n  boolean,\n  decimal,\n  integer,\n  varchar,\n} from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { relations } from 'drizzle-orm';\nimport { users } from './core';\nimport { residences, buildings } from './property';\n\n// Operations enums\nexport const maintenanceStatusEnum = pgEnum('maintenance_status', [\n  'submitted',\n  'acknowledged',\n  'in_progress',\n  'completed',\n  'cancelled',\n]);\n\nexport const maintenancePriorityEnum = pgEnum('maintenance_priority', [\n  'low',\n  'medium',\n  'high',\n  'urgent',\n  'emergency',\n]);\n\nexport const notificationTypeEnum = pgEnum('notification_type', [\n  'bill_reminder',\n  'maintenance_update',\n  'announcement',\n  'system',\n  'emergency',\n]);\n\nexport const demandTypeEnum = pgEnum('demand_type', [\n  'maintenance',\n  'complaint',\n  'information',\n  'other',\n]);\n\nexport const demandStatusEnum = pgEnum('demand_status', [\n  'draft',\n  'submitted',\n  'under_review',\n  'approved',\n  'in_progress',\n  'completed',\n  'rejected',\n  'cancelled',\n]);\n\nexport const bugStatusEnum = pgEnum('bug_status', [\n  'new',\n  'acknowledged',\n  'in_progress',\n  'resolved',\n  'closed',\n]);\n\nexport const bugPriorityEnum = pgEnum('bug_priority', ['low', 'medium', 'high', 'critical']);\n\nexport const bugCategoryEnum = pgEnum('bug_category', [\n  'ui_ux',\n  'functionality',\n  'performance',\n  'data',\n  'security',\n  'integration',\n  'other',\n]);\n\nexport const featureRequestStatusEnum = pgEnum('feature_request_status', [\n  'submitted',\n  'under_review',\n  'planned',\n  'in_progress',\n  'completed',\n  'rejected',\n]);\n\nexport const featureRequestCategoryEnum = pgEnum('feature_request_category', [\n  'dashboard',\n  'property_management',\n  'resident_management',\n  'financial_management',\n  'maintenance',\n  'document_management',\n  'communication',\n  'reports',\n  'mobile_app',\n  'integrations',\n  'security',\n  'performance',\n  'other',\n]);\n\n// Operations tables\n/**\n * Maintenance requests table for tracking property maintenance and repairs.\n * Supports prioritization, assignment, and cost tracking.\n */\nexport const maintenanceRequests = pgTable('maintenance_requests', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  residenceId: varchar('residence_id')\n    .notNull()\n    .references(() => residences.id),\n  submittedBy: varchar('submitted_by')\n    .notNull()\n    .references(() => users.id),\n  assignedTo: varchar('assigned_to').references(() => users.id),\n  title: text('title').notNull(),\n  description: text('description').notNull(),\n  category: text('category').notNull(), // 'plumbing', 'electrical', 'hvac', 'general', etc.\n  priority: maintenancePriorityEnum('priority').notNull().default('medium'),\n  status: maintenanceStatusEnum('status').notNull().default('submitted'),\n  estimatedCost: decimal('estimated_cost', { precision: 10, scale: 2 }),\n  actualCost: decimal('actual_cost', { precision: 10, scale: 2 }),\n  scheduledDate: timestamp('scheduled_date'),\n  completedDate: timestamp('completed_date'),\n  notes: text('notes'),\n  images: jsonb('images'), // Array of image URLs\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Notifications table for system-wide user communication.\n * Supports various notification types with read tracking.\n */\nexport const notifications = pgTable('notifications', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id),\n  type: notificationTypeEnum('type').notNull(),\n  title: text('title').notNull(),\n  message: text('message').notNull(),\n  relatedEntityId: varchar('related_entity_id'), // ID of related bill, maintenance request, etc.\n  relatedEntityType: text('related_entity_type'), // 'bill', 'maintenance_request', etc.\n  isRead: boolean('is_read').notNull().default(false),\n  readAt: timestamp('read_at'),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\n/**\n * Demands table for tracking resident requests and complaints.\n * Supports various demand types with approval workflow.\n */\nexport const demands = pgTable('demands', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  submitterId: varchar('submitter_id')\n    .notNull()\n    .references(() => users.id),\n  type: demandTypeEnum('type').notNull(),\n  assignationResidenceId: varchar('assignation_residence_id').references(() => residences.id),\n  assignationBuildingId: varchar('assignation_building_id').references(() => buildings.id),\n  description: text('description').notNull(),\n  filePath: text('file_path'), // Path to uploaded file\n  fileName: text('file_name'), // Original filename\n  fileSize: integer('file_size'), // File size in bytes\n  residenceId: varchar('residence_id')\n    .references(() => residences.id),\n  buildingId: varchar('building_id')\n    .notNull()\n    .references(() => buildings.id),\n  status: demandStatusEnum('status').notNull().default('draft'),\n  reviewedBy: varchar('reviewed_by').references(() => users.id),\n  reviewedAt: timestamp('reviewed_at'),\n  reviewNotes: text('review_notes'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Demand comments table for tracking communication on demands.\n * Supports threaded conversations on demand requests.\n */\nexport const demandComments = pgTable('demands_comments', {\n  id: text('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  demandId: uuid('demand_id')\n    .notNull()\n    .references(() => demands.id),\n  commenterId: text('commenter_id')\n    .notNull()\n    .references(() => users.id),\n  commentText: text('comment_text').notNull(),\n  commentType: text('comment_type'),\n  isInternal: boolean('is_internal').default(false),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Bugs table for tracking application issues and bug reports.\n * All users can create bugs with category and page assignments.\n * Now supports single file attachment per bug like document management.\n */\nexport const bugs = pgTable('bugs', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  createdBy: varchar('created_by')\n    .notNull()\n    .references(() => users.id),\n  title: text('title').notNull(),\n  description: text('description').notNull(),\n  category: bugCategoryEnum('category').notNull(),\n  page: text('page').notNull(), // The page where the bug was found\n  priority: bugPriorityEnum('priority').notNull().default('medium'),\n  status: bugStatusEnum('status').notNull().default('new'),\n  assignedTo: varchar('assigned_to').references(() => users.id),\n  resolvedAt: timestamp('resolved_at'),\n  resolvedBy: varchar('resolved_by').references(() => users.id),\n  notes: text('notes'), // Internal notes for resolution\n  reproductionSteps: text('reproduction_steps'), // Steps to reproduce the bug\n  environment: text('environment'), // Browser, OS, device info\n  // File attachment fields (single file per bug like documents)\n  filePath: text('file_path'), // Path to the uploaded file\n  fileName: text('file_name'), // Original file name\n  fileSize: integer('file_size'), // File size in bytes\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Feature requests table for collecting user suggestions and ideas.\n * All users can submit feature requests with category and page assignments.\n * Supports upvoting and merging similar requests.\n */\nexport const featureRequests = pgTable('feature_requests', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  createdBy: varchar('created_by')\n    .notNull()\n    .references(() => users.id),\n  title: text('title').notNull(),\n  description: text('description').notNull(),\n  need: text('need').notNull(), // The specific need this feature addresses\n  category: featureRequestCategoryEnum('category').notNull(),\n  page: text('page').notNull(), // The page/section where this feature should be added\n  status: featureRequestStatusEnum('status').notNull().default('submitted'),\n  upvoteCount: integer('upvote_count').notNull().default(0),\n  assignedTo: varchar('assigned_to').references(() => users.id),\n  reviewedBy: varchar('reviewed_by').references(() => users.id),\n  reviewedAt: timestamp('reviewed_at'),\n  adminNotes: text('admin_notes'), // Internal notes for admins only\n  mergedIntoId: varchar('merged_into_id'), // If merged into another request\n  // File attachment fields (single file per feature request like documents)\n  filePath: text('file_path'), // Path to the uploaded file\n  fileName: text('file_name'), // Original file name\n  fileSize: integer('file_size'), // File size in bytes\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Feature request upvotes table for tracking user votes on feature requests.\n * Each user can only upvote a feature request once.\n */\nexport const featureRequestUpvotes = pgTable('feature_request_upvotes', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  featureRequestId: varchar('feature_request_id')\n    .notNull()\n    .references(() => featureRequests.id),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\n// Insert schemas\nexport const insertMaintenanceRequestSchema = z.object({\n  residenceId: z.string().uuid(),\n  submittedBy: z.string().uuid(),\n  assignedTo: z.string().uuid().optional(),\n  title: z.string(),\n  description: z.string(),\n  category: z.string(),\n  priority: z.string().default('medium'),\n  estimatedCost: z.number().optional(),\n  scheduledDate: z.date().optional(),\n  notes: z.string().optional(),\n  images: z.array(z.string()).optional(),\n});\n\nexport const insertNotificationSchema = z.object({\n  userId: z.string().uuid(),\n  type: z.enum(['bill_reminder', 'maintenance_update', 'announcement', 'system', 'emergency']),\n  title: z.string(),\n  message: z.string(),\n  relatedEntityId: z.string().uuid().optional(),\n  relatedEntityType: z.string().optional(),\n});\n\nexport const insertDemandSchema = z.object({\n  submitterId: z.string().uuid(),\n  type: z.enum(['maintenance', 'complaint', 'information', 'other']),\n  assignationResidenceId: z.string().uuid().optional(),\n  assignationBuildingId: z.string().uuid().optional(),\n  description: z\n    .string()\n    .min(10, 'Description must be at least 10 characters')\n    .max(2000, 'Description must not exceed 2000 characters'),\n  filePath: z.string().optional(), // Path to uploaded file\n  fileName: z.string().optional(), // Original filename  \n  fileSize: z.number().int().optional(), // File size in bytes\n  residenceId: z.string().uuid().optional(),\n  buildingId: z.string().uuid().optional(),\n  status: z.string().default('submitted'),\n  reviewNotes: z.string().optional(),\n});\n\nexport const insertDemandCommentSchema = z.object({\n  demandId: z.string().uuid(),\n  commenterId: z.string().uuid(),\n  commentText: z\n    .string()\n    .min(1, 'Comment content is required')\n    .max(1000, 'Comment must not exceed 1000 characters'),\n  commentType: z.string().optional(),\n  isInternal: z.boolean().default(false),\n});\n\nexport const insertBugSchema = z.object({\n  createdBy: z.string().uuid(),\n  title: z.string().min(1, 'Title is required').max(200, 'Title must not exceed 200 characters'),\n  description: z\n    .string()\n    .min(10, 'Description must be at least 10 characters')\n    .max(2000, 'Description must not exceed 2000 characters'),\n  category: z.enum([\n    'ui_ux',\n    'functionality',\n    'performance',\n    'data',\n    'security',\n    'integration',\n    'other',\n  ]),\n  page: z.string().min(1, 'Page is required'),\n  priority: z.enum(['low', 'medium', 'high', 'critical']).default('medium'),\n  reproductionSteps: z.string().optional(),\n  environment: z.string().optional(),\n});\n\nexport const insertFeatureRequestSchema = z.object({\n  createdBy: z.string().uuid(),\n  title: z.string().min(1, 'Title is required').max(200, 'Title must not exceed 200 characters'),\n  description: z\n    .string()\n    .min(10, 'Description must be at least 10 characters')\n    .max(2000, 'Description must not exceed 2000 characters'),\n  need: z\n    .string()\n    .min(5, 'Need must be at least 5 characters')\n    .max(500, 'Need must not exceed 500 characters'),\n  category: z.enum([\n    'dashboard',\n    'property_management',\n    'resident_management',\n    'financial_management',\n    'maintenance',\n    'document_management',\n    'communication',\n    'reports',\n    'mobile_app',\n    'integrations',\n    'security',\n    'performance',\n    'other',\n  ]),\n  page: z.string().min(1, 'Page is required'),\n  // File attachment fields\n  filePath: z.string().optional(), // Path to the uploaded file\n  fileName: z.string().optional(), // Original file name\n  fileSize: z.number().int().optional(), // File size in bytes\n});\n\nexport const insertFeatureRequestUpvoteSchema = z.object({\n  featureRequestId: z.string().uuid(),\n  userId: z.string().uuid(),\n});\n\n// Types\n/**\n *\n */\nexport type InsertMaintenanceRequest = z.infer<typeof insertMaintenanceRequestSchema>;\n/**\n *\n */\nexport type MaintenanceRequest = typeof maintenanceRequests.$inferSelect;\n\n/**\n *\n */\nexport type InsertNotification = z.infer<typeof insertNotificationSchema>;\n/**\n *\n */\nexport type Notification = typeof notifications.$inferSelect;\n\n/**\n *\n */\nexport type InsertDemand = z.infer<typeof insertDemandSchema>;\n/**\n *\n */\nexport type Demand = typeof demands.$inferSelect;\n\n/**\n *\n */\nexport type InsertDemandComment = z.infer<typeof insertDemandCommentSchema>;\n/**\n *\n */\nexport type DemandComment = typeof demandComments.$inferSelect;\n\n/**\n *\n */\nexport type InsertBug = z.infer<typeof insertBugSchema>;\n/**\n *\n */\nexport type Bug = typeof bugs.$inferSelect;\n\n/**\n *\n */\nexport type InsertFeatureRequest = z.infer<typeof insertFeatureRequestSchema>;\n/**\n *\n */\nexport type FeatureRequest = typeof featureRequests.$inferSelect;\n\n/**\n *\n */\nexport type InsertFeatureRequestUpvote = z.infer<typeof insertFeatureRequestUpvoteSchema>;\n/**\n *\n */\nexport type FeatureRequestUpvote = typeof featureRequestUpvotes.$inferSelect;\n\n// Relations\n// Relations - temporarily commented out due to drizzle-orm version compatibility\n// export const maintenanceRequestsRelations = relations(maintenanceRequests, ({ one }) => ({\n//   residence: one(residences, {\n//     fields: [maintenanceRequests.residenceId],\n//     references: [residences.id],\n//   }),\n//   submittedBy: one(users, {\n//     fields: [maintenanceRequests.submittedBy],\n//     references: [users.id],\n//     relationName: 'submittedBy',\n//   }),\n//   assignedTo: one(users, {\n//     fields: [maintenanceRequests.assignedTo],\n//     references: [users.id],\n//     relationName: 'assignedTo',\n//   }),\n// }));\n\n// export const notificationsRelations = relations(notifications, ({ one }) => ({\n//   user: one(users, {\n//     fields: [notifications.userId],\n//     references: [users.id],\n//   }),\n// }));\n\n// export const demandsRelations = relations(demands, ({ one, many }) => ({\n//   submitter: one(users, {\n//     fields: [demands.submitterId],\n//     references: [users.id],\n//     relationName: 'submitter',\n//   }),\n//   assignationResidence: one(residences, {\n//     fields: [demands.assignationResidenceId],\n//     references: [residences.id],\n//     relationName: 'assignationResidence',\n//   }),\n//   assignationBuilding: one(buildings, {\n//     fields: [demands.assignationBuildingId],\n//     references: [buildings.id],\n//     relationName: 'assignationBuilding',\n//   }),\n//   residence: one(residences, {\n//     fields: [demands.residenceId],\n//     references: [residences.id],\n//     relationName: 'residence',\n//   }),\n//   building: one(buildings, {\n//     fields: [demands.buildingId],\n//     references: [buildings.id],\n//     relationName: 'building',\n//   }),\n//   reviewedBy: one(users, {\n//     fields: [demands.reviewedBy],\n//     references: [users.id],\n//     relationName: 'reviewedBy',\n//   }),\n//   comments: many(demandComments),\n// }));\n\n// export const demandCommentsRelations = relations(demandComments, ({ one }) => ({\n//   demand: one(demands, {\n//     fields: [demandComments.demandId],\n//     references: [demands.id],\n//   }),\n//   createdBy: one(users, {\n//     fields: [demandComments.createdBy],\n//     references: [users.id],\n//   }),\n// }));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90b6831b9e057d003e2a8ddb48d97d6d332a9c6b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rpg834h00 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rpg834h00();
cov_rpg834h00().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rpg834h00().s[1]++;
exports.insertFeatureRequestUpvoteSchema = exports.insertFeatureRequestSchema = exports.insertBugSchema = exports.insertDemandCommentSchema = exports.insertDemandSchema = exports.insertNotificationSchema = exports.insertMaintenanceRequestSchema = exports.featureRequestUpvotes = exports.featureRequests = exports.bugs = exports.demandComments = exports.demands = exports.notifications = exports.maintenanceRequests = exports.featureRequestCategoryEnum = exports.featureRequestStatusEnum = exports.bugCategoryEnum = exports.bugPriorityEnum = exports.bugStatusEnum = exports.demandStatusEnum = exports.demandTypeEnum = exports.notificationTypeEnum = exports.maintenancePriorityEnum = exports.maintenanceStatusEnum = void 0;
const drizzle_orm_1 =
/* istanbul ignore next */
(cov_rpg834h00().s[2]++, require("drizzle-orm"));
const pg_core_1 =
/* istanbul ignore next */
(cov_rpg834h00().s[3]++, require("drizzle-orm/pg-core"));
const zod_1 =
/* istanbul ignore next */
(cov_rpg834h00().s[4]++, require("zod"));
const core_1 =
/* istanbul ignore next */
(cov_rpg834h00().s[5]++, require("./core"));
const property_1 =
/* istanbul ignore next */
(cov_rpg834h00().s[6]++, require("./property"));
// Operations enums
/* istanbul ignore next */
cov_rpg834h00().s[7]++;
exports.maintenanceStatusEnum = (0, pg_core_1.pgEnum)('maintenance_status', ['submitted', 'acknowledged', 'in_progress', 'completed', 'cancelled']);
/* istanbul ignore next */
cov_rpg834h00().s[8]++;
exports.maintenancePriorityEnum = (0, pg_core_1.pgEnum)('maintenance_priority', ['low', 'medium', 'high', 'urgent', 'emergency']);
/* istanbul ignore next */
cov_rpg834h00().s[9]++;
exports.notificationTypeEnum = (0, pg_core_1.pgEnum)('notification_type', ['bill_reminder', 'maintenance_update', 'announcement', 'system', 'emergency']);
/* istanbul ignore next */
cov_rpg834h00().s[10]++;
exports.demandTypeEnum = (0, pg_core_1.pgEnum)('demand_type', ['maintenance', 'complaint', 'information', 'other']);
/* istanbul ignore next */
cov_rpg834h00().s[11]++;
exports.demandStatusEnum = (0, pg_core_1.pgEnum)('demand_status', ['draft', 'submitted', 'under_review', 'approved', 'in_progress', 'completed', 'rejected', 'cancelled']);
/* istanbul ignore next */
cov_rpg834h00().s[12]++;
exports.bugStatusEnum = (0, pg_core_1.pgEnum)('bug_status', ['new', 'acknowledged', 'in_progress', 'resolved', 'closed']);
/* istanbul ignore next */
cov_rpg834h00().s[13]++;
exports.bugPriorityEnum = (0, pg_core_1.pgEnum)('bug_priority', ['low', 'medium', 'high', 'critical']);
/* istanbul ignore next */
cov_rpg834h00().s[14]++;
exports.bugCategoryEnum = (0, pg_core_1.pgEnum)('bug_category', ['ui_ux', 'functionality', 'performance', 'data', 'security', 'integration', 'other']);
/* istanbul ignore next */
cov_rpg834h00().s[15]++;
exports.featureRequestStatusEnum = (0, pg_core_1.pgEnum)('feature_request_status', ['submitted', 'under_review', 'planned', 'in_progress', 'completed', 'rejected']);
/* istanbul ignore next */
cov_rpg834h00().s[16]++;
exports.featureRequestCategoryEnum = (0, pg_core_1.pgEnum)('feature_request_category', ['dashboard', 'property_management', 'resident_management', 'financial_management', 'maintenance', 'document_management', 'communication', 'reports', 'mobile_app', 'integrations', 'security', 'performance', 'other']);
// Operations tables
/**
 * Maintenance requests table for tracking property maintenance and repairs.
 * Supports prioritization, assignment, and cost tracking.
 */
/* istanbul ignore next */
cov_rpg834h00().s[17]++;
exports.maintenanceRequests = (0, pg_core_1.pgTable)('maintenance_requests', {
  id: (0, pg_core_1.uuid)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  residenceId: (0, pg_core_1.varchar)('residence_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[0]++;
    cov_rpg834h00().s[18]++;
    return property_1.residences.id;
  }),
  submittedBy: (0, pg_core_1.varchar)('submitted_by').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[1]++;
    cov_rpg834h00().s[19]++;
    return core_1.users.id;
  }),
  assignedTo: (0, pg_core_1.varchar)('assigned_to').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[2]++;
    cov_rpg834h00().s[20]++;
    return core_1.users.id;
  }),
  title: (0, pg_core_1.text)('title').notNull(),
  description: (0, pg_core_1.text)('description').notNull(),
  category: (0, pg_core_1.text)('category').notNull(),
  // 'plumbing', 'electrical', 'hvac', 'general', etc.
  priority: (0, exports.maintenancePriorityEnum)('priority').notNull().default('medium'),
  status: (0, exports.maintenanceStatusEnum)('status').notNull().default('submitted'),
  estimatedCost: (0, pg_core_1.decimal)('estimated_cost', {
    precision: 10,
    scale: 2
  }),
  actualCost: (0, pg_core_1.decimal)('actual_cost', {
    precision: 10,
    scale: 2
  }),
  scheduledDate: (0, pg_core_1.timestamp)('scheduled_date'),
  completedDate: (0, pg_core_1.timestamp)('completed_date'),
  notes: (0, pg_core_1.text)('notes'),
  images: (0, pg_core_1.jsonb)('images'),
  // Array of image URLs
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Notifications table for system-wide user communication.
 * Supports various notification types with read tracking.
 */
/* istanbul ignore next */
cov_rpg834h00().s[21]++;
exports.notifications = (0, pg_core_1.pgTable)('notifications', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  userId: (0, pg_core_1.varchar)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[3]++;
    cov_rpg834h00().s[22]++;
    return core_1.users.id;
  }),
  type: (0, exports.notificationTypeEnum)('type').notNull(),
  title: (0, pg_core_1.text)('title').notNull(),
  message: (0, pg_core_1.text)('message').notNull(),
  relatedEntityId: (0, pg_core_1.varchar)('related_entity_id'),
  // ID of related bill, maintenance request, etc.
  relatedEntityType: (0, pg_core_1.text)('related_entity_type'),
  // 'bill', 'maintenance_request', etc.
  isRead: (0, pg_core_1.boolean)('is_read').notNull().default(false),
  readAt: (0, pg_core_1.timestamp)('read_at'),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow()
});
/**
 * Demands table for tracking resident requests and complaints.
 * Supports various demand types with approval workflow.
 */
/* istanbul ignore next */
cov_rpg834h00().s[23]++;
exports.demands = (0, pg_core_1.pgTable)('demands', {
  id: (0, pg_core_1.uuid)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  submitterId: (0, pg_core_1.varchar)('submitter_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[4]++;
    cov_rpg834h00().s[24]++;
    return core_1.users.id;
  }),
  type: (0, exports.demandTypeEnum)('type').notNull(),
  assignationResidenceId: (0, pg_core_1.varchar)('assignation_residence_id').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[5]++;
    cov_rpg834h00().s[25]++;
    return property_1.residences.id;
  }),
  assignationBuildingId: (0, pg_core_1.varchar)('assignation_building_id').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[6]++;
    cov_rpg834h00().s[26]++;
    return property_1.buildings.id;
  }),
  description: (0, pg_core_1.text)('description').notNull(),
  filePath: (0, pg_core_1.text)('file_path'),
  // Path to uploaded file
  fileName: (0, pg_core_1.text)('file_name'),
  // Original filename
  fileSize: (0, pg_core_1.integer)('file_size'),
  // File size in bytes
  residenceId: (0, pg_core_1.varchar)('residence_id').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[7]++;
    cov_rpg834h00().s[27]++;
    return property_1.residences.id;
  }),
  buildingId: (0, pg_core_1.varchar)('building_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[8]++;
    cov_rpg834h00().s[28]++;
    return property_1.buildings.id;
  }),
  status: (0, exports.demandStatusEnum)('status').notNull().default('draft'),
  reviewedBy: (0, pg_core_1.varchar)('reviewed_by').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[9]++;
    cov_rpg834h00().s[29]++;
    return core_1.users.id;
  }),
  reviewedAt: (0, pg_core_1.timestamp)('reviewed_at'),
  reviewNotes: (0, pg_core_1.text)('review_notes'),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Demand comments table for tracking communication on demands.
 * Supports threaded conversations on demand requests.
 */
/* istanbul ignore next */
cov_rpg834h00().s[30]++;
exports.demandComments = (0, pg_core_1.pgTable)('demands_comments', {
  id: (0, pg_core_1.text)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  demandId: (0, pg_core_1.uuid)('demand_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[10]++;
    cov_rpg834h00().s[31]++;
    return exports.demands.id;
  }),
  commenterId: (0, pg_core_1.text)('commenter_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[11]++;
    cov_rpg834h00().s[32]++;
    return core_1.users.id;
  }),
  commentText: (0, pg_core_1.text)('comment_text').notNull(),
  commentType: (0, pg_core_1.text)('comment_type'),
  isInternal: (0, pg_core_1.boolean)('is_internal').default(false),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Bugs table for tracking application issues and bug reports.
 * All users can create bugs with category and page assignments.
 * Now supports single file attachment per bug like document management.
 */
/* istanbul ignore next */
cov_rpg834h00().s[33]++;
exports.bugs = (0, pg_core_1.pgTable)('bugs', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  createdBy: (0, pg_core_1.varchar)('created_by').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[12]++;
    cov_rpg834h00().s[34]++;
    return core_1.users.id;
  }),
  title: (0, pg_core_1.text)('title').notNull(),
  description: (0, pg_core_1.text)('description').notNull(),
  category: (0, exports.bugCategoryEnum)('category').notNull(),
  page: (0, pg_core_1.text)('page').notNull(),
  // The page where the bug was found
  priority: (0, exports.bugPriorityEnum)('priority').notNull().default('medium'),
  status: (0, exports.bugStatusEnum)('status').notNull().default('new'),
  assignedTo: (0, pg_core_1.varchar)('assigned_to').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[13]++;
    cov_rpg834h00().s[35]++;
    return core_1.users.id;
  }),
  resolvedAt: (0, pg_core_1.timestamp)('resolved_at'),
  resolvedBy: (0, pg_core_1.varchar)('resolved_by').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[14]++;
    cov_rpg834h00().s[36]++;
    return core_1.users.id;
  }),
  notes: (0, pg_core_1.text)('notes'),
  // Internal notes for resolution
  reproductionSteps: (0, pg_core_1.text)('reproduction_steps'),
  // Steps to reproduce the bug
  environment: (0, pg_core_1.text)('environment'),
  // Browser, OS, device info
  // File attachment fields (single file per bug like documents)
  filePath: (0, pg_core_1.text)('file_path'),
  // Path to the uploaded file
  fileName: (0, pg_core_1.text)('file_name'),
  // Original file name
  fileSize: (0, pg_core_1.integer)('file_size'),
  // File size in bytes
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Feature requests table for collecting user suggestions and ideas.
 * All users can submit feature requests with category and page assignments.
 * Supports upvoting and merging similar requests.
 */
/* istanbul ignore next */
cov_rpg834h00().s[37]++;
exports.featureRequests = (0, pg_core_1.pgTable)('feature_requests', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  createdBy: (0, pg_core_1.varchar)('created_by').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[15]++;
    cov_rpg834h00().s[38]++;
    return core_1.users.id;
  }),
  title: (0, pg_core_1.text)('title').notNull(),
  description: (0, pg_core_1.text)('description').notNull(),
  need: (0, pg_core_1.text)('need').notNull(),
  // The specific need this feature addresses
  category: (0, exports.featureRequestCategoryEnum)('category').notNull(),
  page: (0, pg_core_1.text)('page').notNull(),
  // The page/section where this feature should be added
  status: (0, exports.featureRequestStatusEnum)('status').notNull().default('submitted'),
  upvoteCount: (0, pg_core_1.integer)('upvote_count').notNull().default(0),
  assignedTo: (0, pg_core_1.varchar)('assigned_to').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[16]++;
    cov_rpg834h00().s[39]++;
    return core_1.users.id;
  }),
  reviewedBy: (0, pg_core_1.varchar)('reviewed_by').references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[17]++;
    cov_rpg834h00().s[40]++;
    return core_1.users.id;
  }),
  reviewedAt: (0, pg_core_1.timestamp)('reviewed_at'),
  adminNotes: (0, pg_core_1.text)('admin_notes'),
  // Internal notes for admins only
  mergedIntoId: (0, pg_core_1.varchar)('merged_into_id'),
  // If merged into another request
  // File attachment fields (single file per feature request like documents)
  filePath: (0, pg_core_1.text)('file_path'),
  // Path to the uploaded file
  fileName: (0, pg_core_1.text)('file_name'),
  // Original file name
  fileSize: (0, pg_core_1.integer)('file_size'),
  // File size in bytes
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Feature request upvotes table for tracking user votes on feature requests.
 * Each user can only upvote a feature request once.
 */
/* istanbul ignore next */
cov_rpg834h00().s[41]++;
exports.featureRequestUpvotes = (0, pg_core_1.pgTable)('feature_request_upvotes', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  featureRequestId: (0, pg_core_1.varchar)('feature_request_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[18]++;
    cov_rpg834h00().s[42]++;
    return exports.featureRequests.id;
  }),
  userId: (0, pg_core_1.varchar)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rpg834h00().f[19]++;
    cov_rpg834h00().s[43]++;
    return core_1.users.id;
  }),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow()
});
// Insert schemas
/* istanbul ignore next */
cov_rpg834h00().s[44]++;
exports.insertMaintenanceRequestSchema = zod_1.z.object({
  residenceId: zod_1.z.string().uuid(),
  submittedBy: zod_1.z.string().uuid(),
  assignedTo: zod_1.z.string().uuid().optional(),
  title: zod_1.z.string(),
  description: zod_1.z.string(),
  category: zod_1.z.string(),
  priority: zod_1.z.string().default('medium'),
  estimatedCost: zod_1.z.number().optional(),
  scheduledDate: zod_1.z.date().optional(),
  notes: zod_1.z.string().optional(),
  images: zod_1.z.array(zod_1.z.string()).optional()
});
/* istanbul ignore next */
cov_rpg834h00().s[45]++;
exports.insertNotificationSchema = zod_1.z.object({
  userId: zod_1.z.string().uuid(),
  type: zod_1.z.enum(['bill_reminder', 'maintenance_update', 'announcement', 'system', 'emergency']),
  title: zod_1.z.string(),
  message: zod_1.z.string(),
  relatedEntityId: zod_1.z.string().uuid().optional(),
  relatedEntityType: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_rpg834h00().s[46]++;
exports.insertDemandSchema = zod_1.z.object({
  submitterId: zod_1.z.string().uuid(),
  type: zod_1.z.enum(['maintenance', 'complaint', 'information', 'other']),
  assignationResidenceId: zod_1.z.string().uuid().optional(),
  assignationBuildingId: zod_1.z.string().uuid().optional(),
  description: zod_1.z.string().min(10, 'Description must be at least 10 characters').max(2000, 'Description must not exceed 2000 characters'),
  filePath: zod_1.z.string().optional(),
  // Path to uploaded file
  fileName: zod_1.z.string().optional(),
  // Original filename  
  fileSize: zod_1.z.number().int().optional(),
  // File size in bytes
  residenceId: zod_1.z.string().uuid().optional(),
  buildingId: zod_1.z.string().uuid().optional(),
  status: zod_1.z.string().default('submitted'),
  reviewNotes: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_rpg834h00().s[47]++;
exports.insertDemandCommentSchema = zod_1.z.object({
  demandId: zod_1.z.string().uuid(),
  commenterId: zod_1.z.string().uuid(),
  commentText: zod_1.z.string().min(1, 'Comment content is required').max(1000, 'Comment must not exceed 1000 characters'),
  commentType: zod_1.z.string().optional(),
  isInternal: zod_1.z.boolean().default(false)
});
/* istanbul ignore next */
cov_rpg834h00().s[48]++;
exports.insertBugSchema = zod_1.z.object({
  createdBy: zod_1.z.string().uuid(),
  title: zod_1.z.string().min(1, 'Title is required').max(200, 'Title must not exceed 200 characters'),
  description: zod_1.z.string().min(10, 'Description must be at least 10 characters').max(2000, 'Description must not exceed 2000 characters'),
  category: zod_1.z.enum(['ui_ux', 'functionality', 'performance', 'data', 'security', 'integration', 'other']),
  page: zod_1.z.string().min(1, 'Page is required'),
  priority: zod_1.z.enum(['low', 'medium', 'high', 'critical']).default('medium'),
  reproductionSteps: zod_1.z.string().optional(),
  environment: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_rpg834h00().s[49]++;
exports.insertFeatureRequestSchema = zod_1.z.object({
  createdBy: zod_1.z.string().uuid(),
  title: zod_1.z.string().min(1, 'Title is required').max(200, 'Title must not exceed 200 characters'),
  description: zod_1.z.string().min(10, 'Description must be at least 10 characters').max(2000, 'Description must not exceed 2000 characters'),
  need: zod_1.z.string().min(5, 'Need must be at least 5 characters').max(500, 'Need must not exceed 500 characters'),
  category: zod_1.z.enum(['dashboard', 'property_management', 'resident_management', 'financial_management', 'maintenance', 'document_management', 'communication', 'reports', 'mobile_app', 'integrations', 'security', 'performance', 'other']),
  page: zod_1.z.string().min(1, 'Page is required'),
  // File attachment fields
  filePath: zod_1.z.string().optional(),
  // Path to the uploaded file
  fileName: zod_1.z.string().optional(),
  // Original file name
  fileSize: zod_1.z.number().int().optional() // File size in bytes
});
/* istanbul ignore next */
cov_rpg834h00().s[50]++;
exports.insertFeatureRequestUpvoteSchema = zod_1.z.object({
  featureRequestId: zod_1.z.string().uuid(),
  userId: zod_1.z.string().uuid()
});
// Relations
// Relations - temporarily commented out due to drizzle-orm version compatibility
// export const maintenanceRequestsRelations = relations(maintenanceRequests, ({ one }) => ({
//   residence: one(residences, {
//     fields: [maintenanceRequests.residenceId],
//     references: [residences.id],
//   }),
//   submittedBy: one(users, {
//     fields: [maintenanceRequests.submittedBy],
//     references: [users.id],
//     relationName: 'submittedBy',
//   }),
//   assignedTo: one(users, {
//     fields: [maintenanceRequests.assignedTo],
//     references: [users.id],
//     relationName: 'assignedTo',
//   }),
// }));
// export const notificationsRelations = relations(notifications, ({ one }) => ({
//   user: one(users, {
//     fields: [notifications.userId],
//     references: [users.id],
//   }),
// }));
// export const demandsRelations = relations(demands, ({ one, many }) => ({
//   submitter: one(users, {
//     fields: [demands.submitterId],
//     references: [users.id],
//     relationName: 'submitter',
//   }),
//   assignationResidence: one(residences, {
//     fields: [demands.assignationResidenceId],
//     references: [residences.id],
//     relationName: 'assignationResidence',
//   }),
//   assignationBuilding: one(buildings, {
//     fields: [demands.assignationBuildingId],
//     references: [buildings.id],
//     relationName: 'assignationBuilding',
//   }),
//   residence: one(residences, {
//     fields: [demands.residenceId],
//     references: [residences.id],
//     relationName: 'residence',
//   }),
//   building: one(buildings, {
//     fields: [demands.buildingId],
//     references: [buildings.id],
//     relationName: 'building',
//   }),
//   reviewedBy: one(users, {
//     fields: [demands.reviewedBy],
//     references: [users.id],
//     relationName: 'reviewedBy',
//   }),
//   comments: many(demandComments),
// }));
// export const demandCommentsRelations = relations(demandComments, ({ one }) => ({
//   demand: one(demands, {
//     fields: [demandComments.demandId],
//     references: [demands.id],
//   }),
//   createdBy: one(users, {
//     fields: [demandComments.createdBy],
//     references: [users.id],
//   }),
// }));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,