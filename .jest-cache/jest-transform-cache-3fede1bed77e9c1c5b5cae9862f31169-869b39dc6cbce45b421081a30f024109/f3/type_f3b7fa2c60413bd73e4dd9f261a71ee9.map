{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/utility/type.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC5C,OAAO,CAAC,oCAAoC,CAAC,CAAC;AAC9C,IAAI,iBAAiB,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAE3E,KAAK,UAAU,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,GAAG,EAAE;IAChK,4BAA4B;IAC5B,8DAA8D;IAC9D,IAAI,OAAO,CAAC,QAAQ;QAAE,OAAO;IAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;QACb,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IACD,IAAI,qBAAqB,KAAK,SAAS,EAAE,CAAC;QACtC,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,EAAE,qBAAqB,EAAE,mBAAmB,KAAK,IAAI,IAAI,mBAAmB,KAAK,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;IACzL,CAAC;IACD,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;QACjB,MAAM,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;AACL,CAAC;AAED,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/utility/type.js"],"sourcesContent":["'use strict';\n\nvar index = require('../keyboard/index.js');\nrequire('../utils/dataTransfer/Clipboard.js');\nvar setSelectionRange = require('../event/selection/setSelectionRange.js');\n\nasync function type(element, text, { skipClick = this.config.skipClick, skipAutoClose = this.config.skipAutoClose, initialSelectionStart, initialSelectionEnd } = {}) {\n    // TODO: properly type guard\n    // we use this workaround for now to prevent changing behavior\n    if (element.disabled) return;\n    if (!skipClick) {\n        await this.click(element);\n    }\n    if (initialSelectionStart !== undefined) {\n        setSelectionRange.setSelectionRange(element, initialSelectionStart, initialSelectionEnd !== null && initialSelectionEnd !== undefined ? initialSelectionEnd : initialSelectionStart);\n    }\n    await this.keyboard(text);\n    if (!skipAutoClose) {\n        await index.releaseAllKeys(this);\n    }\n}\n\nexports.type = type;\n"],"version":3}