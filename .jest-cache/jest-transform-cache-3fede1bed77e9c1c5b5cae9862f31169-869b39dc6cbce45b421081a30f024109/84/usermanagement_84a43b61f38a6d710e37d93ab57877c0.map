{"file":"/home/runner/workspace/client/src/pages/manager/user-management.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,iCA2qCC;;AA1vCD,+CAA4D;AAC5D,uDAA8D;AAC9D,uDAAoD;AAEpD,uDAAmD;AACnD,iDAA6C;AAC7C,mDAA4D;AAC5D,+CAAgF;AAChF,mDAAgD;AAChD,iDAA8C;AAC9C,+CAAgF;AAChF,mDAOgC;AAChC,+DAOsC;AACtC,mDAMgC;AAChC,+CAO8B;AAC9B,+CAAiF;AACjF,sFAAiF;AACjF,qDAA0C;AAC1C,iDAAsD;AACtD,6BAAwB;AAGxB,sFAA8E;AAC9E,sFAAmF;AACnF,8EAA2E;AAC3E,gFAA6E;AAC7E,4EAAyE;AAEzE,8EAA8E;AAC9E,MAAM,oBAAoB,GAAG,CAAC,cAAkD,EAAE,EAAE;IAClF,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAA0B,CAAC;IAEnF,OAAO,OAAC,CAAC,MAAM,CAAC;QACd,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,4CAA4C,CAAC,CAAC,KAAK,CAAC,oBAAoB,EAAE,sEAAsE,CAAC;QAChO,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,yCAAyC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,2CAA2C,CAAC,CAAC,KAAK,CAAC,oBAAoB,EAAE,qEAAqE,CAAC;QAC9N,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC,CAAC,KAAK,CAAC,qEAAqE,CAAC;QAClI,IAAI,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,2BAA2B,CAAC;QACjG,QAAQ,EAAE,OAAC,CAAC,OAAO,EAAE;KACtB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,4CAA4C;AAC5C,MAAM,gBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC;IAChC,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,+CAA+C,CAAC,CAAC,KAAK,CAAC,kEAAkE,CAAC;IAC1J,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,yCAAyC,CAAC,CAAC,QAAQ,EAAE;CAClF,CAAC,CAAC;AAEH;;;;GAIG;AACH,SAAwB,cAAc;IACpC,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,0BAAW,GAAE,CAAC;IAC5B,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,oBAAQ,GAAE,CAAC;IAC7B,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,IAAA,gBAAQ,EAAc,IAAI,GAAG,EAAE,CAAC,CAAC;IAC3E,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAChE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAc,IAAI,CAAC,CAAC;IAClE,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,EAAc,IAAI,CAAC,CAAC;IACpE,MAAM,CAAC,wBAAwB,EAAE,2BAA2B,CAAC,GAAG,IAAA,gBAAQ,EAA6B,IAAI,CAAC,CAAC;IAC3G,MAAM,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,GAAG,IAAA,gBAAQ,EAA6B,IAAI,CAAC,CAAC;IACrG,MAAM,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAE9E,mBAAmB;IACnB,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IAClD,MAAM,YAAY,GAAG,EAAE,CAAC;IAExB,qDAAqD;IACrD,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB;IACxE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC,CAAC,iCAAiC;IAC3E,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IACjD,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IACrD,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IACjE,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IAErD,iEAAiE;IACjE,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;YAChC,SAAS,CAAC,WAAW,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,0CAA0C;IAC1C,MAAM,EACJ,IAAI,EAAE,aAAa,EACnB,SAAS,EAAE,YAAY,EACvB,KAAK,EAAE,UAAU,GAClB,GAAG,IAAA,sBAAQ,EAUT;QACD,QAAQ,EAAE,CAAC,YAAY,EAAE;gBACvB,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,YAAY;gBACnB,UAAU;gBACV,YAAY;gBACZ,kBAAkB;gBAClB,YAAY;gBACZ,MAAM;aACP,CAAC;QACF,OAAO,EAAE,KAAK,IAAI,EAAE;YAClB,2CAA2C;YAC3C,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC;gBACjC,IAAI,EAAE,WAAW,CAAC,QAAQ,EAAE;gBAC5B,KAAK,EAAE,YAAY,CAAC,QAAQ,EAAE;aAC/B,CAAC,CAAC;YAEH,IAAI,UAAU;gBAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAClD,IAAI,YAAY;gBAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACxD,IAAI,kBAAkB;gBAAE,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAC1E,IAAI,YAAY;gBAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACxD,IAAI,MAAM;gBAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE5C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,cAAc,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC3C,CAAC;YACD,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;KACF,CAAC,CAAC;IAEH,kDAAkD;IAClD,MAAM,KAAK,GAAG,aAAa,EAAE,KAAK,IAAI,EAAE,CAAC;IACzC,MAAM,cAAc,GAAG,aAAa,EAAE,UAAU,CAAC;IAEjD,+BAA+B;IAC/B,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,IAAA,sBAAQ,EAKrC;QACD,QAAQ,EAAE,CAAC,2BAA2B,CAAC;KACxC,CAAC,CAAC;IAEH,sBAAsB;IACtB,MAAM,EAAE,IAAI,EAAE,aAAa,GAAG,EAAE,EAAE,GAAG,IAAA,sBAAQ,EAAiB;QAC5D,QAAQ,EAAE,CAAC,oBAAoB,CAAC;QAChC,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;IAEH,kBAAkB;IAClB,MAAM,EAAE,IAAI,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,IAAA,sBAAQ,EAAa;QACpD,QAAQ,EAAE,CAAC,gBAAgB,CAAC;QAC5B,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;IAEH,mBAAmB;IACnB,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,EAAE,EAAE,GAAG,IAAA,sBAAQ,EAAc;QACtD,QAAQ,EAAE,CAAC,iBAAiB,CAAC;QAC7B,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;IAEH,wCAAwC;IACxC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAA,sBAAQ,EAAO;QAC3C,QAAQ,EAAE,CAAC,gBAAgB,CAAC;KAC7B,CAAC,CAAC;IAEH,oDAAoD;IACpD,MAAM,uBAAuB,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC3C,IAAI,CAAC,WAAW,IAAI,CAAC,aAAa,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QAE1D,8CAA8C;QAC9C,MAAM,0BAA0B,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,CAAC,CAAC;QAC5E,IAAI,CAAC,0BAA0B,EAAE,aAAa;YAAE,OAAO,IAAI,CAAC;QAE5D,MAAM,iBAAiB,GAAG,0BAA0B,CAAC,aAAa,CAAC;QACnE,MAAM,UAAU,GAAG,CAAC,cAAc,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC/F,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CACxD,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,MAAM,CAC1D,CAAC;QACF,MAAM,uBAAuB,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAC3D,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,MAAM,CAC1D,CAAC;QAEF,OAAO;YACL,UAAU;YACV,oBAAoB;YACpB,uBAAuB;YACvB,iBAAiB,EAAE,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;YACvD,iBAAiB,EAAE,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAC7C,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,SAAS,CAC5D;SACF,CAAC;IACJ,CAAC,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;IAExC,0BAA0B;IAC1B,MAAM,iBAAiB,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QACrC,IAAI,CAAC,WAAW,IAAI,CAAC,uBAAuB;YAAE,OAAO,EAAE,CAAC;QAExD,MAAM,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC;QAC7B,MAAM,EAAE,UAAU,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,GAAG,uBAAuB,CAAC;QAE9F,4BAA4B;QAC5B,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;YACrB,OAAO;gBACL,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;gBAClC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;gBACtC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;gBACpC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;gBACxC,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE;gBAChD,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC9C,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;aACnD,CAAC;QACJ,CAAC;QAED,uCAAuC;QACvC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACvB,OAAO;gBACL,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;gBACtC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;gBACpC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;aACzC,CAAC;QACJ,CAAC;QAED,4CAA4C;QAC5C,IAAI,IAAI,KAAK,cAAc,EAAE,CAAC;YAC5B,OAAO;gBACL,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE;gBAChD,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC9C,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,eAAe,EAAE;aACnD,CAAC;QACJ,CAAC;QAED,kCAAkC;QAClC,OAAO,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC,CAAC;IAE3C,oDAAoD;IACpD,MAAM,cAAc,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAEnG,sBAAsB;IACtB,MAAM,kBAAkB,GAAG,IAAA,yBAAW,EAAC;QACrC,UAAU,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAsD,EAAE,EAAE;YACzF,MAAM,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClD,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAAC,MAAM,EAAE,wBAAwB,EAAE;gBAClE,MAAM;gBACN,OAAO,EAAE,eAAe;gBACxB,IAAI;aACL,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBACnB,WAAW,EAAE,CAAC,CAAC,oBAAoB,CAAC;aACrC,CAAC,CAAC;YACH,gBAAgB,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YAC5B,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC;QACD,OAAO,EAAE,CAAC,MAAa,EAAE,EAAE;YACzB,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjB,WAAW,EAAE,MAAM,CAAC,OAAO;gBAC3B,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,MAAM,gBAAgB,GAAG,KAAK,EAAE,MAAc,EAAE,IAA8B,EAAE,EAAE;QAChF,MAAM,kBAAkB,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC;IAEF,qBAAqB;IACrB,MAAM,gBAAgB,GAAG,IAAA,yBAAW,EAAC;QACnC,UAAU,EAAE,KAAK,EAAE,QAAyD,EAAE,EAAE;YAC9E,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAAC,KAAK,EAAE,cAAc,QAAQ,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;YAChF,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBACnB,WAAW,EAAE,CAAC,CAAC,oBAAoB,CAAC;aACrC,CAAC,CAAC;YACH,cAAc,CAAC,IAAI,CAAC,CAAC;YACrB,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC;QACD,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;YACxB,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjB,WAAW,EAAE,KAAK,CAAC,OAAO;gBAC1B,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,iBAAiB;IACjB,MAAM,QAAQ,GAAG,IAAA,yBAAO,EAAiC;QACvD,QAAQ,EAAE,IAAA,iBAAW,EAAC,cAAc,CAAC;QACrC,aAAa,EAAE;YACb,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;SACf;KACF,CAAC,CAAC;IAEH,mBAAmB;IACnB,MAAM,UAAU,GAAG,IAAA,yBAAO,EAAmC;QAC3D,QAAQ,EAAE,IAAA,iBAAW,EAAC,gBAAgB,CAAC;QACvC,aAAa,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,MAAM,EAAE,EAAE;SACX;KACF,CAAC,CAAC;IAEH,uCAAuC;IACvC,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,WAAW,EAAE,CAAC;YAChB,QAAQ,CAAC,KAAK,CAAC;gBACb,SAAS,EAAE,WAAW,CAAC,SAAS,IAAI,EAAE;gBACtC,QAAQ,EAAE,WAAW,CAAC,QAAQ,IAAI,EAAE;gBACpC,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,QAAQ,EAAE,WAAW,CAAC,QAAQ;aAC/B,CAAC,CAAC;QACL,CAAC;IACH,CAAC,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;IAE5B,+CAA+C;IAC/C,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,YAAY,EAAE,CAAC;YACjB,UAAU,CAAC,KAAK,CAAC;gBACf,YAAY,EAAE,EAAE;gBAChB,MAAM,EAAE,EAAE;aACX,CAAC,CAAC;QACL,CAAC;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC;IAE/B,6EAA6E;IAC7E,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;YACtB,cAAc,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC,CAAC;IAEjE,MAAM,cAAc,GAAG,KAAK,EAAE,MAAsC,EAAE,EAAE;QACtE,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QACD,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,GAAG,MAAM,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,CAAC,IAAU,EAAE,EAAE;QACpC,cAAc,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,kEAAkE;IAClE,MAAM,uBAAuB,GAAG,CAAC,MAAc,EAA8B,EAAE;QAC7E,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC;IAClD,CAAC,CAAC;IAEF,MAAM,gBAAgB,GAAG,CAAC,IAAU,EAAE,EAAE;QACtC,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,MAAM,gBAAgB,GAAG,KAAK,EAAE,MAAwC,EAAE,EAAE;QAC1E,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QACD,MAAM,kBAAkB,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAClF,CAAC,CAAC;IAEF,gCAAgC;IAChC,MAAM,yBAAyB,GAAG,IAAA,yBAAW,EAAC;QAC5C,UAAU,EAAE,KAAK,EAAE,EACjB,MAAM,EACN,eAAe,GAIhB,EAAE,EAAE;YACH,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAAC,KAAK,EAAE,cAAc,MAAM,gBAAgB,EAAE;gBAC7E,eAAe;aAChB,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBACnB,WAAW,EAAE,CAAC,CAAC,gCAAgC,CAAC;aACjD,CAAC,CAAC;YACH,2BAA2B,CAAC,IAAI,CAAC,CAAC;YAClC,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5D,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC;QACrF,CAAC;QACD,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;YACxB,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjB,WAAW,EAAE,KAAK,CAAC,OAAO;gBAC1B,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,4BAA4B;IAC5B,MAAM,qBAAqB,GAAG,IAAA,yBAAW,EAAC;QACxC,UAAU,EAAE,KAAK,EAAE,EACjB,MAAM,EACN,WAAW,GAIZ,EAAE,EAAE;YACH,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAAC,KAAK,EAAE,cAAc,MAAM,YAAY,EAAE;gBACzE,WAAW;aACZ,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBACnB,WAAW,EAAE,CAAC,CAAC,4BAA4B,CAAC;aAC7C,CAAC,CAAC;YACH,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC;QACD,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;YACxB,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjB,WAAW,EAAE,KAAK,CAAC,OAAO;gBAC1B,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,6BAA6B;IAC7B,MAAM,sBAAsB,GAAG,IAAA,yBAAW,EAAC;QACzC,UAAU,EAAE,KAAK,EAAE,EACjB,MAAM,EACN,oBAAoB,GAIrB,EAAE,EAAE;YACH,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAAC,KAAK,EAAE,cAAc,MAAM,aAAa,EAAE;gBAC1E,oBAAoB;aACrB,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;gBACnB,WAAW,EAAE,CAAC,CAAC,6BAA6B,CAAC;aAC9C,CAAC,CAAC;YACH,wBAAwB,CAAC,IAAI,CAAC,CAAC;YAC/B,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5D,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,gCAAgC,CAAC,EAAE,CAAC,CAAC;QAClF,CAAC;QACD,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;YACxB,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjB,WAAW,EAAE,KAAK,CAAC,OAAO;gBAC1B,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,uBAAuB;IACvB,MAAM,kBAAkB,GAAG,IAAA,yBAAW,EAAC;QACrC,UAAU,EAAE,KAAK,EAAE,EACjB,MAAM,EACN,IAAI,GAIL,EAAE,EAAE;YACH,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAAC,MAAM,EAAE,cAAc,MAAM,iBAAiB,EAAE,IAAI,CAAC,CAAC;YACvF,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC;gBAC1B,WAAW,EAAE,CAAC,CAAC,2BAA2B,CAAC;aAC5C,CAAC,CAAC;YACH,eAAe,CAAC,IAAI,CAAC,CAAC;YACtB,mCAAmC;YACnC,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5D,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC;YACnF,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,gCAAgC,CAAC,EAAE,CAAC,CAAC;YAChF,qCAAqC;YACrC,yBAAW,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC3D,CAAC;QACD,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;YACxB,KAAK,CAAC;gBACJ,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC;gBAC1B,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC,2BAA2B,CAAC;gBAC5D,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,oBAAoB;IACpB,MAAM,oBAAoB,GAAG,WAAW,EAAE,IAAI,KAAK,OAAO,CAAC;IAC3D,MAAM,iBAAiB,GAAG,WAAW,EAAE,IAAI,KAAK,OAAO,IAAI,WAAW,EAAE,IAAI,KAAK,SAAS,CAAC;IAC3F,MAAM,cAAc,GAAG,WAAW,EAAE,IAAI,KAAK,OAAO,CAAC;IAErD,gDAAgD;IAChD,yBAAyB;IACzB,sBAAsB;IACtB,kEAAkE;IAClE,eAAe;IACf,QAAQ;IACR,oBAAoB;IACpB,uBAAuB;IACvB,uBAAuB;IACvB,iCAAiC;IACjC,mBAAmB;IACnB,+CAA+C;IAC/C,mDAAmD;IACnD,iDAAiD;IACjD,qDAAqD;IACrD,6DAA6D;IAC7D,2DAA2D;IAC3D,+DAA+D;IAC/D,WAAW;IACX,SAAS;IACT,QAAQ;IACR,wBAAwB;IACxB,2BAA2B;IAC3B,yBAAyB;IACzB,iCAAiC;IACjC,mBAAmB;IACnB,+CAA+C;IAC/C,kDAAkD;IAClD,WAAW;IACX,SAAS;IACT,QAAQ;IACR,4BAA4B;IAC5B,+BAA+B;IAC/B,+BAA+B;IAC/B,iCAAiC;IACjC,2FAA2F;IAC3F,SAAS;IACT,OAAO;IACP,mBAAmB;IACnB,mDAAmD;IACnD,iDAAiD;IACjD,0CAA0C;IAC1C,wCAAwC;IACxC,qDAAqD;IACrD,OAAO;IACP,KAAK;IAML,6CAA6C;IAC7C,+EAA+E;IAC/E,6EAA6E;IAC7E,MAAM,aAAa,GAAG,KAAK,CAAC;IAE5B,yCAAyC;IACzC,qDAAqD;IACrD,qFAAqF;IACrF,KAAK;IAEL,kDAAkD;IAClD,iEAAiE;IACjE,KAAK;IAEL,uEAAuE;IACvE,6EAA6E;IAC7E,KAAK;IAEL,MAAM,kBAAkB,GAAG,GAAG,EAAE;QAC9B,cAAc,CAAC,EAAE,CAAC,CAAC;QACnB,SAAS,CAAC,EAAE,CAAC,CAAC;QACd,aAAa,CAAC,EAAE,CAAC,CAAC;QAClB,eAAe,CAAC,EAAE,CAAC,CAAC;QACpB,qBAAqB,CAAC,EAAE,CAAC,CAAC;QAC1B,eAAe,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,oDAAoD;IACpD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,kBAAkB,EAAE,CAAC;YACvB,eAAe,CAAC,EAAE,CAAC,CAAC;QACtB,CAAC;IACH,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAEzB,4CAA4C;IAC5C,MAAM,yBAAyB,GAAG,IAAA,yBAAW,EAAC;QAC5C,UAAU,EAAE,KAAK,IAAI,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;YAC9D,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;YAE3F,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,oBAAoB,EAAE;gBACjD,MAAM,EAAE,QAAQ;aACjB,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;YAExF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACpC,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;gBACzD,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,+BAA+B,CAAC,CAAC;YAClE,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,MAAM,CAAC,CAAC;YAC1D,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;YACtE,KAAK,CAAC;gBACJ,KAAK,EAAE,SAAS;gBAChB,WAAW,EAAE,IAAI,CAAC,OAAO,IAAI,WAAW,IAAI,CAAC,YAAY,eAAe;aACzE,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,yBAAyB;YACzB,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5D,0BAA0B,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QACD,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;YACtE,KAAK,CAAC;gBACJ,KAAK,EAAE,OAAO;gBACd,WAAW,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,+BAA+B;gBACrF,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,6BAA6B;IAC7B,MAAM,uBAAuB,GAAG,GAAG,EAAE;QACnC,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QAC7E,yBAAyB,CAAC,MAAM,EAAE,CAAC;IACrC,CAAC,CAAC;IAEF,gDAAgD;IAChD,iCAAiC;IACjC,kFAAkF;IAClF,aAAa;IACb,4CAA4C;IAC5C,MAAM;IACN,KAAK;IAEL,oDAAoD;IACpD,MAAM,UAAU,GAAG,cAAc,EAAE,KAAK,IAAI,CAAC,CAAC;IAC9C,MAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC;IAE3C,yEAAyE;IACzE,MAAM,gBAAgB,GAAG,UAAU,IAAI,YAAY,IAAI,kBAAkB,IAAI,YAAY,CAAC;IAE1F,2FAA2F;IAC3F,MAAM,oBAAoB,GAAG,gBAAgB;QAC3C,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,CAAC;QAC1D,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,sCAAsC;IAE9F,MAAM,mBAAmB,GAAG,gBAAgB;QAC1C,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC;QAClE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,oCAAoC;IAE5F,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;IAE/E,0CAA0C;IAC1C,MAAM,UAAU,GAAG,cAAc,EAAE,UAAU,IAAI,CAAC,CAAC;IACnD,MAAM,OAAO,GAAG,cAAc,EAAE,OAAO,IAAI,KAAK,CAAC;IACjD,MAAM,OAAO,GAAG,cAAc,EAAE,OAAO,IAAI,KAAK,CAAC;IAEjD,+FAA+F;IAC/F,MAAM,YAAY,GAAG,aAAa,CAAC;IAEnC,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IAAC,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,CAAC,GAAI,EACrE,gCAAK,SAAS,EAAC,0BAA0B,YACvC,uBAAC,WAAI,cACH,uBAAC,kBAAW,IAAC,SAAS,EAAC,KAAK,YAC1B,8BAAG,SAAS,EAAC,cAAc,YAAE,CAAC,CAAC,iBAAiB,CAAC,GAAK,GAC1C,GACT,GACH,IACF,CACP,CAAC;IACJ,CAAC;IAED,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IAAC,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,CAAC,GAAI,EAErE,gCAAK,SAAS,EAAC,0BAA0B,YACvC,iCAAK,SAAS,EAAC,6BAA6B,aAE5C,iCAAK,SAAS,EAAC,uCAAuC,aACpD,wBAAC,WAAI,eACH,wBAAC,iBAAU,IAAC,SAAS,EAAC,2DAA2D,aAC/E,uBAAC,gBAAS,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,YAAY,CAAC,GAAa,EACtF,uBAAC,oBAAK,IAAC,SAAS,EAAC,+BAA+B,GAAG,IACxC,EACb,wBAAC,kBAAW,eACV,gCAAK,SAAS,EAAC,oBAAoB,YAAE,mBAAmB,GAAO,EAC/D,8BAAG,SAAS,EAAC,+BAA+B,YAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAK,IAClG,IACT,EAEP,wBAAC,WAAI,eACH,wBAAC,iBAAU,IAAC,SAAS,EAAC,2DAA2D,aAC/E,uBAAC,gBAAS,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,aAAa,CAAC,GAAa,EACvF,uBAAC,uBAAQ,IAAC,SAAS,EAAC,+BAA+B,GAAG,IAC3C,EACb,wBAAC,kBAAW,eACV,gCAAK,SAAS,EAAC,oBAAoB,YAAE,oBAAoB,GAAO,EAChE,8BAAG,SAAS,EAAC,+BAA+B,YAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAK,IACzG,IACT,EAEP,wBAAC,WAAI,eACH,wBAAC,iBAAU,IAAC,SAAS,EAAC,2DAA2D,aAC/E,uBAAC,gBAAS,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,OAAO,CAAC,GAAa,EACjF,uBAAC,qBAAM,IAAC,SAAS,EAAC,+BAA+B,GAAG,IACzC,EACb,wBAAC,kBAAW,eACV,gCAAK,SAAS,EAAC,oBAAoB,YAAE,mBAAmB,GAAO,EAC/D,8BAAG,SAAS,EAAC,+BAA+B,YAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAK,IACvG,IACT,IACH,EAGN,wBAAC,WAAI,IAAC,YAAY,EAAC,OAAO,EAAC,SAAS,EAAC,WAAW,aAC9C,iCAAK,SAAS,EAAC,mCAAmC,aAChD,wBAAC,eAAQ,eACP,wBAAC,kBAAW,IAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,yBAAyB,aAC5D,uBAAC,oBAAK,IAAC,SAAS,EAAC,SAAS,GAAG,EAC5B,CAAC,CAAC,OAAO,CAAC,IACC,EACd,wBAAC,kBAAW,IAAC,KAAK,EAAC,aAAa,EAAC,SAAS,EAAC,yBAAyB,aAClE,uBAAC,mBAAI,IAAC,SAAS,EAAC,SAAS,GAAG,EAC3B,CAAC,CAAC,aAAa,CAAC,IACL,IACL,EAEX,iCAAK,SAAS,EAAC,YAAY,aACzB,wBAAC,eAAM,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAC9C,uBAAC,uBAAQ,IAAC,SAAS,EAAC,cAAc,GAAG,EACpC,CAAC,CAAC,YAAY,CAAC,IACT,EAGR,WAAW,EAAE,IAAI,KAAK,OAAO,IAAI,CAChC,wBAAC,eAAM,IACL,OAAO,EAAC,aAAa,EACrB,OAAO,EAAE,GAAG,EAAE,CAAC,0BAA0B,CAAC,IAAI,CAAC,iBACnC,uBAAuB,aAEnC,uBAAC,qBAAM,IAAC,SAAS,EAAC,cAAc,GAAG,2BAE5B,CACV,IACG,IACF,EAEN,uBAAC,kBAAW,IAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,WAAW,YAC9C,uBAAC,WAAI,cACH,uBAAC,kBAAW,IAAC,SAAS,EAAC,KAAK,YACzB,YAAY,CAAC,CAAC,CAAC,CACd,wCAAI,CAAC,CAAC,cAAc,CAAC,IAAI,kBAAkB,GAAK,CACjD,CAAC,CAAC,CAAC,CACF,iCAAK,SAAS,EAAC,WAAW,aAExB,iCAAK,SAAS,EAAC,gEAAgE,aAE7E,gCAAK,SAAS,EAAC,QAAQ,YACrB,uBAAC,aAAK,IACJ,WAAW,EAAE,CAAC,CAAC,aAAa,CAAC,EAC7B,KAAK,EAAE,WAAW,EAClB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAC/C,SAAS,EAAC,QAAQ,GAClB,GACE,EAGN,mCACE,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAC9C,SAAS,EAAC,6CAA6C,YAEtD,aAAa,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnC,mCAAyB,KAAK,EAAE,IAAI,CAAC,KAAK,YACvC,IAAI,CAAC,KAAK,IADA,IAAI,CAAC,KAAK,CAEd,CACV,CAAC,IAAI,EAAE,GACD,EAGT,mCACE,KAAK,EAAE,YAAY,EACnB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAChD,SAAS,EAAC,6CAA6C,YAEtD,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACxC,mCAA2B,KAAK,EAAE,MAAM,CAAC,KAAK,YAC3C,MAAM,CAAC,KAAK,IADF,MAAM,CAAC,KAAK,CAEhB,CACV,CAAC,IAAI,EAAE,GACD,EAGR,aAAa,EAAE,aAAa,IAAI,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CACzE,mCACE,KAAK,EAAE,kBAAkB,EACzB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACtD,SAAS,EAAC,6CAA6C,YAEtD,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CACxC,mCAAwB,KAAK,EAAE,GAAG,CAAC,KAAK,YACrC,GAAG,CAAC,KAAK,IADC,GAAG,CAAC,KAAK,CAEb,CACV,CAAC,GACK,CACV,EAGA,aAAa,EAAE,aAAa,IAAI,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAChG,mCACE,KAAK,EAAE,YAAY,EACnB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAChD,SAAS,EAAC,6CAA6C,YAEtD,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAC3C,mCAA2B,KAAK,EAAE,MAAM,CAAC,KAAK,YAC3C,MAAM,CAAC,KAAK,IADF,MAAM,CAAC,KAAK,CAEhB,CACV,CAAC,GACK,CACV,EAGA,kBAAkB,IAAI,aAAa,EAAE,aAAa,IAAI,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAC/F,gCAAK,SAAS,EAAC,sFAAsF,kEAE/F,CACP,EAGA,CAAC,WAAW,IAAI,UAAU,IAAI,YAAY,IAAI,kBAAkB,IAAI,YAAY,CAAC,IAAI,CACpF,uBAAC,eAAM,IAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,kBAAkB,YAClD,CAAC,CAAC,cAAc,CAAC,GACX,CACV,IACG,EAEN,gCAAI,SAAS,EAAC,uBAAuB,aAClC,CAAC,CAAC,OAAO,CAAC,QAAI,aAAa,UAAM,UAAU,OAAG,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,SACpE,EAGL,uBAAC,gDAAoB,IACnB,KAAK,EAAE,YAAY,EACnB,SAAS,EAAE,YAAY,EACvB,UAAU,EAAE,cAAc,EAC1B,mBAAmB,EAAE,2BAA2B,EAChD,gBAAgB,EAAE,wBAAwB,EAC1C,YAAY,EAAE,gBAAgB,EAC9B,oBAAoB,EAAE,oBAAoB,EAC1C,iBAAiB,EAAE,iBAAiB,EACpC,cAAc,EAAE,cAAc,GAC9B,EAGD,UAAU,GAAG,CAAC,IAAI,CACjB,iCAAK,SAAS,EAAC,wCAAwC,aACrD,iCAAK,SAAS,EAAC,uBAAuB,sBAC9B,WAAW,UAAM,UAAU,iBAAa,KAAK,CAAC,MAAM,OAAG,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,QAAI,UAAU,eAC/F,EACN,iCAAK,SAAS,EAAC,YAAY,aACzB,uBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAC9D,QAAQ,EAAE,CAAC,OAAO,IAAI,YAAY,YAEjC,CAAC,CAAC,UAAU,CAAC,IAAI,UAAU,GACrB,EACT,kCAAM,SAAS,EAAC,mBAAmB,aAChC,CAAC,CAAC,MAAM,CAAC,IAAI,MAAM,OAAG,WAAW,OAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,OAAG,UAAU,IAC5D,EACP,uBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,EACvE,QAAQ,EAAE,CAAC,OAAO,IAAI,YAAY,YAEjC,CAAC,CAAC,MAAM,CAAC,IAAI,MAAM,GACb,IACL,IACF,CACP,IACG,CACP,GACW,GACT,GACK,EAEd,uBAAC,kBAAW,IAAC,KAAK,EAAC,aAAa,EAAC,SAAS,EAAC,WAAW,YACpD,uBAAC,2CAAoB,KAAG,GACZ,IACT,EAGP,uBAAC,6CAAoB,IACnB,IAAI,EAAE,gBAAgB,EACtB,YAAY,EAAE,mBAAmB,EACjC,SAAS,EAAE,GAAG,EAAE;gCACd,iDAAiD;gCACjD,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;4BAC9D,CAAC,GACD,EAGF,uBAAC,eAAM,IAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,YAChF,wBAAC,sBAAa,IAAC,SAAS,EAAC,+CAA+C,aACtE,wBAAC,qBAAY,eACX,uBAAC,oBAAW,cAAE,CAAC,CAAC,eAAe,CAAC,GAAe,EAC/C,uBAAC,0BAAiB,cAAE,CAAC,CAAC,qBAAqB,CAAC,GAAqB,IACpD,EAEf,wBAAC,WAAI,IAAC,YAAY,EAAC,OAAO,EAAC,SAAS,EAAC,QAAQ,aAC3C,wBAAC,eAAQ,IAAC,SAAS,EAAE,eAAe,oBAAoB,IAAI,iBAAiB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,oBAAoB,IAAI,iBAAiB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,EAAE,aACzK,uBAAC,kBAAW,IAAC,KAAK,EAAC,OAAO,YAAE,CAAC,CAAC,WAAW,CAAC,IAAI,YAAY,GAAe,EACxE,oBAAoB,IAAI,uBAAC,kBAAW,IAAC,KAAK,EAAC,eAAe,YAAE,CAAC,CAAC,eAAe,CAAC,GAAe,EAC9F,uBAAC,kBAAW,IAAC,KAAK,EAAC,WAAW,YAAE,CAAC,CAAC,WAAW,CAAC,IAAI,WAAW,GAAe,EAC3E,iBAAiB,IAAI,uBAAC,kBAAW,IAAC,KAAK,EAAC,YAAY,YAAE,CAAC,CAAC,YAAY,CAAC,IAAI,YAAY,GAAe,IAC5F,EAEX,uBAAC,kBAAW,IAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,WAAW,YAC9C,uBAAC,WAAI,OAAK,QAAQ,YAChB,kCAAM,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,SAAS,EAAC,WAAW,aAC1E,iCAAK,SAAS,EAAC,wBAAwB,aACrC,uBAAC,gBAAS,IACR,OAAO,EAAE,QAAQ,CAAC,OAAO,EACzB,IAAI,EAAC,WAAW,EAChB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,uBAAC,gBAAS,cAAE,CAAC,CAAC,WAAW,CAAC,GAAa,EACvC,uBAAC,kBAAW,cACV,uBAAC,aAAK,OAAK,KAAK,iBAAc,sBAAsB,GAAG,GAC3C,EACd,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,EAEF,uBAAC,gBAAS,IACR,OAAO,EAAE,QAAQ,CAAC,OAAO,EACzB,IAAI,EAAC,UAAU,EACf,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,uBAAC,gBAAS,cAAE,CAAC,CAAC,UAAU,CAAC,GAAa,EACtC,uBAAC,kBAAW,cACV,uBAAC,aAAK,OAAK,KAAK,iBAAc,qBAAqB,GAAG,GAC1C,EACd,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,IACE,EAEN,uBAAC,gBAAS,IACR,OAAO,EAAE,QAAQ,CAAC,OAAO,EACzB,IAAI,EAAC,OAAO,EACZ,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,uBAAC,gBAAS,cAAE,CAAC,CAAC,OAAO,CAAC,GAAa,EACnC,uBAAC,kBAAW,cACV,uBAAC,aAAK,OAAK,KAAK,EAAE,IAAI,EAAC,OAAO,iBAAa,kBAAkB,GAAG,GACpD,EACd,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,EAEF,uBAAC,gBAAS,IACR,OAAO,EAAE,QAAQ,CAAC,OAAO,EACzB,IAAI,EAAC,MAAM,EACX,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,uBAAC,gBAAS,cAAE,CAAC,CAAC,MAAM,CAAC,GAAa,EAClC,wBAAC,eAAM,IAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,aACvD,uBAAC,kBAAW,cACV,uBAAC,sBAAa,mBAAa,kBAAkB,YAC3C,uBAAC,oBAAW,IAAC,WAAW,EAAE,CAAC,CAAC,YAAY,CAAC,GAAI,GAC/B,GACJ,EACd,uBAAC,sBAAa,cACX,iBAAiB,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAChC,uBAAC,mBAAU,IAAkB,KAAK,EAAE,IAAI,CAAC,KAAK,YAC3C,IAAI,CAAC,KAAK,IADI,IAAI,CAAC,KAAK,CAEd,CACd,CAAC,IAAI,EAAE,GACM,IACT,EACT,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,EAEF,uBAAC,gBAAS,IACR,OAAO,EAAE,QAAQ,CAAC,OAAO,EACzB,IAAI,EAAC,UAAU,EACf,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,uBAAC,gBAAS,cAAE,CAAC,CAAC,eAAe,CAAC,GAAa,EAC3C,wBAAC,eAAM,IACL,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,MAAM,CAAC,EAC1D,YAAY,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,aAEpC,uBAAC,kBAAW,cACV,uBAAC,sBAAa,mBAAa,oBAAoB,YAC7C,uBAAC,oBAAW,IAAC,WAAW,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,eAAe,GAAI,GACpD,GACJ,EACd,wBAAC,sBAAa,eACZ,uBAAC,mBAAU,IAAC,KAAK,EAAC,MAAM,YAAE,CAAC,CAAC,cAAc,CAAC,GAAc,EACzD,uBAAC,mBAAU,IAAC,KAAK,EAAC,OAAO,YAAE,CAAC,CAAC,gBAAgB,CAAC,GAAc,IAC9C,IACT,EACT,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,EAEF,wBAAC,qBAAY,eACX,uBAAC,eAAM,IACL,IAAI,EAAC,QAAQ,EACb,OAAO,EAAC,SAAS,EACjB,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,iBACvB,oBAAoB,YAE/B,CAAC,CAAC,QAAQ,CAAC,GACL,EACT,uBAAC,eAAM,IACL,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,gBAAgB,CAAC,SAAS,iBACxB,kBAAkB,YAE7B,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GACtE,IACI,IACV,GACF,GACK,EAEb,oBAAoB,IAAI,CACvB,uBAAC,kBAAW,IAAC,KAAK,EAAC,eAAe,EAAC,SAAS,EAAC,WAAW,YACtD,uBAAC,2CAAoB,IACnB,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,uBAAuB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAClE,aAAa,EAAE,aAAa,EAC5B,MAAM,EAAE,CAAC,eAAe,EAAE,EAAE;wDAC1B,IAAI,WAAW,EAAE,CAAC;4DAChB,yBAAyB,CAAC,MAAM,CAAC;gEAC/B,MAAM,EAAE,WAAW,CAAC,EAAE;gEACtB,eAAe;6DAChB,CAAC,CAAC;wDACL,CAAC;oDACH,CAAC,EACD,SAAS,EAAE,yBAAyB,CAAC,SAAS,GAC9C,GACU,CACf,EAED,uBAAC,kBAAW,IAAC,KAAK,EAAC,WAAW,EAAC,SAAS,EAAC,WAAW,YAClD,uBAAC,mCAAgB,IACf,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,uBAAuB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAClE,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,CAAC,WAAW,EAAE,EAAE;wDACtB,IAAI,WAAW,EAAE,CAAC;4DAChB,qBAAqB,CAAC,MAAM,CAAC;gEAC3B,MAAM,EAAE,WAAW,CAAC,EAAE;gEACtB,WAAW;6DACZ,CAAC,CAAC;wDACL,CAAC;oDACH,CAAC,EACD,SAAS,EAAE,qBAAqB,CAAC,SAAS,GAC1C,GACU,EAEb,iBAAiB,IAAI,CACpB,uBAAC,kBAAW,IAAC,KAAK,EAAC,YAAY,EAAC,SAAS,EAAC,WAAW,YACnD,uBAAC,qCAAiB,IAChB,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,uBAAuB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAClE,UAAU,EAAE,UAAU,EACtB,MAAM,EAAE,CAAC,oBAAoB,EAAE,EAAE;wDAC/B,IAAI,WAAW,EAAE,CAAC;4DAChB,sBAAsB,CAAC,MAAM,CAAC;gEAC5B,MAAM,EAAE,WAAW,CAAC,EAAE;gEACtB,oBAAoB;6DACrB,CAAC,CAAC;wDACL,CAAC;oDACH,CAAC,EACD,SAAS,EAAE,sBAAsB,CAAC,SAAS,GAC3C,GACU,CACf,IACI,IACO,GACT,EAIT,uBAAC,0BAAW,IAAC,IAAI,EAAE,uBAAuB,EAAE,YAAY,EAAE,0BAA0B,YAClF,wBAAC,iCAAkB,IAAC,SAAS,EAAC,kBAAkB,aAC9C,wBAAC,gCAAiB,eAChB,uBAAC,+BAAgB,IAAC,SAAS,EAAC,cAAc,wCAA2C,EACrF,uBAAC,qCAAsB,iIAEE,IACP,EAEpB,iCAAK,SAAS,EAAC,yFAAyF,aACtG,+BAAG,SAAS,EAAC,wCAAwC,aACnD,0DAAyB,0BACvB,EACJ,gCAAI,SAAS,EAAC,mEAAmE,aAC/E,wHAAmF,EACnF,sGAAiE,EACjE,6GAAwE,EACxE,oFAA+C,IAC5C,IACD,EAEN,wBAAC,gCAAiB,eAChB,uBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,OAAO,EAAE,GAAG,EAAE,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAChD,QAAQ,EAAE,yBAAyB,CAAC,SAAS,uBAGtC,EACT,uBAAC,eAAM,IACL,OAAO,EAAC,aAAa,EACrB,OAAO,EAAE,uBAAuB,EAChC,QAAQ,EAAE,yBAAyB,CAAC,SAAS,iBACjC,+BAA+B,YAE1C,yBAAyB,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,qBAAqB,GACrE,IACS,IACD,GACT,EAGd,uBAAC,0BAAW,IAAC,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,eAAe,CAAC,IAAI,CAAC,YACvF,wBAAC,iCAAkB,IAAC,SAAS,EAAC,kBAAkB,aAC9C,wBAAC,gCAAiB,eAChB,uBAAC,+BAAgB,IAAC,SAAS,EAAC,cAAc,YAAE,CAAC,CAAC,iBAAiB,CAAC,GAAoB,EACpF,uBAAC,qCAAsB,cACpB,CAAC,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC,yBAAyB,EAAE,GAAG,YAAY,EAAE,SAAS,IAAI,YAAY,EAAE,QAAQ,0BAA0B,CAAC,GACvH,IACP,EAEpB,iCAAK,SAAS,EAAC,yFAAyF,aACtG,+BAAG,SAAS,EAAC,wCAAwC,aACnD,+CAAS,CAAC,CAAC,SAAS,CAAC,IAAI,SAAS,SAAW,OAAE,CAAC,CAAC,uBAAuB,CAAC,IAAI,0CAA0C,SACrH,EACJ,gCAAI,SAAS,EAAC,mEAAmE,aAC/E,yCAAK,CAAC,CAAC,mBAAmB,CAAC,IAAI,wCAAwC,GAAM,EAC7E,yCAAK,CAAC,CAAC,yBAAyB,CAAC,IAAI,wCAAwC,GAAM,EACnF,yCAAK,CAAC,CAAC,sBAAsB,CAAC,IAAI,4CAA4C,GAAM,EACpF,yCAAK,CAAC,CAAC,uBAAuB,CAAC,IAAI,oCAAoC,GAAM,IAC1E,IACD,EAEN,uBAAC,WAAI,OAAK,UAAU,YAClB,kCAAM,QAAQ,EAAE,UAAU,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAC,WAAW,aAC9E,uBAAC,gBAAS,IACR,OAAO,EAAE,UAAU,CAAC,OAAO,EAC3B,IAAI,EAAC,cAAc,EACnB,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,wBAAC,gBAAS,eACP,CAAC,CAAC,mBAAmB,CAAC,OAAG,GAAG,EAC7B,iCAAM,SAAS,EAAC,mBAAmB,YAAE,YAAY,EAAE,KAAK,GAAQ,IACtD,EACZ,uBAAC,kBAAW,cACV,uBAAC,aAAK,OACA,KAAK,EACT,IAAI,EAAC,OAAO,EACZ,WAAW,EAAE,YAAY,EAAE,KAAK,iBACpB,4BAA4B,GACxC,GACU,EACd,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,EAEF,uBAAC,gBAAS,IACR,OAAO,EAAE,UAAU,CAAC,OAAO,EAC3B,IAAI,EAAC,QAAQ,EACb,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACrB,wBAAC,eAAQ,eACP,uBAAC,gBAAS,cAAE,CAAC,CAAC,gBAAgB,CAAC,GAAa,EAC5C,uBAAC,kBAAW,cACV,uBAAC,aAAK,OACA,KAAK,EACT,WAAW,EAAE,CAAC,CAAC,qBAAqB,CAAC,IAAI,8BAA8B,iBAC3D,qBAAqB,GACjC,GACU,EACd,uBAAC,kBAAW,KAAG,IACN,CACZ,GACD,EAEF,wBAAC,gCAAiB,eAChB,uBAAC,eAAM,IACL,IAAI,EAAC,QAAQ,EACb,OAAO,EAAC,SAAS,EACjB,OAAO,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EACpC,QAAQ,EAAE,kBAAkB,CAAC,SAAS,iBAC1B,sBAAsB,uBAG3B,EACT,uBAAC,eAAM,IACL,IAAI,EAAC,QAAQ,EACb,OAAO,EAAC,aAAa,EACrB,QAAQ,EAAE,kBAAkB,CAAC,SAAS,iBAC1B,uBAAuB,YAElC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,gBAAgB,GACzD,IACS,IACf,GACF,IACY,GACT,IACR,GACF,IACF,CACP,CAAC;AACJ,CAAC","names":[],"sources":["/home/runner/workspace/client/src/pages/manager/user-management.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Header } from '@/components/layout/header';\nimport { FilterSort } from '@/components/filter-sort/FilterSort';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Users, UserPlus, Shield, Mail, Edit, Home, Trash2 } from 'lucide-react';\nimport { SendInvitationDialog } from '@/components/admin/send-invitation-dialog';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport type { User, UserWithAssignments, Organization, Building, Residence } from '@shared/schema';\nimport type { FilterValue, SortValue } from '@/lib/filter-sort/types';\nimport { UserAssignmentsTable } from '@/components/UserAssignmentsTableClean';\nimport { UserOrganizationsTab } from '@/components/user-tabs/UserOrganizationsTab';\nimport { UserBuildingsTab } from '@/components/user-tabs/UserBuildingsTab';\nimport { UserResidencesTab } from '@/components/user-tabs/UserResidencesTab';\nimport { InvitationManagement } from '@/components/InvitationManagement';\n\n// Form validation schema for editing users - dynamic based on available roles\nconst createEditUserSchema = (availableRoles: { value: string; label: string }[]) => {\n  const roleValues = availableRoles.map(role => role.value) as [string, ...string[]];\n  \n  return z.object({\n    firstName: z.string().min(1, 'First name is required (example: Jean)').max(50, 'First name must be less than 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'First name can only contain letters, spaces, apostrophes and hyphens'),\n    lastName: z.string().min(1, 'Last name is required (example: Dupont)').max(50, 'Last name must be less than 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'Last name can only contain letters, spaces, apostrophes and hyphens'),\n    email: z.string().min(1, 'Email address is required').email('Please enter a valid email address (example: jean.dupont@email.com)'),\n    role: roleValues.length > 0 ? z.enum(roleValues) : z.string().min(1, 'Please select a user role'),\n    isActive: z.boolean(),\n  });\n};\n\n// Form validation schema for deleting users\nconst deleteUserSchema = z.object({\n  confirmEmail: z.string().min(1, 'Email confirmation is required to delete user').email('Please enter a valid email address that matches the user account'),\n  reason: z.string().max(500, 'Reason must be less than 500 characters').optional(),\n});\n\n/**\n * User Management Page for Management Menu\n * Consolidates user management functionalities for managers and admins.\n * Provides comprehensive user administration with role-based access controls.\n */\nexport default function UserManagement() {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n  const [selectedUsers, setSelectedUsers] = useState<Set<string>>(new Set());\n  const [showInviteDialog, setShowInviteDialog] = useState(false);\n  const [editingUser, setEditingUser] = useState<User | null>(null);\n  const [deletingUser, setDeletingUser] = useState<User | null>(null);\n  const [editingUserOrganizations, setEditingUserOrganizations] = useState<UserWithAssignments | null>(null);\n  const [editingUserResidences, setEditingUserResidences] = useState<UserWithAssignments | null>(null);\n  const [showDeleteOrphansDialog, setShowDeleteOrphansDialog] = useState(false);\n\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const usersPerPage = 10;\n\n  // Filter and search state - simplified for quick fix\n  const [searchInput, setSearchInput] = useState(''); // Input field value\n  const [search, setSearch] = useState(''); // Debounced search value for API\n  const [roleFilter, setRoleFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [organizationFilter, setOrganizationFilter] = useState('');\n  const [orphanFilter, setOrphanFilter] = useState('');\n\n  // Debounce search input - wait 3 seconds after user stops typing\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setSearch(searchInput);\n    }, 3000);\n\n    return () => clearTimeout(timeoutId);\n  }, [searchInput]);\n\n  // Fetch users with server-side pagination\n  const {\n    data: usersResponse,\n    isLoading: usersLoading,\n    error: usersError,\n  } = useQuery<{\n    users: UserWithAssignments[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      totalPages: number;\n      hasNext: boolean;\n      hasPrev: boolean;\n    };\n  }>({\n    queryKey: ['/api/users', { \n      page: currentPage, \n      limit: usersPerPage,\n      roleFilter,\n      statusFilter,\n      organizationFilter,\n      orphanFilter,\n      search\n    }],\n    queryFn: async () => {\n      // Build query parameters including filters\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: usersPerPage.toString(),\n      });\n      \n      if (roleFilter) params.append('role', roleFilter);\n      if (statusFilter) params.append('status', statusFilter);\n      if (organizationFilter) params.append('organization', organizationFilter);\n      if (orphanFilter) params.append('orphan', orphanFilter);\n      if (search) params.append('search', search);\n      \n      const response = await fetch(`/api/users?${params.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      return response.json();\n    },\n  });\n\n  // Extract users and pagination info from response\n  const users = usersResponse?.users || [];\n  const paginationInfo = usersResponse?.pagination;\n\n  // Fetch dynamic filter options\n  const { data: filterOptions } = useQuery<{\n    roles: Array<{ value: string; label: string }>;\n    statuses: Array<{ value: string; label: string }>;\n    organizations: Array<{ value: string; label: string }>;\n    orphanOptions: Array<{ value: string; label: string }>;\n  }>({\n    queryKey: ['/api/users/filter-options'],\n  });\n\n  // Fetch organizations\n  const { data: organizations = [] } = useQuery<Organization[]>({\n    queryKey: ['/api/organizations'],\n    enabled: true,\n  });\n\n  // Fetch buildings\n  const { data: buildings = [] } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n    enabled: true,\n  });\n\n  // Fetch residences\n  const { data: residences = [] } = useQuery<Residence[]>({\n    queryKey: ['/api/residences'],\n    enabled: true,\n  });\n\n  // Get current user to check permissions\n  const { data: currentUser } = useQuery<User>({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Organization context detection for role filtering\n  const userOrganizationContext = useMemo(() => {\n    if (!currentUser || !organizations || !users) return null;\n\n    // Get current user's organization assignments\n    const currentUserWithAssignments = users.find(u => u.id === currentUser.id);\n    if (!currentUserWithAssignments?.organizations) return null;\n\n    const userOrganizations = currentUserWithAssignments.organizations;\n    const isDemoUser = ['demo_manager', 'demo_tenant', 'demo_resident'].includes(currentUser.role);\n    const hasDemoOrganizations = userOrganizations.some(org => \n      organizations.find(o => o.id === org.id)?.type === 'demo'\n    );\n    const hasRegularOrganizations = userOrganizations.some(org => \n      organizations.find(o => o.id === org.id)?.type !== 'demo'\n    );\n\n    return {\n      isDemoUser,\n      hasDemoOrganizations,\n      hasRegularOrganizations,\n      userOrganizations: userOrganizations.map(org => org.id),\n      organizationTypes: userOrganizations.map(org => \n        organizations.find(o => o.id === org.id)?.type || 'unknown'\n      )\n    };\n  }, [currentUser, organizations, users]);\n\n  // Role filtering function\n  const getAvailableRoles = useMemo(() => {\n    if (!currentUser || !userOrganizationContext) return [];\n\n    const { role } = currentUser;\n    const { isDemoUser, hasDemoOrganizations, hasRegularOrganizations } = userOrganizationContext;\n\n    // Admin can assign any role\n    if (role === 'admin') {\n      return [\n        { value: 'admin', label: 'Admin' },\n        { value: 'manager', label: 'Manager' },\n        { value: 'tenant', label: 'Tenant' },\n        { value: 'resident', label: 'Resident' },\n        { value: 'demo_manager', label: 'Demo Manager' },\n        { value: 'demo_tenant', label: 'Demo Tenant' },\n        { value: 'demo_resident', label: 'Demo Resident' },\n      ];\n    }\n\n    // Manager role assignment restrictions\n    if (role === 'manager') {\n      return [\n        { value: 'manager', label: 'Manager' },\n        { value: 'tenant', label: 'Tenant' },\n        { value: 'resident', label: 'Resident' },\n      ];\n    }\n\n    // Demo manager role assignment restrictions\n    if (role === 'demo_manager') {\n      return [\n        { value: 'demo_manager', label: 'Demo Manager' },\n        { value: 'demo_tenant', label: 'Demo Tenant' },\n        { value: 'demo_resident', label: 'Demo Resident' },\n      ];\n    }\n\n    // Other roles cannot assign roles\n    return [];\n  }, [currentUser, userOrganizationContext]);\n\n  // Dynamic edit user schema based on available roles\n  const editUserSchema = useMemo(() => createEditUserSchema(getAvailableRoles), [getAvailableRoles]);\n\n  // Bulk action handler\n  const bulkActionMutation = useMutation({\n    mutationFn: async ({ action, data }: { action: string; data?: Record<string, unknown> }) => {\n      const selectedUserIds = Array.from(selectedUsers);\n      const response = await apiRequest('POST', '/api/users/bulk-action', {\n        action,\n        userIds: selectedUserIds,\n        data,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('userUpdatedSuccess'),\n      });\n      setSelectedUsers(new Set());\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (_error: Error) => {\n      toast({\n        title: t('error'),\n        description: _error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleBulkAction = async (action: string, data?: Record<string, unknown>) => {\n    await bulkActionMutation.mutateAsync({ action, data });\n  };\n\n  // Edit user mutation\n  const editUserMutation = useMutation({\n    mutationFn: async (userData: z.infer<typeof editUserSchema> & { id: string }) => {\n      const response = await apiRequest('PUT', `/api/users/${userData.id}`, userData);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('userUpdatedSuccess'),\n      });\n      setEditingUser(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Edit user form\n  const editForm = useForm<z.infer<typeof editUserSchema>>({\n    resolver: zodResolver(editUserSchema),\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      role: 'tenant',\n      isActive: true,\n    },\n  });\n\n  // Delete user form\n  const deleteForm = useForm<z.infer<typeof deleteUserSchema>>({\n    resolver: zodResolver(deleteUserSchema),\n    defaultValues: {\n      confirmEmail: '',\n      reason: '',\n    },\n  });\n\n  // Reset form when editing user changes\n  React.useEffect(() => {\n    if (editingUser) {\n      editForm.reset({\n        firstName: editingUser.firstName || '',\n        lastName: editingUser.lastName || '',\n        email: editingUser.email,\n        role: editingUser.role,\n        isActive: editingUser.isActive,\n      });\n    }\n  }, [editingUser, editForm]);\n\n  // Reset delete form when deleting user changes\n  React.useEffect(() => {\n    if (deletingUser) {\n      deleteForm.reset({\n        confirmEmail: '',\n        reason: '',\n      });\n    }\n  }, [deletingUser, deleteForm]);\n\n  // Reset to page 1 when filters change (excluding search since it's disabled)\n  React.useEffect(() => {\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n    }\n  }, [roleFilter, statusFilter, organizationFilter, orphanFilter]);\n\n  const handleEditUser = async (values: z.infer<typeof editUserSchema>) => {\n    if (!editingUser) {\n      return;\n    }\n    await editUserMutation.mutateAsync({ ...values, id: editingUser.id });\n  };\n\n  const openEditDialog = (user: User) => {\n    setEditingUser(user);\n  };\n\n  // Helper function to find UserWithAssignments from the users list\n  const findUserWithAssignments = (userId: string): UserWithAssignments | null => {\n    return users.find(u => u.id === userId) || null;\n  };\n\n  const openDeleteDialog = (user: User) => {\n    setDeletingUser(user);\n  };\n\n  const handleDeleteUser = async (values: z.infer<typeof deleteUserSchema>) => {\n    if (!deletingUser) {\n      return;\n    }\n    await deleteUserMutation.mutateAsync({ userId: deletingUser.id, data: values });\n  };\n\n  // Organization editing mutation\n  const editOrganizationsMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      organizationIds,\n    }: {\n      userId: string;\n      organizationIds: string[];\n    }) => {\n      const response = await apiRequest('PUT', `/api/users/${userId}/organizations`, {\n        organizationIds,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('organizationAssignmentsUpdated'),\n      });\n      setEditingUserOrganizations(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-organizations'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Building editing mutation\n  const editBuildingsMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      buildingIds,\n    }: {\n      userId: string;\n      buildingIds: string[];\n    }) => {\n      const response = await apiRequest('PUT', `/api/users/${userId}/buildings`, {\n        buildingIds,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('buildingAssignmentsUpdated'),\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Residence editing mutation\n  const editResidencesMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      residenceAssignments,\n    }: {\n      userId: string;\n      residenceAssignments: any[];\n    }) => {\n      const response = await apiRequest('PUT', `/api/users/${userId}/residences`, {\n        residenceAssignments,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('residenceAssignmentsUpdated'),\n      });\n      setEditingUserResidences(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-residences'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Delete user mutation\n  const deleteUserMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      data,\n    }: {\n      userId: string;\n      data: z.infer<typeof deleteUserSchema>;\n    }) => {\n      const response = await apiRequest('POST', `/api/users/${userId}/delete-account`, data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('accountDeleted'),\n        description: t('accountDeletedDescription'),\n      });\n      setDeletingUser(null);\n      // Invalidate and refetch user data\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-organizations'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-residences'] });\n      // Force refetch to ensure UI updates\n      queryClient.refetchQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('deletionFailed'),\n        description: error.message || t('deletionFailedDescription'),\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Permission checks\n  const canEditOrganizations = currentUser?.role === 'admin';\n  const canEditResidences = currentUser?.role === 'admin' || currentUser?.role === 'manager';\n  const canDeleteUsers = currentUser?.role === 'admin';\n\n  // Filter configuration - temporarily simplified\n  // const filterConfig = {\n  //   searchable: true,\n  //   searchFields: ['firstName', 'lastName', 'email', 'username'],\n  //   filters: [\n  //     {\n  //       id: 'role',\n  //       field: 'role',\n  //       label: 'Role',\n  //       type: 'select' as const,\n  //       options: [\n  //         { label: 'Admin', _value: 'admin' },\n  //         { label: 'Manager', _value: 'manager' },\n  //         { label: 'Tenant', _value: 'tenant' },\n  //         { label: 'Resident', _value: 'resident' },\n  //         { label: 'Demo Manager', _value: 'demo_manager' },\n  //         { label: 'Demo Tenant', _value: 'demo_tenant' },\n  //         { label: 'Demo Resident', _value: 'demo_resident' },\n  //       ],\n  //     },\n  //     {\n  //       id: 'isActive',\n  //       field: 'isActive',\n  //       label: 'Status',\n  //       type: 'select' as const,\n  //       options: [\n  //         { label: 'Active', _value: 'true' },\n  //         { label: 'Inactive', _value: 'false' },\n  //       ],\n  //     },\n  //     {\n  //       id: 'organization',\n  //       field: 'organization',\n  //       label: 'Organization',\n  //       type: 'select' as const,\n  //       options: organizations?.map((org) => ({ label: org.name, _value: org.id })) || [],\n  //     },\n  //   ],\n  //   sortOptions: [\n  //     { field: 'firstName', label: 'First Name' },\n  //     { field: 'lastName', label: 'Last Name' },\n  //     { field: 'email', label: 'Email' },\n  //     { field: 'role', label: 'Role' },\n  //     { field: 'createdAt', label: 'Created Date' },\n  //   ],\n  // };\n\n\n\n\n\n  // Use server-side paginated results directly\n  // Client-side filtering removed to avoid conflicts with server-side pagination\n  // TODO: Move all filtering to server-side for proper search across all users\n  const filteredUsers = users;\n\n  // Filter handlers - temporarily disabled\n  // const handleAddFilter = (filter: FilterValue) => {\n  //   setFilters((prev) => [...prev.filter((f) => f.field !== filter.field), filter]);\n  // };\n\n  // const handleRemoveFilter = (field: string) => {\n  //   setFilters((prev) => prev.filter((f) => f.field !== field));\n  // };\n\n  // const handleFilterUpdate = (field: string, filter: FilterValue) => {\n  //   setFilters((prev) => prev.map((f) => (f.field === field ? filter : f)));\n  // };\n\n  const handleClearFilters = () => {\n    setSearchInput('');\n    setSearch('');\n    setRoleFilter('');\n    setStatusFilter('');\n    setOrganizationFilter('');\n    setOrphanFilter('');\n  };\n\n  // Clear orphan filter when organization is selected\n  useEffect(() => {\n    if (organizationFilter) {\n      setOrphanFilter('');\n    }\n  }, [organizationFilter]);\n\n  // Delete orphan users mutation (admin only)\n  const deleteOrphanUsersMutation = useMutation({\n    mutationFn: async () => {\n      console.log('🗑️ [FRONTEND] Delete orphans mutation started');\n      console.log('🔍 [FRONTEND] Current user:', currentUser?.email, 'role:', currentUser?.role);\n      \n      const response = await fetch('/api/users/orphans', {\n        method: 'DELETE',\n      });\n      \n      console.log('📡 [FRONTEND] API response status:', response.status, response.statusText);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        console.error('❌ [FRONTEND] API Error response:', error);\n        throw new Error(error.error || 'Failed to delete orphan users');\n      }\n      \n      const result = await response.json();\n      console.log('✅ [FRONTEND] API Success response:', result);\n      return result;\n    },\n    onSuccess: (data) => {\n      console.log('🎉 [FRONTEND] Delete orphans mutation succeeded:', data);\n      toast({\n        title: 'Success',\n        description: data.message || `Deleted ${data.deletedCount} orphan users`,\n      });\n      \n      console.log('🔄 [FRONTEND] Refreshing users list...');\n      // Refresh the users list\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      setShowDeleteOrphansDialog(false);\n    },\n    onError: (error) => {\n      console.error('💥 [FRONTEND] Delete orphans mutation failed:', error);\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to delete orphan users',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Handle delete orphan users\n  const handleDeleteOrphanUsers = () => {\n    console.log('🖱️ [FRONTEND] Delete orphans button clicked');\n    console.log('👤 [FRONTEND] Triggering delete for user:', currentUser?.email);\n    deleteOrphanUsersMutation.mutate();\n  };\n\n  // const handleToggleSort = (field: string) => {\n  //   if (sort?.field === field) {\n  //     setSort({ ...sort, direction: sort.direction === 'asc' ? 'desc' : 'asc' });\n  //   } else {\n  //     setSort({ field, direction: 'asc' });\n  //   }\n  // };\n\n  // Calculate stats using server-side pagination data\n  const totalUsers = paginationInfo?.total || 0;\n  const filteredTotal = filteredUsers.length;\n  \n  // Calculate stats based on current page results when filters are applied\n  const hasActiveFilters = roleFilter || statusFilter || organizationFilter || orphanFilter;\n  \n  // If filters are applied, show stats for current visible users, otherwise show total stats\n  const displayedActiveUsers = hasActiveFilters \n    ? users?.filter((user: User) => user.isActive).length || 0\n    : totalUsers > 0 ? Math.floor(totalUsers * 0.85) : 0; // Estimate 85% active when no filters\n    \n  const displayedAdminUsers = hasActiveFilters\n    ? users?.filter((user: User) => user.role === 'admin').length || 0  \n    : totalUsers > 0 ? Math.floor(totalUsers * 0.02) : 0; // Estimate 2% admin when no filters\n    \n  const displayedTotalUsers = hasActiveFilters ? `~${users.length}` : totalUsers;\n\n  // Use server-side pagination calculations\n  const totalPages = paginationInfo?.totalPages || 1;\n  const hasNext = paginationInfo?.hasNext || false;\n  const hasPrev = paginationInfo?.hasPrev || false;\n  \n  // For display, use filteredUsers (which may be less than the page size if filters are applied)\n  const currentUsers = filteredUsers;\n\n  if (usersError) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('userManagement')} subtitle={t('manageAllUsers')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <Card>\n            <CardContent className='p-6'>\n              <p className='text-red-600'>{t('anErrorOccurred')}</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('userManagement')} subtitle={t('manageAllUsers')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n        {/* Quick Stats Cards */}\n        <div className='grid grid-cols-1 md:grid-cols-3 gap-6'>\n          <Card>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <CardTitle className='text-sm font-medium text-gray-600'>{t('totalUsers')}</CardTitle>\n              <Users className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <div className='text-2xl font-bold'>{displayedTotalUsers}</div>\n              <p className='text-xs text-muted-foreground'>{hasActiveFilters ? t('filtered') || 'Filtered' : t('total')}</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <CardTitle className='text-sm font-medium text-gray-600'>{t('activeUsers')}</CardTitle>\n              <UserPlus className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <div className='text-2xl font-bold'>{displayedActiveUsers}</div>\n              <p className='text-xs text-muted-foreground'>{hasActiveFilters ? t('onThisPage') || 'On this page' : t('active')}</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <CardTitle className='text-sm font-medium text-gray-600'>{t('admin')}</CardTitle>\n              <Shield className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <div className='text-2xl font-bold'>{displayedAdminUsers}</div>\n              <p className='text-xs text-muted-foreground'>{hasActiveFilters ? t('onThisPage') || 'On this page' : t('role')}</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main User Management Tabs */}\n        <Tabs defaultValue='users' className='space-y-6'>\n          <div className='flex items-center justify-between'>\n            <TabsList>\n              <TabsTrigger value='users' className='flex items-center gap-2'>\n                <Users className='h-4 w-4' />\n                {t('users')}\n              </TabsTrigger>\n              <TabsTrigger value='invitations' className='flex items-center gap-2'>\n                <Mail className='h-4 w-4' />\n                {t('invitations')}\n              </TabsTrigger>\n            </TabsList>\n\n            <div className=\"flex gap-2\">\n              <Button onClick={() => setShowInviteDialog(true)}>\n                <UserPlus className='h-4 w-4 mr-2' />\n                {t('inviteUser')}\n              </Button>\n              \n              {/* Admin-only: Delete Orphan Users button */}\n              {currentUser?.role === 'admin' && (\n                <Button \n                  variant=\"destructive\" \n                  onClick={() => setShowDeleteOrphansDialog(true)}\n                  data-testid=\"button-delete-orphans\"\n                >\n                  <Trash2 className='h-4 w-4 mr-2' />\n                  Delete Orphan Users\n                </Button>\n              )}\n            </div>\n          </div>\n\n          <TabsContent value='users' className='space-y-6'>\n            <Card>\n              <CardContent className='p-6'>\n                {usersLoading ? (\n                  <p>{t('loadingUsers') || 'Loading users...'}</p>\n                ) : (\n                  <div className='space-y-4'>\n                    {/* Simple Search and Filters */}\n                    <div className='flex flex-col sm:flex-row gap-4 mb-4 p-4 bg-gray-50 rounded-lg'>\n                      {/* Search */}\n                      <div className='flex-1'>\n                        <Input\n                          placeholder={t('searchUsers')}\n                          value={searchInput}\n                          onChange={(e) => setSearchInput(e.target.value)}\n                          className='w-full'\n                        />\n                      </div>\n\n                      {/* Role Filter */}\n                      <select\n                        value={roleFilter}\n                        onChange={(e) => setRoleFilter(e.target.value)}\n                        className='px-3 py-2 border border-gray-300 rounded-md'\n                      >\n                        {filterOptions?.roles?.map((role) => (\n                          <option key={role.value} value={role.value}>\n                            {role.label}\n                          </option>\n                        )) || []}\n                      </select>\n\n                      {/* Status Filter */}\n                      <select\n                        value={statusFilter}\n                        onChange={(e) => setStatusFilter(e.target.value)}\n                        className='px-3 py-2 border border-gray-300 rounded-md'\n                      >\n                        {filterOptions?.statuses?.map((status) => (\n                          <option key={status.value} value={status.value}>\n                            {status.label}\n                          </option>\n                        )) || []}\n                      </select>\n\n                      {/* Organization Filter */}\n                      {filterOptions?.organizations && filterOptions.organizations.length > 0 && (\n                        <select\n                          value={organizationFilter}\n                          onChange={(e) => setOrganizationFilter(e.target.value)}\n                          className='px-3 py-2 border border-gray-300 rounded-md'\n                        >\n                          {filterOptions.organizations.map((org) => (\n                            <option key={org.value} value={org.value}>\n                              {org.label}\n                            </option>\n                          ))}\n                        </select>\n                      )}\n\n                      {/* Orphan User Filter - Admin Only, Hidden when organization is selected */}\n                      {filterOptions?.orphanOptions && filterOptions.orphanOptions.length > 0 && !organizationFilter && (\n                        <select\n                          value={orphanFilter}\n                          onChange={(e) => setOrphanFilter(e.target.value)}\n                          className='px-3 py-2 border border-gray-300 rounded-md'\n                        >\n                          {filterOptions.orphanOptions.map((option) => (\n                            <option key={option.value} value={option.value}>\n                              {option.label}\n                            </option>\n                          ))}\n                        </select>\n                      )}\n                      \n                      {/* Show explanation when orphan filter is disabled */}\n                      {organizationFilter && filterOptions?.orphanOptions && filterOptions.orphanOptions.length > 0 && (\n                        <div className=\"text-sm text-gray-500 italic px-3 py-2 border border-gray-200 rounded-md bg-gray-100\">\n                          Orphan filter unavailable (organization selected)\n                        </div>\n                      )}\n\n                      {/* Clear Filters */}\n                      {(searchInput || roleFilter || statusFilter || organizationFilter || orphanFilter) && (\n                        <Button variant='outline' onClick={handleClearFilters}>\n                          {t('clearFilters')}\n                        </Button>\n                      )}\n                    </div>\n\n                    <h3 className='text-lg font-semibold'>\n                      {t('users')} ({filteredTotal} of {totalUsers} {t('users').toLowerCase()})\n                    </h3>\n\n                    {/* User Table - Completely Rebuilt */}\n                    <UserAssignmentsTable \n                      users={currentUsers} \n                      isLoading={usersLoading}\n                      onEditUser={openEditDialog}\n                      onEditOrganizations={setEditingUserOrganizations}\n                      onEditResidences={setEditingUserResidences}\n                      onDeleteUser={openDeleteDialog}\n                      canEditOrganizations={canEditOrganizations}\n                      canEditResidences={canEditResidences}\n                      canDeleteUsers={canDeleteUsers}\n                    />\n\n                    {/* Server-side Pagination */}\n                    {totalPages > 1 && (\n                      <div className='flex justify-between items-center mt-4'>\n                        <div className='text-sm text-gray-600'>\n                          Page {currentPage} of {totalPages} - Showing {users.length} {t('users').toLowerCase()} ({totalUsers} total)\n                        </div>\n                        <div className='flex gap-2'>\n                          <Button\n                            variant='outline'\n                            size='sm'\n                            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n                            disabled={!hasPrev || usersLoading}\n                          >\n                            {t('previous') || 'Previous'}\n                          </Button>\n                          <span className='px-3 py-1 text-sm'>\n                            {t('page') || 'Page'} {currentPage} {t('of') || 'of'} {totalPages}\n                          </span>\n                          <Button\n                            variant='outline'\n                            size='sm'\n                            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\n                            disabled={!hasNext || usersLoading}\n                          >\n                            {t('next') || 'Next'}\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value='invitations' className='space-y-6'>\n            <InvitationManagement />\n          </TabsContent>\n        </Tabs>\n\n        {/* Comprehensive Invite Dialog */}\n        <SendInvitationDialog\n          open={showInviteDialog}\n          onOpenChange={setShowInviteDialog}\n          onSuccess={() => {\n            // Refresh users list after successful invitation\n            queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n          }}\n        />\n\n        {/* Edit User Dialog */}\n        <Dialog open={!!editingUser} onOpenChange={(open) => !open && setEditingUser(null)}>\n          <DialogContent className='sm:max-w-[800px] max-h-[90vh] overflow-y-auto'>\n            <DialogHeader>\n              <DialogTitle>{t('editUserTitle')}</DialogTitle>\n              <DialogDescription>{t('editUserDescription')}</DialogDescription>\n            </DialogHeader>\n\n            <Tabs defaultValue='basic' className='w-full'>\n              <TabsList className={`grid w-full ${canEditOrganizations && canEditResidences ? 'grid-cols-4' : canEditOrganizations || canEditResidences ? 'grid-cols-3' : 'grid-cols-2'}`}>\n                <TabsTrigger value='basic'>{t('basicInfo') || 'Basic Info'}</TabsTrigger>\n                {canEditOrganizations && <TabsTrigger value='organizations'>{t('organizations')}</TabsTrigger>}\n                <TabsTrigger value='buildings'>{t('buildings') || 'Buildings'}</TabsTrigger>\n                {canEditResidences && <TabsTrigger value='residences'>{t('residences') || 'Residences'}</TabsTrigger>}\n              </TabsList>\n\n              <TabsContent value='basic' className='space-y-4'>\n                <Form {...editForm}>\n                  <form onSubmit={editForm.handleSubmit(handleEditUser)} className='space-y-4'>\n                    <div className='grid grid-cols-2 gap-4'>\n                      <FormField\n                        control={editForm.control}\n                        name='firstName'\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>{t('firstName')}</FormLabel>\n                            <FormControl>\n                              <Input {...field} data-testid='input-edit-firstName' />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={editForm.control}\n                        name='lastName'\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>{t('lastName')}</FormLabel>\n                            <FormControl>\n                              <Input {...field} data-testid='input-edit-lastName' />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <FormField\n                      control={editForm.control}\n                      name='email'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('email')}</FormLabel>\n                          <FormControl>\n                            <Input {...field} type='email' data-testid='input-edit-email' />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={editForm.control}\n                      name='role'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('role')}</FormLabel>\n                          <Select onValueChange={field.onChange} value={field.value}>\n                            <FormControl>\n                              <SelectTrigger data-testid='select-edit-role'>\n                                <SelectValue placeholder={t('selectRole')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              {getAvailableRoles?.map((role) => (\n                                <SelectItem key={role.value} value={role.value}>\n                                  {role.label}\n                                </SelectItem>\n                              )) || []}\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={editForm.control}\n                      name='isActive'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('accountStatus')}</FormLabel>\n                          <Select\n                            onValueChange={(value) => field.onChange(value === 'true')}\n                            defaultValue={field.value.toString()}\n                          >\n                            <FormControl>\n                              <SelectTrigger data-testid='select-edit-status'>\n                                <SelectValue placeholder={t('selectStatus') || 'Select status'} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value='true'>{t('statusActive')}</SelectItem>\n                              <SelectItem value='false'>{t('statusInactive')}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <DialogFooter>\n                      <Button\n                        type='button'\n                        variant='outline'\n                        onClick={() => setEditingUser(null)}\n                        data-testid='button-cancel-edit'\n                      >\n                        {t('cancel')}\n                      </Button>\n                      <Button\n                        type='submit'\n                        disabled={editUserMutation.isPending}\n                        data-testid='button-save-edit'\n                      >\n                        {editUserMutation.isPending ? (t('saving') || 'Saving...') : t('saveChanges')}\n                      </Button>\n                    </DialogFooter>\n                  </form>\n                </Form>\n              </TabsContent>\n\n              {canEditOrganizations && (\n                <TabsContent value='organizations' className='space-y-4'>\n                  <UserOrganizationsTab \n                    user={editingUser ? findUserWithAssignments(editingUser.id) : null}\n                    organizations={organizations}\n                    onSave={(organizationIds) => {\n                      if (editingUser) {\n                        editOrganizationsMutation.mutate({\n                          userId: editingUser.id,\n                          organizationIds\n                        });\n                      }\n                    }}\n                    isLoading={editOrganizationsMutation.isPending}\n                  />\n                </TabsContent>\n              )}\n\n              <TabsContent value='buildings' className='space-y-4'>\n                <UserBuildingsTab \n                  user={editingUser ? findUserWithAssignments(editingUser.id) : null}\n                  buildings={buildings}\n                  onSave={(buildingIds) => {\n                    if (editingUser) {\n                      editBuildingsMutation.mutate({\n                        userId: editingUser.id,\n                        buildingIds\n                      });\n                    }\n                  }}\n                  isLoading={editBuildingsMutation.isPending}\n                />\n              </TabsContent>\n\n              {canEditResidences && (\n                <TabsContent value='residences' className='space-y-4'>\n                  <UserResidencesTab \n                    user={editingUser ? findUserWithAssignments(editingUser.id) : null}\n                    residences={residences}\n                    onSave={(residenceAssignments) => {\n                      if (editingUser) {\n                        editResidencesMutation.mutate({\n                          userId: editingUser.id,\n                          residenceAssignments\n                        });\n                      }\n                    }}\n                    isLoading={editResidencesMutation.isPending}\n                  />\n                </TabsContent>\n              )}\n            </Tabs>\n          </DialogContent>\n        </Dialog>\n\n\n        {/* Delete Orphan Users Confirmation Dialog */}\n        <AlertDialog open={showDeleteOrphansDialog} onOpenChange={setShowDeleteOrphansDialog}>\n          <AlertDialogContent className='sm:max-w-[500px]'>\n            <AlertDialogHeader>\n              <AlertDialogTitle className='text-red-600'>Delete All Orphan Users</AlertDialogTitle>\n              <AlertDialogDescription>\n                This will permanently mark all orphan users (users with no organization or residence assignments) as inactive.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n\n            <div className='bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800 mb-4'>\n              <p className='text-red-700 dark:text-red-300 text-sm'>\n                <strong>Warning:</strong> This action will:\n              </p>\n              <ul className='text-red-700 dark:text-red-300 text-sm mt-2 list-disc list-inside'>\n                <li>Mark all orphan users as inactive (they will be hidden from the interface)</li>\n                <li>Preserve their data for audit purposes but remove access</li>\n                <li>Only affect users with no organization or residence assignments</li>\n                <li>Cannot be undone through the interface</li>\n              </ul>\n            </div>\n\n            <AlertDialogFooter>\n              <Button\n                variant='outline'\n                onClick={() => setShowDeleteOrphansDialog(false)}\n                disabled={deleteOrphanUsersMutation.isPending}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='destructive'\n                onClick={handleDeleteOrphanUsers}\n                disabled={deleteOrphanUsersMutation.isPending}\n                data-testid=\"button-confirm-delete-orphans\"\n              >\n                {deleteOrphanUsersMutation.isPending ? 'Deleting...' : 'Delete Orphan Users'}\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n\n        {/* Delete User Confirmation Dialog */}\n        <AlertDialog open={!!deletingUser} onOpenChange={(open) => !open && setDeletingUser(null)}>\n          <AlertDialogContent className='sm:max-w-[500px]'>\n            <AlertDialogHeader>\n              <AlertDialogTitle className='text-red-600'>{t('deleteUserTitle')}</AlertDialogTitle>\n              <AlertDialogDescription>\n                {t('deleteUserDescription').replace('and all associated data', `${deletingUser?.firstName} ${deletingUser?.lastName} and all associated data`)}\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n\n            <div className='bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800 mb-4'>\n              <p className='text-red-700 dark:text-red-300 text-sm'>\n                <strong>{t('warning') || 'Warning'}:</strong> {t('deleteUserDataWarning') || 'This will delete all user data including'}:\n              </p>\n              <ul className='text-red-700 dark:text-red-300 text-sm mt-2 list-disc list-inside'>\n                <li>{t('profileInfoAccess') || 'Profile information and account access'}</li>\n                <li>{t('orgResidenceAssignments') || 'Organization and residence assignments'}</li>\n                <li>{t('billsDocsMaintenance') || 'Bills, documents, and maintenance requests'}</li>\n                <li>{t('notificationsActivity') || 'Notifications and activity history'}</li>\n              </ul>\n            </div>\n\n            <Form {...deleteForm}>\n              <form onSubmit={deleteForm.handleSubmit(handleDeleteUser)} className='space-y-4'>\n                <FormField\n                  control={deleteForm.control}\n                  name='confirmEmail'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        {t('confirmEmailLabel')}:{' '}\n                        <span className='font-mono text-sm'>{deletingUser?.email}</span>\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type='email'\n                          placeholder={deletingUser?.email}\n                          data-testid='input-confirm-delete-email'\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={deleteForm.control}\n                  name='reason'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('reasonOptional')}</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          placeholder={t('enterReasonDeletion') || 'Enter reason for deletion...'}\n                          data-testid='input-delete-reason'\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <AlertDialogFooter>\n                  <Button\n                    type='button'\n                    variant='outline'\n                    onClick={() => setDeletingUser(null)}\n                    disabled={deleteUserMutation.isPending}\n                    data-testid='button-cancel-delete'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    type='submit'\n                    variant='destructive'\n                    disabled={deleteUserMutation.isPending}\n                    data-testid='button-confirm-delete'\n                  >\n                    {deleteUserMutation.isPending ? 'Deleting...' : 'Delete Account'}\n                  </Button>\n                </AlertDialogFooter>\n              </form>\n            </Form>\n          </AlertDialogContent>\n        </AlertDialog>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"version":3}