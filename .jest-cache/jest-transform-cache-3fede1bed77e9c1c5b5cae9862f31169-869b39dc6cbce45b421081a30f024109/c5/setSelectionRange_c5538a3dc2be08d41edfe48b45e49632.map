{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/selection/setSelectionRange.js","mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACjD,IAAI,iBAAiB,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACzE,IAAI,SAAS,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAC1D,IAAI,YAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAEhD;;;;GAIG,CAAC,SAAS,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,WAAW;IAC7D,IAAI,mBAAmB,CAAC;IACxB,IAAI,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;QACrC,OAAO,YAAY,CAAC,YAAY,CAAC;YAC7B,SAAS,EAAE,OAAO;YAClB,YAAY;YACZ,WAAW;SACd,CAAC,CAAC;IACP,CAAC;IACD,0BAA0B,CAAC,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,mBAAmB,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,mBAAmB,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;QACzN,OAAO,YAAY,CAAC,YAAY,CAAC;YAC7B,SAAS,EAAE,OAAO,CAAC,UAAU;YAC7B,YAAY;YACZ,WAAW;SACd,CAAC,CAAC;IACP,CAAC;IACD,0BAA0B,CAAC,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;AACjH,CAAC;AAED,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/selection/setSelectionRange.js"],"sourcesContent":["'use strict';\n\nrequire('../../utils/dataTransfer/Clipboard.js');\nvar isContentEditable = require('../../utils/edit/isContentEditable.js');\nvar selection = require('../../utils/focus/selection.js');\nvar setSelection = require('./setSelection.js');\n\n/**\n * Backward-compatible selection.\n *\n * Handles input elements and contenteditable if it only contains a single text node.\n */ function setSelectionRange(element, anchorOffset, focusOffset) {\n    var _element_firstChild;\n    if (selection.hasOwnSelection(element)) {\n        return setSelection.setSelection({\n            focusNode: element,\n            anchorOffset,\n            focusOffset\n        });\n    }\n    /* istanbul ignore else */ if (isContentEditable.isContentEditable(element) && ((_element_firstChild = element.firstChild) === null || _element_firstChild === undefined ? undefined : _element_firstChild.nodeType) === 3) {\n        return setSelection.setSelection({\n            focusNode: element.firstChild,\n            anchorOffset,\n            focusOffset\n        });\n    }\n    /* istanbul ignore next */ throw new Error('Not implemented. The result of this interaction is unreliable.');\n}\n\nexports.setSelectionRange = setSelectionRange;\n"],"version":3}