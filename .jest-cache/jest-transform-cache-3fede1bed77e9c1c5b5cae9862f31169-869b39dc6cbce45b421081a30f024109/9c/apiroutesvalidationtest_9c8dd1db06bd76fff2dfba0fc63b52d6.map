{"file":"/home/runner/workspace/tests/integration/api-routes-validation.test.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/integration/api-routes-validation.test.ts"],"sourcesContent":["/**\n * API Routes Validation Tests\n * Simple tests to ensure API route definitions are valid and error-free\n */\n\nimport { describe, it, expect } from '@jest/globals';\n\ndescribe('API Routes Validation', () => {\n  describe('Route File Validation', () => {\n    it('should validate organizations route structure', async () => {\n      // Test that the organizations routes file can be imported\n      expect(async () => {\n        const { registerOrganizationRoutes } = await import('../../server/api/organizations');\n        expect(typeof registerOrganizationRoutes).toBe('function');\n      }).not.toThrow();\n    });\n\n    it('should validate users route structure', async () => {\n      expect(async () => {\n        const { registerUserRoutes } = await import('../../server/api/users');\n        expect(typeof registerUserRoutes).toBe('function');\n      }).not.toThrow();\n    });\n\n    it('should validate buildings route structure', async () => {\n      expect(async () => {\n        const { registerBuildingRoutes } = await import('../../server/api/buildings');\n        expect(typeof registerBuildingRoutes).toBe('function');\n      }).not.toThrow();\n    });\n\n    it('should validate documents route structure', async () => {\n      expect(async () => {\n        const { registerDocumentRoutes } = await import('../../server/api/documents');\n        expect(typeof registerDocumentRoutes).toBe('function');\n      }).not.toThrow();\n    });\n\n    it('should validate demands route structure', async () => {\n      expect(async () => {\n        const { registerDemandRoutes } = await import('../../server/api/demands');\n        expect(typeof registerDemandRoutes).toBe('function');\n      }).not.toThrow();\n    });\n  });\n\n  describe('Schema Validation', () => {\n    it('should validate organization schema exports', async () => {\n      const schema = await import('../../shared/schema');\n      expect(schema.organizations).toBeDefined();\n      expect(schema.insertOrganizationSchema).toBeDefined();\n    });\n\n    it('should validate user schema exports', async () => {\n      const schema = await import('../../shared/schema');\n      expect(schema.users).toBeDefined();\n      expect(schema.insertUserSchema).toBeDefined();\n    });\n\n    it('should validate building schema exports', async () => {\n      const schema = await import('../../shared/schema');\n      expect(schema.buildings).toBeDefined();\n      expect(schema.insertBuildingSchema).toBeDefined();\n    });\n\n    it('should validate residence schema exports', async () => {\n      const schema = await import('../../shared/schema');\n      expect(schema.residences).toBeDefined();\n      expect(schema.insertResidenceSchema).toBeDefined();\n    });\n\n    it('should validate document schema exports', async () => {\n      const schema = await import('../../shared/schema');\n      expect(schema.documents).toBeDefined();\n      expect(schema.insertDocumentSchema).toBeDefined();\n    });\n\n    it('should validate demand schema exports', async () => {\n      const schema = await import('../../shared/schema');\n      expect(schema.demands).toBeDefined();\n      expect(schema.insertDemandSchema).toBeDefined();\n    });\n  });\n\n  describe('Database Schema Consistency', () => {\n    it('should ensure all schemas are properly typed', async () => {\n      const schema = await import('../../shared/schema');\n      \n      // Test that key schemas exist and are functions/objects\n      expect(typeof schema.organizations).toBe('object');\n      expect(typeof schema.users).toBe('object');\n      expect(typeof schema.buildings).toBe('object');\n      expect(typeof schema.residences).toBe('object');\n      expect(typeof schema.documents).toBe('object');\n      expect(typeof schema.demands).toBe('object');\n    });\n\n    it('should validate storage interface compatibility', async () => {\n      const { storage } = await import('../../server/storage');\n      \n      // Test that storage interface is properly defined\n      expect(typeof storage).toBe('object');\n      expect(typeof storage.getOrganizations).toBe('function');\n      expect(typeof storage.getUserByEmail).toBe('function');\n      expect(typeof storage.getBuildings).toBe('function');\n    });\n  });\n\n  describe('RBAC Integration', () => {\n    it('should validate RBAC middleware functions exist', async () => {\n      const rbac = await import('../../server/rbac');\n      expect(typeof rbac.requireOrganizationAccess).toBe('function');\n      expect(typeof rbac.requireBuildingAccess).toBe('function');\n      expect(typeof rbac.requireResidenceAccess).toBe('function');\n    });\n\n    it('should validate AuthenticatedUser interface structure', async () => {\n      // Test that the RBAC module can be imported without errors\n      const rbac = await import('../../server/rbac');\n      expect(rbac).toBeDefined();\n    });\n  });\n});"],"version":3}