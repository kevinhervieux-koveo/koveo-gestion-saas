5c4db861cc763e8818774197b2b11476
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HamburgerMenu = HamburgerMenu;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const button_1 = require("@/components/ui/button");
const wouter_1 = require("wouter");
const use_auth_1 = require("@/hooks/use-auth");
const use_language_1 = require("@/hooks/use-language");
const lucide_react_1 = require("lucide-react");
/**
 * Hamburger menu component for mobile navigation.
 */
function HamburgerMenu({ className = '' }) {
    const [isOpen, setIsOpen] = (0, react_1.useState)(false);
    const [isLoggingOut, setIsLoggingOut] = (0, react_1.useState)(false);
    const [, setLocation] = (0, wouter_1.useLocation)();
    const { user, logout } = (0, use_auth_1.useAuth)();
    const { t, language, toggleLanguage } = (0, use_language_1.useLanguage)();
    const toggleMenu = () => setIsOpen(!isOpen);
    const closeMenu = () => setIsOpen(false);
    // Close menu when clicking outside or on navigation
    (0, react_1.useEffect)(() => {
        if (isOpen) {
            document.body.style.overflow = 'hidden';
            // Add document click listener to close menu when clicking outside
            const handleDocumentClick = (event) => {
                const target = event.target;
                const menuPanel = document.querySelector('[data-testid="menu-panel"]');
                const hamburgerButton = document.querySelector('[data-testid="hamburger-button"]');
                // Don't close if clicking on the hamburger button or inside the menu panel
                if (hamburgerButton?.contains(target) ||
                    menuPanel?.contains(target)) {
                    return;
                }
                // Close menu for any other clicks
                closeMenu();
            };
            // Add listener with a small delay to avoid immediate closure
            const timeoutId = setTimeout(() => {
                document.addEventListener('click', handleDocumentClick);
            }, 100);
            return () => {
                clearTimeout(timeoutId);
                document.removeEventListener('click', handleDocumentClick);
            };
        }
        else {
            document.body.style.overflow = '';
        }
        return () => {
            document.body.style.overflow = '';
        };
    }, [isOpen]);
    const handleNavigation = (path) => {
        setLocation(path);
        closeMenu();
    };
    const handleLogout = async () => {
        try {
            setIsLoggingOut(true);
            await logout();
            closeMenu();
        }
        finally {
            setIsLoggingOut(false);
        }
    };
    // Navigation items for public pages
    const publicNavItems = [
        { icon: lucide_react_1.Home, label: t('home'), path: '/', testId: 'nav-home' },
        { icon: lucide_react_1.Wrench, label: t('features'), path: '/features', testId: 'nav-features' },
        { icon: lucide_react_1.DollarSign, label: t('pricing'), path: '/pricing', testId: 'nav-pricing' },
        { icon: lucide_react_1.Shield, label: t('security'), path: '/security', testId: 'nav-security' },
        { icon: lucide_react_1.BookOpen, label: t('ourStory'), path: '/story', testId: 'nav-story' },
        { icon: lucide_react_1.FileText, label: t('privacyPolicy'), path: '/privacy-policy', testId: 'nav-privacy' },
        { icon: lucide_react_1.Scale, label: t('termsOfService'), path: '/terms-of-service', testId: 'nav-terms' },
    ];
    return ((0, jsx_runtime_1.jsxs)("div", { className: `relative ${className}`, children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'icon', onClick: toggleMenu, className: 'relative z-50', "data-testid": 'hamburger-button', "aria-label": isOpen ? t('closeMenu') : t('openMenu'), children: isOpen ? (0, jsx_runtime_1.jsx)(lucide_react_1.X, { className: 'h-6 w-6' }) : (0, jsx_runtime_1.jsx)(lucide_react_1.Menu, { className: 'h-6 w-6' }) }), isOpen && ((0, jsx_runtime_1.jsx)("div", { className: 'fixed inset-0', style: { zIndex: 999 }, onClick: closeMenu, "data-testid": 'menu-overlay' })), (0, jsx_runtime_1.jsx)("div", { className: `fixed top-0 right-0 h-full w-80 max-w-[80vw] shadow-2xl transform transition-transform duration-300 ease-in-out ${isOpen ? 'translate-x-0' : 'translate-x-full'}`, style: {
                    backgroundColor: '#f9fafb',
                    borderLeft: '1px solid #e5e7eb',
                    zIndex: '1000',
                    position: 'fixed',
                }, "data-testid": 'menu-panel', children: (0, jsx_runtime_1.jsxs)("div", { className: 'p-6 h-full flex flex-col bg-gray-50', style: {
                        backgroundColor: '#f9fafb !important',
                        width: '100%',
                        height: '100vh',
                        position: 'relative',
                        zIndex: '1001',
                    }, children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between mb-8', children: [(0, jsx_runtime_1.jsx)("h2", { className: 'text-xl font-semibold', children: "Menu" }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'icon', onClick: closeMenu, className: 'h-8 w-8', "data-testid": 'menu-close-button', children: (0, jsx_runtime_1.jsx)(lucide_react_1.X, { className: 'h-4 w-4' }) })] }), (0, jsx_runtime_1.jsx)("nav", { className: 'flex-1 bg-gray-50', style: { backgroundColor: '#f9fafb !important' }, children: (0, jsx_runtime_1.jsx)("ul", { className: 'space-y-2', children: publicNavItems.map((item) => {
                                    const IconComponent = item.icon;
                                    return ((0, jsx_runtime_1.jsx)("li", { children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'ghost', className: 'w-full justify-start h-12 bg-transparent hover:bg-gray-100', onClick: () => handleNavigation(item.path), "data-testid": item.testId, children: [(0, jsx_runtime_1.jsx)(IconComponent, { className: 'mr-3 h-5 w-5' }), item.label] }) }, item.path));
                                }) }) }), !user && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-auto border-t border-gray-300 pt-4 space-y-3 bg-gray-50', style: { backgroundColor: '#f9fafb !important' }, children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-center space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Globe, { className: 'h-4 w-4 text-gray-500' }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'sm', className: 'text-sm', onClick: () => {
                                                toggleLanguage();
                                                closeMenu();
                                            }, "data-testid": 'language-toggle', children: language === 'en' ? 'FranÃ§ais' : 'English' })] }), (0, jsx_runtime_1.jsx)("div", { className: 'space-y-2', children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'default', className: 'w-full', onClick: () => handleNavigation('/login'), "data-testid": 'nav-login', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.UserPlus, { className: 'mr-2 h-4 w-4' }), t('login')] }) })] })), user && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-auto border-t pt-4', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center mb-4 p-3 bg-gray-100 rounded-lg', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.User, { className: 'h-8 w-8 text-gray-500 mr-3' }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("p", { className: 'font-medium text-sm', children: [user.firstName, " ", user.lastName] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-gray-500', children: user.email })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-1', children: [(0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'ghost', className: 'w-full justify-start h-10', onClick: () => handleNavigation('/settings/settings'), "data-testid": 'nav-profile', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Settings, { className: 'mr-3 h-4 w-4' }), "Profile Settings"] }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', className: 'w-full justify-start h-10 text-red-600 hover:text-red-700 hover:bg-red-50', onClick: handleLogout, disabled: isLoggingOut, "data-testid": 'nav-logout', children: isLoggingOut ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'mr-3 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent' }), "Logging out..."] })) : ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.LogOut, { className: 'mr-3 h-4 w-4' }), "Logout"] })) })] })] }))] }) })] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9jbGllbnQvc3JjL2NvbXBvbmVudHMvdWkvaGFtYnVyZ2VyLW1lbnUudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0JBLHNDQXdQQzs7QUF2UkQsK0NBQW1EO0FBQ25ELG1EQUFnRDtBQUNoRCxtQ0FBcUM7QUFDckMsK0NBQTJDO0FBQzNDLHVEQUFtRDtBQUNuRCwrQ0FpQnNCO0FBTXRCOztHQUVHO0FBQ0gsU0FBZ0IsYUFBYSxDQUFDLEVBQUUsU0FBUyxHQUFHLEVBQUUsRUFBc0I7SUFDbEUsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUMsTUFBTSxDQUFDLFlBQVksRUFBRSxlQUFlLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEQsTUFBTSxDQUFDLEVBQUUsV0FBVyxDQUFDLEdBQUcsSUFBQSxvQkFBVyxHQUFFLENBQUM7SUFDdEMsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFBLGtCQUFPLEdBQUUsQ0FBQztJQUNuQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsR0FBRyxJQUFBLDBCQUFXLEdBQUUsQ0FBQztJQUV0RCxNQUFNLFVBQVUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QyxNQUFNLFNBQVMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFekMsb0RBQW9EO0lBQ3BELElBQUEsaUJBQVMsRUFBQyxHQUFHLEVBQUU7UUFDYixJQUFJLE1BQU0sRUFBRSxDQUFDO1lBQ1gsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUV4QyxrRUFBa0U7WUFDbEUsTUFBTSxtQkFBbUIsR0FBRyxD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LEVBQUUsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsb0JBQW9CLENBQUMsaUJBQ3pDLGFBQWEsYUFFekIsdUJBQUMsdUJBQVEsSUFBQyxTQUFTLEVBQUMsY0FBYyxHQUFHLHdCQUU5QixFQUVULHVCQUFDLGVBQU0sSUFDTCxPQUFPLEVBQUMsT0FBTyxFQUNmLFNBQVMsRUFBQywyRUFBMkUsRUFDckYsT0FBTyxFQUFFLFlBQVksRUFDckIsUUFBUSxFQUFFLFlBQVksaUJBQ1YsWUFBWSxZQUV2QixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQ2QsNkRBQ0UsZ0NBQUssU0FBUyxFQUFDLHFGQUFxRixHQUFHLHNCQUV0RyxDQUNKLENBQUMsQ0FBQyxDQUFDLENBQ0YsNkRBQ0UsdUJBQUMscUJBQU0sSUFBQyxTQUFTLEVBQUMsY0FBYyxHQUFHLGNBRWxDLENBQ0osR0FDTSxJQUNMLElBQ0YsQ0FDUCxJQUNHLEdBQ0YsSUFDRixDQUNQLENBQUM7QUFDSixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvY2xpZW50L3NyYy9jb21wb25lbnRzL3VpL2hhbWJ1cmdlci1tZW51LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9idXR0b24nO1xuaW1wb3J0IHsgdXNlTG9jYXRpb24gfSBmcm9tICd3b3V0ZXInO1xuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gJ0AvaG9va3MvdXNlLWF1dGgnO1xuaW1wb3J0IHsgdXNlTGFuZ3VhZ2UgfSBmcm9tICdAL2hvb2tzL3VzZS1sYW5ndWFnZSc7XG5pbXBvcnQge1xuICBYLFxuICBNZW51LFxuICBIb21lLFxuICBXcmVuY2gsXG4gIFNoaWVsZCxcbiAgQm9va09wZW4sXG4gIEZpbGVUZXh0LFxuICBTY2FsZSxcbiAgQnVpbGRpbmcyLFxuICBVc2VycyxcbiAgTG9nT3V0LFxuICBVc2VyLFxuICBTZXR0aW5ncyxcbiAgR2xvYmUsXG4gIFVzZXJQbHVzLFxuICBEb2xsYXJTaWduLFxufSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG5pbnRlcmZhY2UgSGFtYnVyZ2VyTWVudVByb3BzIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEhhbWJ1cmdlciBtZW51IGNvbXBvbmVudCBmb3IgbW9iaWxlIG5hdmlnYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBIYW1idXJnZXJNZW51KHsgY2xhc3NOYW1lID0gJycgfTogSGFtYnVyZ2VyTWVudVByb3BzKSB7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtpc0xvZ2dpbmdPdXQsIHNldElzTG9nZ2luZ091dF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFssIHNldExvY2F0aW9uXSA9IHVzZUxvY2F0aW9uKCk7XG4gIGNvbnN0IHsgdXNlciwgbG9nb3V0IH0gPSB1c2VBdXRoKCk7XG4gIGNvbnN0IHsgdCwgbGFuZ3VhZ2UsIHRvZ2dsZUxhbmd1YWdlIH0gPSB1c2VMYW5ndWFnZSgpO1xuXG4gIGNvbnN0IHRvZ2dsZU1lbnUgPSAoKSA9PiBzZXRJc09wZW4oIWlzT3Blbik7XG4gIGNvbnN0IGNsb3NlTWVudSA9ICgpID0+IHNldElzT3BlbihmYWxzZSk7XG5cbiAgLy8gQ2xvc2UgbWVudSB3aGVuIGNsaWNraW5nIG91dHNpZGUgb3Igb24gbmF2aWdhdGlvblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc09wZW4pIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgIFxuICAgICAgLy8gQWRkIGRvY3VtZW50IGNsaWNrIGxpc3RlbmVyIHRvIGNsb3NlIG1lbnUgd2hlbiBjbGlja2luZyBvdXRzaWRlXG4gICAgICBjb25zdCBoYW5kbGVEb2N1bWVudENsaWNrID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldCBhcyBFbGVtZW50O1xuICAgICAgICBjb25zdCBtZW51UGFuZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS10ZXN0aWQ9XCJtZW51LXBhbmVsXCJdJyk7XG4gICAgICAgIGNvbnN0IGhhbWJ1cmdlckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRlc3RpZD1cImhhbWJ1cmdlci1idXR0b25cIl0nKTtcbiAgICAgICAgXG4gICAgICAgIC8vIERvbid0IGNsb3NlIGlmIGNsaWNraW5nIG9uIHRoZSBoYW1idXJnZXIgYnV0dG9uIG9yIGluc2lkZSB0aGUgbWVudSBwYW5lbFxuICAgICAgICBpZiAoXG4gICAgICAgICAgaGFtYnVyZ2VyQnV0dG9uPy5jb250YWlucyh0YXJnZXQpIHx8IFxuICAgICAgICAgIG1lbnVQYW5lbD8uY29udGFpbnModGFyZ2V0KVxuICAgICAgICApIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIENsb3NlIG1lbnUgZm9yIGFueSBvdGhlciBjbGlja3NcbiAgICAgICAgY2xvc2VNZW51KCk7XG4gICAgICB9O1xuICAgICAgXG4gICAgICAvLyBBZGQgbGlzdGVuZXIgd2l0aCBhIHNtYWxsIGRlbGF5IHRvIGF2b2lkIGltbWVkaWF0ZSBjbG9zdXJlXG4gICAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVEb2N1bWVudENsaWNrKTtcbiAgICAgIH0sIDEwMCk7XG4gICAgICBcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZURvY3VtZW50Q2xpY2spO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICcnO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJyc7XG4gICAgfTtcbiAgfSwgW2lzT3Blbl0pO1xuXG4gIGNvbnN0IGhhbmRsZU5hdmlnYXRpb24gPSAocGF0aDogc3RyaW5nKSA9PiB7XG4gICAgc2V0TG9jYXRpb24ocGF0aCk7XG4gICAgY2xvc2VNZW51KCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlTG9nb3V0ID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRJc0xvZ2dpbmdPdXQodHJ1ZSk7XG4gICAgICBhd2FpdCBsb2dvdXQoKTtcbiAgICAgIGNsb3NlTWVudSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0xvZ2dpbmdPdXQoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBOYXZpZ2F0aW9uIGl0ZW1zIGZvciBwdWJsaWMgcGFnZXNcbiAgY29uc3QgcHVibGljTmF2SXRlbXMgPSBbXG4gICAgeyBpY29uOiBIb21lLCBsYWJlbDogdCgnaG9tZScpLCBwYXRoOiAnLycsIHRlc3RJZDogJ25hdi1ob21lJyB9LFxuICAgIHsgaWNvbjogV3JlbmNoLCBsYWJlbDogdCgnZmVhdHVyZXMnKSwgcGF0aDogJy9mZWF0dXJlcycsIHRlc3RJZDogJ25hdi1mZWF0dXJlcycgfSxcbiAgICB7IGljb246IERvbGxhclNpZ24sIGxhYmVsOiB0KCdwcmljaW5nJyksIHBhdGg6ICcvcHJpY2luZycsIHRlc3RJZDogJ25hdi1wcmljaW5nJyB9LFxuICAgIHsgaWNvbjogU2hpZWxkLCBsYWJlbDogdCgnc2VjdXJpdHknKSwgcGF0aDogJy9zZWN1cml0eScsIHRlc3RJZDogJ25hdi1zZWN1cml0eScgfSxcbiAgICB7IGljb246IEJvb2tPcGVuLCBsYWJlbDogdCgnb3VyU3RvcnknKSwgcGF0aDogJy9zdG9yeScsIHRlc3RJZDogJ25hdi1zdG9yeScgfSxcbiAgICB7IGljb246IEZpbGVUZXh0LCBsYWJlbDogdCgncHJpdmFjeVBvbGljeScpLCBwYXRoOiAnL3ByaXZhY3ktcG9saWN5JywgdGVzdElkOiAnbmF2LXByaXZhY3knIH0sXG4gICAgeyBpY29uOiBTY2FsZSwgbGFiZWw6IHQoJ3Rlcm1zT2ZTZXJ2aWNlJyksIHBhdGg6ICcvdGVybXMtb2Ytc2VydmljZScsIHRlc3RJZDogJ25hdi10ZXJtcycgfSxcbiAgXTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgcmVsYXRpdmUgJHtjbGFzc05hbWV9YH0+XG4gICAgICB7LyogSGFtYnVyZ2VyIEJ1dHRvbiAqL31cbiAgICAgIDxCdXR0b25cbiAgICAgICAgdmFyaWFudD0nZ2hvc3QnXG4gICAgICAgIHNpemU9J2ljb24nXG4gICAgICAgIG9uQ2xpY2s9e3RvZ2dsZU1lbnV9XG4gICAgICAgIGNsYXNzTmFtZT0ncmVsYXRpdmUgei01MCdcbiAgICAgICAgZGF0YS10ZXN0aWQ9J2hhbWJ1cmdlci1idXR0b24nXG4gICAgICAgIGFyaWEtbGFiZWw9e2lzT3BlbiA/IHQoJ2Nsb3NlTWVudScpIDogdCgnb3Blbk1lbnUnKX1cbiAgICAgID5cbiAgICAgICAge2lzT3BlbiA/IDxYIGNsYXNzTmFtZT0naC02IHctNicgLz4gOiA8TWVudSBjbGFzc05hbWU9J2gtNiB3LTYnIC8+fVxuICAgICAgPC9CdXR0b24+XG5cbiAgICAgIHsvKiBJbnZpc2libGUgT3ZlcmxheSBmb3IgQ2xpY2sgT3V0c2lkZSAqL31cbiAgICAgIHtpc09wZW4gJiYgKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPSdmaXhlZCBpbnNldC0wJ1xuICAgICAgICAgIHN0eWxlPXt7IHpJbmRleDogOTk5IH19XG4gICAgICAgICAgb25DbGljaz17Y2xvc2VNZW51fVxuICAgICAgICAgIGRhdGEtdGVzdGlkPSdtZW51LW92ZXJsYXknXG4gICAgICAgIC8+XG4gICAgICApfVxuXG4gICAgICB7LyogTWVudSBQYW5lbCAqL31cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtgZml4ZWQgdG9wLTAgcmlnaHQtMCBoLWZ1bGwgdy04MCBtYXgtdy1bODB2d10gc2hhZG93LTJ4bCB0cmFuc2Zvcm0gdHJhbnNpdGlvbi10cmFuc2Zvcm0gZHVyYXRpb24tMzAwIGVhc2UtaW4tb3V0ICR7XG4gICAgICAgICAgaXNPcGVuID8gJ3RyYW5zbGF0ZS14LTAnIDogJ3RyYW5zbGF0ZS14LWZ1bGwnXG4gICAgICAgIH1gfVxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmOWZhZmInLFxuICAgICAgICAgIGJvcmRlckxlZnQ6ICcxcHggc29saWQgI2U1ZTdlYicsXG4gICAgICAgICAgekluZGV4OiAnMTAwMCcsXG4gICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgIH19XG4gICAgICAgIGRhdGEtdGVzdGlkPSdtZW51LXBhbmVsJ1xuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPSdwLTYgaC1mdWxsIGZsZXggZmxleC1jb2wgYmctZ3JheS01MCdcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2Y5ZmFmYiAhaW1wb3J0YW50JyxcbiAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICBoZWlnaHQ6ICcxMDB2aCcsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICAgIHpJbmRleDogJzEwMDEnLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7LyogSGVhZGVyICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItOCc+XG4gICAgICAgICAgICA8aDIgY2xhc3NOYW1lPSd0ZXh0LXhsIGZvbnQtc2VtaWJvbGQnPk1lbnU8L2gyPlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB2YXJpYW50PSdnaG9zdCdcbiAgICAgICAgICAgICAgc2l6ZT0naWNvbidcbiAgICAgICAgICAgICAgb25DbGljaz17Y2xvc2VNZW51fVxuICAgICAgICAgICAgICBjbGFzc05hbWU9J2gtOCB3LTgnXG4gICAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdtZW51LWNsb3NlLWJ1dHRvbidcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPFggY2xhc3NOYW1lPSdoLTQgdy00JyAvPlxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7LyogTmF2aWdhdGlvbiBJdGVtcyAqL31cbiAgICAgICAgICA8bmF2IGNsYXNzTmFtZT0nZmxleC0xIGJnLWdyYXktNTAnIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyNmOWZhZmIgIWltcG9ydGFudCcgfX0+XG4gICAgICAgICAgICA8dWwgY2xhc3NOYW1lPSdzcGFjZS15LTInPlxuICAgICAgICAgICAgICB7cHVibGljTmF2SXRlbXMubWFwKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgSWNvbkNvbXBvbmVudCA9IGl0ZW0uaWNvbjtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGxpIGtleT17aXRlbS5wYXRofT5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9J2dob3N0J1xuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ndy1mdWxsIGp1c3RpZnktc3RhcnQgaC0xMiBiZy10cmFuc3BhcmVudCBob3ZlcjpiZy1ncmF5LTEwMCdcbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVOYXZpZ2F0aW9uKGl0ZW0ucGF0aCl9XG4gICAgICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9e2l0ZW0udGVzdElkfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPEljb25Db21wb25lbnQgY2xhc3NOYW1lPSdtci0zIGgtNSB3LTUnIC8+XG4gICAgICAgICAgICAgICAgICAgICAge2l0ZW0ubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9uYXY+XG5cbiAgICAgICAgICB7LyogTGFuZ3VhZ2UgYW5kIEF1dGggU2VjdGlvbiAqL31cbiAgICAgICAgICB7IXVzZXIgJiYgKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzc05hbWU9J210LWF1dG8gYm9yZGVyLXQgYm9yZGVyLWdyYXktMzAwIHB0LTQgc3BhY2UteS0zIGJnLWdyYXktNTAnXG4gICAgICAgICAgICAgIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyNmOWZhZmIgIWltcG9ydGFudCcgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgey8qIExhbmd1YWdlIFN3aXRjaGVyICovfVxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgc3BhY2UteC0yJz5cbiAgICAgICAgICAgICAgICA8R2xvYmUgY2xhc3NOYW1lPSdoLTQgdy00IHRleHQtZ3JheS01MDAnIC8+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgdmFyaWFudD0nZ2hvc3QnXG4gICAgICAgICAgICAgICAgICBzaXplPSdzbSdcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ndGV4dC1zbSdcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlTGFuZ3VhZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VNZW51KCk7XG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9J2xhbmd1YWdlLXRvZ2dsZSdcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7bGFuZ3VhZ2UgPT09ICdlbicgPyAnRnJhbsOnYWlzJyA6ICdFbmdsaXNoJ31cbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgey8qIEF1dGhlbnRpY2F0aW9uIEJ1dHRvbnMgKi99XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzcGFjZS15LTInPlxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9J2RlZmF1bHQnXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3ctZnVsbCdcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZU5hdmlnYXRpb24oJy9sb2dpbicpfVxuICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9J25hdi1sb2dpbidcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8VXNlclBsdXMgY2xhc3NOYW1lPSdtci0yIGgtNCB3LTQnIC8+XG4gICAgICAgICAgICAgICAgICB7dCgnbG9naW4nKX1cbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAgey8qIFVzZXIgU2VjdGlvbiAqL31cbiAgICAgICAgICB7dXNlciAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXQtYXV0byBib3JkZXItdCBwdC00Jz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIG1iLTQgcC0zIGJnLWdyYXktMTAwIHJvdW5kZWQtbGcnPlxuICAgICAgICAgICAgICAgIDxVc2VyIGNsYXNzTmFtZT0naC04IHctOCB0ZXh0LWdyYXktNTAwIG1yLTMnIC8+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0nZm9udC1tZWRpdW0gdGV4dC1zbSc+XG4gICAgICAgICAgICAgICAgICAgIHt1c2VyLmZpcnN0TmFtZX0ge3VzZXIubGFzdE5hbWV9XG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J3RleHQteHMgdGV4dC1ncmF5LTUwMCc+e3VzZXIuZW1haWx9PC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc3BhY2UteS0xJz5cbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICB2YXJpYW50PSdnaG9zdCdcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ndy1mdWxsIGp1c3RpZnktc3RhcnQgaC0xMCdcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZU5hdmlnYXRpb24oJy9zZXR0aW5ncy9zZXR0aW5ncycpfVxuICAgICAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9J25hdi1wcm9maWxlJ1xuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxTZXR0aW5ncyBjbGFzc05hbWU9J21yLTMgaC00IHctNCcgLz5cbiAgICAgICAgICAgICAgICAgIFByb2ZpbGUgU2V0dGluZ3NcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cblxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9J2dob3N0J1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd3LWZ1bGwganVzdGlmeS1zdGFydCBoLTEwIHRleHQtcmVkLTYwMCBob3Zlcjp0ZXh0LXJlZC03MDAgaG92ZXI6YmctcmVkLTUwJ1xuICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlTG9nb3V0fVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzTG9nZ2luZ091dH1cbiAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPSduYXYtbG9nb3V0J1xuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHtpc0xvZ2dpbmdPdXQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21yLTMgaC00IHctNCBhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGJvcmRlci0yIGJvcmRlci1jdXJyZW50IGJvcmRlci10LXRyYW5zcGFyZW50JyAvPlxuICAgICAgICAgICAgICAgICAgICAgIExvZ2dpbmcgb3V0Li4uXG4gICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICA8TG9nT3V0IGNsYXNzTmFtZT0nbXItMyBoLTQgdy00JyAvPlxuICAgICAgICAgICAgICAgICAgICAgIExvZ291dFxuICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==