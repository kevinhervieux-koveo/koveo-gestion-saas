{"file":"/home/runner/workspace/client/src/pages/manager/bills.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/manager/bills.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport {\n  FileText,\n  Plus,\n  Upload,\n  Filter,\n  Calendar,\n  Building as BuildingIcon,\n  Tag,\n  ChevronDown,\n} from 'lucide-react';\nimport { BuildingSelectionGrid } from '@/components/BuildingSelectionGrid';\nimport ModularBillForm from '@/components/bill-management/ModularBillForm';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { cn } from '@/lib/utils';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { Building, Bill } from '@shared/schema';\n\nconst BILL_CATEGORIES = [\n  'insurance',\n  'maintenance',\n  'salary',\n  'utilities',\n  'cleaning',\n  'security',\n  'landscaping',\n  'professional_services',\n  'administration',\n  'repairs',\n  'supplies',\n  'taxes',\n  'other',\n] as const;\n\nconst MONTHS = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\n\n// Category labels using translation keys\nconst getCategoryLabel = (category: string, t: (key: string) => string) => {\n  const categoryTranslationKeys: Record<string, string> = {\n    insurance: 'insurance',\n    maintenance: 'maintenance', \n    salary: 'salary',\n    utilities: 'utilities',\n    cleaning: 'cleaning',\n    security: 'security',\n    landscaping: 'landscaping',\n    professional_services: 'professionalServices',\n    administration: 'administration',\n    repairs: 'repairs',\n    supplies: 'supplies',\n    taxes: 'taxes',\n    other: 'other'\n  };\n  return t(categoryTranslationKeys[category] || category);\n};\n\n/**\n *\n */\ninterface BillFilters {\n  buildingId: string;\n  category: string;\n  year: string;\n  months: string[];\n}\n\n/**\n *\n */\nexport default function /**\n * Bills function.\n */ /**\n * Bills function.\n */\n\nBills() {\n  const { t } = useLanguage();\n  const [filters, setFilters] = useState<BillFilters>({\n    buildingId: '',\n    category: '',\n    year: new Date().getFullYear().toString(),\n    months: [],\n  });\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\n  const [showAllYears, setShowAllYears] = useState(false);\n  const queryClient = useQueryClient();\n\n  // Fetch buildings for filter dropdown\n  const {\n    data: buildings = [],\n    isLoading: buildingsLoading,\n    error: buildingsError,\n  } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/buildings');\n      return await response.json();\n    },\n  });\n\n  // Fetch bills based on filters\n  const { data: bills = [], isLoading } = useQuery<Bill[]>({\n    queryKey: ['/api/bills', filters],\n    queryFn: async () => {\n      const params = new URLSearchParams(); /**\n       * If function.\n       * @param filters.buildingId - Filters.buildingId parameter.\n       */ /**\n       * If function.\n       * @param filters.buildingId - Filters.buildingId parameter.\n       */\n\n      if (filters.buildingId) {\n        params.set('buildingId', filters.buildingId);\n      } /**\n       * If function.\n       * @param filters.category && filters.category !== 'all' - filters.category && filters.category !== 'all' parameter.\n       */ /**\n       * If function.\n       * @param filters.category && filters.category !== 'all' - filters.category && filters.category !== 'all' parameter.\n       */\n\n      if (filters.category && filters.category !== 'all') {\n        params.set('category', filters.category);\n      } /**\n       * If function.\n       * @param filters.year - Filters.year parameter.\n       */ /**\n       * If function.\n       * @param filters.year - Filters.year parameter.\n       */\n\n      if (filters.year) {\n        params.set('year', filters.year);\n      } /**\n       * If function.\n       * @param filters.months.length > 0 - filters.months.length > 0 parameter.\n       */ /**\n       * If function.\n       * @param filters.months.length > 0 - filters.months.length > 0 parameter.\n       */\n\n      if (filters.months.length > 0) {\n        params.set('months', filters.months.join(','));\n      }\n\n      const url = `/api/bills${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await fetch(url, { credentials: 'include' }); /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */ /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch bills: ${response.statusText}`);\n      }\n\n      return response.json();\n    },\n  });\n\n  // Group bills by category\n  const billsByCategory = bills.reduce((acc: Record<string, Bill[]>, bill: Bill) => {\n    const category = bill.category || 'other'; /**\n     * If function.\n     * @param !acc[category] - !acc[category] parameter.\n     */ /**\n     * If function.\n     * @param !acc[category] - !acc[category] parameter.\n     */\n\n    if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(bill);\n    return acc;\n  }, {});\n\n  const handleFilterChange = (key: keyof BillFilters, value: string | string[]) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleMonthToggle = (monthValue: string) => {\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.includes(monthValue)\n        ? prev.months.filter((m) => m !== monthValue)\n        : [...prev.months, monthValue],\n    }));\n  };\n\n  const handleAllMonthsToggle = () => {\n    const allMonthValues = MONTHS.map((m) => m.value);\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.length === allMonthValues.length ? [] : allMonthValues,\n    }));\n  };\n\n  const getMonthsDisplayText = () => {\n    /**\n     * If function.\n     * @param filters.months.length === 0 - filters.months.length === 0 parameter.\n     */ /**\n     * If function.\n     * @param filters.months.length === 0 - filters.months.length === 0 parameter.\n     */\n\n    if (filters.months.length === 0) {\n      return 'All months';\n    } /**\n     * If function.\n     * @param filters.months.length === MONTHS.length - filters.months.length === MONTHS.length parameter.\n     */ /**\n     * If function.\n     * @param filters.months.length === MONTHS.length - filters.months.length === MONTHS.length parameter.\n     */\n\n    if (filters.months.length === MONTHS.length) {\n      return 'All months';\n    } /**\n     * If function.\n     * @param filters.months.length === 1 - filters.months.length === 1 parameter.\n     */ /**\n     * If function.\n     * @param filters.months.length === 1 - filters.months.length === 1 parameter.\n     */\n\n    if (filters.months.length === 1) {\n      const month = MONTHS.find((m) => m.value === filters.months[0]);\n      return month?.label || 'All months';\n    }\n    return `${filters.months.length} months`;\n  };\n\n  // Get building construction year for minimum year calculation\n  const selectedBuilding = Array.isArray(buildings)\n    ? buildings.find((b) => b.id === filters.buildingId)\n    : undefined;\n  const buildingConstructionYear = selectedBuilding?.yearBuilt || new Date().getFullYear();\n  const currentYear = new Date().getFullYear();\n\n  // Generate year options based on show all years state\n  const getYearOptions = () => {\n    /**\n     * If function.\n     * @param showAllYears - ShowAllYears parameter.\n     */ /**\n     * If function.\n     * @param showAllYears - ShowAllYears parameter.\n     */\n\n    if (showAllYears) {\n      // Show all years from building construction year to 25 years forward\n      const startYear = buildingConstructionYear;\n      const endYear = currentYear + 25;\n      const totalYears = endYear - startYear + 1;\n      return Array.from({ length: totalYears }, (_, i) => startYear + i);\n    } else {\n      // Show current year ±3 years\n      const startYear = currentYear - 3;\n      const endYear = currentYear + 3;\n      const totalYears = endYear - startYear + 1;\n      return Array.from({ length: totalYears }, (_, i) => startYear + i);\n    }\n  };\n\n  // Show loading state while buildings are loading\n  if (buildingsLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('billsManagement')} subtitle={t('billsSubtitle')} />\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4'></div>\n            <p className='text-gray-500'>{t('loadingBuildings')}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state if buildings failed to load\n  if (buildingsError) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('billsManagement')} subtitle={t('billsSubtitle')} />\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <p className='text-red-500 mb-4'>{t('failedToLoadBuildings')}</p>\n            <button\n              onClick={() => window.location.reload()}\n              className='px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700'\n            >\n              {t('retry')}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('billsManagement')} subtitle={t('billsSubtitle')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Filters Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <Filter className='w-5 h-5' />\n                {t('filters')}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className='grid grid-cols-1 md:grid-cols-5 gap-4'>\n                <div className='space-y-2'>\n                  <Label htmlFor='building-filter' className='flex items-center gap-2'>\n                    <BuildingIcon className='w-4 h-4' />\n                    {t('building')}\n                  </Label>\n                  <Select\n                    value={filters.buildingId}\n                    onValueChange={(value) => handleFilterChange('buildingId', value)}\n                  >\n                    <SelectTrigger id='building-filter'>\n                      <SelectValue placeholder={t('selectBuilding')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Array.isArray(buildings) &&\n                        buildings.map((building: Building) => (\n                          <SelectItem key={building.id} value={building.id}>\n                            {building.name}\n                          </SelectItem>\n                        ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label htmlFor='category-filter' className='flex items-center gap-2'>\n                    <Tag className='w-4 h-4' />\n                    {t('category')}\n                  </Label>\n                  <Select\n                    value={filters.category}\n                    onValueChange={(value) => handleFilterChange('category', value)}\n                  >\n                    <SelectTrigger id='category-filter'>\n                      <SelectValue placeholder={t('allCategories')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value='all'>{t('allCategories')}</SelectItem>\n                      {BILL_CATEGORIES.map((category) => (\n                        <SelectItem key={category} value={category}>\n                          {getCategoryLabel(category, t)}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label htmlFor='year-filter' className='flex items-center gap-2'>\n                    <Calendar className='w-4 h-4' />\n                    {t('year')}\n                  </Label>\n                  <div className='space-y-2'>\n                    <Select\n                      value={filters.year}\n                      onValueChange={(value) => handleFilterChange('year', value)}\n                    >\n                      <SelectTrigger id='year-filter'>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent className='max-h-[300px] overflow-y-auto'>\n                        {getYearOptions().map((year) => (\n                          <SelectItem key={year} value={year.toString()}>\n                            {year}\n                            {year === currentYear && (\n                              <span className='ml-2 text-xs text-blue-500'>(Current)</span>\n                            )}\n                          </SelectItem>\n                        ))}\n                        {!showAllYears && (\n                          <div className='border-t border-gray-200 mt-2 pt-2'>\n                            <Button\n                              variant='ghost'\n                              size='sm'\n                              className='w-full text-left justify-start text-xs'\n                              onClick={() => setShowAllYears(true)}\n                            >\n                              Show more years ({buildingConstructionYear} - {currentYear + 25})\n                            </Button>\n                          </div>\n                        )}\n                        {showAllYears && (\n                          <div className='border-t border-gray-200 mt-2 pt-2'>\n                            <Button\n                              variant='ghost'\n                              size='sm'\n                              className='w-full text-left justify-start text-xs'\n                              onClick={() => setShowAllYears(false)}\n                            >\n                              Show fewer years ({currentYear - 3} - {currentYear + 3})\n                            </Button>\n                          </div>\n                        )}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label className='flex items-center gap-2'>\n                    <Calendar className='w-4 h-4' />\n                    {t('months')}\n                  </Label>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant='outline'\n                        className={cn(\n                          'w-full justify-between',\n                          filters.months.length === 0 && 'text-muted-foreground'\n                        )}\n                      >\n                        {getMonthsDisplayText()}\n                        <ChevronDown className='ml-2 h-4 w-4 shrink-0 opacity-50' />\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className='w-64 p-0' align='start'>\n                      <div className='border-b p-3'>\n                        <div className='flex items-center space-x-2'>\n                          <Checkbox\n                            id='all-months'\n                            checked={filters.months.length === MONTHS.length}\n                            onCheckedChange={handleAllMonthsToggle}\n                          />\n                          <Label\n                            htmlFor='all-months'\n                            className='text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n                          >\n                            All Months\n                          </Label>\n                        </div>\n                      </div>\n                      <div className='grid grid-cols-2 gap-2 p-3'>\n                        {MONTHS.map((month) => (\n                          <div key={month.value} className='flex items-center space-x-2'>\n                            <Checkbox\n                              id={`month-${month.value}`}\n                              checked={filters.months.includes(month.value)}\n                              onCheckedChange={() => handleMonthToggle(month.value)}\n                            />\n                            <Label\n                              htmlFor={`month-${month.value}`}\n                              className='text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n                            >\n                              {month.label}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label className='invisible'>Actions</Label>\n                  <Dialog open={showCreateDialog} onOpenChange={setShowCreateDialog}>\n                    <DialogTrigger asChild>\n                      <Button className='w-full' disabled={!filters.buildingId}>\n                        {t('createBill')}\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className='max-w-4xl max-h-[90vh] overflow-y-auto'>\n                      <DialogHeader>\n                        <DialogTitle>{t('createNewBill')}</DialogTitle>\n                      </DialogHeader>\n                      <ModularBillForm\n                        mode=\"create\"\n                        buildingId={filters.buildingId}\n                        onCancel={() => setShowCreateDialog(false)}\n                        onSuccess={() => {\n                          setShowCreateDialog(false);\n                          queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n                        }}\n                      />\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Bills Display */}\n          {!filters.buildingId ? (\n            <BuildingSelectionGrid\n              buildings={Array.isArray(buildings) ? buildings : []}\n              onBuildingSelect={(buildingId) => handleFilterChange('buildingId', buildingId)}\n            />\n          ) : isLoading ? (\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <div className='animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4'></div>\n                <p className='text-gray-500'>{t('loadingBills')}</p>\n              </CardContent>\n            </Card>\n          ) : Object.keys(billsByCategory).length === 0 ? (\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <h3 className='text-lg font-semibold text-gray-600 mb-2'>{t('noBillsFound')}</h3>\n                <p className='text-gray-500 mb-4'>\n                  No bills found for the selected filters. Create your first bill to get started.\n                </p>\n                <Button onClick={() => setShowCreateDialog(true)}>\n                  Create First Bill\n                </Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className='space-y-6'>\n              {BILL_CATEGORIES.filter(\n                (category) =>\n                  (!filters.category || filters.category === category) &&\n                  billsByCategory[category]?.length > 0\n              ).map((category) => (\n                <BillCategorySection\n                  key={category}\n                  category={category}\n                  bills={billsByCategory[category] || []}\n                  onBillUpdate={() => queryClient.invalidateQueries({ queryKey: ['/api/bills'] })}\n                  t={t}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Component for displaying bills in a category\n/**\n *\n * @param root0\n * @param root0.category\n * @param root0.bills\n * @param root0.onBillUpdate\n */\n/**\n * BillCategorySection function.\n * @param root0\n * @param root0.category\n * @param root0.bills\n * @param root0.onBillUpdate\n * @returns Function result.\n */\nfunction BillCategorySection({\n  category,\n  bills,\n  onBillUpdate,\n  t,\n}: {\n  category: string;\n  bills: Bill[];\n  onBillUpdate: () => void;\n  t: (key: string) => string;\n}) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className='flex items-center justify-between'>\n          <div className='flex items-center gap-2'>\n            <Tag className='w-5 h-5' />\n            {getCategoryLabel(category, t)}\n            <Badge variant='secondary'>{bills.length}</Badge>\n          </div>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>\n          {bills.map((bill) => (\n            <BillCard key={bill.id} bill={bill} onUpdate={onBillUpdate} />\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Component for individual bill cards\n/**\n *\n * @param root0\n * @param root0.bill\n * @param root0.onUpdate\n */\n/**\n * BillCard function.\n * @param root0\n * @param root0.bill\n * @param root0.onUpdate\n * @returns Function result.\n */\nfunction BillCard({ bill, onUpdate }: { bill: Bill; onUpdate: () => void }) {\n  const { t } = useLanguage();\n  const [showDetailDialog, setShowDetailDialog] = useState(false);\n  const [showEditDialog, setShowEditDialog] = useState(false);\n\n  const statusColors = {\n    draft: 'bg-gray-100 text-gray-800',\n    sent: 'bg-blue-100 text-blue-800',\n    overdue: 'bg-red-100 text-red-800',\n    paid: 'bg-green-100 text-green-800',\n    cancelled: 'bg-gray-100 text-gray-800',\n  };\n\n  return (\n    <>\n      <Card\n        className='hover:shadow-md transition-shadow cursor-pointer'\n        onClick={() => setShowDetailDialog(true)}\n      >\n        <CardContent className='p-4'>\n          <div className='space-y-3'>\n            <div className='flex items-start justify-between'>\n              <div>\n                <h4 className='font-semibold text-sm'>{bill.title}</h4>\n                <p className='text-xs text-gray-500'>#{bill.billNumber}</p>\n              </div>\n              <Badge className={statusColors[bill.status as keyof typeof statusColors]}>\n                {bill.status}\n              </Badge>\n            </div>\n\n            {bill.description && (\n              <p className='text-sm text-gray-600 line-clamp-2'>{bill.description}</p>\n            )}\n\n            <div className='flex items-center justify-between text-sm'>\n              <span className='font-medium'>${Number(bill.totalAmount).toLocaleString()}</span>\n              <span className='text-gray-500'>{bill.paymentType}</span>\n            </div>\n\n            {bill.vendor && <p className='text-xs text-gray-500'>Vendor: {bill.vendor}</p>}\n\n            <div className='flex items-center gap-2 pt-2'>\n              {bill.filePath && (\n                <Badge variant='outline' className='text-xs'>\n                  <FileText className='w-3 h-3 mr-1' />\n                  Document\n                </Badge>\n              )}\n              {bill.isAiAnalyzed && (\n                <Badge variant='outline' className='text-xs'>\n                  AI Analyzed\n                </Badge>\n              )}\n              {bill.notes?.includes('Auto-generated from:') && (\n                <Badge variant='outline' className='text-xs'>\n                  Auto-Generated\n                </Badge>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Bill Detail Dialog */}\n      <Dialog open={showDetailDialog} onOpenChange={setShowDetailDialog}>\n        <DialogContent className='max-w-2xl max-h-[95vh] overflow-y-auto' aria-describedby=\"bill-details-description\">\n          <DialogHeader>\n            <DialogTitle>Bill Details</DialogTitle>\n          </DialogHeader>\n          <BillDetail\n            bill={bill}\n            onSuccess={() => {\n              setShowDetailDialog(false);\n              onUpdate();\n            }}\n            onCancel={() => setShowDetailDialog(false)}\n            onEditBill={() => {\n              setShowDetailDialog(false);\n              setShowEditDialog(true);\n            }}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Bill Edit Dialog */}\n      <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>\n        <DialogContent className='max-w-4xl max-h-[95vh] overflow-y-auto' aria-describedby=\"edit-bill-description\">\n          <ModularBillForm\n            mode=\"edit\"\n            bill={bill}\n            onSuccess={() => {\n              setShowEditDialog(false);\n              onUpdate();\n            }}\n            onCancel={() => setShowEditDialog(false)}\n            buildingId={bill.buildingId}\n          />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\n// Bill detail component\nfunction BillDetail({\n  bill,\n  onSuccess,\n  onCancel,\n  onEditBill,\n}: {\n  bill: Bill;\n  onSuccess: () => void;\n  onCancel: () => void;\n  onEditBill: () => void;\n}) {\n  const queryClient = useQueryClient();\n\n  // Fetch fresh bill data to ensure we have updated document information\n  const { data: freshBill, error: freshBillError, isLoading: freshBillLoading } = useQuery({\n    queryKey: ['/api/bills', bill.id],\n    queryFn: async () => {\n      const response = await fetch(`/api/bills/${bill.id}`, {\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch bill details');\n      }\n      return response.json();\n    },\n  });\n\n  // Use fresh bill data if available, fallback to props bill data\n  const currentBill = freshBill || bill;\n  \n  const [endDate, setEndDate] = useState(currentBill.endDate || '');\n\n  const updateBillMutation = useMutation({\n    mutationFn: async (updates: Partial<Bill>) => {\n      const response = await fetch(`/api/bills/${bill.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updates),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update bill');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      onSuccess();\n    },\n  });\n\n  const handleSetEndDate = () => {\n    if (endDate) {\n      updateBillMutation.mutate({ endDate });\n    }\n  };\n\n\n  return (\n    <div className='space-y-6'>\n      {/* Bill Information */}\n      <div className='grid grid-cols-2 gap-4'>\n        <div>\n          <Label className='text-sm font-medium'>Bill Number</Label>\n          <p className='text-sm text-gray-600'>{currentBill.billNumber}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Status</Label>\n          <p className='text-sm text-gray-600 capitalize'>{currentBill.status}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Category</Label>\n          <p className='text-sm text-gray-600 capitalize'>{currentBill.category}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Payment Type</Label>\n          <p className='text-sm text-gray-600 capitalize'>{currentBill.paymentType}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Total Amount</Label>\n          <p className='text-sm text-gray-600'>${Number(currentBill.totalAmount).toLocaleString()}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Start Date</Label>\n          <p className='text-sm text-gray-600'>{currentBill.startDate}</p>\n        </div>\n      </div>\n\n      {/* Title and Description */}\n      <div>\n        <Label className='text-sm font-medium'>Title</Label>\n        <p className='text-sm text-gray-600'>{currentBill.title}</p>\n      </div>\n\n      {currentBill.description && (\n        <div>\n          <Label className='text-sm font-medium'>Description</Label>\n          <p className='text-sm text-gray-600'>{currentBill.description}</p>\n        </div>\n      )}\n\n      {currentBill.vendor && (\n        <div>\n          <Label className='text-sm font-medium'>Vendor</Label>\n          <p className='text-sm text-gray-600'>{currentBill.vendor}</p>\n        </div>\n      )}\n\n      {currentBill.notes && (\n        <div>\n          <Label className='text-sm font-medium'>Notes</Label>\n          <p className='text-sm text-gray-600'>{currentBill.notes}</p>\n        </div>\n      )}\n\n      {/* End Date Management for Recurrent Bills */}\n      {currentBill.paymentType === 'recurrent' && (\n        <div className='border-t pt-4'>\n          <Label className='text-sm font-medium'>Recurrence End Date</Label>\n          <div className='flex items-center gap-2 mt-2'>\n            <Input\n              type='date'\n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n              className='w-48'\n            />\n            <Button onClick={handleSetEndDate} disabled={updateBillMutation.isPending} size='sm'>\n              {updateBillMutation.isPending ? 'Setting...' : 'Set End Date'}\n            </Button>\n          </div>\n          <p className='text-xs text-gray-500 mt-1'>\n            Setting an end date will stop auto-generation of future bills after this date.\n          </p>\n        </div>\n      )}\n\n      {/* Costs Breakdown */}\n      {currentBill.costs && currentBill.costs.length > 1 && (\n        <div>\n          <Label className='text-sm font-medium'>Payment Breakdown</Label>\n          <div className='space-y-1 mt-1'>\n            {currentBill.costs.map((cost, index) => (\n              <div key={index} className='flex justify-between text-sm'>\n                <span>Payment {index + 1}:</span>\n                <span>${Number(cost).toLocaleString()}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Document Section - Only show if document exists */}\n      {currentBill.filePath && (\n        <div className='border-t pt-4'>\n          <Label className='text-sm font-medium'>Uploaded Document</Label>\n          <div className='mt-2'>\n            <div className='flex items-center justify-between p-3 bg-gray-50 rounded-lg'>\n              <div className='flex items-center gap-2'>\n                <FileText className='w-4 h-4 text-blue-600' />\n                <span className='text-sm'>{currentBill.fileName}</span>\n                {currentBill.isAiAnalyzed && (\n                  <Badge variant='outline' className='text-xs'>\n                    AI Analyzed\n                  </Badge>\n                )}\n              </div>\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={() => {\n                  console.log('[DOWNLOAD] Starting download for bill:', currentBill.id);\n                  console.log('[DOWNLOAD] Document name:', currentBill.fileName);\n                  console.log('[DOWNLOAD] Document path:', currentBill.filePath);\n                  \n                  // Download the document\n                  const link = document.createElement('a');\n                  link.href = `/api/bills/${currentBill.id}/download-document`;\n                  link.download = currentBill.fileName || 'bill-document';\n                  document.body.appendChild(link);\n                  link.click();\n                  document.body.removeChild(link);\n                  \n                  console.log('[DOWNLOAD] Download link clicked');\n                }}\n                className='flex items-center gap-1'\n                data-testid={`button-download-document-${currentBill.id}`}\n              >\n                <FileText className='w-3 h-3' />\n                Download\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Mode Toggle */}\n      <div className='border-t pt-4'>\n        <div className='flex items-center justify-between'>\n          <Label className='text-sm font-medium'>Actions</Label>\n          <Button onClick={onEditBill} variant='outline' size='sm'>\n            Edit Bill\n          </Button>\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div className='flex justify-end gap-2 pt-4 border-t'>\n        <Button variant='outline' onClick={onCancel}>\n          Close\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"version":3}