{"file":"/home/runner/workspace/client/src/components/forms/residence-edit-form.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/forms/residence-edit-form.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { X, Plus } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  unitNumber: string;\n  floor: number;\n  squareFootage: string;\n  bedrooms: number;\n  bathrooms: string;\n  balcony: boolean;\n  parkingSpaceNumbers: string[];\n  storageSpaceNumbers: string[];\n  ownershipPercentage: string;\n  monthlyFees: string;\n  isActive: boolean;\n  building: {\n    id: string;\n    name: string;\n  };\n}\n\nconst residenceEditSchema = z.object({\n  unitNumber: z.string().min(1, 'Unit number is required and must be alphanumeric (example: 101A)'),\n  floor: z.coerce.number().min(0, 'Floor must be between 0 and 50 (example: 2)').max(50, 'Floor must be between 0 and 50 (example: 2)').optional(),\n  squareFootage: z.union([z.coerce.number().min(1, 'Square footage must be between 1 and 10,000 sq ft (example: 1200)').max(10000, 'Square footage must be between 1 and 10,000 sq ft (example: 1200)'), z.literal('')]).optional(),\n  bedrooms: z.coerce.number().min(0, 'Bedrooms must be between 0 and 10 (example: 2)').max(10, 'Bedrooms must be between 0 and 10 (example: 2)').optional(),\n  bathrooms: z.union([z.coerce.number().min(0, 'Bathrooms must be between 0 and 10 (example: 1.5)').max(10, 'Bathrooms must be between 0 and 10 (example: 1.5)'), z.literal('')]).optional(),\n  balcony: z.boolean(),\n  parkingSpaceNumbers: z.array(z.string()).optional(),\n  storageSpaceNumbers: z.array(z.string()).optional(),\n  ownershipPercentage: z.union([z.coerce.number().min(0, 'Ownership percentage must be between 0 and 100 (example: 25)').max(100, 'Ownership percentage must be between 0 and 100 (example: 25)'), z.literal('')]).optional(),\n  monthlyFees: z.union([z.coerce.number().min(0, 'Monthly fees must be a positive amount in CAD (example: 350.00)').max(99999, 'Monthly fees must be less than $99,999 CAD (example: 350.00)'), z.literal('')]).optional(),\n});\n\n/**\n *\n */\ntype ResidenceEditFormData = z.infer<typeof residenceEditSchema>;\n\n/**\n *\n */\ninterface ResidenceEditFormProps {\n  residence: Residence;\n  onSuccess: () => void;\n}\n\n/**\n *\n * @param root0\n * @param root0.residence\n * @param root0.onSuccess\n */\n/**\n * ResidenceEditForm function.\n * @param root0\n * @param root0.residence\n * @param root0.onSuccess\n * @returns Function result.\n */\nexport function ResidenceEditForm({ residence, onSuccess }: ResidenceEditFormProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [parkingSpaces, setParkingSpaces] = useState<string[]>(residence.parkingSpaceNumbers || []);\n  const [storageSpaces, setStorageSpaces] = useState<string[]>(residence.storageSpaceNumbers || []);\n  const [newParkingSpace, setNewParkingSpace] = useState('');\n  const [newStorageSpace, setNewStorageSpace] = useState('');\n\n  const form = useForm<ResidenceEditFormData>({\n    resolver: zodResolver(residenceEditSchema),\n    defaultValues: {\n      unitNumber: residence.unitNumber,\n      floor: residence.floor || 0,\n      squareFootage: residence.squareFootage ? Number(residence.squareFootage) : '',\n      bedrooms: residence.bedrooms || 0,\n      bathrooms: residence.bathrooms ? Number(residence.bathrooms) : '',\n      balcony: residence.balcony || false,\n      parkingSpaceNumbers: residence.parkingSpaceNumbers || [],\n      storageSpaceNumbers: residence.storageSpaceNumbers || [],\n      ownershipPercentage: residence.ownershipPercentage ? \n        (Number(residence.ownershipPercentage) < 1 ? Number(residence.ownershipPercentage) * 100 : Number(residence.ownershipPercentage)) : '',\n      monthlyFees: residence.monthlyFees ? Number(residence.monthlyFees) : '',\n    },\n  });\n\n  const updateResidenceMutation = useMutation({\n    mutationFn: async (_data: ResidenceEditFormData) => {\n      // Convert empty strings to null for optional numeric fields\n      const processedData = {\n        ..._data,\n        squareFootage: _data.squareFootage === '' ? null : _data.squareFootage,\n        bathrooms: _data.bathrooms === '' ? null : _data.bathrooms,\n        ownershipPercentage: _data.ownershipPercentage === '' ? null : Number(_data.ownershipPercentage),\n        monthlyFees: _data.monthlyFees === '' ? null : _data.monthlyFees,\n        parkingSpaceNumbers: parkingSpaces,\n        storageSpaceNumbers: storageSpaces,\n      };\n\n      const response = await fetch(`/api/residences/${residence.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(processedData),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to update residence: ${errorText}`);\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: 'Residence updated successfully',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/residences'] });\n      onSuccess();\n    },\n    onError: (_error: unknown) => {\n      toast({\n        title: 'Error',\n        description: (_error as Error)?.message || 'Failed to update residence',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onSubmit = (_data: ResidenceEditFormData) => {\n    updateResidenceMutation.mutate(_data);\n  };\n\n  const addParkingSpace = () => {\n    if (newParkingSpace.trim() && !parkingSpaces.includes(newParkingSpace.trim())) {\n      setParkingSpaces([...parkingSpaces, newParkingSpace.trim()]);\n      setNewParkingSpace('');\n    }\n  };\n\n  const removeParkingSpace = (index: number) => {\n    setParkingSpaces(parkingSpaces.filter((_, i) => i !== index));\n  };\n\n  const addStorageSpace = () => {\n    if (newStorageSpace.trim() && !storageSpaces.includes(newStorageSpace.trim())) {\n      setStorageSpaces([...storageSpaces, newStorageSpace.trim()]);\n      setNewStorageSpace('');\n    }\n  };\n\n  const removeStorageSpace = (index: number) => {\n    setStorageSpaces(storageSpaces.filter((_, i) => i !== index));\n  };\n\n  return (\n    <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n      {/* Basic Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Basic Information</CardTitle>\n        </CardHeader>\n        <CardContent className='space-y-4'>\n          <div className='grid grid-cols-2 gap-4'>\n            <div className='space-y-2'>\n              <Label htmlFor='unitNumber'>Unit Number</Label>\n              <Input id='unitNumber' {...form.register('unitNumber')} />\n              {form.formState.errors.unitNumber && (\n                <p className='text-sm text-red-500'>{form.formState.errors.unitNumber.message}</p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='floor'>Floor</Label>\n              <Input\n                id='floor'\n                type='number'\n                min='0'\n                {...form.register('floor', { valueAsNumber: true })}\n              />\n              {form.formState.errors.floor && (\n                <p className='text-sm text-red-500'>{form.formState.errors.floor.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div className='grid grid-cols-2 gap-4'>\n            <div className='space-y-2'>\n              <Label htmlFor='squareFootage'>Square Footage</Label>\n              <Input\n                id='squareFootage'\n                placeholder='e.g., 1200'\n                {...form.register('squareFootage')}\n              />\n              {form.formState.errors.squareFootage && (\n                <p className='text-sm text-red-500'>\n                  {form.formState.errors.squareFootage.message}\n                </p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='monthlyFees'>Monthly Fees ($)</Label>\n              <Input\n                id='monthlyFees'\n                placeholder='e.g., 350.00'\n                {...form.register('monthlyFees')}\n              />\n              {form.formState.errors.monthlyFees && (\n                <p className='text-sm text-red-500'>{form.formState.errors.monthlyFees.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div className='grid grid-cols-3 gap-4'>\n            <div className='space-y-2'>\n              <Label htmlFor='bedrooms'>Bedrooms</Label>\n              <Input\n                id='bedrooms'\n                type='number'\n                min='0'\n                {...form.register('bedrooms', { valueAsNumber: true })}\n              />\n              {form.formState.errors.bedrooms && (\n                <p className='text-sm text-red-500'>{form.formState.errors.bedrooms.message}</p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='bathrooms'>Bathrooms</Label>\n              <Input id='bathrooms' placeholder='e.g., 2.5' {...form.register('bathrooms')} />\n              {form.formState.errors.bathrooms && (\n                <p className='text-sm text-red-500'>{form.formState.errors.bathrooms.message}</p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='ownershipPercentage'>Ownership 0-100%</Label>\n              <Input\n                id='ownershipPercentage'\n                placeholder='e.g., 17'\n                {...form.register('ownershipPercentage')}\n              />\n              {form.formState.errors.ownershipPercentage && (\n                <p className='text-sm text-red-500'>\n                  {form.formState.errors.ownershipPercentage.message}\n                </p>\n              )}\n            </div>\n          </div>\n\n          <div className='flex items-center space-x-2'>\n            <Switch\n              id='balcony'\n              checked={form.watch('balcony')}\n              onCheckedChange={(checked) => form.setValue('balcony', checked)}\n            />\n            <Label htmlFor='balcony'>Has Balcony</Label>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Parking Spaces */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Parking Spaces</CardTitle>\n        </CardHeader>\n        <CardContent className='space-y-4'>\n          <div className='flex flex-wrap gap-2'>\n            {parkingSpaces.map((space, index) => (\n              <Badge key={index} variant='secondary' className='flex items-center gap-1'>\n                {space}\n                <X className='w-3 h-3 cursor-pointer' onClick={() => removeParkingSpace(index)} />\n              </Badge>\n            ))}\n          </div>\n\n          <div className='flex gap-2'>\n            <Input\n              placeholder='Add parking space number'\n              value={newParkingSpace}\n              onChange={(e) => setNewParkingSpace(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addParkingSpace())}\n            />\n            <Button type='button' onClick={addParkingSpace} size='sm'>\n              <Plus className='w-4 h-4' />\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Storage Spaces */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Storage Spaces</CardTitle>\n        </CardHeader>\n        <CardContent className='space-y-4'>\n          <div className='flex flex-wrap gap-2'>\n            {storageSpaces.map((space, index) => (\n              <Badge key={index} variant='secondary' className='flex items-center gap-1'>\n                {space}\n                <X className='w-3 h-3 cursor-pointer' onClick={() => removeStorageSpace(index)} />\n              </Badge>\n            ))}\n          </div>\n\n          <div className='flex gap-2'>\n            <Input\n              placeholder='Add storage space number'\n              value={newStorageSpace}\n              onChange={(e) => setNewStorageSpace(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addStorageSpace())}\n            />\n            <Button type='button' onClick={addStorageSpace} size='sm'>\n              <Plus className='w-4 h-4' />\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Submit Button */}\n      <div className='flex justify-end gap-2'>\n        <Button type='submit' disabled={updateResidenceMutation.isPending}>\n          {updateResidenceMutation.isPending ? 'Updating...' : 'Update Residence'}\n        </Button>\n      </div>\n    </form>\n  );\n}\n"],"version":3}