c165c4f6eb9c4b3f8d145432bd15f5c6
var r = require("@hookform/resolvers"), e = require("react-hook-form");
function n(r) { if (r && r.__esModule)
    return r; var e = Object.create(null); return r && Object.keys(r).forEach(function (n) { if ("default" !== n) {
    var o = Object.getOwnPropertyDescriptor(r, n);
    Object.defineProperty(e, n, o.get ? o : { enumerable: !0, get: function () { return r[n]; } });
} }), e.default = r, e; }
var o = /*#__PURE__*/ n(require("zod/v4/core"));
function t(r, e) { try {
    var n = r();
}
catch (r) {
    return e(r);
} return n && n.then ? n.then(void 0, e) : n; }
function s(r, n) { for (var o = {}; r.length;) {
    var t = r[0], s = t.code, i = t.message, a = t.path.join(".");
    if (!o[a])
        if ("unionErrors" in t) {
            var u = t.unionErrors[0].errors[0];
            o[a] = { message: u.message, type: u.code };
        }
        else
            o[a] = { message: i, type: s };
    if ("unionErrors" in t && t.unionErrors.forEach(function (e) { return e.errors.forEach(function (e) { return r.push(e); }); }), n) {
        var c = o[a].types, f = c && c[t.code];
        o[a] = e.appendErrors(a, n, o, s, f ? [].concat(f, t.message) : t.message);
    }
    r.shift();
} return o; }
function i(r, n) { for (var o = {}; r.length;) {
    var t = r[0], s = t.code, i = t.message, a = t.path.join(".");
    if (!o[a])
        if ("invalid_union" === t.code && t.errors.length > 0) {
            var u = t.errors[0][0];
            o[a] = { message: u.message, type: u.code };
        }
        else
            o[a] = { message: i, type: s };
    if ("invalid_union" === t.code && t.errors.forEach(function (e) { return e.forEach(function (e) { return r.push(e); }); }), n) {
        var c = o[a].types, f = c && c[t.code];
        o[a] = e.appendErrors(a, n, o, s, f ? [].concat(f, t.message) : t.message);
    }
    r.shift();
} return o; }
exports.zodResolver = function (e, n, a) { if (void 0 === a && (a = {}), function (r) { return "_def" in r && "object" == typeof r._def && "typeName" in r._def; }(e))
    return function (o, i, u) { try {
        return Promise.resolve(t(function () { return Promise.resolve(e["sync" === a.mode ? "parse" : "parseAsync"](o, n)).then(function (e) { return u.shouldUseNativeValidation && r.validateFieldsNatively({}, u), { errors: {}, values: a.raw ? Object.assign({}, o) : e }; }); }, function (e) { if (function (r) { return Array.isArray(null == r ? void 0 : r.issues); }(e))
            return { values: {}, errors: r.toNestErrors(s(e.errors, !u.shouldUseNativeValidation && "all" === u.criteriaMode), u) }; throw e; }));
    }
    catch (r) {
        return Promise.reject(r);
    } }; if (function (r) { return "_zod" in r && "object" == typeof r._zod; }(e))
    return function (s, u, c) { try {
        return Promise.resolve(t(function () { return Promise.resolve(("sync" === a.mode ? o.parse : o.parseAsync)(e, s, n)).then(function (e) { return c.shouldUseNativeValidation && r.validateFieldsNatively({}, c), { errors: {}, values: a.raw ? Object.assign({}, s) : e }; }); }, function (e) { if (function (r) { return r instanceof o.$ZodError; }(e))
            return { values: {}, errors: r.toNestErrors(i(e.issues, !c.shouldUseNativeValidation && "all" === c.criteriaMode), c) }; throw e; }));
    }
    catch (r) {
        return Promise.reject(r);
    } }; throw new Error("Invalid input: not a Zod schema"); };
//# sourceMappingURL=zod.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGhvb2tmb3JtL3Jlc29sdmVycy96b2QvZGlzdC96b2QuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxDQUFDLEdBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEVBQUMsQ0FBQyxHQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQUEsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFFLElBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxVQUFVO0lBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQSxJQUFJLENBQUMsR0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUEsT0FBTyxDQUFDLElBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBUyxDQUFDLElBQUUsSUFBRyxTQUFTLEtBQUcsQ0FBQyxFQUFDLENBQUM7SUFBQSxJQUFJLENBQUMsR0FBQyxNQUFNLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBQUEsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUEsRUFBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDLEVBQUMsR0FBRyxFQUFDLGNBQVcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLEVBQUMsQ0FBQyxDQUFBO0FBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLEdBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQSxDQUFBLENBQUM7QUFBQSxJQUFJLENBQUMsR0FBQyxhQUFhLENBQUEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0FBQUEsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsSUFBRSxJQUFHLENBQUM7SUFBQSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQTtBQUFBLENBQUM7QUFBQSxPQUFNLENBQUMsRUFBQyxDQUFDO0lBQUEsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFBQSxDQUFDLENBQUEsT0FBTyxDQUFDLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUEsQ0FBQztBQUFBLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLElBQUUsS0FBSSxJQUFJLENBQUMsR0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRSxDQUFDO0lBQUEsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUFBLElBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQUMsSUFBRyxhQUFhLElBQUcsQ0FBQyxFQUFDLENBQUM7WUFBQSxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUMsT0FBTyxFQUFDLElBQUksRUFBQyxDQUFDLENBQUMsSUFBSSxFQUFDLENBQUE7UUFBQSxDQUFDOztZQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxDQUFDO0lBQUEsSUFBRyxhQUFhLElBQUcsQ0FBQyxJQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFVBQVMsQ0FBQyxJQUFFLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBUyxDQUFDLElBQUUsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUEsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQztRQUFBLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQSxDQUFDLENBQUEsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUE7SUFBQSxDQUFDO0lBQUEsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFBO0FBQUEsQ0FBQyxDQUFBLE9BQU8sQ0FBQyxDQUFBLENBQUEsQ0FBQztBQUFBLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLElBQUUsS0FBSSxJQUFJLENBQUMsR0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRSxDQUFDO0lBQUEsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsT0FBTyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUFBLElBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQUMsSUFBRyxlQUFlLEtBQUcsQ0FBQyxDQUFDLElBQUksSUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUMsQ0FBQztZQUFBLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUFBO1FBQUEsQ0FBQzs7WUFBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLEVBQUMsQ0FBQztJQUFBLElBQUcsZUFBZSxLQUFHLENBQUMsQ0FBQyxJQUFJLElBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBUyxDQUFDLElBQUUsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVMsQ0FBQyxJQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFBLENBQUEsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUM7UUFBQSxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFDLENBQUMsR0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUEsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQUEsQ0FBQztJQUFBLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtBQUFBLENBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBQSxDQUFBLENBQUM7QUFBQSxPQUFPLENBQUMsV0FBVyxHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLElBQUUsSUFBRyxLQUFLLENBQUMsS0FBRyxDQUFDLElBQUUsQ0FBQyxDQUFDLEdBQUMsRUFBRSxDQUFDLEVBQUMsVUFBUyxDQUFDLElBQUUsT0FBTSxNQUFNLElBQUcsQ0FBQyxJQUFFLFFBQVEsSUFBRSxPQUFPLENBQUMsQ0FBQyxJQUFJLElBQUUsVUFBVSxJQUFHLENBQUMsQ0FBQyxJQUFJLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQUMsT0FBTyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxJQUFFLElBQUcsQ0FBQztRQUFBLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsY0FBVyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sS0FBRyxDQUFDLENBQUMsSUFBSSxDQUFBLENBQUMsQ0FBQSxPQUFPLENBQUEsQ0FBQyxDQUFBLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLENBQUMsSUFBRSxPQUFPLENBQUMsQ0FBQyx5QkFBeUIsSUFBRSxDQUFDLENBQUMsc0JBQXNCLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQSxDQUFDLENBQUEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUMsRUFBQyxDQUFBLENBQUEsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLEVBQUMsVUFBUyxDQUFDLElBQUUsSUFBRyxVQUFTLENBQUMsSUFBRSxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFFLENBQUMsQ0FBQSxDQUFDLENBQUEsS0FBSyxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFBQyxPQUFNLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsQ0FBQyx5QkFBeUIsSUFBRSxLQUFLLEtBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQSxNQUFNLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFBQSxDQUFDO0lBQUEsT0FBTSxDQUFDLEVBQUMsQ0FBQztRQUFBLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUFBLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQSxJQUFHLFVBQVMsQ0FBQyxJQUFFLE9BQU0sTUFBTSxJQUFHLENBQUMsSUFBRSxRQUFRLElBQUUsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFBLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUFDLE9BQU8sVUFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsSUFBRSxJQUFHLENBQUM7UUFBQSxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGNBQVcsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxLQUFHLENBQUMsQ0FBQyxJQUFJLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQyxLQUFLLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsQ0FBQyxJQUFFLE9BQU8sQ0FBQyxDQUFDLHlCQUF5QixJQUFFLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLEVBQUMsRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsR0FBRyxDQUFBLENBQUMsQ0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBQyxFQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQSxDQUFBLENBQUMsRUFBQyxVQUFTLENBQUMsSUFBRSxJQUFHLFVBQVMsQ0FBQyxJQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxTQUFTLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUMsT0FBTSxFQUFDLE1BQU0sRUFBQyxFQUFFLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLENBQUMseUJBQXlCLElBQUUsS0FBSyxLQUFHLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUEsTUFBTSxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQUEsQ0FBQztJQUFBLE9BQU0sQ0FBQyxFQUFDLENBQUM7UUFBQSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFBQSxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUEsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFBLENBQUEsQ0FBQyxDQUFDO0FBQ3RqRiwrQkFBK0IiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGhvb2tmb3JtL3Jlc29sdmVycy96b2QvZGlzdC96b2QuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHI9cmVxdWlyZShcIkBob29rZm9ybS9yZXNvbHZlcnNcIiksZT1yZXF1aXJlKFwicmVhY3QtaG9vay1mb3JtXCIpO2Z1bmN0aW9uIG4ocil7aWYociYmci5fX2VzTW9kdWxlKXJldHVybiByO3ZhciBlPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIHImJk9iamVjdC5rZXlzKHIpLmZvckVhY2goZnVuY3Rpb24obil7aWYoXCJkZWZhdWx0XCIhPT1uKXt2YXIgbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsbik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbixvLmdldD9vOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByW25dfX0pfX0pLGUuZGVmYXVsdD1yLGV9dmFyIG89LyojX19QVVJFX18qL24ocmVxdWlyZShcInpvZC92NC9jb3JlXCIpKTtmdW5jdGlvbiB0KHIsZSl7dHJ5e3ZhciBuPXIoKX1jYXRjaChyKXtyZXR1cm4gZShyKX1yZXR1cm4gbiYmbi50aGVuP24udGhlbih2b2lkIDAsZSk6bn1mdW5jdGlvbiBzKHIsbil7Zm9yKHZhciBvPXt9O3IubGVuZ3RoOyl7dmFyIHQ9clswXSxzPXQuY29kZSxpPXQubWVzc2FnZSxhPXQucGF0aC5qb2luKFwiLlwiKTtpZighb1thXSlpZihcInVuaW9uRXJyb3JzXCJpbiB0KXt2YXIgdT10LnVuaW9uRXJyb3JzWzBdLmVycm9yc1swXTtvW2FdPXttZXNzYWdlOnUubWVzc2FnZSx0eXBlOnUuY29kZX19ZWxzZSBvW2FdPXttZXNzYWdlOmksdHlwZTpzfTtpZihcInVuaW9uRXJyb3JzXCJpbiB0JiZ0LnVuaW9uRXJyb3JzLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGUuZXJyb3JzLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHIucHVzaChlKX0pfSksbil7dmFyIGM9b1thXS50eXBlcyxmPWMmJmNbdC5jb2RlXTtvW2FdPWUuYXBwZW5kRXJyb3JzKGEsbixvLHMsZj9bXS5jb25jYXQoZix0Lm1lc3NhZ2UpOnQubWVzc2FnZSl9ci5zaGlmdCgpfXJldHVybiBvfWZ1bmN0aW9uIGkocixuKXtmb3IodmFyIG89e307ci5sZW5ndGg7KXt2YXIgdD1yWzBdLHM9dC5jb2RlLGk9dC5tZXNzYWdlLGE9dC5wYXRoLmpvaW4oXCIuXCIpO2lmKCFvW2FdKWlmKFwiaW52YWxpZF91bmlvblwiPT09dC5jb2RlJiZ0LmVycm9ycy5sZW5ndGg+MCl7dmFyIHU9dC5lcnJvcnNbMF1bMF07b1thXT17bWVzc2FnZTp1Lm1lc3NhZ2UsdHlwZTp1LmNvZGV9fWVsc2Ugb1thXT17bWVzc2FnZTppLHR5cGU6c307aWYoXCJpbnZhbGlkX3VuaW9uXCI9PT10LmNvZGUmJnQuZXJyb3JzLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gci5wdXNoKGUpfSl9KSxuKXt2YXIgYz1vW2FdLnR5cGVzLGY9YyYmY1t0LmNvZGVdO29bYV09ZS5hcHBlbmRFcnJvcnMoYSxuLG8scyxmP1tdLmNvbmNhdChmLHQubWVzc2FnZSk6dC5tZXNzYWdlKX1yLnNoaWZ0KCl9cmV0dXJuIG99ZXhwb3J0cy56b2RSZXNvbHZlcj1mdW5jdGlvbihlLG4sYSl7aWYodm9pZCAwPT09YSYmKGE9e30pLGZ1bmN0aW9uKHIpe3JldHVyblwiX2RlZlwiaW4gciYmXCJvYmplY3RcIj09dHlwZW9mIHIuX2RlZiYmXCJ0eXBlTmFtZVwiaW4gci5fZGVmfShlKSlyZXR1cm4gZnVuY3Rpb24obyxpLHUpe3RyeXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHQoZnVuY3Rpb24oKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGVbXCJzeW5jXCI9PT1hLm1vZGU/XCJwYXJzZVwiOlwicGFyc2VBc3luY1wiXShvLG4pKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiB1LnNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24mJnIudmFsaWRhdGVGaWVsZHNOYXRpdmVseSh7fSx1KSx7ZXJyb3JzOnt9LHZhbHVlczphLnJhdz9PYmplY3QuYXNzaWduKHt9LG8pOmV9fSl9LGZ1bmN0aW9uKGUpe2lmKGZ1bmN0aW9uKHIpe3JldHVybiBBcnJheS5pc0FycmF5KG51bGw9PXI/dm9pZCAwOnIuaXNzdWVzKX0oZSkpcmV0dXJue3ZhbHVlczp7fSxlcnJvcnM6ci50b05lc3RFcnJvcnMocyhlLmVycm9ycywhdS5zaG91bGRVc2VOYXRpdmVWYWxpZGF0aW9uJiZcImFsbFwiPT09dS5jcml0ZXJpYU1vZGUpLHUpfTt0aHJvdyBlfSkpfWNhdGNoKHIpe3JldHVybiBQcm9taXNlLnJlamVjdChyKX19O2lmKGZ1bmN0aW9uKHIpe3JldHVyblwiX3pvZFwiaW4gciYmXCJvYmplY3RcIj09dHlwZW9mIHIuX3pvZH0oZSkpcmV0dXJuIGZ1bmN0aW9uKHMsdSxjKXt0cnl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSh0KGZ1bmN0aW9uKCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgoXCJzeW5jXCI9PT1hLm1vZGU/by5wYXJzZTpvLnBhcnNlQXN5bmMpKGUscyxuKSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gYy5zaG91bGRVc2VOYXRpdmVWYWxpZGF0aW9uJiZyLnZhbGlkYXRlRmllbGRzTmF0aXZlbHkoe30sYykse2Vycm9yczp7fSx2YWx1ZXM6YS5yYXc/T2JqZWN0LmFzc2lnbih7fSxzKTplfX0pfSxmdW5jdGlvbihlKXtpZihmdW5jdGlvbihyKXtyZXR1cm4gciBpbnN0YW5jZW9mIG8uJFpvZEVycm9yfShlKSlyZXR1cm57dmFsdWVzOnt9LGVycm9yczpyLnRvTmVzdEVycm9ycyhpKGUuaXNzdWVzLCFjLnNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24mJlwiYWxsXCI9PT1jLmNyaXRlcmlhTW9kZSksYyl9O3Rocm93IGV9KSl9Y2F0Y2gocil7cmV0dXJuIFByb21pc2UucmVqZWN0KHIpfX07dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnB1dDogbm90IGEgWm9kIHNjaGVtYVwiKX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD16b2QuanMubWFwXG4iXSwidmVyc2lvbiI6M30=