{"version":3,"names":["exports","UserBuildingsTab","react_1","cov_2ijxn26vx9","s","__importStar","require","button_1","card_1","checkbox_1","user","buildings","onSave","isLoading","b","f","selectedBuildings","setSelectedBuildings","useState","useEffect","map","building","id","handleBuildingToggle","buildingId","prev","includes","filter","handleSave","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","CardContent","className","Checkbox","checked","onCheckedChange","htmlFor","name","address","city","totalUnits","Button","onClick","disabled"],"sources":["/home/runner/workspace/client/src/components/user-tabs/UserBuildingsTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport type { UserWithAssignments, Building } from '@shared/schema';\n\ninterface UserBuildingsTabProps {\n  user: UserWithAssignments | null;\n  buildings: Building[];\n  onSave: (buildingIds: string[]) => void;\n  isLoading?: boolean;\n}\n\nexport function UserBuildingsTab({ user, buildings, onSave, isLoading = false }: UserBuildingsTabProps) {\n  const [selectedBuildings, setSelectedBuildings] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (user && user.buildings) {\n      setSelectedBuildings(user.buildings.map((building: any) => building.id));\n    }\n  }, [user]);\n\n  const handleBuildingToggle = (buildingId: string) => {\n    setSelectedBuildings(prev => \n      prev.includes(buildingId)\n        ? prev.filter(id => id !== buildingId)\n        : [...prev, buildingId]\n    );\n  };\n\n  const handleSave = () => {\n    onSave(selectedBuildings);\n  };\n\n  if (!user) return null;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Building Access</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid gap-4 max-h-60 overflow-y-auto\">\n          {buildings.map((building) => (\n            <div key={building.id} className=\"flex items-center space-x-2 p-2 border rounded\">\n              <Checkbox\n                id={`building-${building.id}`}\n                checked={selectedBuildings.includes(building.id)}\n                onCheckedChange={() => handleBuildingToggle(building.id)}\n                data-testid={`checkbox-building-${building.id}`}\n              />\n              <div className=\"flex-1\">\n                <label\n                  htmlFor={`building-${building.id}`}\n                  className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                >\n                  {building.name}\n                </label>\n                <p className=\"text-xs text-gray-500\">{building.address}, {building.city}</p>\n                <p className=\"text-xs text-gray-400\">{building.totalUnits} units</p>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"flex justify-end pt-4\">\n          <Button onClick={handleSave} disabled={isLoading} data-testid=\"save-buildings\">\n            {isLoading ? 'Saving...' : 'Save Building Access'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"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","ignoreList":[]}