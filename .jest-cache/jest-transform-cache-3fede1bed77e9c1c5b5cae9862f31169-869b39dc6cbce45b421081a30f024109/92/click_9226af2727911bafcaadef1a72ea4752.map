{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/behavior/click.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,aAAa,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AACjE,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACjD,IAAI,SAAS,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AACzD,IAAI,WAAW,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;AAC9D,IAAI,UAAU,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAC3D,IAAI,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnC,IAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAExC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAE;IACjD,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;IACrE,MAAM,OAAO,GAAG,OAAO,IAAI,aAAa,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC;IAC5F,IAAI,OAAO,IAAI,OAAO,KAAK,MAAM,EAAE,CAAC;QAChC,OAAO,GAAE,EAAE;YACP,IAAI,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;gBACnC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC5B,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,CAAC;QACL,CAAC,CAAC;IACN,CAAC;SAAM,IAAI,aAAa,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE;QACpD,IAAI,EAAE,MAAM;KACf,CAAC,EAAE,CAAC;QACD,OAAO,GAAE,EAAE;YACP,4CAA4C;YAC5C,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5E,sDAAsD;YACtD,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;AACL,CAAC,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/behavior/click.js"],"sourcesContent":["'use strict';\n\nvar isElementType = require('../../utils/misc/isElementType.js');\nrequire('../../utils/dataTransfer/Clipboard.js');\nvar getWindow = require('../../utils/misc/getWindow.js');\nvar isFocusable = require('../../utils/focus/isFocusable.js');\nvar cloneEvent = require('../../utils/misc/cloneEvent.js');\nvar focus = require('../focus.js');\nvar registry = require('./registry.js');\n\nregistry.behavior.click = (event, target, instance)=>{\n    const context = target.closest('button,input,label,select,textarea');\n    const control = context && isElementType.isElementType(context, 'label') && context.control;\n    if (control && control !== target) {\n        return ()=>{\n            if (isFocusable.isFocusable(control)) {\n                focus.focusElement(control);\n                instance.dispatchEvent(control, cloneEvent.cloneEvent(event));\n            }\n        };\n    } else if (isElementType.isElementType(target, 'input', {\n        type: 'file'\n    })) {\n        return ()=>{\n            // blur fires when the file selector pops up\n            focus.blurElement(target);\n            target.dispatchEvent(new (getWindow.getWindow(target)).Event('fileDialog'));\n            // focus fires after the file selector has been closed\n            focus.focusElement(target);\n        };\n    }\n};\n"],"version":3}