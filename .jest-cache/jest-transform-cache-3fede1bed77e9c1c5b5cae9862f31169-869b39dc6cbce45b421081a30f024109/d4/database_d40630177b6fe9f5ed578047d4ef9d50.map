{"file":"/home/runner/workspace/tests/mocks/database.js","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/mocks/database.js"],"sourcesContent":["// Mock database for Jest tests\nconst mockQuery = jest.fn(() => Promise.resolve({ rows: [] }));\n\nconst mockSql = jest.fn(() => Promise.resolve({ rows: [] }));\nmockSql.begin = jest.fn(() => Promise.resolve());\nmockSql.commit = jest.fn(() => Promise.resolve());\nmockSql.rollback = jest.fn(() => Promise.resolve());\n\nconst mockDb = {\n  select: jest.fn(() => ({\n    from: jest.fn(() => ({\n      where: jest.fn(() => Promise.resolve([])),\n      limit: jest.fn(() => Promise.resolve([])),\n      orderBy: jest.fn(() => Promise.resolve([])),\n    })),\n  })),\n  insert: jest.fn(() => ({\n    into: jest.fn(() => ({\n      values: jest.fn(() => ({\n        returning: jest.fn(() => Promise.resolve([])),\n      })),\n    })),\n  })),\n  update: jest.fn(() => ({\n    set: jest.fn(() => ({\n      where: jest.fn(() => Promise.resolve([])),\n    })),\n  })),\n  delete: jest.fn(() => ({\n    from: jest.fn(() => ({\n      where: jest.fn(() => Promise.resolve([])),\n    })),\n  })),\n};\n\n// Mock schema object\nconst mockSchemaObject = {\n  users: {\n    id: 'id',\n    email: 'email',\n    role: 'role',\n  },\n  organizations: {\n    id: 'id',\n    name: 'name',\n  },\n  invitations: {\n    id: 'id',\n    email: 'email',\n    token: 'token',\n  },\n  buildings: {\n    id: 'id',\n    name: 'name',\n  },\n  residences: {\n    id: 'id',\n    buildingId: 'buildingId',\n  },\n  documents: {\n    id: 'id',\n    name: 'name',\n  },\n  demands: {\n    id: 'id',\n    title: 'title',\n  },\n};\n\nmodule.exports = {\n  mockDb,\n  mockSql,\n  mockQuery,\n  mockSchemaObject,\n};"],"version":3}