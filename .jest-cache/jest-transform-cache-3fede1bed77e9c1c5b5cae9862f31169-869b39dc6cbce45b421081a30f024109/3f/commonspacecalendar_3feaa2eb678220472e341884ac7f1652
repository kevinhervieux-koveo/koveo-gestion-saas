ccb0b08a6b8d4e83841315fc0a415e11
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommonSpaceCalendar = CommonSpaceCalendar;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const button_1 = require("@/components/ui/button");
const dialog_1 = require("@/components/ui/dialog");
const lucide_react_1 = require("lucide-react");
const calendar_view_1 = require("./calendar-view");
const use_language_1 = require("@/hooks/use-language");
/**
 * Reusable Common Space Calendar Component
 * Used across all pages that need to display space calendars.
 * @param root0
 * @param root0.space
 * @param root0.onExport
 * @param root0.onNewBooking
 * @param root0.className
 */
function CommonSpaceCalendar({ space, onExport, onNewBooking, className = '', }) {
    const { language } = (0, use_language_1.useLanguage)();
    const [isLinkDialogOpen, setIsLinkDialogOpen] = (0, react_1.useState)(false);
    const [selectedCalendarType, setSelectedCalendarType] = (0, react_1.useState)(null);
    const [showProviderStep, setShowProviderStep] = (0, react_1.useState)(false);
    const [selectedProvider, setSelectedProvider] = (0, react_1.useState)(null);
    return ((0, jsx_runtime_1.jsxs)("div", { className: `bg-white rounded-lg border border-gray-200 p-6 shadow-sm ${className}`, children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between mb-6', children: [(0, jsx_runtime_1.jsxs)("h3", { className: 'text-lg font-semibold text-gray-900 flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.CalendarIcon, { className: 'h-5 w-5 text-koveo-navy' }), language === 'fr' ? `Calendrier - ${space.name}` : `Calendar - ${space.name}`] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex gap-2', children: [(0, jsx_runtime_1.jsxs)(dialog_1.Dialog, { open: isLinkDialogOpen, onOpenChange: setIsLinkDialogOpen, children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTrigger, { asChild: true, children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'outline', size: 'sm', className: 'flex items-center gap-2', "data-testid": 'button-link-calendar', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Link2, { className: 'w-4 h-4' }), language === 'fr' ? 'Lier calendrier' : 'Link calendar'] }) }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, { className: 'sm:max-w-[425px]', children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, { children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, { children: !showProviderStep
                                                        ? language === 'fr'
                                                            ? 'Que souhaitez-vous lier ?'
                                                            : 'What do you want to link?'
                                                        : language === 'fr'
                                                            ? 'Choisir le fournisseur de calendrier'
                                                            : 'Choose calendar provider' }) }), (0, jsx_runtime_1.jsxs)("div", { className: 'grid gap-4 py-4', children: [!showProviderStep && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-600', children: language === 'fr'
                                                                    ? 'Sélectionnez quel type de calendrier vous souhaitez synchroniser:'
                                                                    : 'Select which type of calendar you want to sync:' }), (0, jsx_runtime_1.jsxs)("div", { className: `flex items-center justify-between p-4 border rounded-lg cursor-pointer transition-colors ${selectedCalendarType === 'everything'
                                                                    ? 'border-koveo-navy bg-koveo-navy/5'
                                                                    : 'border-gray-200 hover:border-gray-300'}`, onClick: () => setSelectedCalendarType('everything'), "data-testid": 'option-everything-calendar', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: language === 'fr' ? 'Tout lier' : 'Link everything' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                    ? 'Synchroniser tous les calendriers disponibles'
                                                                                    : 'Sync all available calendars' })] }), selectedCalendarType === 'everything' && ((0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: 'w-5 h-5 text-koveo-navy' }))] }), (0, jsx_runtime_1.jsxs)("div", { className: `flex items-center justify-between p-4 border rounded-lg cursor-pointer transition-colors ${selectedCalendarType === 'common-space'
                                                                    ? 'border-koveo-navy bg-koveo-navy/5'
                                                                    : 'border-gray-200 hover:border-gray-300'}`, onClick: () => setSelectedCalendarType('common-space'), "data-testid": 'option-common-space-calendar', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: language === 'fr' ? 'Espaces communs seulement' : 'Common spaces only' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                    ? 'Synchroniser les réservations des espaces communs'
                                                                                    : 'Sync common space bookings' })] }), selectedCalendarType === 'common-space' && ((0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: 'w-5 h-5 text-koveo-navy' }))] }), (0, jsx_runtime_1.jsx)("div", { className: 'flex items-center justify-between p-4 border rounded-lg opacity-50 cursor-not-allowed border-gray-200', "data-testid": 'option-maintenance-calendar', children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: language === 'fr' ? 'Réparations/Maintenance' : 'Repairs/Maintenance' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                ? 'Fonctionnalité à venir - pas encore disponible'
                                                                                : 'Feature to come - not yet available' })] }) }), (0, jsx_runtime_1.jsx)("div", { className: 'flex items-center justify-between p-4 border rounded-lg opacity-50 cursor-not-allowed border-gray-200', "data-testid": 'option-building-events-calendar', children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: language === 'fr' ? 'Événements du bâtiment' : 'Building events' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                ? 'Fonctionnalité à venir - pas encore disponible'
                                                                                : 'Feature to come - not yet available' })] }) }), selectedCalendarType === 'everything' && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-4 p-4 bg-green-50 rounded-lg border border-green-200', children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-sm font-medium text-green-900 mb-2', children: language === 'fr' ? 'Configuration complète' : 'Complete configuration' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-green-700', children: language === 'fr'
                                                                            ? 'Cette option synchronisera tous les calendriers disponibles : espaces communs, maintenance, et événements du bâtiment.'
                                                                            : 'This option will sync all available calendars: common spaces, maintenance, and building events.' })] })), selectedCalendarType === 'common-space' && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200', children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-sm font-medium text-blue-900 mb-2', children: language === 'fr'
                                                                            ? 'Configuration des espaces communs'
                                                                            : 'Common spaces configuration' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-blue-700', children: language === 'fr'
                                                                            ? `Cette option synchronisera les réservations de "${space.name}" avec votre calendrier externe.`
                                                                            : `This option will sync bookings for "${space.name}" with your external calendar.` })] })), (0, jsx_runtime_1.jsxs)("div", { className: 'flex justify-end gap-2 mt-4', children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'outline', onClick: () => {
                                                                            setIsLinkDialogOpen(false);
                                                                            setSelectedCalendarType(null);
                                                                            setShowProviderStep(false);
                                                                            setSelectedProvider(null);
                                                                        }, "data-testid": 'button-cancel-link', children: language === 'fr' ? 'Annuler' : 'Cancel' }), (0, jsx_runtime_1.jsx)(button_1.Button, { onClick: () => {
                                                                            if (selectedCalendarType) {
                                                                                setShowProviderStep(true);
                                                                            }
                                                                        }, disabled: !selectedCalendarType, "data-testid": 'button-next-step', children: language === 'fr' ? 'Suivant' : 'Next' })] })] })), showProviderStep && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-600 mb-4', children: language === 'fr'
                                                                    ? 'Sélectionnez le fournisseur de calendrier où vous souhaitez synchroniser :'
                                                                    : 'Select the calendar provider where you want to sync:' }), (0, jsx_runtime_1.jsxs)("div", { className: `flex items-center justify-between p-4 border rounded-lg cursor-pointer transition-colors ${selectedProvider === 'google'
                                                                    ? 'border-koveo-navy bg-koveo-navy/5'
                                                                    : 'border-gray-200 hover:border-gray-300'}`, onClick: () => setSelectedProvider('google'), "data-testid": 'option-google-calendar', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-3', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-10 h-10 bg-red-500 rounded-full flex items-center justify-center text-white font-bold', children: "G" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: "Google Calendar" }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                            ? 'Synchroniser avec Google Calendar'
                                                                                            : 'Sync with Google Calendar' })] })] }), selectedProvider === 'google' && ((0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: 'w-5 h-5 text-koveo-navy' }))] }), (0, jsx_runtime_1.jsxs)("div", { className: `flex items-center justify-between p-4 border rounded-lg cursor-pointer transition-colors ${selectedProvider === 'outlook'
                                                                    ? 'border-koveo-navy bg-koveo-navy/5'
                                                                    : 'border-gray-200 hover:border-gray-300'}`, onClick: () => setSelectedProvider('outlook'), "data-testid": 'option-outlook-calendar', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-3', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-bold', children: "O" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: "Outlook Calendar" }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                            ? 'Synchroniser avec Outlook Calendar'
                                                                                            : 'Sync with Outlook Calendar' })] })] }), selectedProvider === 'outlook' && ((0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: 'w-5 h-5 text-koveo-navy' }))] }), (0, jsx_runtime_1.jsxs)("div", { className: `flex items-center justify-between p-4 border rounded-lg cursor-pointer transition-colors ${selectedProvider === 'apple'
                                                                    ? 'border-koveo-navy bg-koveo-navy/5'
                                                                    : 'border-gray-200 hover:border-gray-300'}`, onClick: () => setSelectedProvider('apple'), "data-testid": 'option-apple-calendar', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-3', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-10 h-10 bg-gray-800 rounded-full flex items-center justify-center text-white font-bold' }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: "Apple Calendar" }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                            ? 'Synchroniser avec Apple Calendar'
                                                                                            : 'Sync with Apple Calendar' })] })] }), selectedProvider === 'apple' && ((0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: 'w-5 h-5 text-koveo-navy' }))] }), (0, jsx_runtime_1.jsxs)("div", { className: `flex items-center justify-between p-4 border rounded-lg cursor-pointer transition-colors ${selectedProvider === 'other'
                                                                    ? 'border-koveo-navy bg-koveo-navy/5'
                                                                    : 'border-gray-200 hover:border-gray-300'}`, onClick: () => setSelectedProvider('other'), "data-testid": 'option-other-calendar', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-3', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-10 h-10 bg-gray-500 rounded-full flex items-center justify-center text-white font-bold', children: "..." }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: 'font-medium', children: language === 'fr' ? 'Autre calendrier' : 'Other calendar' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-gray-500', children: language === 'fr'
                                                                                            ? 'Utiliser un fichier ICS ou autre'
                                                                                            : 'Use ICS file or other' })] })] }), selectedProvider === 'other' && ((0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: 'w-5 h-5 text-koveo-navy' }))] }), selectedProvider && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200', children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-sm font-medium text-blue-900 mb-2', children: language === 'fr' ? 'Configuration finale' : 'Final configuration' }), (0, jsx_runtime_1.jsx)("div", { className: 'text-sm text-blue-700', children: language === 'fr'
                                                                            ? `Prêt à lier ${selectedCalendarType === 'everything' ? 'tous les calendriers' : 'les espaces communs'} avec ${selectedProvider === 'google'
                                                                                ? 'Google Calendar'
                                                                                : selectedProvider === 'outlook'
                                                                                    ? 'Outlook Calendar'
                                                                                    : selectedProvider === 'apple'
                                                                                        ? 'Apple Calendar'
                                                                                        : 'votre calendrier'}.`
                                                                            : `Ready to link ${selectedCalendarType === 'everything' ? 'all calendars' : 'common spaces'} with ${selectedProvider === 'google'
                                                                                ? 'Google Calendar'
                                                                                : selectedProvider === 'outlook'
                                                                                    ? 'Outlook Calendar'
                                                                                    : selectedProvider === 'apple'
                                                                                        ? 'Apple Calendar'
                                                                                        : 'your calendar'}.` })] })), (0, jsx_runtime_1.jsxs)("div", { className: 'flex justify-between gap-2 mt-4', children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'outline', onClick: () => {
                                                                            setShowProviderStep(false);
                                                                            setSelectedProvider(null);
                                                                        }, "data-testid": 'button-back-step', children: language === 'fr' ? 'Retour' : 'Back' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex gap-2', children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'outline', onClick: () => {
                                                                                    setIsLinkDialogOpen(false);
                                                                                    setSelectedCalendarType(null);
                                                                                    setShowProviderStep(false);
                                                                                    setSelectedProvider(null);
                                                                                }, "data-testid": 'button-cancel-provider', children: language === 'fr' ? 'Annuler' : 'Cancel' }), (0, jsx_runtime_1.jsx)(button_1.Button, { onClick: () => {
                                                                                    // Handle final calendar linking here
                                                                                    // Link calendar logic
                                                                                    setIsLinkDialogOpen(false);
                                                                                    setSelectedCalendarType(null);
                                                                                    setShowProviderStep(false);
                                                                                    setSelectedProvider(null);
                                                                                }, disabled: !selectedProvider, "data-testid": 'button-confirm-final-link', children: language === 'fr' ? 'Lier calendrier' : 'Link calendar' })] })] })] }))] })] })] }), onExport && ((0, jsx_runtime_1.jsxs)(button_1.Button, { onClick: (e) => {
                                    e.stopPropagation();
                                    onExport();
                                }, variant: 'outline', size: 'sm', className: 'flex items-center gap-2', "data-testid": 'button-export-space-calendar', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Download, { className: 'w-4 h-4' }), language === 'fr' ? 'Exporter (.ics)' : 'Export (.ics)'] })), space.isReservable && onNewBooking && ((0, jsx_runtime_1.jsxs)(button_1.Button, { onClick: (e) => {
                                    e.stopPropagation();
                                    onNewBooking();
                                }, className: 'flex items-center gap-2', "data-testid": 'button-new-booking-inline', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: 'w-4 h-4' }), language === 'fr' ? 'Réserver' : 'Book'] }))] })] }), (0, jsx_runtime_1.jsx)(calendar_view_1.CalendarView, { mode: 'space', spaceId: space.id, showControls: false, onEventClick: (event) => {
                    // Event clicked
                }, onDateClick: (date) => {
                    // Date clicked
                    onNewBooking?.(date);
                }, "data-testid": `inline-calendar-${space.id}` })] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,