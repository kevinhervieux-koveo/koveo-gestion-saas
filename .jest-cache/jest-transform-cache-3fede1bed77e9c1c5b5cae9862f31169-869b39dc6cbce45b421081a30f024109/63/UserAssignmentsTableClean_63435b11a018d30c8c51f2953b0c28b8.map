{"version":3,"names":["cov_180gjlcd7l","actualCoverage","exports","UserAssignmentsTable","react_1","s","__importDefault","require","users","isLoading","onEditUser","onEditOrganizations","onEditResidences","onDeleteUser","canEditOrganizations","b","canEditResidences","canDeleteUsers","f","jsx_runtime_1","jsx","className","children","length","jsxs","map","user","id","firstName","lastName","email","role","isActive","Array","isArray","organizations","org","idx","name","buildings","slice","building","residences","residence","unitNumber","onClick"],"sources":["/home/runner/workspace/client/src/components/UserAssignmentsTableClean.tsx"],"sourcesContent":["import React from 'react';\nimport type { UserWithAssignments } from '@shared/schema';\n\ninterface UserAssignmentsTableProps {\n  users: UserWithAssignments[];\n  isLoading: boolean;\n  onEditUser?: (user: UserWithAssignments) => void;\n  onEditOrganizations?: (user: UserWithAssignments) => void;\n  onEditResidences?: (user: UserWithAssignments) => void;\n  onDeleteUser?: (user: UserWithAssignments) => void;\n  canEditOrganizations?: boolean;\n  canEditResidences?: boolean;\n  canDeleteUsers?: boolean;\n}\n\nexport function UserAssignmentsTable({ \n  users, \n  isLoading, \n  onEditUser,\n  onEditOrganizations,\n  onEditResidences,\n  onDeleteUser,\n  canEditOrganizations = false,\n  canEditResidences = false,\n  canDeleteUsers = false\n}: UserAssignmentsTableProps) {\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center py-8\" data-testid=\"loading-users\">\n        <div className=\"text-gray-500\">Loading users...</div>\n      </div>\n    );\n  }\n\n  if (!users || users.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\" data-testid=\"no-users\">\n        No users found\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"w-full border-collapse border border-gray-300\" data-testid=\"users-table\">\n        <thead>\n          <tr className=\"bg-gray-50\">\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-name\">\n              Name\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-email\">\n              Email\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-role\">\n              Role\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-status\">\n              Status\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-organizations\">\n              Organizations\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-buildings\">\n              Buildings\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-residences\">\n              Residences\n            </th>\n            <th className=\"border border-gray-300 px-4 py-2 text-left\" data-testid=\"header-actions\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id} className=\"hover:bg-gray-50\" data-testid={`user-row-${user.id}`}>\n              {/* Name */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`name-${user.id}`}>\n                {user.firstName} {user.lastName}\n              </td>\n              \n              {/* Email */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`email-${user.id}`}>\n                {user.email}\n              </td>\n              \n              {/* Role */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`role-${user.id}`}>\n                <span className={`px-2 py-1 rounded text-xs ${\n                  user.role === 'admin' \n                    ? 'bg-red-100 text-red-800'\n                    : user.role === 'manager'\n                    ? 'bg-blue-100 text-blue-800'\n                    : 'bg-green-100 text-green-800'\n                }`}>\n                  {user.role}\n                </span>\n              </td>\n              \n              {/* Status */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`status-${user.id}`}>\n                <span className={`px-2 py-1 rounded text-xs ${\n                  user.isActive\n                    ? 'bg-green-100 text-green-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {user.isActive ? 'Active' : 'Inactive'}\n                </span>\n              </td>\n              \n              {/* Organizations */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`organizations-${user.id}`}>\n                <div className=\"space-y-1\">\n                  {Array.isArray(user.organizations) && user.organizations.length > 0 ? (\n                    user.organizations.map((org, idx) => (\n                      <div\n                        key={org.id || idx}\n                        className=\"text-xs bg-blue-50 px-2 py-1 rounded\"\n                        data-testid={`org-${user.id}-${idx}`}\n                      >\n                        {org.name}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-400 text-xs\" data-testid={`no-orgs-${user.id}`}>\n                      No organizations\n                    </div>\n                  )}\n                </div>\n              </td>\n              \n              {/* Buildings */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`buildings-${user.id}`}>\n                <div className=\"space-y-1\">\n                  {Array.isArray(user.buildings) && user.buildings.length > 0 ? (\n                    user.buildings.slice(0, 3).map((building, idx) => (\n                      <div\n                        key={building.id || idx}\n                        className=\"text-xs bg-purple-50 px-2 py-1 rounded\"\n                        data-testid={`building-${user.id}-${idx}`}\n                      >\n                        {building.name}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-400 text-xs\" data-testid={`no-buildings-${user.id}`}>\n                      No buildings\n                    </div>\n                  )}\n                  {Array.isArray(user.buildings) && user.buildings.length > 3 && (\n                    <div className=\"text-xs text-gray-500\" data-testid={`more-buildings-${user.id}`}>\n                      +{user.buildings.length - 3} more\n                    </div>\n                  )}\n                </div>\n              </td>\n              \n              {/* Residences */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`residences-${user.id}`}>\n                <div className=\"space-y-1\">\n                  {Array.isArray(user.residences) && user.residences.length > 0 ? (\n                    user.residences.slice(0, 3).map((residence, idx) => (\n                      <div\n                        key={residence.id || idx}\n                        className=\"text-xs bg-yellow-50 px-2 py-1 rounded\"\n                        data-testid={`residence-${user.id}-${idx}`}\n                      >\n                        Unit {residence.unitNumber}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-400 text-xs\" data-testid={`no-residences-${user.id}`}>\n                      No residences\n                    </div>\n                  )}\n                  {Array.isArray(user.residences) && user.residences.length > 3 && (\n                    <div className=\"text-xs text-gray-500\" data-testid={`more-residences-${user.id}`}>\n                      +{user.residences.length - 3} more\n                    </div>\n                  )}\n                </div>\n              </td>\n              \n              {/* Actions */}\n              <td className=\"border border-gray-300 px-4 py-2\" data-testid={`actions-${user.id}`}>\n                <div className=\"flex gap-2 flex-wrap\">\n                  {onEditUser && (\n                    <button\n                      onClick={() => onEditUser(user)}\n                      className=\"px-2 py-1 text-xs bg-blue-50 text-blue-700 rounded hover:bg-blue-100\"\n                      data-testid={`edit-user-${user.id}`}\n                    >\n                      Edit User\n                    </button>\n                  )}\n                  \n                  {canDeleteUsers && onDeleteUser && (\n                    <button\n                      onClick={() => onDeleteUser(user)}\n                      className=\"px-2 py-1 text-xs bg-red-50 text-red-700 rounded hover:bg-red-100\"\n                      data-testid={`delete-user-${user.id}`}\n                    >\n                      Delete\n                    </button>\n                  )}\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}