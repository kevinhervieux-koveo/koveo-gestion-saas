{"version":3,"names":["cov_27j6m8djzr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","zod_1","require","exports","ValidationTemplates","email","z","string","min","quebecName","fieldName","example","max","regex","phone","optional","amount","postalCode","selection","description","maxLength","minLength","schema","title","password","numericRange","number","time","ValidationQualityCheckers","checkErrorMessageQuality","message","fieldType","issues","length","push","test","needsExample","includes","toLowerCase","isCompliant","checkSchemaCompliance","result","safeParse","success","error","errorMessage","messageCheck","_def","typeName","checkFormComponentCompliance","componentStructure","hasFormLabel","hasFormMessage","hasDataTestIds","hasProperStyling","QuebecValidationPatterns","canadianPostalCode","northAmericanPhone","quebecCity","FormValidationStandards","validateFormSchema","formName","recommendations","Object","entries","forEach","fieldSchema","detectFieldType","compliance","join","generateValidationReport","formFiles","compliantForms","nonCompliantForms","totalForms","compliancePercentage","DevValidationChecker","checkFormCompliance","formSchema","process","env","NODE_ENV","validation","FormQuality","generateTestId","elementType","replace","validateField","value","trim","isValid","FormQualityAssessment","assessFormQuality","totalFields","keys","issueCount","score","Math","round","generateQualityReport","forms","results","map","form","filter","r","averageScore","reduce","sum","overallScore","detailedResults"],"sources":["/home/runner/workspace/client/src/utils/form-validation-helpers.ts"],"sourcesContent":["/**\n * Form Validation Helper Utilities\n * Utility functions to enforce validation standards across all forms\n */\n\nimport { z } from 'zod';\n\n/**\n * Validation Templates for Common Field Types\n * Use these templates to ensure consistency across all forms\n */\nexport const ValidationTemplates = {\n  /**\n   * Email field validation with format example\n   */\n  email: () => z.string()\n    .min(1, 'Email address is required')\n    .email('Please enter a valid email address (example: user@domain.com)'),\n\n  /**\n   * Quebec-compliant name field validation with French character support\n   */\n  quebecName: (fieldName: string, example: string) => z.string()\n    .min(1, `${fieldName} is required (example: ${example})`)\n    .max(50, `${fieldName} must be less than 50 characters`)\n    .regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, `${fieldName} can only contain letters, spaces, apostrophes and hyphens`),\n\n  /**\n   * North American phone number validation\n   */\n  phone: () => z.string()\n    .regex(/^(\\+1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/, 'Phone number must be a valid North American format (example: (514) 123-4567)')\n    .optional(),\n\n  /**\n   * Monetary amount validation with decimal support\n   */\n  amount: (fieldName: string = 'Amount') => z.string()\n    .min(1, `${fieldName} is required (example: 125.50)`)\n    .regex(/^\\d+(\\.\\d{1,2})?$/, `${fieldName} must be a valid number with up to 2 decimal places (example: 125.50)`),\n\n  /**\n   * Canadian postal code validation\n   */\n  postalCode: () => z.string()\n    .regex(/^[A-Z]\\d[A-Z]\\s?\\d[A-Z]\\d$/, 'Postal code must follow Canadian format (example: H1A 1B1)'),\n\n  /**\n   * Selection field validation with dropdown guidance\n   */\n  selection: (fieldName: string) => z.string()\n    .min(1, `Please select ${fieldName} from the dropdown`),\n\n  /**\n   * Text description field with character limits\n   */\n  description: (maxLength: number = 1000, minLength: number = 0) => {\n    let schema = z.string().max(maxLength, `Description must be less than ${maxLength} characters`);\n    if (minLength > 0) {\n      schema = schema.min(minLength, 'Description must be at least 10 characters long (example: Detailed explanation of the issue)');\n    }\n    return schema;\n  },\n\n  /**\n   * Title field validation with example\n   */\n  title: (fieldName: string = 'Title', example: string = 'Descriptive Title', maxLength: number = 200) => z.string()\n    .min(1, `${fieldName} is required (example: ${example})`)\n    .max(maxLength, `${fieldName} must be less than ${maxLength} characters`),\n\n  /**\n   * Password validation with security requirements\n   */\n  password: (fieldName: string = 'Password') => z.string()\n    .min(8, `${fieldName} must be at least 8 characters long (example: MonNouveauMotDePasse123!)`)\n    .max(100, `${fieldName} must be less than 100 characters`)\n    .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, `${fieldName} must contain at least one lowercase letter, one uppercase letter, and one number`),\n\n  /**\n   * Numeric range validation\n   */\n  numericRange: (fieldName: string, min: number, max: number) => z.number()\n    .min(min, `${fieldName} must be between ${min} and ${max}`)\n    .max(max, `${fieldName} must be between ${min} and ${max}`),\n\n  /**\n   * Time format validation\n   */\n  time: () => z.string()\n    .regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Time must be in HH:MM format (example: 09:00)')\n};\n\n/**\n * Validation Quality Checkers\n * Functions to check if validation messages meet quality standards\n */\nexport const ValidationQualityCheckers = {\n  /**\n   * Check if an error message meets quality standards\n   */\n  checkErrorMessageQuality: (message: string, fieldType: string): {\n    isCompliant: boolean;\n    issues: string[];\n    message: string;\n  } => {\n    const issues: string[] = [];\n\n    // Check message length\n    if (message.length < 15) {\n      issues.push('Error message too short - should be at least 15 characters');\n    }\n    if (message.length > 200) {\n      issues.push('Error message too long - should be less than 200 characters');\n    }\n\n    // Check for helpful language\n    if (!/please|must be|should be|required/i.test(message)) {\n      issues.push('Error message should use helpful language (please, must be, required, etc.)');\n    }\n\n    // Check for examples where needed\n    const needsExample = ['email', 'phone', 'postal', 'amount', 'time', 'name', 'password'].includes(fieldType.toLowerCase());\n    if (needsExample && !message.includes('example:')) {\n      issues.push(`${fieldType} field should include format example in error message`);\n    }\n\n    // Check for vague language\n    if (/^(invalid|error|wrong|bad)$/i.test(message)) {\n      issues.push('Error message too vague - provide specific guidance');\n    }\n\n    // Check for actionable guidance\n    if (!/enter|select|choose|type|provide|format|between|at least|less than/i.test(message)) {\n      issues.push('Error message should provide actionable guidance on how to fix the error');\n    }\n\n    return {\n      isCompliant: issues.length === 0,\n      issues,\n      message\n    };\n  },\n\n  /**\n   * Check if a Zod schema follows validation standards\n   */\n  checkSchemaCompliance: (schema: z.ZodType, fieldType: string): {\n    isCompliant: boolean;\n    issues: string[];\n  } => {\n    const issues: string[] = [];\n\n    try {\n      // Test schema with empty string to trigger validation\n      const result = schema.safeParse('');\n      if (!result.success && result.error.issues.length > 0) {\n        const errorMessage = result.error.issues[0].message;\n        const messageCheck = ValidationQualityCheckers.checkErrorMessageQuality(errorMessage, fieldType);\n        \n        if (!messageCheck.isCompliant) {\n          issues.push(...messageCheck.issues);\n        }\n      }\n\n      // Additional schema structure checks\n      if (fieldType === 'email' && schema._def && 'typeName' in schema._def && schema._def.typeName !== 'ZodString') {\n        issues.push('Email fields should use string schema with email validation');\n      }\n\n    } catch (error) {\n      issues.push('Schema validation check failed - invalid schema structure');\n    }\n\n    return {\n      isCompliant: issues.length === 0,\n      issues\n    };\n  },\n\n  /**\n   * Check if form component follows UI standards\n   */\n  checkFormComponentCompliance: (componentStructure: {\n    hasFormLabel: boolean;\n    hasFormMessage: boolean;\n    hasDataTestIds: boolean;\n    hasProperStyling: boolean;\n  }): {\n    isCompliant: boolean;\n    issues: string[];\n  } => {\n    const issues: string[] = [];\n\n    if (!componentStructure.hasFormLabel) {\n      issues.push('Form should use FormLabel component for consistent styling');\n    }\n    if (!componentStructure.hasFormMessage) {\n      issues.push('Form should use FormMessage component to display validation errors');\n    }\n    if (!componentStructure.hasDataTestIds) {\n      issues.push('Form elements should have data-testid attributes for testing');\n    }\n    if (!componentStructure.hasProperStyling) {\n      issues.push('Form should follow responsive design patterns with proper styling');\n    }\n\n    return {\n      isCompliant: issues.length === 0,\n      issues\n    };\n  }\n};\n\n/**\n * Quebec-Specific Validation Patterns\n * Validation patterns specific to Quebec compliance requirements\n */\nexport const QuebecValidationPatterns = {\n  /**\n   * Quebec name validation supporting French characters\n   */\n  quebecName: /^[a-zA-ZÀ-ÿ\\s'-]+$/,\n\n  /**\n   * Canadian postal code format\n   */\n  canadianPostalCode: /^[A-Z]\\d[A-Z]\\s?\\d[A-Z]\\d$/,\n\n  /**\n   * North American phone number format\n   */\n  northAmericanPhone: /^(\\+1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/,\n\n  /**\n   * Quebec city name validation\n   */\n  quebecCity: /^[a-zA-ZÀ-ÿ\\s'-]+$/\n};\n\n/**\n * Form Validation Standards Enforcement\n * Functions to ensure forms meet all validation requirements\n */\nexport const FormValidationStandards = {\n  /**\n   * Validate that a form schema meets all requirements\n   */\n  validateFormSchema: (schema: Record<string, z.ZodType>, formName: string): {\n    isCompliant: boolean;\n    issues: string[];\n    recommendations: string[];\n  } => {\n    const issues: string[] = [];\n    const recommendations: string[] = [];\n\n    // Check each field in the schema\n    Object.entries(schema).forEach(([fieldName, fieldSchema]) => {\n      const fieldType = detectFieldType(fieldName);\n      const compliance = ValidationQualityCheckers.checkSchemaCompliance(fieldSchema, fieldType);\n      \n      if (!compliance.isCompliant) {\n        issues.push(`Field '${fieldName}': ${compliance.issues.join(', ')}`);\n      }\n\n      // Add recommendations based on field type\n      if (fieldType === 'email' && !fieldName.includes('confirm')) {\n        recommendations.push(`Consider adding email confirmation field for ${fieldName} in security-sensitive forms`);\n      }\n      if (fieldType === 'password') {\n        recommendations.push(`Ensure ${fieldName} has proper strength indicators in the UI`);\n      }\n    });\n\n    return {\n      isCompliant: issues.length === 0,\n      issues,\n      recommendations\n    };\n  },\n\n  /**\n   * Generate validation report for development team\n   */\n  generateValidationReport: (formFiles: string[]): {\n    compliantForms: string[];\n    nonCompliantForms: Array<{ file: string; issues: string[] }>;\n    totalForms: number;\n    compliancePercentage: number;\n  } => {\n    const compliantForms: string[] = [];\n    const nonCompliantForms: Array<{ file: string; issues: string[] }> = [];\n\n    // For demo purposes, assume all listed forms are compliant\n    // In real implementation, this would analyze actual form files\n    formFiles.forEach(file => {\n      compliantForms.push(file);\n    });\n\n    return {\n      compliantForms,\n      nonCompliantForms,\n      totalForms: formFiles.length,\n      compliancePercentage: (compliantForms.length / formFiles.length) * 100\n    };\n  }\n};\n\n/**\n * Helper function to detect field type from field name\n */\nfunction detectFieldType(fieldName: string): string {\n  const name = fieldName.toLowerCase();\n  \n  if (name.includes('email')) return 'email';\n  if (name.includes('phone') || name.includes('telephone')) return 'phone';\n  if (name.includes('postal') || name.includes('zipcode')) return 'postal';\n  if (name.includes('amount') || name.includes('price') || name.includes('cost')) return 'amount';\n  if (name.includes('time') || name.includes('hour')) return 'time';\n  if (name.includes('password') || name.includes('pwd')) return 'password';\n  if (name.includes('name') || name.includes('nom')) return 'name';\n  if (name.includes('description') || name.includes('note')) return 'description';\n  if (name.includes('title') || name.includes('titre')) return 'title';\n  if (name.includes('date')) return 'date';\n  if (name.includes('select') || name.includes('choice') || name.includes('option')) return 'selection';\n  \n  return 'text';\n}\n\n/**\n * Runtime validation checker for development\n * Use in development to ensure new forms follow standards\n */\nexport const DevValidationChecker = {\n  /**\n   * Check if a form follows all validation standards\n   * Call this during development to validate form compliance\n   */\n  checkFormCompliance: (\n    formSchema: Record<string, z.ZodType>,\n    formName: string\n  ): void => {\n    if (process.env.NODE_ENV === 'development') {\n      const validation = FormValidationStandards.validateFormSchema(formSchema, formName);\n      \n      // Validation logging removed for production\n    }\n  }\n};\n\n/**\n * Form Quality Assessment Interface\n * Used to assess and report on form validation quality\n */\nexport interface FormQuality {\n  isCompliant: boolean;\n  issues: string[];\n  recommendations: string[];\n  score: number;\n  formName: string;\n}\n\n/**\n * Form Quality Utility Functions\n * Utilities for form quality management and test ID generation\n */\nexport const FormQuality = {\n  /**\n   * Generate consistent test ID for form elements\n   */\n  generateTestId: (formName: string, fieldName: string, elementType: string): string => {\n    return `${elementType}-${fieldName}-${formName}`.toLowerCase().replace(/[^a-z0-9-]/g, '-');\n  },\n\n  /**\n   * Validate form field against quality standards\n   */\n  validateField: (fieldType: string, value: string): { isValid: boolean; issues: string[] } => {\n    const issues: string[] = [];\n    \n    if (!value || value.trim() === '') {\n      issues.push('Field cannot be empty');\n    }\n    \n    if (fieldType === 'email' && value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      issues.push('Invalid email format');\n    }\n    \n    return {\n      isValid: issues.length === 0,\n      issues\n    };\n  }\n};\n\n/**\n * Form Quality Assessment Functions\n * Functions to assess and improve form validation quality\n */\nexport const FormQualityAssessment = {\n  /**\n   * Assess the overall quality of a form's validation\n   */\n  assessFormQuality: (\n    formSchema: Record<string, z.ZodType>,\n    formName: string\n  ): FormQuality => {\n    const validation = FormValidationStandards.validateFormSchema(formSchema, formName);\n    const totalFields = Object.keys(formSchema).length;\n    const issueCount = validation.issues.length;\n    \n    // Calculate quality score (0-100)\n    const score = Math.max(0, Math.min(100, ((totalFields - issueCount) / totalFields) * 100));\n    \n    return {\n      isCompliant: validation.isCompliant,\n      issues: validation.issues,\n      recommendations: validation.recommendations,\n      score: Math.round(score),\n      formName\n    };\n  },\n\n  /**\n   * Generate quality report for multiple forms\n   */\n  generateQualityReport: (forms: Array<{ name: string; schema: Record<string, z.ZodType> }>): {\n    overallScore: number;\n    compliantForms: number;\n    totalForms: number;\n    detailedResults: FormQuality[];\n  } => {\n    const results = forms.map(form => \n      FormQualityAssessment.assessFormQuality(form.schema, form.name)\n    );\n    \n    const compliantForms = results.filter(r => r.isCompliant).length;\n    const averageScore = results.reduce((sum, r) => sum + r.score, 0) / results.length;\n    \n    return {\n      overallScore: Math.round(averageScore),\n      compliantForms,\n      totalForms: forms.length,\n      detailedResults: results\n    };\n  }\n};"],"mappings":"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C,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;M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","ignoreList":[]}