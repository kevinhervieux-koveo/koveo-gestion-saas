e3870978170b1980a20fb5589db1071e
"use strict";

/* istanbul ignore next */
function cov_1b1a9cyvql() {
  var path = "/home/runner/workspace/client/src/pages/manager/user-management.tsx";
  var hash = "c45d52f2691b0b6feda1db8e9f4ad590c137a5e2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/pages/manager/user-management.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "37": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "38": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "39": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 39,
          column: 54
        }
      },
      "40": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 54
        }
      },
      "41": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "42": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 48
        }
      },
      "43": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "44": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 46
        }
      },
      "45": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 50
        }
      },
      "46": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "47": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "48": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 50
        }
      },
      "49": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "50": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "51": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "52": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "53": {
        start: {
          line: 53,
          column: 33
        },
        end: {
          line: 53,
          column: 85
        }
      },
      "54": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 54,
          column: 52
        }
      },
      "55": {
        start: {
          line: 55,
          column: 14
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "56": {
        start: {
          line: 56,
          column: 14
        },
        end: {
          line: 56,
          column: 28
        }
      },
      "57": {
        start: {
          line: 57,
          column: 36
        },
        end: {
          line: 57,
          column: 85
        }
      },
      "58": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 58,
          column: 85
        }
      },
      "59": {
        start: {
          line: 59,
          column: 27
        },
        end: {
          line: 59,
          column: 77
        }
      },
      "60": {
        start: {
          line: 60,
          column: 28
        },
        end: {
          line: 60,
          column: 79
        }
      },
      "61": {
        start: {
          line: 61,
          column: 31
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "62": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "63": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "64": {
        start: {
          line: 64,
          column: 50
        },
        end: {
          line: 64,
          column: 60
        }
      },
      "65": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "66": {
        start: {
          line: 74,
          column: 25
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "67": {
        start: {
          line: 84,
          column: 18
        },
        end: {
          line: 84,
          column: 51
        }
      },
      "68": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "69": {
        start: {
          line: 86,
          column: 46
        },
        end: {
          line: 86,
          column: 78
        }
      },
      "70": {
        start: {
          line: 87,
          column: 52
        },
        end: {
          line: 87,
          column: 80
        }
      },
      "71": {
        start: {
          line: 88,
          column: 42
        },
        end: {
          line: 88,
          column: 69
        }
      },
      "72": {
        start: {
          line: 89,
          column: 44
        },
        end: {
          line: 89,
          column: 71
        }
      },
      "73": {
        start: {
          line: 90,
          column: 68
        },
        end: {
          line: 90,
          column: 95
        }
      },
      "74": {
        start: {
          line: 91,
          column: 62
        },
        end: {
          line: 91,
          column: 89
        }
      },
      "75": {
        start: {
          line: 92,
          column: 66
        },
        end: {
          line: 92,
          column: 94
        }
      },
      "76": {
        start: {
          line: 94,
          column: 42
        },
        end: {
          line: 94,
          column: 66
        }
      },
      "77": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 27
        }
      },
      "78": {
        start: {
          line: 97,
          column: 42
        },
        end: {
          line: 97,
          column: 67
        }
      },
      "79": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 57
        }
      },
      "80": {
        start: {
          line: 99,
          column: 40
        },
        end: {
          line: 99,
          column: 65
        }
      },
      "81": {
        start: {
          line: 100,
          column: 44
        },
        end: {
          line: 100,
          column: 69
        }
      },
      "82": {
        start: {
          line: 101,
          column: 56
        },
        end: {
          line: 101,
          column: 81
        }
      },
      "83": {
        start: {
          line: 102,
          column: 44
        },
        end: {
          line: 102,
          column: 69
        }
      },
      "84": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 109,
          column: 22
        }
      },
      "85": {
        start: {
          line: 105,
          column: 26
        },
        end: {
          line: 107,
          column: 16
        }
      },
      "86": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 35
        }
      },
      "87": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 45
        }
      },
      "88": {
        start: {
          line: 108,
          column: 21
        },
        end: {
          line: 108,
          column: 44
        }
      },
      "89": {
        start: {
          line: 111,
          column: 81
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "90": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "91": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 128,
          column: 50
        }
      },
      "92": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 50
        }
      },
      "93": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 130,
          column: 54
        }
      },
      "94": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 54
        }
      },
      "95": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 132,
          column: 66
        }
      },
      "96": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 66
        }
      },
      "97": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 134,
          column: 54
        }
      },
      "98": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 54
        }
      },
      "99": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 136,
          column: 48
        }
      },
      "100": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 48
        }
      },
      "101": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 137,
          column: 75
        }
      },
      "102": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "103": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 57
        }
      },
      "104": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 35
        }
      },
      "105": {
        start: {
          line: 145,
          column: 18
        },
        end: {
          line: 145,
          column: 44
        }
      },
      "106": {
        start: {
          line: 146,
          column: 27
        },
        end: {
          line: 146,
          column: 52
        }
      },
      "107": {
        start: {
          line: 148,
          column: 36
        },
        end: {
          line: 150,
          column: 6
        }
      },
      "108": {
        start: {
          line: 152,
          column: 41
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "109": {
        start: {
          line: 157,
          column: 37
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "110": {
        start: {
          line: 162,
          column: 38
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "111": {
        start: {
          line: 167,
          column: 34
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "112": {
        start: {
          line: 171,
          column: 36
        },
        end: {
          line: 189,
          column: 43
        }
      },
      "113": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 173,
          column: 24
        }
      },
      "114": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 24
        }
      },
      "115": {
        start: {
          line: 175,
          column: 43
        },
        end: {
          line: 175,
          column: 83
        }
      },
      "116": {
        start: {
          line: 175,
          column: 59
        },
        end: {
          line: 175,
          column: 82
        }
      },
      "117": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 177,
          column: 24
        }
      },
      "118": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 24
        }
      },
      "119": {
        start: {
          line: 178,
          column: 34
        },
        end: {
          line: 178,
          column: 74
        }
      },
      "120": {
        start: {
          line: 179,
          column: 27
        },
        end: {
          line: 179,
          column: 102
        }
      },
      "121": {
        start: {
          line: 180,
          column: 37
        },
        end: {
          line: 180,
          column: 125
        }
      },
      "122": {
        start: {
          line: 180,
          column: 67
        },
        end: {
          line: 180,
          column: 124
        }
      },
      "123": {
        start: {
          line: 180,
          column: 91
        },
        end: {
          line: 180,
          column: 106
        }
      },
      "124": {
        start: {
          line: 181,
          column: 40
        },
        end: {
          line: 181,
          column: 128
        }
      },
      "125": {
        start: {
          line: 181,
          column: 70
        },
        end: {
          line: 181,
          column: 127
        }
      },
      "126": {
        start: {
          line: 181,
          column: 94
        },
        end: {
          line: 181,
          column: 109
        }
      },
      "127": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "128": {
        start: {
          line: 186,
          column: 60
        },
        end: {
          line: 186,
          column: 66
        }
      },
      "129": {
        start: {
          line: 187,
          column: 60
        },
        end: {
          line: 187,
          column: 119
        }
      },
      "130": {
        start: {
          line: 187,
          column: 84
        },
        end: {
          line: 187,
          column: 99
        }
      },
      "131": {
        start: {
          line: 191,
          column: 30
        },
        end: {
          line: 226,
          column: 46
        }
      },
      "132": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "133": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "134": {
        start: {
          line: 194,
          column: 25
        },
        end: {
          line: 194,
          column: 36
        }
      },
      "135": {
        start: {
          line: 195,
          column: 78
        },
        end: {
          line: 195,
          column: 101
        }
      },
      "136": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "137": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 206,
          column: 14
        }
      },
      "138": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "139": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "140": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "141": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 222,
          column: 14
        }
      },
      "142": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 18
        }
      },
      "143": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 115
        }
      },
      "144": {
        start: {
          line: 228,
          column: 54
        },
        end: {
          line: 228,
          column: 93
        }
      },
      "145": {
        start: {
          line: 230,
          column: 31
        },
        end: {
          line: 255,
          column: 6
        }
      },
      "146": {
        start: {
          line: 232,
          column: 36
        },
        end: {
          line: 232,
          column: 61
        }
      },
      "147": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 237,
          column: 14
        }
      },
      "148": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 35
        }
      },
      "149": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 244,
          column: 15
        }
      },
      "150": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 40
        }
      },
      "151": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 86
        }
      },
      "152": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "153": {
        start: {
          line: 256,
          column: 29
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "154": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 63
        }
      },
      "155": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "156": {
        start: {
          line: 262,
          column: 29
        },
        end: {
          line: 262,
          column: 110
        }
      },
      "157": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 35
        }
      },
      "158": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "159": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 33
        }
      },
      "160": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 86
        }
      },
      "161": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "162": {
        start: {
          line: 282,
          column: 21
        },
        end: {
          line: 291,
          column: 6
        }
      },
      "163": {
        start: {
          line: 293,
          column: 23
        },
        end: {
          line: 299,
          column: 6
        }
      },
      "164": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 311,
          column: 32
        }
      },
      "165": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "166": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 309,
          column: 15
        }
      },
      "167": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 320,
          column: 35
        }
      },
      "168": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "169": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 318,
          column: 15
        }
      },
      "170": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 326,
          column: 69
        }
      },
      "171": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "172": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 30
        }
      },
      "173": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 332,
          column: 5
        }
      },
      "174": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "175": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 19
        }
      },
      "176": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 78
        }
      },
      "177": {
        start: {
          line: 333,
          column: 27
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "178": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 29
        }
      },
      "179": {
        start: {
          line: 337,
          column: 36
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "180": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 56
        }
      },
      "181": {
        start: {
          line: 338,
          column: 31
        },
        end: {
          line: 338,
          column: 46
        }
      },
      "182": {
        start: {
          line: 340,
          column: 29
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "183": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 30
        }
      },
      "184": {
        start: {
          line: 343,
          column: 29
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "185": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "186": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "187": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 88
        }
      },
      "188": {
        start: {
          line: 350,
          column: 38
        },
        end: {
          line: 373,
          column: 6
        }
      },
      "189": {
        start: {
          line: 352,
          column: 29
        },
        end: {
          line: 354,
          column: 14
        }
      },
      "190": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 35
        }
      },
      "191": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 361,
          column: 15
        }
      },
      "192": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 46
        }
      },
      "193": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 86
        }
      },
      "194": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 109
        }
      },
      "195": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 371,
          column: 15
        }
      },
      "196": {
        start: {
          line: 375,
          column: 34
        },
        end: {
          line: 396,
          column: 6
        }
      },
      "197": {
        start: {
          line: 377,
          column: 29
        },
        end: {
          line: 379,
          column: 14
        }
      },
      "198": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 35
        }
      },
      "199": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 386,
          column: 15
        }
      },
      "200": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 86
        }
      },
      "201": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 394,
          column: 15
        }
      },
      "202": {
        start: {
          line: 398,
          column: 35
        },
        end: {
          line: 421,
          column: 6
        }
      },
      "203": {
        start: {
          line: 400,
          column: 29
        },
        end: {
          line: 402,
          column: 14
        }
      },
      "204": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 35
        }
      },
      "205": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 409,
          column: 15
        }
      },
      "206": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 43
        }
      },
      "207": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 86
        }
      },
      "208": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 106
        }
      },
      "209": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 419,
          column: 15
        }
      },
      "210": {
        start: {
          line: 423,
          column: 31
        },
        end: {
          line: 448,
          column: 6
        }
      },
      "211": {
        start: {
          line: 425,
          column: 29
        },
        end: {
          line: 425,
          column: 117
        }
      },
      "212": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 35
        }
      },
      "213": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 432,
          column: 15
        }
      },
      "214": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 34
        }
      },
      "215": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 86
        }
      },
      "216": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 109
        }
      },
      "217": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 106
        }
      },
      "218": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 83
        }
      },
      "219": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 446,
          column: 15
        }
      },
      "220": {
        start: {
          line: 450,
          column: 33
        },
        end: {
          line: 450,
          column: 62
        }
      },
      "221": {
        start: {
          line: 451,
          column: 30
        },
        end: {
          line: 451,
          column: 94
        }
      },
      "222": {
        start: {
          line: 452,
          column: 27
        },
        end: {
          line: 452,
          column: 56
        }
      },
      "223": {
        start: {
          line: 502,
          column: 26
        },
        end: {
          line: 502,
          column: 31
        }
      },
      "224": {
        start: {
          line: 513,
          column: 31
        },
        end: {
          line: 520,
          column: 5
        }
      },
      "225": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 27
        }
      },
      "226": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 22
        }
      },
      "227": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 26
        }
      },
      "228": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 28
        }
      },
      "229": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 34
        }
      },
      "230": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 519,
          column: 28
        }
      },
      "231": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 526,
          column: 29
        }
      },
      "232": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 525,
          column: 9
        }
      },
      "233": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 32
        }
      },
      "234": {
        start: {
          line: 528,
          column: 38
        },
        end: {
          line: 564,
          column: 6
        }
      },
      "235": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 74
        }
      },
      "236": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 103
        }
      },
      "237": {
        start: {
          line: 532,
          column: 29
        },
        end: {
          line: 534,
          column: 14
        }
      },
      "238": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 100
        }
      },
      "239": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 540,
          column: 13
        }
      },
      "240": {
        start: {
          line: 537,
          column: 30
        },
        end: {
          line: 537,
          column: 51
        }
      },
      "241": {
        start: {
          line: 538,
          column: 16
        },
        end: {
          line: 538,
          column: 73
        }
      },
      "242": {
        start: {
          line: 539,
          column: 16
        },
        end: {
          line: 539,
          column: 80
        }
      },
      "243": {
        start: {
          line: 541,
          column: 27
        },
        end: {
          line: 541,
          column: 48
        }
      },
      "244": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 70
        }
      },
      "245": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 543,
          column: 26
        }
      },
      "246": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 546,
          column: 82
        }
      },
      "247": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 550,
          column: 15
        }
      },
      "248": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 551,
          column: 66
        }
      },
      "249": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 553,
          column: 86
        }
      },
      "250": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 554,
          column: 46
        }
      },
      "251": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 557,
          column: 82
        }
      },
      "252": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 562,
          column: 15
        }
      },
      "253": {
        start: {
          line: 566,
          column: 36
        },
        end: {
          line: 570,
          column: 5
        }
      },
      "254": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 68
        }
      },
      "255": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 568,
          column: 85
        }
      },
      "256": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 569,
          column: 43
        }
      },
      "257": {
        start: {
          line: 579,
          column: 23
        },
        end: {
          line: 579,
          column: 49
        }
      },
      "258": {
        start: {
          line: 580,
          column: 26
        },
        end: {
          line: 580,
          column: 46
        }
      },
      "259": {
        start: {
          line: 582,
          column: 29
        },
        end: {
          line: 582,
          column: 93
        }
      },
      "260": {
        start: {
          line: 584,
          column: 33
        },
        end: {
          line: 586,
          column: 60
        }
      },
      "261": {
        start: {
          line: 585,
          column: 34
        },
        end: {
          line: 585,
          column: 47
        }
      },
      "262": {
        start: {
          line: 587,
          column: 32
        },
        end: {
          line: 589,
          column: 60
        }
      },
      "263": {
        start: {
          line: 588,
          column: 34
        },
        end: {
          line: 588,
          column: 55
        }
      },
      "264": {
        start: {
          line: 590,
          column: 32
        },
        end: {
          line: 590,
          column: 82
        }
      },
      "265": {
        start: {
          line: 592,
          column: 23
        },
        end: {
          line: 592,
          column: 54
        }
      },
      "266": {
        start: {
          line: 593,
          column: 20
        },
        end: {
          line: 593,
          column: 52
        }
      },
      "267": {
        start: {
          line: 594,
          column: 20
        },
        end: {
          line: 594,
          column: 52
        }
      },
      "268": {
        start: {
          line: 596,
          column: 25
        },
        end: {
          line: 596,
          column: 38
        }
      },
      "269": {
        start: {
          line: 597,
          column: 4
        },
        end: {
          line: 599,
          column: 5
        }
      },
      "270": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 598,
          column: 522
        }
      },
      "271": {
        start: {
          line: 600,
          column: 4
        },
        end: {
          line: 624,
          column: 5730
        }
      },
      "272": {
        start: {
          line: 600,
          column: 3401
        },
        end: {
          line: 600,
          column: 3426
        }
      },
      "273": {
        start: {
          line: 600,
          column: 3656
        },
        end: {
          line: 600,
          column: 3688
        }
      },
      "274": {
        start: {
          line: 600,
          column: 4534
        },
        end: {
          line: 600,
          column: 4564
        }
      },
      "275": {
        start: {
          line: 600,
          column: 4664
        },
        end: {
          line: 600,
          column: 4693
        }
      },
      "276": {
        start: {
          line: 600,
          column: 4800
        },
        end: {
          line: 600,
          column: 4889
        }
      },
      "277": {
        start: {
          line: 600,
          column: 4975
        },
        end: {
          line: 600,
          column: 5006
        }
      },
      "278": {
        start: {
          line: 600,
          column: 5118
        },
        end: {
          line: 600,
          column: 5213
        }
      },
      "279": {
        start: {
          line: 600,
          column: 5380
        },
        end: {
          line: 600,
          column: 5417
        }
      },
      "280": {
        start: {
          line: 600,
          column: 5529
        },
        end: {
          line: 600,
          column: 5615
        }
      },
      "281": {
        start: {
          line: 600,
          column: 5794
        },
        end: {
          line: 600,
          column: 5825
        }
      },
      "282": {
        start: {
          line: 600,
          column: 5940
        },
        end: {
          line: 600,
          column: 6035
        }
      },
      "283": {
        start: {
          line: 600,
          column: 7605
        },
        end: {
          line: 600,
          column: 7652
        }
      },
      "284": {
        start: {
          line: 600,
          column: 7630
        },
        end: {
          line: 600,
          column: 7651
        }
      },
      "285": {
        start: {
          line: 600,
          column: 7980
        },
        end: {
          line: 600,
          column: 8036
        }
      },
      "286": {
        start: {
          line: 600,
          column: 8005
        },
        end: {
          line: 600,
          column: 8035
        }
      },
      "287": {
        start: {
          line: 602,
          column: 32
        },
        end: {
          line: 602,
          column: 106
        }
      },
      "288": {
        start: {
          line: 603,
          column: 121
        },
        end: {
          line: 603,
          column: 150
        }
      },
      "289": {
        start: {
          line: 603,
          column: 1776
        },
        end: {
          line: 603,
          column: 2102
        }
      },
      "290": {
        start: {
          line: 603,
          column: 2220
        },
        end: {
          line: 603,
          column: 2544
        }
      },
      "291": {
        start: {
          line: 603,
          column: 2663
        },
        end: {
          line: 603,
          column: 2996
        }
      },
      "292": {
        start: {
          line: 603,
          column: 3110
        },
        end: {
          line: 603,
          column: 3831
        }
      },
      "293": {
        start: {
          line: 603,
          column: 3664
        },
        end: {
          line: 603,
          column: 3764
        }
      },
      "294": {
        start: {
          line: 603,
          column: 3949
        },
        end: {
          line: 603,
          column: 4797
        }
      },
      "295": {
        start: {
          line: 603,
          column: 4148
        },
        end: {
          line: 603,
          column: 4180
        }
      },
      "296": {
        start: {
          line: 603,
          column: 4956
        },
        end: {
          line: 603,
          column: 4976
        }
      },
      "297": {
        start: {
          line: 604,
          column: 56
        },
        end: {
          line: 609,
          column: 57
        }
      },
      "298": {
        start: {
          line: 605,
          column: 60
        },
        end: {
          line: 608,
          column: 63
        }
      },
      "299": {
        start: {
          line: 611,
          column: 56
        },
        end: {
          line: 616,
          column: 57
        }
      },
      "300": {
        start: {
          line: 612,
          column: 60
        },
        end: {
          line: 615,
          column: 63
        }
      },
      "301": {
        start: {
          line: 618,
          column: 56
        },
        end: {
          line: 623,
          column: 57
        }
      },
      "302": {
        start: {
          line: 619,
          column: 60
        },
        end: {
          line: 622,
          column: 63
        }
      },
      "303": {
        start: {
          line: 624,
          column: 1777
        },
        end: {
          line: 624,
          column: 1810
        }
      },
      "304": {
        start: {
          line: 624,
          column: 2277
        },
        end: {
          line: 624,
          column: 2307
        }
      },
      "305": {
        start: {
          line: 624,
          column: 4144
        },
        end: {
          line: 624,
          column: 4645
        }
      },
      "306": {
        start: {
          line: 624,
          column: 4763
        },
        end: {
          line: 624,
          column: 5166
        }
      },
      "307": {
        start: {
          line: 624,
          column: 5336
        },
        end: {
          line: 624,
          column: 5357
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 30
          }
        },
        loc: {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 63
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 64,
            column: 43
          }
        },
        loc: {
          start: {
            line: 64,
            column: 50
          },
          end: {
            line: 64,
            column: 60
          }
        },
        line: 64
      },
      "11": {
        name: "UserManagement",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 23
          }
        },
        loc: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 625,
            column: 1
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 104,
            column: 27
          },
          end: {
            line: 104,
            column: 28
          }
        },
        loc: {
          start: {
            line: 104,
            column: 33
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 104
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 38
          }
        },
        loc: {
          start: {
            line: 105,
            column: 43
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 105
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 16
          }
        },
        loc: {
          start: {
            line: 108,
            column: 21
          },
          end: {
            line: 108,
            column: 44
          }
        },
        line: 108
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 121,
            column: 17
          },
          end: {
            line: 121,
            column: 18
          }
        },
        loc: {
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 121
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 171,
            column: 57
          },
          end: {
            line: 171,
            column: 58
          }
        },
        loc: {
          start: {
            line: 171,
            column: 63
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 171
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 175,
            column: 54
          },
          end: {
            line: 175,
            column: 55
          }
        },
        loc: {
          start: {
            line: 175,
            column: 59
          },
          end: {
            line: 175,
            column: 82
          }
        },
        line: 175
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 180,
            column: 60
          },
          end: {
            line: 180,
            column: 61
          }
        },
        loc: {
          start: {
            line: 180,
            column: 67
          },
          end: {
            line: 180,
            column: 124
          }
        },
        line: 180
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 180,
            column: 86
          },
          end: {
            line: 180,
            column: 87
          }
        },
        loc: {
          start: {
            line: 180,
            column: 91
          },
          end: {
            line: 180,
            column: 106
          }
        },
        line: 180
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 181,
            column: 63
          },
          end: {
            line: 181,
            column: 64
          }
        },
        loc: {
          start: {
            line: 181,
            column: 70
          },
          end: {
            line: 181,
            column: 127
          }
        },
        line: 181
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 181,
            column: 89
          },
          end: {
            line: 181,
            column: 90
          }
        },
        loc: {
          start: {
            line: 181,
            column: 94
          },
          end: {
            line: 181,
            column: 109
          }
        },
        line: 181
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 186,
            column: 53
          },
          end: {
            line: 186,
            column: 54
          }
        },
        loc: {
          start: {
            line: 186,
            column: 60
          },
          end: {
            line: 186,
            column: 66
          }
        },
        line: 186
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 187,
            column: 53
          },
          end: {
            line: 187,
            column: 54
          }
        },
        loc: {
          start: {
            line: 187,
            column: 60
          },
          end: {
            line: 187,
            column: 119
          }
        },
        line: 187
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 187,
            column: 79
          },
          end: {
            line: 187,
            column: 80
          }
        },
        loc: {
          start: {
            line: 187,
            column: 84
          },
          end: {
            line: 187,
            column: 99
          }
        },
        line: 187
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 191,
            column: 51
          },
          end: {
            line: 191,
            column: 52
          }
        },
        loc: {
          start: {
            line: 191,
            column: 57
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 191
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 228,
            column: 48
          },
          end: {
            line: 228,
            column: 49
          }
        },
        loc: {
          start: {
            line: 228,
            column: 54
          },
          end: {
            line: 228,
            column: 93
          }
        },
        line: 228
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        },
        loc: {
          start: {
            line: 231,
            column: 48
          },
          end: {
            line: 239,
            column: 9
          }
        },
        line: 231
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 240,
            column: 19
          },
          end: {
            line: 240,
            column: 20
          }
        },
        loc: {
          start: {
            line: 240,
            column: 25
          },
          end: {
            line: 247,
            column: 9
          }
        },
        line: 240
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 248,
            column: 17
          },
          end: {
            line: 248,
            column: 18
          }
        },
        loc: {
          start: {
            line: 248,
            column: 29
          },
          end: {
            line: 254,
            column: 9
          }
        },
        line: 248
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 256,
            column: 29
          },
          end: {
            line: 256,
            column: 30
          }
        },
        loc: {
          start: {
            line: 256,
            column: 53
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 256
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 261,
            column: 21
          }
        },
        loc: {
          start: {
            line: 261,
            column: 40
          },
          end: {
            line: 264,
            column: 9
          }
        },
        line: 261
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 265,
            column: 19
          },
          end: {
            line: 265,
            column: 20
          }
        },
        loc: {
          start: {
            line: 265,
            column: 25
          },
          end: {
            line: 272,
            column: 9
          }
        },
        line: 265
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 273,
            column: 17
          },
          end: {
            line: 273,
            column: 18
          }
        },
        loc: {
          start: {
            line: 273,
            column: 28
          },
          end: {
            line: 279,
            column: 9
          }
        },
        line: 273
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 301,
            column: 30
          },
          end: {
            line: 301,
            column: 31
          }
        },
        loc: {
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 301
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 31
          }
        },
        loc: {
          start: {
            line: 313,
            column: 36
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 313
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 322,
            column: 30
          },
          end: {
            line: 322,
            column: 31
          }
        },
        loc: {
          start: {
            line: 322,
            column: 36
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 322
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 327,
            column: 27
          },
          end: {
            line: 327,
            column: 28
          }
        },
        loc: {
          start: {
            line: 327,
            column: 45
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 327
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 333,
            column: 27
          },
          end: {
            line: 333,
            column: 28
          }
        },
        loc: {
          start: {
            line: 333,
            column: 37
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 333
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 337,
            column: 36
          },
          end: {
            line: 337,
            column: 37
          }
        },
        loc: {
          start: {
            line: 337,
            column: 48
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 337
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 338,
            column: 26
          },
          end: {
            line: 338,
            column: 27
          }
        },
        loc: {
          start: {
            line: 338,
            column: 31
          },
          end: {
            line: 338,
            column: 46
          }
        },
        line: 338
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 340,
            column: 29
          },
          end: {
            line: 340,
            column: 30
          }
        },
        loc: {
          start: {
            line: 340,
            column: 39
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 340
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 343,
            column: 29
          },
          end: {
            line: 343,
            column: 30
          }
        },
        loc: {
          start: {
            line: 343,
            column: 47
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 343
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 351,
            column: 20
          },
          end: {
            line: 351,
            column: 21
          }
        },
        loc: {
          start: {
            line: 351,
            column: 60
          },
          end: {
            line: 356,
            column: 9
          }
        },
        line: 351
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 357,
            column: 19
          },
          end: {
            line: 357,
            column: 20
          }
        },
        loc: {
          start: {
            line: 357,
            column: 25
          },
          end: {
            line: 365,
            column: 9
          }
        },
        line: 357
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 366,
            column: 17
          },
          end: {
            line: 366,
            column: 18
          }
        },
        loc: {
          start: {
            line: 366,
            column: 28
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 366
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 376,
            column: 20
          },
          end: {
            line: 376,
            column: 21
          }
        },
        loc: {
          start: {
            line: 376,
            column: 56
          },
          end: {
            line: 381,
            column: 9
          }
        },
        line: 376
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 382,
            column: 19
          },
          end: {
            line: 382,
            column: 20
          }
        },
        loc: {
          start: {
            line: 382,
            column: 25
          },
          end: {
            line: 388,
            column: 9
          }
        },
        line: 382
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 389,
            column: 17
          },
          end: {
            line: 389,
            column: 18
          }
        },
        loc: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 395,
            column: 9
          }
        },
        line: 389
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 399,
            column: 20
          },
          end: {
            line: 399,
            column: 21
          }
        },
        loc: {
          start: {
            line: 399,
            column: 65
          },
          end: {
            line: 404,
            column: 9
          }
        },
        line: 399
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 405,
            column: 19
          },
          end: {
            line: 405,
            column: 20
          }
        },
        loc: {
          start: {
            line: 405,
            column: 25
          },
          end: {
            line: 413,
            column: 9
          }
        },
        line: 405
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 414,
            column: 17
          },
          end: {
            line: 414,
            column: 18
          }
        },
        loc: {
          start: {
            line: 414,
            column: 28
          },
          end: {
            line: 420,
            column: 9
          }
        },
        line: 414
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 424,
            column: 20
          },
          end: {
            line: 424,
            column: 21
          }
        },
        loc: {
          start: {
            line: 424,
            column: 49
          },
          end: {
            line: 427,
            column: 9
          }
        },
        line: 424
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 428,
            column: 19
          },
          end: {
            line: 428,
            column: 20
          }
        },
        loc: {
          start: {
            line: 428,
            column: 25
          },
          end: {
            line: 440,
            column: 9
          }
        },
        line: 428
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 441,
            column: 17
          },
          end: {
            line: 441,
            column: 18
          }
        },
        loc: {
          start: {
            line: 441,
            column: 28
          },
          end: {
            line: 447,
            column: 9
          }
        },
        line: 441
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 513,
            column: 31
          },
          end: {
            line: 513,
            column: 32
          }
        },
        loc: {
          start: {
            line: 513,
            column: 37
          },
          end: {
            line: 520,
            column: 5
          }
        },
        line: 513
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 522,
            column: 27
          },
          end: {
            line: 522,
            column: 28
          }
        },
        loc: {
          start: {
            line: 522,
            column: 33
          },
          end: {
            line: 526,
            column: 5
          }
        },
        line: 522
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 529,
            column: 20
          },
          end: {
            line: 529,
            column: 21
          }
        },
        loc: {
          start: {
            line: 529,
            column: 32
          },
          end: {
            line: 544,
            column: 9
          }
        },
        line: 529
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 545,
            column: 19
          },
          end: {
            line: 545,
            column: 20
          }
        },
        loc: {
          start: {
            line: 545,
            column: 29
          },
          end: {
            line: 555,
            column: 9
          }
        },
        line: 545
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 556,
            column: 17
          },
          end: {
            line: 556,
            column: 18
          }
        },
        loc: {
          start: {
            line: 556,
            column: 28
          },
          end: {
            line: 563,
            column: 9
          }
        },
        line: 556
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 566,
            column: 36
          },
          end: {
            line: 566,
            column: 37
          }
        },
        loc: {
          start: {
            line: 566,
            column: 42
          },
          end: {
            line: 570,
            column: 5
          }
        },
        line: 566
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 585,
            column: 24
          },
          end: {
            line: 585,
            column: 25
          }
        },
        loc: {
          start: {
            line: 585,
            column: 34
          },
          end: {
            line: 585,
            column: 47
          }
        },
        line: 585
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 588,
            column: 24
          },
          end: {
            line: 588,
            column: 25
          }
        },
        loc: {
          start: {
            line: 588,
            column: 34
          },
          end: {
            line: 588,
            column: 55
          }
        },
        line: 588
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 600,
            column: 3395
          },
          end: {
            line: 600,
            column: 3396
          }
        },
        loc: {
          start: {
            line: 600,
            column: 3401
          },
          end: {
            line: 600,
            column: 3426
          }
        },
        line: 600
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 600,
            column: 3650
          },
          end: {
            line: 600,
            column: 3651
          }
        },
        loc: {
          start: {
            line: 600,
            column: 3656
          },
          end: {
            line: 600,
            column: 3688
          }
        },
        line: 600
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 600,
            column: 4527
          },
          end: {
            line: 600,
            column: 4528
          }
        },
        loc: {
          start: {
            line: 600,
            column: 4534
          },
          end: {
            line: 600,
            column: 4564
          }
        },
        line: 600
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 600,
            column: 4657
          },
          end: {
            line: 600,
            column: 4658
          }
        },
        loc: {
          start: {
            line: 600,
            column: 4664
          },
          end: {
            line: 600,
            column: 4693
          }
        },
        line: 600
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 600,
            column: 4789
          },
          end: {
            line: 600,
            column: 4790
          }
        },
        loc: {
          start: {
            line: 600,
            column: 4800
          },
          end: {
            line: 600,
            column: 4889
          }
        },
        line: 600
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 600,
            column: 4968
          },
          end: {
            line: 600,
            column: 4969
          }
        },
        loc: {
          start: {
            line: 600,
            column: 4975
          },
          end: {
            line: 600,
            column: 5006
          }
        },
        line: 600
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 600,
            column: 5105
          },
          end: {
            line: 600,
            column: 5106
          }
        },
        loc: {
          start: {
            line: 600,
            column: 5118
          },
          end: {
            line: 600,
            column: 5213
          }
        },
        line: 600
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 600,
            column: 5373
          },
          end: {
            line: 600,
            column: 5374
          }
        },
        loc: {
          start: {
            line: 600,
            column: 5380
          },
          end: {
            line: 600,
            column: 5417
          }
        },
        line: 600
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 600,
            column: 5519
          },
          end: {
            line: 600,
            column: 5520
          }
        },
        loc: {
          start: {
            line: 600,
            column: 5529
          },
          end: {
            line: 600,
            column: 5615
          }
        },
        line: 600
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 600,
            column: 5787
          },
          end: {
            line: 600,
            column: 5788
          }
        },
        loc: {
          start: {
            line: 600,
            column: 5794
          },
          end: {
            line: 600,
            column: 5825
          }
        },
        line: 600
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 600,
            column: 5927
          },
          end: {
            line: 600,
            column: 5928
          }
        },
        loc: {
          start: {
            line: 600,
            column: 5940
          },
          end: {
            line: 600,
            column: 6035
          }
        },
        line: 600
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 600,
            column: 7599
          },
          end: {
            line: 600,
            column: 7600
          }
        },
        loc: {
          start: {
            line: 600,
            column: 7605
          },
          end: {
            line: 600,
            column: 7652
          }
        },
        line: 600
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 600,
            column: 7620
          },
          end: {
            line: 600,
            column: 7621
          }
        },
        loc: {
          start: {
            line: 600,
            column: 7630
          },
          end: {
            line: 600,
            column: 7651
          }
        },
        line: 600
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 600,
            column: 7974
          },
          end: {
            line: 600,
            column: 7975
          }
        },
        loc: {
          start: {
            line: 600,
            column: 7980
          },
          end: {
            line: 600,
            column: 8036
          }
        },
        line: 600
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 600,
            column: 7995
          },
          end: {
            line: 600,
            column: 7996
          }
        },
        loc: {
          start: {
            line: 600,
            column: 8005
          },
          end: {
            line: 600,
            column: 8035
          }
        },
        line: 600
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 600,
            column: 8454
          },
          end: {
            line: 600,
            column: 8455
          }
        },
        loc: {
          start: {
            line: 600,
            column: 8460
          },
          end: {
            line: 603,
            column: 29
          }
        },
        line: 600
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 603,
            column: 111
          },
          end: {
            line: 603,
            column: 112
          }
        },
        loc: {
          start: {
            line: 603,
            column: 121
          },
          end: {
            line: 603,
            column: 150
          }
        },
        line: 603
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 603,
            column: 1760
          },
          end: {
            line: 603,
            column: 1761
          }
        },
        loc: {
          start: {
            line: 603,
            column: 1776
          },
          end: {
            line: 603,
            column: 2102
          }
        },
        line: 603
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 603,
            column: 2204
          },
          end: {
            line: 603,
            column: 2205
          }
        },
        loc: {
          start: {
            line: 603,
            column: 2220
          },
          end: {
            line: 603,
            column: 2544
          }
        },
        line: 603
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 603,
            column: 2647
          },
          end: {
            line: 603,
            column: 2648
          }
        },
        loc: {
          start: {
            line: 603,
            column: 2663
          },
          end: {
            line: 603,
            column: 2996
          }
        },
        line: 603
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 603,
            column: 3094
          },
          end: {
            line: 603,
            column: 3095
          }
        },
        loc: {
          start: {
            line: 603,
            column: 3110
          },
          end: {
            line: 603,
            column: 3831
          }
        },
        line: 603
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 603,
            column: 3653
          },
          end: {
            line: 603,
            column: 3654
          }
        },
        loc: {
          start: {
            line: 603,
            column: 3664
          },
          end: {
            line: 603,
            column: 3764
          }
        },
        line: 603
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 603,
            column: 3933
          },
          end: {
            line: 603,
            column: 3934
          }
        },
        loc: {
          start: {
            line: 603,
            column: 3949
          },
          end: {
            line: 603,
            column: 4797
          }
        },
        line: 603
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 603,
            column: 4137
          },
          end: {
            line: 603,
            column: 4138
          }
        },
        loc: {
          start: {
            line: 603,
            column: 4148
          },
          end: {
            line: 603,
            column: 4180
          }
        },
        line: 603
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 603,
            column: 4950
          },
          end: {
            line: 603,
            column: 4951
          }
        },
        loc: {
          start: {
            line: 603,
            column: 4956
          },
          end: {
            line: 603,
            column: 4976
          }
        },
        line: 603
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 603,
            column: 5581
          },
          end: {
            line: 603,
            column: 5582
          }
        },
        loc: {
          start: {
            line: 603,
            column: 5602
          },
          end: {
            line: 610,
            column: 53
          }
        },
        line: 603
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 610,
            column: 369
          },
          end: {
            line: 610,
            column: 370
          }
        },
        loc: {
          start: {
            line: 610,
            column: 386
          },
          end: {
            line: 617,
            column: 53
          }
        },
        line: 610
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 617,
            column: 391
          },
          end: {
            line: 617,
            column: 392
          }
        },
        loc: {
          start: {
            line: 617,
            column: 417
          },
          end: {
            line: 624,
            column: 53
          }
        },
        line: 617
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 624,
            column: 1771
          },
          end: {
            line: 624,
            column: 1772
          }
        },
        loc: {
          start: {
            line: 624,
            column: 1777
          },
          end: {
            line: 624,
            column: 1810
          }
        },
        line: 624
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 624,
            column: 2267
          },
          end: {
            line: 624,
            column: 2268
          }
        },
        loc: {
          start: {
            line: 624,
            column: 2277
          },
          end: {
            line: 624,
            column: 2307
          }
        },
        line: 624
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 624,
            column: 4128
          },
          end: {
            line: 624,
            column: 4129
          }
        },
        loc: {
          start: {
            line: 624,
            column: 4144
          },
          end: {
            line: 624,
            column: 4645
          }
        },
        line: 624
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 624,
            column: 4747
          },
          end: {
            line: 624,
            column: 4748
          }
        },
        loc: {
          start: {
            line: 624,
            column: 4763
          },
          end: {
            line: 624,
            column: 5166
          }
        },
        line: 624
      },
      "95": {
        name: "(anonymous_95)",
        decl: {
          start: {
            line: 624,
            column: 5330
          },
          end: {
            line: 624,
            column: 5331
          }
        },
        loc: {
          start: {
            line: 624,
            column: 5336
          },
          end: {
            line: 624,
            column: 5357
          }
        },
        line: 624
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 69,
            column: 14
          },
          end: {
            line: 69,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 38
          },
          end: {
            line: 69,
            column: 62
          }
        }, {
          start: {
            line: 69,
            column: 65
          },
          end: {
            line: 69,
            column: 117
          }
        }],
        line: 69
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 128,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 128,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "19": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 130,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 130,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 132,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 132,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 134,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 134,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "22": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 136,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 136,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "23": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "24": {
        loc: {
          start: {
            line: 145,
            column: 18
          },
          end: {
            line: 145,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 18
          },
          end: {
            line: 145,
            column: 38
          }
        }, {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 145,
            column: 44
          }
        }],
        line: 145
      },
      "25": {
        loc: {
          start: {
            line: 152,
            column: 18
          },
          end: {
            line: 152,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 152,
            column: 36
          }
        }],
        line: 152
      },
      "26": {
        loc: {
          start: {
            line: 157,
            column: 18
          },
          end: {
            line: 157,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 157,
            column: 30
          },
          end: {
            line: 157,
            column: 32
          }
        }],
        line: 157
      },
      "27": {
        loc: {
          start: {
            line: 162,
            column: 18
          },
          end: {
            line: 162,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 31
          },
          end: {
            line: 162,
            column: 33
          }
        }],
        line: 162
      },
      "28": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 173,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 173,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "29": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 24
          }
        }, {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 172,
            column: 42
          }
        }, {
          start: {
            line: 172,
            column: 46
          },
          end: {
            line: 172,
            column: 52
          }
        }],
        line: 172
      },
      "30": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 177,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 177,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "31": {
        loc: {
          start: {
            line: 187,
            column: 60
          },
          end: {
            line: 187,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 60
          },
          end: {
            line: 187,
            column: 106
          }
        }, {
          start: {
            line: 187,
            column: 110
          },
          end: {
            line: 187,
            column: 119
          }
        }],
        line: 187
      },
      "32": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 193,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 193,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "33": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 24
          }
        }, {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 52
          }
        }],
        line: 192
      },
      "34": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "35": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "36": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "37": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "38": {
        loc: {
          start: {
            line: 304,
            column: 27
          },
          end: {
            line: 304,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 27
          },
          end: {
            line: 304,
            column: 48
          }
        }, {
          start: {
            line: 304,
            column: 52
          },
          end: {
            line: 304,
            column: 54
          }
        }],
        line: 304
      },
      "39": {
        loc: {
          start: {
            line: 305,
            column: 26
          },
          end: {
            line: 305,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 26
          },
          end: {
            line: 305,
            column: 46
          }
        }, {
          start: {
            line: 305,
            column: 50
          },
          end: {
            line: 305,
            column: 52
          }
        }],
        line: 305
      },
      "40": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "41": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "42": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "43": {
        loc: {
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 338,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 338,
            column: 47
          }
        }, {
          start: {
            line: 338,
            column: 51
          },
          end: {
            line: 338,
            column: 55
          }
        }],
        line: 338
      },
      "44": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "45": {
        loc: {
          start: {
            line: 444,
            column: 29
          },
          end: {
            line: 444,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 29
          },
          end: {
            line: 444,
            column: 42
          }
        }, {
          start: {
            line: 444,
            column: 46
          },
          end: {
            line: 444,
            column: 76
          }
        }],
        line: 444
      },
      "46": {
        loc: {
          start: {
            line: 451,
            column: 30
          },
          end: {
            line: 451,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 30
          },
          end: {
            line: 451,
            column: 59
          }
        }, {
          start: {
            line: 451,
            column: 63
          },
          end: {
            line: 451,
            column: 94
          }
        }],
        line: 451
      },
      "47": {
        loc: {
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "48": {
        loc: {
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 540,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 540,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "49": {
        loc: {
          start: {
            line: 539,
            column: 32
          },
          end: {
            line: 539,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 539,
            column: 32
          },
          end: {
            line: 539,
            column: 43
          }
        }, {
          start: {
            line: 539,
            column: 47
          },
          end: {
            line: 539,
            column: 78
          }
        }],
        line: 539
      },
      "50": {
        loc: {
          start: {
            line: 549,
            column: 29
          },
          end: {
            line: 549,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 29
          },
          end: {
            line: 549,
            column: 41
          }
        }, {
          start: {
            line: 549,
            column: 45
          },
          end: {
            line: 549,
            column: 88
          }
        }],
        line: 549
      },
      "51": {
        loc: {
          start: {
            line: 560,
            column: 29
          },
          end: {
            line: 560,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 560,
            column: 54
          },
          end: {
            line: 560,
            column: 67
          }
        }, {
          start: {
            line: 560,
            column: 70
          },
          end: {
            line: 560,
            column: 101
          }
        }],
        line: 560
      },
      "52": {
        loc: {
          start: {
            line: 579,
            column: 23
          },
          end: {
            line: 579,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 579,
            column: 23
          },
          end: {
            line: 579,
            column: 44
          }
        }, {
          start: {
            line: 579,
            column: 48
          },
          end: {
            line: 579,
            column: 49
          }
        }],
        line: 579
      },
      "53": {
        loc: {
          start: {
            line: 582,
            column: 29
          },
          end: {
            line: 582,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 582,
            column: 29
          },
          end: {
            line: 582,
            column: 39
          }
        }, {
          start: {
            line: 582,
            column: 43
          },
          end: {
            line: 582,
            column: 55
          }
        }, {
          start: {
            line: 582,
            column: 59
          },
          end: {
            line: 582,
            column: 77
          }
        }, {
          start: {
            line: 582,
            column: 81
          },
          end: {
            line: 582,
            column: 93
          }
        }],
        line: 582
      },
      "54": {
        loc: {
          start: {
            line: 584,
            column: 33
          },
          end: {
            line: 586,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 585,
            column: 10
          },
          end: {
            line: 585,
            column: 60
          }
        }, {
          start: {
            line: 586,
            column: 10
          },
          end: {
            line: 586,
            column: 60
          }
        }],
        line: 584
      },
      "55": {
        loc: {
          start: {
            line: 585,
            column: 10
          },
          end: {
            line: 585,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 585,
            column: 10
          },
          end: {
            line: 585,
            column: 55
          }
        }, {
          start: {
            line: 585,
            column: 59
          },
          end: {
            line: 585,
            column: 60
          }
        }],
        line: 585
      },
      "56": {
        loc: {
          start: {
            line: 586,
            column: 10
          },
          end: {
            line: 586,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 586,
            column: 27
          },
          end: {
            line: 586,
            column: 56
          }
        }, {
          start: {
            line: 586,
            column: 59
          },
          end: {
            line: 586,
            column: 60
          }
        }],
        line: 586
      },
      "57": {
        loc: {
          start: {
            line: 587,
            column: 32
          },
          end: {
            line: 589,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 588,
            column: 10
          },
          end: {
            line: 588,
            column: 68
          }
        }, {
          start: {
            line: 589,
            column: 10
          },
          end: {
            line: 589,
            column: 60
          }
        }],
        line: 587
      },
      "58": {
        loc: {
          start: {
            line: 588,
            column: 10
          },
          end: {
            line: 588,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 588,
            column: 10
          },
          end: {
            line: 588,
            column: 63
          }
        }, {
          start: {
            line: 588,
            column: 67
          },
          end: {
            line: 588,
            column: 68
          }
        }],
        line: 588
      },
      "59": {
        loc: {
          start: {
            line: 589,
            column: 10
          },
          end: {
            line: 589,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 589,
            column: 27
          },
          end: {
            line: 589,
            column: 56
          }
        }, {
          start: {
            line: 589,
            column: 59
          },
          end: {
            line: 589,
            column: 60
          }
        }],
        line: 589
      },
      "60": {
        loc: {
          start: {
            line: 590,
            column: 32
          },
          end: {
            line: 590,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 590,
            column: 51
          },
          end: {
            line: 590,
            column: 69
          }
        }, {
          start: {
            line: 590,
            column: 72
          },
          end: {
            line: 590,
            column: 82
          }
        }],
        line: 590
      },
      "61": {
        loc: {
          start: {
            line: 592,
            column: 23
          },
          end: {
            line: 592,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 592,
            column: 23
          },
          end: {
            line: 592,
            column: 49
          }
        }, {
          start: {
            line: 592,
            column: 53
          },
          end: {
            line: 592,
            column: 54
          }
        }],
        line: 592
      },
      "62": {
        loc: {
          start: {
            line: 593,
            column: 20
          },
          end: {
            line: 593,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 593,
            column: 20
          },
          end: {
            line: 593,
            column: 43
          }
        }, {
          start: {
            line: 593,
            column: 47
          },
          end: {
            line: 593,
            column: 52
          }
        }],
        line: 593
      },
      "63": {
        loc: {
          start: {
            line: 594,
            column: 20
          },
          end: {
            line: 594,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 594,
            column: 20
          },
          end: {
            line: 594,
            column: 43
          }
        }, {
          start: {
            line: 594,
            column: 47
          },
          end: {
            line: 594,
            column: 52
          }
        }],
        line: 594
      },
      "64": {
        loc: {
          start: {
            line: 597,
            column: 4
          },
          end: {
            line: 599,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 4
          },
          end: {
            line: 599,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "65": {
        loc: {
          start: {
            line: 600,
            column: 1111
          },
          end: {
            line: 600,
            column: 1170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 600,
            column: 1130
          },
          end: {
            line: 600,
            column: 1157
          }
        }, {
          start: {
            line: 600,
            column: 1160
          },
          end: {
            line: 600,
            column: 1170
          }
        }],
        line: 600
      },
      "66": {
        loc: {
          start: {
            line: 600,
            column: 1130
          },
          end: {
            line: 600,
            column: 1157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 1130
          },
          end: {
            line: 600,
            column: 1143
          }
        }, {
          start: {
            line: 600,
            column: 1147
          },
          end: {
            line: 600,
            column: 1157
          }
        }],
        line: 600
      },
      "67": {
        loc: {
          start: {
            line: 600,
            column: 1825
          },
          end: {
            line: 600,
            column: 1891
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 600,
            column: 1844
          },
          end: {
            line: 600,
            column: 1877
          }
        }, {
          start: {
            line: 600,
            column: 1880
          },
          end: {
            line: 600,
            column: 1891
          }
        }],
        line: 600
      },
      "68": {
        loc: {
          start: {
            line: 600,
            column: 1844
          },
          end: {
            line: 600,
            column: 1877
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 1844
          },
          end: {
            line: 600,
            column: 1859
          }
        }, {
          start: {
            line: 600,
            column: 1863
          },
          end: {
            line: 600,
            column: 1877
          }
        }],
        line: 600
      },
      "69": {
        loc: {
          start: {
            line: 600,
            column: 2537
          },
          end: {
            line: 600,
            column: 2601
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 600,
            column: 2556
          },
          end: {
            line: 600,
            column: 2589
          }
        }, {
          start: {
            line: 600,
            column: 2592
          },
          end: {
            line: 600,
            column: 2601
          }
        }],
        line: 600
      },
      "70": {
        loc: {
          start: {
            line: 600,
            column: 2556
          },
          end: {
            line: 600,
            column: 2589
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 2556
          },
          end: {
            line: 600,
            column: 2571
          }
        }, {
          start: {
            line: 600,
            column: 2575
          },
          end: {
            line: 600,
            column: 2589
          }
        }],
        line: 600
      },
      "71": {
        loc: {
          start: {
            line: 600,
            column: 3540
          },
          end: {
            line: 600,
            column: 3845
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 3540
          },
          end: {
            line: 600,
            column: 3569
          }
        }, {
          start: {
            line: 600,
            column: 3574
          },
          end: {
            line: 600,
            column: 3844
          }
        }],
        line: 600
      },
      "72": {
        loc: {
          start: {
            line: 600,
            column: 4071
          },
          end: {
            line: 600,
            column: 8120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 600,
            column: 4087
          },
          end: {
            line: 600,
            column: 4169
          }
        }, {
          start: {
            line: 600,
            column: 4174
          },
          end: {
            line: 600,
            column: 8119
          }
        }],
        line: 600
      },
      "73": {
        loc: {
          start: {
            line: 600,
            column: 4127
          },
          end: {
            line: 600,
            column: 4166
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 4127
          },
          end: {
            line: 600,
            column: 4144
          }
        }, {
          start: {
            line: 600,
            column: 4148
          },
          end: {
            line: 600,
            column: 4166
          }
        }],
        line: 600
      },
      "74": {
        loc: {
          start: {
            line: 600,
            column: 4763
          },
          end: {
            line: 600,
            column: 4897
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 4763
          },
          end: {
            line: 600,
            column: 4891
          }
        }, {
          start: {
            line: 600,
            column: 4895
          },
          end: {
            line: 600,
            column: 4897
          }
        }],
        line: 600
      },
      "75": {
        loc: {
          start: {
            line: 600,
            column: 5076
          },
          end: {
            line: 600,
            column: 5221
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 5076
          },
          end: {
            line: 600,
            column: 5215
          }
        }, {
          start: {
            line: 600,
            column: 5219
          },
          end: {
            line: 600,
            column: 5221
          }
        }],
        line: 600
      },
      "76": {
        loc: {
          start: {
            line: 600,
            column: 5226
          },
          end: {
            line: 600,
            column: 5621
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 5226
          },
          end: {
            line: 600,
            column: 5254
          }
        }, {
          start: {
            line: 600,
            column: 5258
          },
          end: {
            line: 600,
            column: 5296
          }
        }, {
          start: {
            line: 600,
            column: 5301
          },
          end: {
            line: 600,
            column: 5620
          }
        }],
        line: 600
      },
      "77": {
        loc: {
          start: {
            line: 600,
            column: 5623
          },
          end: {
            line: 600,
            column: 6041
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 5623
          },
          end: {
            line: 600,
            column: 5651
          }
        }, {
          start: {
            line: 600,
            column: 5655
          },
          end: {
            line: 600,
            column: 5693
          }
        }, {
          start: {
            line: 600,
            column: 5697
          },
          end: {
            line: 600,
            column: 5716
          }
        }, {
          start: {
            line: 600,
            column: 5721
          },
          end: {
            line: 600,
            column: 6040
          }
        }],
        line: 600
      },
      "78": {
        loc: {
          start: {
            line: 600,
            column: 6043
          },
          end: {
            line: 600,
            column: 6336
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 6043
          },
          end: {
            line: 600,
            column: 6061
          }
        }, {
          start: {
            line: 600,
            column: 6065
          },
          end: {
            line: 600,
            column: 6093
          }
        }, {
          start: {
            line: 600,
            column: 6097
          },
          end: {
            line: 600,
            column: 6135
          }
        }, {
          start: {
            line: 600,
            column: 6140
          },
          end: {
            line: 600,
            column: 6335
          }
        }],
        line: 600
      },
      "79": {
        loc: {
          start: {
            line: 600,
            column: 6338
          },
          end: {
            line: 600,
            column: 6546
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 6339
          },
          end: {
            line: 600,
            column: 6350
          }
        }, {
          start: {
            line: 600,
            column: 6354
          },
          end: {
            line: 600,
            column: 6364
          }
        }, {
          start: {
            line: 600,
            column: 6368
          },
          end: {
            line: 600,
            column: 6380
          }
        }, {
          start: {
            line: 600,
            column: 6384
          },
          end: {
            line: 600,
            column: 6402
          }
        }, {
          start: {
            line: 600,
            column: 6406
          },
          end: {
            line: 600,
            column: 6418
          }
        }, {
          start: {
            line: 600,
            column: 6424
          },
          end: {
            line: 600,
            column: 6545
          }
        }],
        line: 600
      },
      "80": {
        loc: {
          start: {
            line: 600,
            column: 7116
          },
          end: {
            line: 600,
            column: 8115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 7116
          },
          end: {
            line: 600,
            column: 7130
          }
        }, {
          start: {
            line: 600,
            column: 7135
          },
          end: {
            line: 600,
            column: 8114
          }
        }],
        line: 600
      },
      "81": {
        loc: {
          start: {
            line: 600,
            column: 7664
          },
          end: {
            line: 600,
            column: 7688
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 7664
          },
          end: {
            line: 600,
            column: 7672
          }
        }, {
          start: {
            line: 600,
            column: 7676
          },
          end: {
            line: 600,
            column: 7688
          }
        }],
        line: 600
      },
      "82": {
        loc: {
          start: {
            line: 600,
            column: 7700
          },
          end: {
            line: 600,
            column: 7727
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 7700
          },
          end: {
            line: 600,
            column: 7713
          }
        }, {
          start: {
            line: 600,
            column: 7717
          },
          end: {
            line: 600,
            column: 7727
          }
        }],
        line: 600
      },
      "83": {
        loc: {
          start: {
            line: 600,
            column: 7809
          },
          end: {
            line: 600,
            column: 7828
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 7809
          },
          end: {
            line: 600,
            column: 7818
          }
        }, {
          start: {
            line: 600,
            column: 7822
          },
          end: {
            line: 600,
            column: 7828
          }
        }],
        line: 600
      },
      "84": {
        loc: {
          start: {
            line: 600,
            column: 7853
          },
          end: {
            line: 600,
            column: 7868
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 7853
          },
          end: {
            line: 600,
            column: 7860
          }
        }, {
          start: {
            line: 600,
            column: 7864
          },
          end: {
            line: 600,
            column: 7868
          }
        }],
        line: 600
      },
      "85": {
        loc: {
          start: {
            line: 600,
            column: 8048
          },
          end: {
            line: 600,
            column: 8072
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 8048
          },
          end: {
            line: 600,
            column: 8056
          }
        }, {
          start: {
            line: 600,
            column: 8060
          },
          end: {
            line: 600,
            column: 8072
          }
        }],
        line: 600
      },
      "86": {
        loc: {
          start: {
            line: 600,
            column: 8084
          },
          end: {
            line: 600,
            column: 8103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 8084
          },
          end: {
            line: 600,
            column: 8093
          }
        }, {
          start: {
            line: 600,
            column: 8097
          },
          end: {
            line: 600,
            column: 8103
          }
        }],
        line: 600
      },
      "87": {
        loc: {
          start: {
            line: 603,
            column: 121
          },
          end: {
            line: 603,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 121
          },
          end: {
            line: 603,
            column: 126
          }
        }, {
          start: {
            line: 603,
            column: 130
          },
          end: {
            line: 603,
            column: 150
          }
        }],
        line: 603
      },
      "88": {
        loc: {
          start: {
            line: 603,
            column: 682
          },
          end: {
            line: 603,
            column: 815
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 603,
            column: 726
          },
          end: {
            line: 603,
            column: 739
          }
        }, {
          start: {
            line: 603,
            column: 742
          },
          end: {
            line: 603,
            column: 815
          }
        }],
        line: 603
      },
      "89": {
        loc: {
          start: {
            line: 603,
            column: 682
          },
          end: {
            line: 603,
            column: 723
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 682
          },
          end: {
            line: 603,
            column: 702
          }
        }, {
          start: {
            line: 603,
            column: 706
          },
          end: {
            line: 603,
            column: 723
          }
        }],
        line: 603
      },
      "90": {
        loc: {
          start: {
            line: 603,
            column: 742
          },
          end: {
            line: 603,
            column: 815
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 603,
            column: 786
          },
          end: {
            line: 603,
            column: 799
          }
        }, {
          start: {
            line: 603,
            column: 802
          },
          end: {
            line: 603,
            column: 815
          }
        }],
        line: 603
      },
      "91": {
        loc: {
          start: {
            line: 603,
            column: 742
          },
          end: {
            line: 603,
            column: 783
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 742
          },
          end: {
            line: 603,
            column: 762
          }
        }, {
          start: {
            line: 603,
            column: 766
          },
          end: {
            line: 603,
            column: 783
          }
        }],
        line: 603
      },
      "92": {
        loc: {
          start: {
            line: 603,
            column: 901
          },
          end: {
            line: 603,
            column: 931
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 901
          },
          end: {
            line: 603,
            column: 915
          }
        }, {
          start: {
            line: 603,
            column: 919
          },
          end: {
            line: 603,
            column: 931
          }
        }],
        line: 603
      },
      "93": {
        loc: {
          start: {
            line: 603,
            column: 936
          },
          end: {
            line: 603,
            column: 1060
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 936
          },
          end: {
            line: 603,
            column: 956
          }
        }, {
          start: {
            line: 603,
            column: 960
          },
          end: {
            line: 603,
            column: 1060
          }
        }],
        line: 603
      },
      "94": {
        loc: {
          start: {
            line: 603,
            column: 1137
          },
          end: {
            line: 603,
            column: 1166
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 1137
          },
          end: {
            line: 603,
            column: 1151
          }
        }, {
          start: {
            line: 603,
            column: 1155
          },
          end: {
            line: 603,
            column: 1166
          }
        }],
        line: 603
      },
      "95": {
        loc: {
          start: {
            line: 603,
            column: 1171
          },
          end: {
            line: 603,
            column: 1302
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 1171
          },
          end: {
            line: 603,
            column: 1188
          }
        }, {
          start: {
            line: 603,
            column: 1192
          },
          end: {
            line: 603,
            column: 1302
          }
        }],
        line: 603
      },
      "96": {
        loc: {
          start: {
            line: 603,
            column: 1268
          },
          end: {
            line: 603,
            column: 1299
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 1268
          },
          end: {
            line: 603,
            column: 1283
          }
        }, {
          start: {
            line: 603,
            column: 1287
          },
          end: {
            line: 603,
            column: 1299
          }
        }],
        line: 603
      },
      "97": {
        loc: {
          start: {
            line: 603,
            column: 3630
          },
          end: {
            line: 603,
            column: 3772
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 3630
          },
          end: {
            line: 603,
            column: 3766
          }
        }, {
          start: {
            line: 603,
            column: 3770
          },
          end: {
            line: 603,
            column: 3772
          }
        }],
        line: 603
      },
      "98": {
        loc: {
          start: {
            line: 603,
            column: 4442
          },
          end: {
            line: 603,
            column: 4478
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 4442
          },
          end: {
            line: 603,
            column: 4459
          }
        }, {
          start: {
            line: 603,
            column: 4463
          },
          end: {
            line: 603,
            column: 4478
          }
        }],
        line: 603
      },
      "99": {
        loc: {
          start: {
            line: 603,
            column: 5182
          },
          end: {
            line: 603,
            column: 5258
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 603,
            column: 5212
          },
          end: {
            line: 603,
            column: 5238
          }
        }, {
          start: {
            line: 603,
            column: 5242
          },
          end: {
            line: 603,
            column: 5258
          }
        }],
        line: 603
      },
      "100": {
        loc: {
          start: {
            line: 603,
            column: 5212
          },
          end: {
            line: 603,
            column: 5238
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 5212
          },
          end: {
            line: 603,
            column: 5223
          }
        }, {
          start: {
            line: 603,
            column: 5227
          },
          end: {
            line: 603,
            column: 5238
          }
        }],
        line: 603
      },
      "101": {
        loc: {
          start: {
            line: 603,
            column: 5277
          },
          end: {
            line: 610,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 5277
          },
          end: {
            line: 603,
            column: 5297
          }
        }, {
          start: {
            line: 603,
            column: 5302
          },
          end: {
            line: 610,
            column: 107
          }
        }],
        line: 603
      },
      "102": {
        loc: {
          start: {
            line: 603,
            column: 5481
          },
          end: {
            line: 603,
            column: 5541
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 603,
            column: 5495
          },
          end: {
            line: 603,
            column: 5534
          }
        }, {
          start: {
            line: 603,
            column: 5537
          },
          end: {
            line: 603,
            column: 5541
          }
        }],
        line: 603
      },
      "103": {
        loc: {
          start: {
            line: 604,
            column: 56
          },
          end: {
            line: 609,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 604,
            column: 56
          },
          end: {
            line: 609,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 604
      },
      "104": {
        loc: {
          start: {
            line: 610,
            column: 277
          },
          end: {
            line: 610,
            column: 337
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 610,
            column: 291
          },
          end: {
            line: 610,
            column: 330
          }
        }, {
          start: {
            line: 610,
            column: 333
          },
          end: {
            line: 610,
            column: 337
          }
        }],
        line: 610
      },
      "105": {
        loc: {
          start: {
            line: 611,
            column: 56
          },
          end: {
            line: 616,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 56
          },
          end: {
            line: 616,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "106": {
        loc: {
          start: {
            line: 617,
            column: 105
          },
          end: {
            line: 624,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 617,
            column: 105
          },
          end: {
            line: 617,
            column: 122
          }
        }, {
          start: {
            line: 617,
            column: 127
          },
          end: {
            line: 624,
            column: 104
          }
        }],
        line: 617
      },
      "107": {
        loc: {
          start: {
            line: 617,
            column: 297
          },
          end: {
            line: 617,
            column: 357
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 617,
            column: 311
          },
          end: {
            line: 617,
            column: 350
          }
        }, {
          start: {
            line: 617,
            column: 353
          },
          end: {
            line: 617,
            column: 357
          }
        }],
        line: 617
      },
      "108": {
        loc: {
          start: {
            line: 618,
            column: 56
          },
          end: {
            line: 623,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 618,
            column: 56
          },
          end: {
            line: 623,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 618
      },
      "109": {
        loc: {
          start: {
            line: 624,
            column: 2087
          },
          end: {
            line: 624,
            column: 2162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 624,
            column: 2125
          },
          end: {
            line: 624,
            column: 2138
          }
        }, {
          start: {
            line: 624,
            column: 2141
          },
          end: {
            line: 624,
            column: 2162
          }
        }],
        line: 624
      },
      "110": {
        loc: {
          start: {
            line: 624,
            column: 2277
          },
          end: {
            line: 624,
            column: 2307
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 2277
          },
          end: {
            line: 624,
            column: 2282
          }
        }, {
          start: {
            line: 624,
            column: 2286
          },
          end: {
            line: 624,
            column: 2307
          }
        }],
        line: 624
      },
      "111": {
        loc: {
          start: {
            line: 624,
            column: 3125
          },
          end: {
            line: 624,
            column: 3150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 3125
          },
          end: {
            line: 624,
            column: 3137
          }
        }, {
          start: {
            line: 624,
            column: 3141
          },
          end: {
            line: 624,
            column: 3150
          }
        }],
        line: 624
      },
      "112": {
        loc: {
          start: {
            line: 624,
            column: 3166
          },
          end: {
            line: 624,
            column: 3238
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 3166
          },
          end: {
            line: 624,
            column: 3192
          }
        }, {
          start: {
            line: 624,
            column: 3196
          },
          end: {
            line: 624,
            column: 3238
          }
        }],
        line: 624
      },
      "113": {
        loc: {
          start: {
            line: 624,
            column: 3413
          },
          end: {
            line: 624,
            column: 3479
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 3413
          },
          end: {
            line: 624,
            column: 3435
          }
        }, {
          start: {
            line: 624,
            column: 3439
          },
          end: {
            line: 624,
            column: 3479
          }
        }],
        line: 624
      },
      "114": {
        loc: {
          start: {
            line: 624,
            column: 3525
          },
          end: {
            line: 624,
            column: 3597
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 3525
          },
          end: {
            line: 624,
            column: 3553
          }
        }, {
          start: {
            line: 624,
            column: 3557
          },
          end: {
            line: 624,
            column: 3597
          }
        }],
        line: 624
      },
      "115": {
        loc: {
          start: {
            line: 624,
            column: 3643
          },
          end: {
            line: 624,
            column: 3716
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 3643
          },
          end: {
            line: 624,
            column: 3668
          }
        }, {
          start: {
            line: 624,
            column: 3672
          },
          end: {
            line: 624,
            column: 3716
          }
        }],
        line: 624
      },
      "116": {
        loc: {
          start: {
            line: 624,
            column: 3762
          },
          end: {
            line: 624,
            column: 3828
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 3762
          },
          end: {
            line: 624,
            column: 3788
          }
        }, {
          start: {
            line: 624,
            column: 3792
          },
          end: {
            line: 624,
            column: 3828
          }
        }],
        line: 624
      },
      "117": {
        loc: {
          start: {
            line: 624,
            column: 5012
          },
          end: {
            line: 624,
            column: 5070
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 5012
          },
          end: {
            line: 624,
            column: 5036
          }
        }, {
          start: {
            line: 624,
            column: 5040
          },
          end: {
            line: 624,
            column: 5070
          }
        }],
        line: 624
      },
      "118": {
        loc: {
          start: {
            line: 624,
            column: 5633
          },
          end: {
            line: 624,
            column: 5696
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 624,
            column: 5664
          },
          end: {
            line: 624,
            column: 5677
          }
        }, {
          start: {
            line: 624,
            column: 5680
          },
          end: {
            line: 624,
            column: 5696
          }
        }],
        line: 624
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0, 0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0, 0],
      "77": [0, 0, 0, 0],
      "78": [0, 0, 0, 0],
      "79": [0, 0, 0, 0, 0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/pages/manager/user-management.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/pages/manager/user-management.tsx"],
      sourcesContent: ["import React, { useState, useMemo, useEffect } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Header } from '@/components/layout/header';\nimport { FilterSort } from '@/components/filter-sort/FilterSort';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Users, UserPlus, Shield, Mail, Edit, Home, Trash2 } from 'lucide-react';\nimport { SendInvitationDialog } from '@/components/admin/send-invitation-dialog';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport type { User, UserWithAssignments, Organization, Building, Residence } from '@shared/schema';\nimport type { FilterValue, SortValue } from '@/lib/filter-sort/types';\nimport { UserAssignmentsTable } from '@/components/UserAssignmentsTableClean';\nimport { UserOrganizationsTab } from '@/components/user-tabs/UserOrganizationsTab';\nimport { UserBuildingsTab } from '@/components/user-tabs/UserBuildingsTab';\nimport { UserResidencesTab } from '@/components/user-tabs/UserResidencesTab';\nimport { InvitationManagement } from '@/components/InvitationManagement';\n\n// Form validation schema for editing users - dynamic based on available roles\nconst createEditUserSchema = (availableRoles: { value: string; label: string }[]) => {\n  const roleValues = availableRoles.map(role => role.value) as [string, ...string[]];\n  \n  return z.object({\n    firstName: z.string().min(1, 'First name is required (example: Jean)').max(50, 'First name must be less than 50 characters').regex(/^[a-zA-Z\xC0-\xFF\\s'-]+$/, 'First name can only contain letters, spaces, apostrophes and hyphens'),\n    lastName: z.string().min(1, 'Last name is required (example: Dupont)').max(50, 'Last name must be less than 50 characters').regex(/^[a-zA-Z\xC0-\xFF\\s'-]+$/, 'Last name can only contain letters, spaces, apostrophes and hyphens'),\n    email: z.string().min(1, 'Email address is required').email('Please enter a valid email address (example: jean.dupont@email.com)'),\n    role: roleValues.length > 0 ? z.enum(roleValues) : z.string().min(1, 'Please select a user role'),\n    isActive: z.boolean(),\n  });\n};\n\n// Form validation schema for deleting users\nconst deleteUserSchema = z.object({\n  confirmEmail: z.string().min(1, 'Email confirmation is required to delete user').email('Please enter a valid email address that matches the user account'),\n  reason: z.string().max(500, 'Reason must be less than 500 characters').optional(),\n});\n\n/**\n * User Management Page for Management Menu\n * Consolidates user management functionalities for managers and admins.\n * Provides comprehensive user administration with role-based access controls.\n */\nexport default function UserManagement() {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n  const [selectedUsers, setSelectedUsers] = useState<Set<string>>(new Set());\n  const [showInviteDialog, setShowInviteDialog] = useState(false);\n  const [editingUser, setEditingUser] = useState<User | null>(null);\n  const [deletingUser, setDeletingUser] = useState<User | null>(null);\n  const [editingUserOrganizations, setEditingUserOrganizations] = useState<UserWithAssignments | null>(null);\n  const [editingUserResidences, setEditingUserResidences] = useState<UserWithAssignments | null>(null);\n  const [showDeleteOrphansDialog, setShowDeleteOrphansDialog] = useState(false);\n\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const usersPerPage = 10;\n\n  // Filter and search state - simplified for quick fix\n  const [searchInput, setSearchInput] = useState(''); // Input field value\n  const [search, setSearch] = useState(''); // Debounced search value for API\n  const [roleFilter, setRoleFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [organizationFilter, setOrganizationFilter] = useState('');\n  const [orphanFilter, setOrphanFilter] = useState('');\n\n  // Debounce search input - wait 3 seconds after user stops typing\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setSearch(searchInput);\n    }, 3000);\n\n    return () => clearTimeout(timeoutId);\n  }, [searchInput]);\n\n  // Fetch users with server-side pagination\n  const {\n    data: usersResponse,\n    isLoading: usersLoading,\n    error: usersError,\n  } = useQuery<{\n    users: UserWithAssignments[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      totalPages: number;\n      hasNext: boolean;\n      hasPrev: boolean;\n    };\n  }>({\n    queryKey: ['/api/users', { \n      page: currentPage, \n      limit: usersPerPage,\n      roleFilter,\n      statusFilter,\n      organizationFilter,\n      orphanFilter,\n      search\n    }],\n    queryFn: async () => {\n      // Build query parameters including filters\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: usersPerPage.toString(),\n      });\n      \n      if (roleFilter) params.append('role', roleFilter);\n      if (statusFilter) params.append('status', statusFilter);\n      if (organizationFilter) params.append('organization', organizationFilter);\n      if (orphanFilter) params.append('orphan', orphanFilter);\n      if (search) params.append('search', search);\n      \n      const response = await fetch(`/api/users?${params.toString()}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      return response.json();\n    },\n  });\n\n  // Extract users and pagination info from response\n  const users = usersResponse?.users || [];\n  const paginationInfo = usersResponse?.pagination;\n\n  // Fetch dynamic filter options\n  const { data: filterOptions } = useQuery<{\n    roles: Array<{ value: string; label: string }>;\n    statuses: Array<{ value: string; label: string }>;\n    organizations: Array<{ value: string; label: string }>;\n    orphanOptions: Array<{ value: string; label: string }>;\n  }>({\n    queryKey: ['/api/users/filter-options'],\n  });\n\n  // Fetch organizations\n  const { data: organizations = [] } = useQuery<Organization[]>({\n    queryKey: ['/api/organizations'],\n    enabled: true,\n  });\n\n  // Fetch buildings\n  const { data: buildings = [] } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n    enabled: true,\n  });\n\n  // Fetch residences\n  const { data: residences = [] } = useQuery<Residence[]>({\n    queryKey: ['/api/residences'],\n    enabled: true,\n  });\n\n  // Get current user to check permissions\n  const { data: currentUser } = useQuery<User>({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Organization context detection for role filtering\n  const userOrganizationContext = useMemo(() => {\n    if (!currentUser || !organizations || !users) return null;\n\n    // Get current user's organization assignments\n    const currentUserWithAssignments = users.find(u => u.id === currentUser.id);\n    if (!currentUserWithAssignments?.organizations) return null;\n\n    const userOrganizations = currentUserWithAssignments.organizations;\n    const isDemoUser = ['demo_manager', 'demo_tenant', 'demo_resident'].includes(currentUser.role);\n    const hasDemoOrganizations = userOrganizations.some(org => \n      organizations.find(o => o.id === org.id)?.type === 'demo'\n    );\n    const hasRegularOrganizations = userOrganizations.some(org => \n      organizations.find(o => o.id === org.id)?.type !== 'demo'\n    );\n\n    return {\n      isDemoUser,\n      hasDemoOrganizations,\n      hasRegularOrganizations,\n      userOrganizations: userOrganizations.map(org => org.id),\n      organizationTypes: userOrganizations.map(org => \n        organizations.find(o => o.id === org.id)?.type || 'unknown'\n      )\n    };\n  }, [currentUser, organizations, users]);\n\n  // Role filtering function\n  const getAvailableRoles = useMemo(() => {\n    if (!currentUser || !userOrganizationContext) return [];\n\n    const { role } = currentUser;\n    const { isDemoUser, hasDemoOrganizations, hasRegularOrganizations } = userOrganizationContext;\n\n    // Admin can assign any role\n    if (role === 'admin') {\n      return [\n        { value: 'admin', label: 'Admin' },\n        { value: 'manager', label: 'Manager' },\n        { value: 'tenant', label: 'Tenant' },\n        { value: 'resident', label: 'Resident' },\n        { value: 'demo_manager', label: 'Demo Manager' },\n        { value: 'demo_tenant', label: 'Demo Tenant' },\n        { value: 'demo_resident', label: 'Demo Resident' },\n      ];\n    }\n\n    // Manager role assignment restrictions\n    if (role === 'manager') {\n      return [\n        { value: 'manager', label: 'Manager' },\n        { value: 'tenant', label: 'Tenant' },\n        { value: 'resident', label: 'Resident' },\n      ];\n    }\n\n    // Demo manager role assignment restrictions\n    if (role === 'demo_manager') {\n      return [\n        { value: 'demo_manager', label: 'Demo Manager' },\n        { value: 'demo_tenant', label: 'Demo Tenant' },\n        { value: 'demo_resident', label: 'Demo Resident' },\n      ];\n    }\n\n    // Other roles cannot assign roles\n    return [];\n  }, [currentUser, userOrganizationContext]);\n\n  // Dynamic edit user schema based on available roles\n  const editUserSchema = useMemo(() => createEditUserSchema(getAvailableRoles), [getAvailableRoles]);\n\n  // Bulk action handler\n  const bulkActionMutation = useMutation({\n    mutationFn: async ({ action, data }: { action: string; data?: Record<string, unknown> }) => {\n      const selectedUserIds = Array.from(selectedUsers);\n      const response = await apiRequest('POST', '/api/users/bulk-action', {\n        action,\n        userIds: selectedUserIds,\n        data,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('userUpdatedSuccess'),\n      });\n      setSelectedUsers(new Set());\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (_error: Error) => {\n      toast({\n        title: t('error'),\n        description: _error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleBulkAction = async (action: string, data?: Record<string, unknown>) => {\n    await bulkActionMutation.mutateAsync({ action, data });\n  };\n\n  // Edit user mutation\n  const editUserMutation = useMutation({\n    mutationFn: async (userData: z.infer<typeof editUserSchema> & { id: string }) => {\n      const response = await apiRequest('PUT', `/api/users/${userData.id}`, userData);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('userUpdatedSuccess'),\n      });\n      setEditingUser(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Edit user form\n  const editForm = useForm<z.infer<typeof editUserSchema>>({\n    resolver: zodResolver(editUserSchema),\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      role: 'tenant',\n      isActive: true,\n    },\n  });\n\n  // Delete user form\n  const deleteForm = useForm<z.infer<typeof deleteUserSchema>>({\n    resolver: zodResolver(deleteUserSchema),\n    defaultValues: {\n      confirmEmail: '',\n      reason: '',\n    },\n  });\n\n  // Reset form when editing user changes\n  React.useEffect(() => {\n    if (editingUser) {\n      editForm.reset({\n        firstName: editingUser.firstName || '',\n        lastName: editingUser.lastName || '',\n        email: editingUser.email,\n        role: editingUser.role,\n        isActive: editingUser.isActive,\n      });\n    }\n  }, [editingUser, editForm]);\n\n  // Reset delete form when deleting user changes\n  React.useEffect(() => {\n    if (deletingUser) {\n      deleteForm.reset({\n        confirmEmail: '',\n        reason: '',\n      });\n    }\n  }, [deletingUser, deleteForm]);\n\n  // Reset to page 1 when filters change (excluding search since it's disabled)\n  React.useEffect(() => {\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n    }\n  }, [roleFilter, statusFilter, organizationFilter, orphanFilter]);\n\n  const handleEditUser = async (values: z.infer<typeof editUserSchema>) => {\n    if (!editingUser) {\n      return;\n    }\n    await editUserMutation.mutateAsync({ ...values, id: editingUser.id });\n  };\n\n  const openEditDialog = (user: User) => {\n    setEditingUser(user);\n  };\n\n  // Helper function to find UserWithAssignments from the users list\n  const findUserWithAssignments = (userId: string): UserWithAssignments | null => {\n    return users.find(u => u.id === userId) || null;\n  };\n\n  const openDeleteDialog = (user: User) => {\n    setDeletingUser(user);\n  };\n\n  const handleDeleteUser = async (values: z.infer<typeof deleteUserSchema>) => {\n    if (!deletingUser) {\n      return;\n    }\n    await deleteUserMutation.mutateAsync({ userId: deletingUser.id, data: values });\n  };\n\n  // Organization editing mutation\n  const editOrganizationsMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      organizationIds,\n    }: {\n      userId: string;\n      organizationIds: string[];\n    }) => {\n      const response = await apiRequest('PUT', `/api/users/${userId}/organizations`, {\n        organizationIds,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('organizationAssignmentsUpdated'),\n      });\n      setEditingUserOrganizations(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-organizations'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Building editing mutation\n  const editBuildingsMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      buildingIds,\n    }: {\n      userId: string;\n      buildingIds: string[];\n    }) => {\n      const response = await apiRequest('PUT', `/api/users/${userId}/buildings`, {\n        buildingIds,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('buildingAssignmentsUpdated'),\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Residence editing mutation\n  const editResidencesMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      residenceAssignments,\n    }: {\n      userId: string;\n      residenceAssignments: any[];\n    }) => {\n      const response = await apiRequest('PUT', `/api/users/${userId}/residences`, {\n        residenceAssignments,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('success'),\n        description: t('residenceAssignmentsUpdated'),\n      });\n      setEditingUserResidences(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-residences'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('error'),\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Delete user mutation\n  const deleteUserMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      data,\n    }: {\n      userId: string;\n      data: z.infer<typeof deleteUserSchema>;\n    }) => {\n      const response = await apiRequest('POST', `/api/users/${userId}/delete-account`, data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: t('accountDeleted'),\n        description: t('accountDeletedDescription'),\n      });\n      setDeletingUser(null);\n      // Invalidate and refetch user data\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-organizations'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/all-user-residences'] });\n      // Force refetch to ensure UI updates\n      queryClient.refetchQueries({ queryKey: ['/api/users'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: t('deletionFailed'),\n        description: error.message || t('deletionFailedDescription'),\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Permission checks\n  const canEditOrganizations = currentUser?.role === 'admin';\n  const canEditResidences = currentUser?.role === 'admin' || currentUser?.role === 'manager';\n  const canDeleteUsers = currentUser?.role === 'admin';\n\n  // Filter configuration - temporarily simplified\n  // const filterConfig = {\n  //   searchable: true,\n  //   searchFields: ['firstName', 'lastName', 'email', 'username'],\n  //   filters: [\n  //     {\n  //       id: 'role',\n  //       field: 'role',\n  //       label: 'Role',\n  //       type: 'select' as const,\n  //       options: [\n  //         { label: 'Admin', _value: 'admin' },\n  //         { label: 'Manager', _value: 'manager' },\n  //         { label: 'Tenant', _value: 'tenant' },\n  //         { label: 'Resident', _value: 'resident' },\n  //         { label: 'Demo Manager', _value: 'demo_manager' },\n  //         { label: 'Demo Tenant', _value: 'demo_tenant' },\n  //         { label: 'Demo Resident', _value: 'demo_resident' },\n  //       ],\n  //     },\n  //     {\n  //       id: 'isActive',\n  //       field: 'isActive',\n  //       label: 'Status',\n  //       type: 'select' as const,\n  //       options: [\n  //         { label: 'Active', _value: 'true' },\n  //         { label: 'Inactive', _value: 'false' },\n  //       ],\n  //     },\n  //     {\n  //       id: 'organization',\n  //       field: 'organization',\n  //       label: 'Organization',\n  //       type: 'select' as const,\n  //       options: organizations?.map((org) => ({ label: org.name, _value: org.id })) || [],\n  //     },\n  //   ],\n  //   sortOptions: [\n  //     { field: 'firstName', label: 'First Name' },\n  //     { field: 'lastName', label: 'Last Name' },\n  //     { field: 'email', label: 'Email' },\n  //     { field: 'role', label: 'Role' },\n  //     { field: 'createdAt', label: 'Created Date' },\n  //   ],\n  // };\n\n\n\n\n\n  // Use server-side paginated results directly\n  // Client-side filtering removed to avoid conflicts with server-side pagination\n  // TODO: Move all filtering to server-side for proper search across all users\n  const filteredUsers = users;\n\n  // Filter handlers - temporarily disabled\n  // const handleAddFilter = (filter: FilterValue) => {\n  //   setFilters((prev) => [...prev.filter((f) => f.field !== filter.field), filter]);\n  // };\n\n  // const handleRemoveFilter = (field: string) => {\n  //   setFilters((prev) => prev.filter((f) => f.field !== field));\n  // };\n\n  // const handleFilterUpdate = (field: string, filter: FilterValue) => {\n  //   setFilters((prev) => prev.map((f) => (f.field === field ? filter : f)));\n  // };\n\n  const handleClearFilters = () => {\n    setSearchInput('');\n    setSearch('');\n    setRoleFilter('');\n    setStatusFilter('');\n    setOrganizationFilter('');\n    setOrphanFilter('');\n  };\n\n  // Clear orphan filter when organization is selected\n  useEffect(() => {\n    if (organizationFilter) {\n      setOrphanFilter('');\n    }\n  }, [organizationFilter]);\n\n  // Delete orphan users mutation (admin only)\n  const deleteOrphanUsersMutation = useMutation({\n    mutationFn: async () => {\n      console.log('\uD83D\uDDD1\uFE0F [FRONTEND] Delete orphans mutation started');\n      console.log('\uD83D\uDD0D [FRONTEND] Current user:', currentUser?.email, 'role:', currentUser?.role);\n      \n      const response = await fetch('/api/users/orphans', {\n        method: 'DELETE',\n      });\n      \n      console.log('\uD83D\uDCE1 [FRONTEND] API response status:', response.status, response.statusText);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        console.error('\u274C [FRONTEND] API Error response:', error);\n        throw new Error(error.error || 'Failed to delete orphan users');\n      }\n      \n      const result = await response.json();\n      console.log('\u2705 [FRONTEND] API Success response:', result);\n      return result;\n    },\n    onSuccess: (data) => {\n      console.log('\uD83C\uDF89 [FRONTEND] Delete orphans mutation succeeded:', data);\n      toast({\n        title: 'Success',\n        description: data.message || `Deleted ${data.deletedCount} orphan users`,\n      });\n      \n      console.log('\uD83D\uDD04 [FRONTEND] Refreshing users list...');\n      // Refresh the users list\n      queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n      setShowDeleteOrphansDialog(false);\n    },\n    onError: (error) => {\n      console.error('\uD83D\uDCA5 [FRONTEND] Delete orphans mutation failed:', error);\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to delete orphan users',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Handle delete orphan users\n  const handleDeleteOrphanUsers = () => {\n    console.log('\uD83D\uDDB1\uFE0F [FRONTEND] Delete orphans button clicked');\n    console.log('\uD83D\uDC64 [FRONTEND] Triggering delete for user:', currentUser?.email);\n    deleteOrphanUsersMutation.mutate();\n  };\n\n  // const handleToggleSort = (field: string) => {\n  //   if (sort?.field === field) {\n  //     setSort({ ...sort, direction: sort.direction === 'asc' ? 'desc' : 'asc' });\n  //   } else {\n  //     setSort({ field, direction: 'asc' });\n  //   }\n  // };\n\n  // Calculate stats using server-side pagination data\n  const totalUsers = paginationInfo?.total || 0;\n  const filteredTotal = filteredUsers.length;\n  \n  // Calculate stats based on current page results when filters are applied\n  const hasActiveFilters = roleFilter || statusFilter || organizationFilter || orphanFilter;\n  \n  // If filters are applied, show stats for current visible users, otherwise show total stats\n  const displayedActiveUsers = hasActiveFilters \n    ? users?.filter((user: User) => user.isActive).length || 0\n    : totalUsers > 0 ? Math.floor(totalUsers * 0.85) : 0; // Estimate 85% active when no filters\n    \n  const displayedAdminUsers = hasActiveFilters\n    ? users?.filter((user: User) => user.role === 'admin').length || 0  \n    : totalUsers > 0 ? Math.floor(totalUsers * 0.02) : 0; // Estimate 2% admin when no filters\n    \n  const displayedTotalUsers = hasActiveFilters ? `~${users.length}` : totalUsers;\n\n  // Use server-side pagination calculations\n  const totalPages = paginationInfo?.totalPages || 1;\n  const hasNext = paginationInfo?.hasNext || false;\n  const hasPrev = paginationInfo?.hasPrev || false;\n  \n  // For display, use filteredUsers (which may be less than the page size if filters are applied)\n  const currentUsers = filteredUsers;\n\n  if (usersError) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('userManagement')} subtitle={t('manageAllUsers')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <Card>\n            <CardContent className='p-6'>\n              <p className='text-red-600'>{t('anErrorOccurred')}</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('userManagement')} subtitle={t('manageAllUsers')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n        {/* Quick Stats Cards */}\n        <div className='grid grid-cols-1 md:grid-cols-3 gap-6'>\n          <Card>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <CardTitle className='text-sm font-medium text-gray-600'>{t('totalUsers')}</CardTitle>\n              <Users className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <div className='text-2xl font-bold'>{displayedTotalUsers}</div>\n              <p className='text-xs text-muted-foreground'>{hasActiveFilters ? t('filtered') || 'Filtered' : t('total')}</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <CardTitle className='text-sm font-medium text-gray-600'>{t('activeUsers')}</CardTitle>\n              <UserPlus className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <div className='text-2xl font-bold'>{displayedActiveUsers}</div>\n              <p className='text-xs text-muted-foreground'>{hasActiveFilters ? t('onThisPage') || 'On this page' : t('active')}</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <CardTitle className='text-sm font-medium text-gray-600'>{t('admin')}</CardTitle>\n              <Shield className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <div className='text-2xl font-bold'>{displayedAdminUsers}</div>\n              <p className='text-xs text-muted-foreground'>{hasActiveFilters ? t('onThisPage') || 'On this page' : t('role')}</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main User Management Tabs */}\n        <Tabs defaultValue='users' className='space-y-6'>\n          <div className='flex items-center justify-between'>\n            <TabsList>\n              <TabsTrigger value='users' className='flex items-center gap-2'>\n                <Users className='h-4 w-4' />\n                {t('users')}\n              </TabsTrigger>\n              <TabsTrigger value='invitations' className='flex items-center gap-2'>\n                <Mail className='h-4 w-4' />\n                {t('invitations')}\n              </TabsTrigger>\n            </TabsList>\n\n            <div className=\"flex gap-2\">\n              <Button onClick={() => setShowInviteDialog(true)}>\n                <UserPlus className='h-4 w-4 mr-2' />\n                {t('inviteUser')}\n              </Button>\n              \n              {/* Admin-only: Delete Orphan Users button */}\n              {currentUser?.role === 'admin' && (\n                <Button \n                  variant=\"destructive\" \n                  onClick={() => setShowDeleteOrphansDialog(true)}\n                  data-testid=\"button-delete-orphans\"\n                >\n                  <Trash2 className='h-4 w-4 mr-2' />\n                  Delete Orphan Users\n                </Button>\n              )}\n            </div>\n          </div>\n\n          <TabsContent value='users' className='space-y-6'>\n            <Card>\n              <CardContent className='p-6'>\n                {usersLoading ? (\n                  <p>{t('loadingUsers') || 'Loading users...'}</p>\n                ) : (\n                  <div className='space-y-4'>\n                    {/* Simple Search and Filters */}\n                    <div className='flex flex-col sm:flex-row gap-4 mb-4 p-4 bg-gray-50 rounded-lg'>\n                      {/* Search */}\n                      <div className='flex-1'>\n                        <Input\n                          placeholder={t('searchUsers')}\n                          value={searchInput}\n                          onChange={(e) => setSearchInput(e.target.value)}\n                          className='w-full'\n                        />\n                      </div>\n\n                      {/* Role Filter */}\n                      <select\n                        value={roleFilter}\n                        onChange={(e) => setRoleFilter(e.target.value)}\n                        className='px-3 py-2 border border-gray-300 rounded-md'\n                      >\n                        {filterOptions?.roles?.map((role) => (\n                          <option key={role.value} value={role.value}>\n                            {role.label}\n                          </option>\n                        )) || []}\n                      </select>\n\n                      {/* Status Filter */}\n                      <select\n                        value={statusFilter}\n                        onChange={(e) => setStatusFilter(e.target.value)}\n                        className='px-3 py-2 border border-gray-300 rounded-md'\n                      >\n                        {filterOptions?.statuses?.map((status) => (\n                          <option key={status.value} value={status.value}>\n                            {status.label}\n                          </option>\n                        )) || []}\n                      </select>\n\n                      {/* Organization Filter */}\n                      {filterOptions?.organizations && filterOptions.organizations.length > 0 && (\n                        <select\n                          value={organizationFilter}\n                          onChange={(e) => setOrganizationFilter(e.target.value)}\n                          className='px-3 py-2 border border-gray-300 rounded-md'\n                        >\n                          {filterOptions.organizations.map((org) => (\n                            <option key={org.value} value={org.value}>\n                              {org.label}\n                            </option>\n                          ))}\n                        </select>\n                      )}\n\n                      {/* Orphan User Filter - Admin Only, Hidden when organization is selected */}\n                      {filterOptions?.orphanOptions && filterOptions.orphanOptions.length > 0 && !organizationFilter && (\n                        <select\n                          value={orphanFilter}\n                          onChange={(e) => setOrphanFilter(e.target.value)}\n                          className='px-3 py-2 border border-gray-300 rounded-md'\n                        >\n                          {filterOptions.orphanOptions.map((option) => (\n                            <option key={option.value} value={option.value}>\n                              {option.label}\n                            </option>\n                          ))}\n                        </select>\n                      )}\n                      \n                      {/* Show explanation when orphan filter is disabled */}\n                      {organizationFilter && filterOptions?.orphanOptions && filterOptions.orphanOptions.length > 0 && (\n                        <div className=\"text-sm text-gray-500 italic px-3 py-2 border border-gray-200 rounded-md bg-gray-100\">\n                          Orphan filter unavailable (organization selected)\n                        </div>\n                      )}\n\n                      {/* Clear Filters */}\n                      {(searchInput || roleFilter || statusFilter || organizationFilter || orphanFilter) && (\n                        <Button variant='outline' onClick={handleClearFilters}>\n                          {t('clearFilters')}\n                        </Button>\n                      )}\n                    </div>\n\n                    <h3 className='text-lg font-semibold'>\n                      {t('users')} ({filteredTotal} of {totalUsers} {t('users').toLowerCase()})\n                    </h3>\n\n                    {/* User Table - Completely Rebuilt */}\n                    <UserAssignmentsTable \n                      users={currentUsers} \n                      isLoading={usersLoading}\n                      onEditUser={openEditDialog}\n                      onEditOrganizations={setEditingUserOrganizations}\n                      onEditResidences={setEditingUserResidences}\n                      onDeleteUser={openDeleteDialog}\n                      canEditOrganizations={canEditOrganizations}\n                      canEditResidences={canEditResidences}\n                      canDeleteUsers={canDeleteUsers}\n                    />\n\n                    {/* Server-side Pagination */}\n                    {totalPages > 1 && (\n                      <div className='flex justify-between items-center mt-4'>\n                        <div className='text-sm text-gray-600'>\n                          Page {currentPage} of {totalPages} - Showing {users.length} {t('users').toLowerCase()} ({totalUsers} total)\n                        </div>\n                        <div className='flex gap-2'>\n                          <Button\n                            variant='outline'\n                            size='sm'\n                            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n                            disabled={!hasPrev || usersLoading}\n                          >\n                            {t('previous') || 'Previous'}\n                          </Button>\n                          <span className='px-3 py-1 text-sm'>\n                            {t('page') || 'Page'} {currentPage} {t('of') || 'of'} {totalPages}\n                          </span>\n                          <Button\n                            variant='outline'\n                            size='sm'\n                            onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\n                            disabled={!hasNext || usersLoading}\n                          >\n                            {t('next') || 'Next'}\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value='invitations' className='space-y-6'>\n            <InvitationManagement />\n          </TabsContent>\n        </Tabs>\n\n        {/* Comprehensive Invite Dialog */}\n        <SendInvitationDialog\n          open={showInviteDialog}\n          onOpenChange={setShowInviteDialog}\n          onSuccess={() => {\n            // Refresh users list after successful invitation\n            queryClient.invalidateQueries({ queryKey: ['/api/users'] });\n          }}\n        />\n\n        {/* Edit User Dialog */}\n        <Dialog open={!!editingUser} onOpenChange={(open) => !open && setEditingUser(null)}>\n          <DialogContent className='sm:max-w-[800px] max-h-[90vh] overflow-y-auto'>\n            <DialogHeader>\n              <DialogTitle>{t('editUserTitle')}</DialogTitle>\n              <DialogDescription>{t('editUserDescription')}</DialogDescription>\n            </DialogHeader>\n\n            <Tabs defaultValue='basic' className='w-full'>\n              <TabsList className={`grid w-full ${canEditOrganizations && canEditResidences ? 'grid-cols-4' : canEditOrganizations || canEditResidences ? 'grid-cols-3' : 'grid-cols-2'}`}>\n                <TabsTrigger value='basic'>{t('basicInfo') || 'Basic Info'}</TabsTrigger>\n                {canEditOrganizations && <TabsTrigger value='organizations'>{t('organizations')}</TabsTrigger>}\n                <TabsTrigger value='buildings'>{t('buildings') || 'Buildings'}</TabsTrigger>\n                {canEditResidences && <TabsTrigger value='residences'>{t('residences') || 'Residences'}</TabsTrigger>}\n              </TabsList>\n\n              <TabsContent value='basic' className='space-y-4'>\n                <Form {...editForm}>\n                  <form onSubmit={editForm.handleSubmit(handleEditUser)} className='space-y-4'>\n                    <div className='grid grid-cols-2 gap-4'>\n                      <FormField\n                        control={editForm.control}\n                        name='firstName'\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>{t('firstName')}</FormLabel>\n                            <FormControl>\n                              <Input {...field} data-testid='input-edit-firstName' />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={editForm.control}\n                        name='lastName'\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>{t('lastName')}</FormLabel>\n                            <FormControl>\n                              <Input {...field} data-testid='input-edit-lastName' />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <FormField\n                      control={editForm.control}\n                      name='email'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('email')}</FormLabel>\n                          <FormControl>\n                            <Input {...field} type='email' data-testid='input-edit-email' />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={editForm.control}\n                      name='role'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('role')}</FormLabel>\n                          <Select onValueChange={field.onChange} value={field.value}>\n                            <FormControl>\n                              <SelectTrigger data-testid='select-edit-role'>\n                                <SelectValue placeholder={t('selectRole')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              {getAvailableRoles?.map((role) => (\n                                <SelectItem key={role.value} value={role.value}>\n                                  {role.label}\n                                </SelectItem>\n                              )) || []}\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={editForm.control}\n                      name='isActive'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('accountStatus')}</FormLabel>\n                          <Select\n                            onValueChange={(value) => field.onChange(value === 'true')}\n                            defaultValue={field.value.toString()}\n                          >\n                            <FormControl>\n                              <SelectTrigger data-testid='select-edit-status'>\n                                <SelectValue placeholder={t('selectStatus') || 'Select status'} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value='true'>{t('statusActive')}</SelectItem>\n                              <SelectItem value='false'>{t('statusInactive')}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <DialogFooter>\n                      <Button\n                        type='button'\n                        variant='outline'\n                        onClick={() => setEditingUser(null)}\n                        data-testid='button-cancel-edit'\n                      >\n                        {t('cancel')}\n                      </Button>\n                      <Button\n                        type='submit'\n                        disabled={editUserMutation.isPending}\n                        data-testid='button-save-edit'\n                      >\n                        {editUserMutation.isPending ? (t('saving') || 'Saving...') : t('saveChanges')}\n                      </Button>\n                    </DialogFooter>\n                  </form>\n                </Form>\n              </TabsContent>\n\n              {canEditOrganizations && (\n                <TabsContent value='organizations' className='space-y-4'>\n                  <UserOrganizationsTab \n                    user={editingUser ? findUserWithAssignments(editingUser.id) : null}\n                    organizations={organizations}\n                    onSave={(organizationIds) => {\n                      if (editingUser) {\n                        editOrganizationsMutation.mutate({\n                          userId: editingUser.id,\n                          organizationIds\n                        });\n                      }\n                    }}\n                    isLoading={editOrganizationsMutation.isPending}\n                  />\n                </TabsContent>\n              )}\n\n              <TabsContent value='buildings' className='space-y-4'>\n                <UserBuildingsTab \n                  user={editingUser ? findUserWithAssignments(editingUser.id) : null}\n                  buildings={buildings}\n                  onSave={(buildingIds) => {\n                    if (editingUser) {\n                      editBuildingsMutation.mutate({\n                        userId: editingUser.id,\n                        buildingIds\n                      });\n                    }\n                  }}\n                  isLoading={editBuildingsMutation.isPending}\n                />\n              </TabsContent>\n\n              {canEditResidences && (\n                <TabsContent value='residences' className='space-y-4'>\n                  <UserResidencesTab \n                    user={editingUser ? findUserWithAssignments(editingUser.id) : null}\n                    residences={residences}\n                    onSave={(residenceAssignments) => {\n                      if (editingUser) {\n                        editResidencesMutation.mutate({\n                          userId: editingUser.id,\n                          residenceAssignments\n                        });\n                      }\n                    }}\n                    isLoading={editResidencesMutation.isPending}\n                  />\n                </TabsContent>\n              )}\n            </Tabs>\n          </DialogContent>\n        </Dialog>\n\n\n        {/* Delete Orphan Users Confirmation Dialog */}\n        <AlertDialog open={showDeleteOrphansDialog} onOpenChange={setShowDeleteOrphansDialog}>\n          <AlertDialogContent className='sm:max-w-[500px]'>\n            <AlertDialogHeader>\n              <AlertDialogTitle className='text-red-600'>Delete All Orphan Users</AlertDialogTitle>\n              <AlertDialogDescription>\n                This will permanently mark all orphan users (users with no organization or residence assignments) as inactive.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n\n            <div className='bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800 mb-4'>\n              <p className='text-red-700 dark:text-red-300 text-sm'>\n                <strong>Warning:</strong> This action will:\n              </p>\n              <ul className='text-red-700 dark:text-red-300 text-sm mt-2 list-disc list-inside'>\n                <li>Mark all orphan users as inactive (they will be hidden from the interface)</li>\n                <li>Preserve their data for audit purposes but remove access</li>\n                <li>Only affect users with no organization or residence assignments</li>\n                <li>Cannot be undone through the interface</li>\n              </ul>\n            </div>\n\n            <AlertDialogFooter>\n              <Button\n                variant='outline'\n                onClick={() => setShowDeleteOrphansDialog(false)}\n                disabled={deleteOrphanUsersMutation.isPending}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='destructive'\n                onClick={handleDeleteOrphanUsers}\n                disabled={deleteOrphanUsersMutation.isPending}\n                data-testid=\"button-confirm-delete-orphans\"\n              >\n                {deleteOrphanUsersMutation.isPending ? 'Deleting...' : 'Delete Orphan Users'}\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n\n        {/* Delete User Confirmation Dialog */}\n        <AlertDialog open={!!deletingUser} onOpenChange={(open) => !open && setDeletingUser(null)}>\n          <AlertDialogContent className='sm:max-w-[500px]'>\n            <AlertDialogHeader>\n              <AlertDialogTitle className='text-red-600'>{t('deleteUserTitle')}</AlertDialogTitle>\n              <AlertDialogDescription>\n                {t('deleteUserDescription').replace('and all associated data', `${deletingUser?.firstName} ${deletingUser?.lastName} and all associated data`)}\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n\n            <div className='bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800 mb-4'>\n              <p className='text-red-700 dark:text-red-300 text-sm'>\n                <strong>{t('warning') || 'Warning'}:</strong> {t('deleteUserDataWarning') || 'This will delete all user data including'}:\n              </p>\n              <ul className='text-red-700 dark:text-red-300 text-sm mt-2 list-disc list-inside'>\n                <li>{t('profileInfoAccess') || 'Profile information and account access'}</li>\n                <li>{t('orgResidenceAssignments') || 'Organization and residence assignments'}</li>\n                <li>{t('billsDocsMaintenance') || 'Bills, documents, and maintenance requests'}</li>\n                <li>{t('notificationsActivity') || 'Notifications and activity history'}</li>\n              </ul>\n            </div>\n\n            <Form {...deleteForm}>\n              <form onSubmit={deleteForm.handleSubmit(handleDeleteUser)} className='space-y-4'>\n                <FormField\n                  control={deleteForm.control}\n                  name='confirmEmail'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        {t('confirmEmailLabel')}:{' '}\n                        <span className='font-mono text-sm'>{deletingUser?.email}</span>\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type='email'\n                          placeholder={deletingUser?.email}\n                          data-testid='input-confirm-delete-email'\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={deleteForm.control}\n                  name='reason'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('reasonOptional')}</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          placeholder={t('enterReasonDeletion') || 'Enter reason for deletion...'}\n                          data-testid='input-delete-reason'\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <AlertDialogFooter>\n                  <Button\n                    type='button'\n                    variant='outline'\n                    onClick={() => setDeletingUser(null)}\n                    disabled={deleteUserMutation.isPending}\n                    data-testid='button-cancel-delete'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    type='submit'\n                    variant='destructive'\n                    disabled={deleteUserMutation.isPending}\n                    data-testid='button-confirm-delete'\n                  >\n                    {deleteUserMutation.isPending ? 'Deleting...' : 'Delete Account'}\n                  </Button>\n                </AlertDialogFooter>\n              </form>\n            </Form>\n          </AlertDialogContent>\n        </AlertDialog>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c45d52f2691b0b6feda1db8e9f4ad590c137a5e2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b1a9cyvql = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b1a9cyvql();
var __createBinding =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[0]++,
/* istanbul ignore next */
(cov_1b1a9cyvql().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1b1a9cyvql().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1b1a9cyvql().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1b1a9cyvql().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[0]++;
  cov_1b1a9cyvql().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1b1a9cyvql().b[2][0]++;
    cov_1b1a9cyvql().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1b1a9cyvql().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[5][1]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1b1a9cyvql().b[3][0]++;
    cov_1b1a9cyvql().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1b1a9cyvql().f[1]++;
        cov_1b1a9cyvql().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1b1a9cyvql().b[3][1]++;
  }
  cov_1b1a9cyvql().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1b1a9cyvql().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[2]++;
  cov_1b1a9cyvql().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1b1a9cyvql().b[7][0]++;
    cov_1b1a9cyvql().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1b1a9cyvql().b[7][1]++;
  }
  cov_1b1a9cyvql().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[11]++,
/* istanbul ignore next */
(cov_1b1a9cyvql().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1b1a9cyvql().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1b1a9cyvql().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1b1a9cyvql().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[3]++;
  cov_1b1a9cyvql().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1b1a9cyvql().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[4]++;
  cov_1b1a9cyvql().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[14]++,
/* istanbul ignore next */
(cov_1b1a9cyvql().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1b1a9cyvql().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1b1a9cyvql().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[5]++;
  cov_1b1a9cyvql().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[6]++;
    cov_1b1a9cyvql().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[17]++, []);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1b1a9cyvql().b[12][0]++;
          cov_1b1a9cyvql().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1b1a9cyvql().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[8]++;
    cov_1b1a9cyvql().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[13][0]++;
      cov_1b1a9cyvql().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[26]++, {});
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[15][0]++;
      cov_1b1a9cyvql().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1b1a9cyvql().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1b1a9cyvql().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1b1a9cyvql().b[16][0]++;
          cov_1b1a9cyvql().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1b1a9cyvql().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[15][1]++;
    }
    cov_1b1a9cyvql().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1b1a9cyvql().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1b1a9cyvql().s[36]++;
exports.default = UserManagement;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[37]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[38]++, __importStar(require("react")));
const react_query_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[39]++, require("@tanstack/react-query"));
const header_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[40]++, require("@/components/layout/header"));
const use_language_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[41]++, require("@/hooks/use-language"));
const use_toast_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[42]++, require("@/hooks/use-toast"));
const queryClient_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[43]++, require("@/lib/queryClient"));
const card_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[44]++, require("@/components/ui/card"));
const button_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[45]++, require("@/components/ui/button"));
const input_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[46]++, require("@/components/ui/input"));
const tabs_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[47]++, require("@/components/ui/tabs"));
const dialog_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[48]++, require("@/components/ui/dialog"));
const alert_dialog_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[49]++, require("@/components/ui/alert-dialog"));
const select_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[50]++, require("@/components/ui/select"));
const form_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[51]++, require("@/components/ui/form"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[52]++, require("lucide-react"));
const send_invitation_dialog_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[53]++, require("@/components/admin/send-invitation-dialog"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[54]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[55]++, require("@hookform/resolvers/zod"));
const zod_2 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[56]++, require("zod"));
const UserAssignmentsTableClean_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[57]++, require("@/components/UserAssignmentsTableClean"));
const UserOrganizationsTab_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[58]++, require("@/components/user-tabs/UserOrganizationsTab"));
const UserBuildingsTab_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[59]++, require("@/components/user-tabs/UserBuildingsTab"));
const UserResidencesTab_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[60]++, require("@/components/user-tabs/UserResidencesTab"));
const InvitationManagement_1 =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[61]++, require("@/components/InvitationManagement"));
// Form validation schema for editing users - dynamic based on available roles
/* istanbul ignore next */
cov_1b1a9cyvql().s[62]++;
const createEditUserSchema = availableRoles => {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[9]++;
  const roleValues =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[63]++, availableRoles.map(role => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[10]++;
    cov_1b1a9cyvql().s[64]++;
    return role.value;
  }));
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[65]++;
  return zod_2.z.object({
    firstName: zod_2.z.string().min(1, 'First name is required (example: Jean)').max(50, 'First name must be less than 50 characters').regex(/^[a-zA-ZÀ-ÿ\s'-]+$/, 'First name can only contain letters, spaces, apostrophes and hyphens'),
    lastName: zod_2.z.string().min(1, 'Last name is required (example: Dupont)').max(50, 'Last name must be less than 50 characters').regex(/^[a-zA-ZÀ-ÿ\s'-]+$/, 'Last name can only contain letters, spaces, apostrophes and hyphens'),
    email: zod_2.z.string().min(1, 'Email address is required').email('Please enter a valid email address (example: jean.dupont@email.com)'),
    role: roleValues.length > 0 ?
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[17][0]++, zod_2.z.enum(roleValues)) :
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[17][1]++, zod_2.z.string().min(1, 'Please select a user role')),
    isActive: zod_2.z.boolean()
  });
};
// Form validation schema for deleting users
const deleteUserSchema =
/* istanbul ignore next */
(cov_1b1a9cyvql().s[66]++, zod_2.z.object({
  confirmEmail: zod_2.z.string().min(1, 'Email confirmation is required to delete user').email('Please enter a valid email address that matches the user account'),
  reason: zod_2.z.string().max(500, 'Reason must be less than 500 characters').optional()
}));
/**
 * User Management Page for Management Menu
 * Consolidates user management functionalities for managers and admins.
 * Provides comprehensive user administration with role-based access controls.
 */
function UserManagement() {
  /* istanbul ignore next */
  cov_1b1a9cyvql().f[11]++;
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[67]++, (0, use_language_1.useLanguage)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[68]++, (0, use_toast_1.useToast)());
  const [selectedUsers, setSelectedUsers] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[69]++, (0, react_1.useState)(new Set()));
  const [showInviteDialog, setShowInviteDialog] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[70]++, (0, react_1.useState)(false));
  const [editingUser, setEditingUser] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[71]++, (0, react_1.useState)(null));
  const [deletingUser, setDeletingUser] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[72]++, (0, react_1.useState)(null));
  const [editingUserOrganizations, setEditingUserOrganizations] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[73]++, (0, react_1.useState)(null));
  const [editingUserResidences, setEditingUserResidences] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[74]++, (0, react_1.useState)(null));
  const [showDeleteOrphansDialog, setShowDeleteOrphansDialog] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[75]++, (0, react_1.useState)(false));
  // Pagination state
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[76]++, (0, react_1.useState)(1));
  const usersPerPage =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[77]++, 10);
  // Filter and search state - simplified for quick fix
  const [searchInput, setSearchInput] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[78]++, (0, react_1.useState)('')); // Input field value
  const [search, setSearch] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[79]++, (0, react_1.useState)('')); // Debounced search value for API
  const [roleFilter, setRoleFilter] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[80]++, (0, react_1.useState)(''));
  const [statusFilter, setStatusFilter] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[81]++, (0, react_1.useState)(''));
  const [organizationFilter, setOrganizationFilter] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[82]++, (0, react_1.useState)(''));
  const [orphanFilter, setOrphanFilter] =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[83]++, (0, react_1.useState)(''));
  // Debounce search input - wait 3 seconds after user stops typing
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[84]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[12]++;
    const timeoutId =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[85]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[13]++;
      cov_1b1a9cyvql().s[86]++;
      setSearch(searchInput);
    }, 3000));
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[87]++;
    return () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[14]++;
      cov_1b1a9cyvql().s[88]++;
      return clearTimeout(timeoutId);
    };
  }, [searchInput]);
  // Fetch users with server-side pagination
  const {
    data: usersResponse,
    isLoading: usersLoading,
    error: usersError
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[89]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/users', {
      page: currentPage,
      limit: usersPerPage,
      roleFilter,
      statusFilter,
      organizationFilter,
      orphanFilter,
      search
    }],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[15]++;
      // Build query parameters including filters
      const params =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[90]++, new URLSearchParams({
        page: currentPage.toString(),
        limit: usersPerPage.toString()
      }));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[91]++;
      if (roleFilter) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[18][0]++;
        cov_1b1a9cyvql().s[92]++;
        params.append('role', roleFilter);
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[18][1]++;
      }
      cov_1b1a9cyvql().s[93]++;
      if (statusFilter) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[19][0]++;
        cov_1b1a9cyvql().s[94]++;
        params.append('status', statusFilter);
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[19][1]++;
      }
      cov_1b1a9cyvql().s[95]++;
      if (organizationFilter) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[20][0]++;
        cov_1b1a9cyvql().s[96]++;
        params.append('organization', organizationFilter);
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[20][1]++;
      }
      cov_1b1a9cyvql().s[97]++;
      if (orphanFilter) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[21][0]++;
        cov_1b1a9cyvql().s[98]++;
        params.append('orphan', orphanFilter);
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[21][1]++;
      }
      cov_1b1a9cyvql().s[99]++;
      if (search) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[22][0]++;
        cov_1b1a9cyvql().s[100]++;
        params.append('search', search);
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[22][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[101]++, await fetch(`/api/users?${params.toString()}`));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[102]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[23][0]++;
        cov_1b1a9cyvql().s[103]++;
        throw new Error('Failed to fetch users');
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[23][1]++;
      }
      cov_1b1a9cyvql().s[104]++;
      return response.json();
    }
  }));
  // Extract users and pagination info from response
  const users =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[105]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[24][0]++, usersResponse?.users) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[24][1]++, []));
  const paginationInfo =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[106]++, usersResponse?.pagination);
  // Fetch dynamic filter options
  const {
    data: filterOptions
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[107]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/users/filter-options']
  }));
  // Fetch organizations
  const {
    data: organizations =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[25][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[108]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/organizations'],
    enabled: true
  }));
  // Fetch buildings
  const {
    data: buildings =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[26][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[109]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/buildings'],
    enabled: true
  }));
  // Fetch residences
  const {
    data: residences =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[27][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[110]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/residences'],
    enabled: true
  }));
  // Get current user to check permissions
  const {
    data: currentUser
  } =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[111]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/auth/user']
  }));
  // Organization context detection for role filtering
  const userOrganizationContext =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[112]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[16]++;
    cov_1b1a9cyvql().s[113]++;
    if (
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[29][0]++, !currentUser) ||
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[29][1]++, !organizations) ||
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[29][2]++, !users)) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[28][0]++;
      cov_1b1a9cyvql().s[114]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[28][1]++;
    }
    // Get current user's organization assignments
    const currentUserWithAssignments =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[115]++, users.find(u => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[17]++;
      cov_1b1a9cyvql().s[116]++;
      return u.id === currentUser.id;
    }));
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[117]++;
    if (!currentUserWithAssignments?.organizations) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[30][0]++;
      cov_1b1a9cyvql().s[118]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[30][1]++;
    }
    const userOrganizations =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[119]++, currentUserWithAssignments.organizations);
    const isDemoUser =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[120]++, ['demo_manager', 'demo_tenant', 'demo_resident'].includes(currentUser.role));
    const hasDemoOrganizations =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[121]++, userOrganizations.some(org => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[18]++;
      cov_1b1a9cyvql().s[122]++;
      return organizations.find(o => {
        /* istanbul ignore next */
        cov_1b1a9cyvql().f[19]++;
        cov_1b1a9cyvql().s[123]++;
        return o.id === org.id;
      })?.type === 'demo';
    }));
    const hasRegularOrganizations =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[124]++, userOrganizations.some(org => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[20]++;
      cov_1b1a9cyvql().s[125]++;
      return organizations.find(o => {
        /* istanbul ignore next */
        cov_1b1a9cyvql().f[21]++;
        cov_1b1a9cyvql().s[126]++;
        return o.id === org.id;
      })?.type !== 'demo';
    }));
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[127]++;
    return {
      isDemoUser,
      hasDemoOrganizations,
      hasRegularOrganizations,
      userOrganizations: userOrganizations.map(org => {
        /* istanbul ignore next */
        cov_1b1a9cyvql().f[22]++;
        cov_1b1a9cyvql().s[128]++;
        return org.id;
      }),
      organizationTypes: userOrganizations.map(org => {
        /* istanbul ignore next */
        cov_1b1a9cyvql().f[23]++;
        cov_1b1a9cyvql().s[129]++;
        return /* istanbul ignore next */(cov_1b1a9cyvql().b[31][0]++, organizations.find(o => {
          /* istanbul ignore next */
          cov_1b1a9cyvql().f[24]++;
          cov_1b1a9cyvql().s[130]++;
          return o.id === org.id;
        })?.type) ||
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[31][1]++, 'unknown');
      })
    };
  }, [currentUser, organizations, users]));
  // Role filtering function
  const getAvailableRoles =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[131]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[25]++;
    cov_1b1a9cyvql().s[132]++;
    if (
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[33][0]++, !currentUser) ||
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[33][1]++, !userOrganizationContext)) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[32][0]++;
      cov_1b1a9cyvql().s[133]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[32][1]++;
    }
    const {
      role
    } =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[134]++, currentUser);
    const {
      isDemoUser,
      hasDemoOrganizations,
      hasRegularOrganizations
    } =
    /* istanbul ignore next */
    (cov_1b1a9cyvql().s[135]++, userOrganizationContext);
    // Admin can assign any role
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[136]++;
    if (role === 'admin') {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[34][0]++;
      cov_1b1a9cyvql().s[137]++;
      return [{
        value: 'admin',
        label: 'Admin'
      }, {
        value: 'manager',
        label: 'Manager'
      }, {
        value: 'tenant',
        label: 'Tenant'
      }, {
        value: 'resident',
        label: 'Resident'
      }, {
        value: 'demo_manager',
        label: 'Demo Manager'
      }, {
        value: 'demo_tenant',
        label: 'Demo Tenant'
      }, {
        value: 'demo_resident',
        label: 'Demo Resident'
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[34][1]++;
    }
    // Manager role assignment restrictions
    cov_1b1a9cyvql().s[138]++;
    if (role === 'manager') {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[35][0]++;
      cov_1b1a9cyvql().s[139]++;
      return [{
        value: 'manager',
        label: 'Manager'
      }, {
        value: 'tenant',
        label: 'Tenant'
      }, {
        value: 'resident',
        label: 'Resident'
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[35][1]++;
    }
    // Demo manager role assignment restrictions
    cov_1b1a9cyvql().s[140]++;
    if (role === 'demo_manager') {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[36][0]++;
      cov_1b1a9cyvql().s[141]++;
      return [{
        value: 'demo_manager',
        label: 'Demo Manager'
      }, {
        value: 'demo_tenant',
        label: 'Demo Tenant'
      }, {
        value: 'demo_resident',
        label: 'Demo Resident'
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[36][1]++;
    }
    // Other roles cannot assign roles
    cov_1b1a9cyvql().s[142]++;
    return [];
  }, [currentUser, userOrganizationContext]));
  // Dynamic edit user schema based on available roles
  const editUserSchema =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[143]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[26]++;
    cov_1b1a9cyvql().s[144]++;
    return createEditUserSchema(getAvailableRoles);
  }, [getAvailableRoles]));
  // Bulk action handler
  const bulkActionMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[145]++, (0, react_query_1.useMutation)({
    mutationFn: async ({
      action,
      data
    }) => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[27]++;
      const selectedUserIds =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[146]++, Array.from(selectedUsers));
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[147]++, await (0, queryClient_1.apiRequest)('POST', '/api/users/bulk-action', {
        action,
        userIds: selectedUserIds,
        data
      }));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[148]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[28]++;
      cov_1b1a9cyvql().s[149]++;
      toast({
        title: t('success'),
        description: t('userUpdatedSuccess')
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[150]++;
      setSelectedUsers(new Set());
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[151]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
    },
    onError: _error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[29]++;
      cov_1b1a9cyvql().s[152]++;
      toast({
        title: t('error'),
        description: _error.message,
        variant: 'destructive'
      });
    }
  }));
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[153]++;
  const handleBulkAction = async (action, data) => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[30]++;
    cov_1b1a9cyvql().s[154]++;
    await bulkActionMutation.mutateAsync({
      action,
      data
    });
  };
  // Edit user mutation
  const editUserMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[155]++, (0, react_query_1.useMutation)({
    mutationFn: async userData => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[31]++;
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[156]++, await (0, queryClient_1.apiRequest)('PUT', `/api/users/${userData.id}`, userData));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[157]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[32]++;
      cov_1b1a9cyvql().s[158]++;
      toast({
        title: t('success'),
        description: t('userUpdatedSuccess')
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[159]++;
      setEditingUser(null);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[160]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[33]++;
      cov_1b1a9cyvql().s[161]++;
      toast({
        title: t('error'),
        description: error.message,
        variant: 'destructive'
      });
    }
  }));
  // Edit user form
  const editForm =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[162]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(editUserSchema),
    defaultValues: {
      firstName: '',
      lastName: '',
      email: '',
      role: 'tenant',
      isActive: true
    }
  }));
  // Delete user form
  const deleteForm =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[163]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(deleteUserSchema),
    defaultValues: {
      confirmEmail: '',
      reason: ''
    }
  }));
  // Reset form when editing user changes
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[164]++;
  react_1.default.useEffect(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[34]++;
    cov_1b1a9cyvql().s[165]++;
    if (editingUser) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[37][0]++;
      cov_1b1a9cyvql().s[166]++;
      editForm.reset({
        firstName:
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[38][0]++, editingUser.firstName) ||
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[38][1]++, ''),
        lastName:
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[39][0]++, editingUser.lastName) ||
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[39][1]++, ''),
        email: editingUser.email,
        role: editingUser.role,
        isActive: editingUser.isActive
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[37][1]++;
    }
  }, [editingUser, editForm]);
  // Reset delete form when deleting user changes
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[167]++;
  react_1.default.useEffect(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[35]++;
    cov_1b1a9cyvql().s[168]++;
    if (deletingUser) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[40][0]++;
      cov_1b1a9cyvql().s[169]++;
      deleteForm.reset({
        confirmEmail: '',
        reason: ''
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[40][1]++;
    }
  }, [deletingUser, deleteForm]);
  // Reset to page 1 when filters change (excluding search since it's disabled)
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[170]++;
  react_1.default.useEffect(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[36]++;
    cov_1b1a9cyvql().s[171]++;
    if (currentPage !== 1) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[41][0]++;
      cov_1b1a9cyvql().s[172]++;
      setCurrentPage(1);
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[41][1]++;
    }
  }, [roleFilter, statusFilter, organizationFilter, orphanFilter]);
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[173]++;
  const handleEditUser = async values => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[37]++;
    cov_1b1a9cyvql().s[174]++;
    if (!editingUser) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[42][0]++;
      cov_1b1a9cyvql().s[175]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[42][1]++;
    }
    cov_1b1a9cyvql().s[176]++;
    await editUserMutation.mutateAsync({
      ...values,
      id: editingUser.id
    });
  };
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[177]++;
  const openEditDialog = user => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[38]++;
    cov_1b1a9cyvql().s[178]++;
    setEditingUser(user);
  };
  // Helper function to find UserWithAssignments from the users list
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[179]++;
  const findUserWithAssignments = userId => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[39]++;
    cov_1b1a9cyvql().s[180]++;
    return /* istanbul ignore next */(cov_1b1a9cyvql().b[43][0]++, users.find(u => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[40]++;
      cov_1b1a9cyvql().s[181]++;
      return u.id === userId;
    })) ||
    /* istanbul ignore next */
    (cov_1b1a9cyvql().b[43][1]++, null);
  };
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[182]++;
  const openDeleteDialog = user => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[41]++;
    cov_1b1a9cyvql().s[183]++;
    setDeletingUser(user);
  };
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[184]++;
  const handleDeleteUser = async values => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[42]++;
    cov_1b1a9cyvql().s[185]++;
    if (!deletingUser) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[44][0]++;
      cov_1b1a9cyvql().s[186]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[44][1]++;
    }
    cov_1b1a9cyvql().s[187]++;
    await deleteUserMutation.mutateAsync({
      userId: deletingUser.id,
      data: values
    });
  };
  // Organization editing mutation
  const editOrganizationsMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[188]++, (0, react_query_1.useMutation)({
    mutationFn: async ({
      userId,
      organizationIds
    }) => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[43]++;
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[189]++, await (0, queryClient_1.apiRequest)('PUT', `/api/users/${userId}/organizations`, {
        organizationIds
      }));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[190]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[44]++;
      cov_1b1a9cyvql().s[191]++;
      toast({
        title: t('success'),
        description: t('organizationAssignmentsUpdated')
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[192]++;
      setEditingUserOrganizations(null);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[193]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[194]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/admin/all-user-organizations']
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[45]++;
      cov_1b1a9cyvql().s[195]++;
      toast({
        title: t('error'),
        description: error.message,
        variant: 'destructive'
      });
    }
  }));
  // Building editing mutation
  const editBuildingsMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[196]++, (0, react_query_1.useMutation)({
    mutationFn: async ({
      userId,
      buildingIds
    }) => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[46]++;
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[197]++, await (0, queryClient_1.apiRequest)('PUT', `/api/users/${userId}/buildings`, {
        buildingIds
      }));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[198]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[47]++;
      cov_1b1a9cyvql().s[199]++;
      toast({
        title: t('success'),
        description: t('buildingAssignmentsUpdated')
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[200]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[48]++;
      cov_1b1a9cyvql().s[201]++;
      toast({
        title: t('error'),
        description: error.message,
        variant: 'destructive'
      });
    }
  }));
  // Residence editing mutation
  const editResidencesMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[202]++, (0, react_query_1.useMutation)({
    mutationFn: async ({
      userId,
      residenceAssignments
    }) => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[49]++;
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[203]++, await (0, queryClient_1.apiRequest)('PUT', `/api/users/${userId}/residences`, {
        residenceAssignments
      }));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[204]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[50]++;
      cov_1b1a9cyvql().s[205]++;
      toast({
        title: t('success'),
        description: t('residenceAssignmentsUpdated')
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[206]++;
      setEditingUserResidences(null);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[207]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[208]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/admin/all-user-residences']
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[51]++;
      cov_1b1a9cyvql().s[209]++;
      toast({
        title: t('error'),
        description: error.message,
        variant: 'destructive'
      });
    }
  }));
  // Delete user mutation
  const deleteUserMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[210]++, (0, react_query_1.useMutation)({
    mutationFn: async ({
      userId,
      data
    }) => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[52]++;
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[211]++, await (0, queryClient_1.apiRequest)('POST', `/api/users/${userId}/delete-account`, data));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[212]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[53]++;
      cov_1b1a9cyvql().s[213]++;
      toast({
        title: t('accountDeleted'),
        description: t('accountDeletedDescription')
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[214]++;
      setDeletingUser(null);
      // Invalidate and refetch user data
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[215]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[216]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/admin/all-user-organizations']
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[217]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/admin/all-user-residences']
      });
      // Force refetch to ensure UI updates
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[218]++;
      queryClient_1.queryClient.refetchQueries({
        queryKey: ['/api/users']
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[54]++;
      cov_1b1a9cyvql().s[219]++;
      toast({
        title: t('deletionFailed'),
        description:
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[45][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[45][1]++, t('deletionFailedDescription')),
        variant: 'destructive'
      });
    }
  }));
  // Permission checks
  const canEditOrganizations =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[220]++, currentUser?.role === 'admin');
  const canEditResidences =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[221]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[46][0]++, currentUser?.role === 'admin') ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[46][1]++, currentUser?.role === 'manager'));
  const canDeleteUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[222]++, currentUser?.role === 'admin');
  // Filter configuration - temporarily simplified
  // const filterConfig = {
  //   searchable: true,
  //   searchFields: ['firstName', 'lastName', 'email', 'username'],
  //   filters: [
  //     {
  //       id: 'role',
  //       field: 'role',
  //       label: 'Role',
  //       type: 'select' as const,
  //       options: [
  //         { label: 'Admin', _value: 'admin' },
  //         { label: 'Manager', _value: 'manager' },
  //         { label: 'Tenant', _value: 'tenant' },
  //         { label: 'Resident', _value: 'resident' },
  //         { label: 'Demo Manager', _value: 'demo_manager' },
  //         { label: 'Demo Tenant', _value: 'demo_tenant' },
  //         { label: 'Demo Resident', _value: 'demo_resident' },
  //       ],
  //     },
  //     {
  //       id: 'isActive',
  //       field: 'isActive',
  //       label: 'Status',
  //       type: 'select' as const,
  //       options: [
  //         { label: 'Active', _value: 'true' },
  //         { label: 'Inactive', _value: 'false' },
  //       ],
  //     },
  //     {
  //       id: 'organization',
  //       field: 'organization',
  //       label: 'Organization',
  //       type: 'select' as const,
  //       options: organizations?.map((org) => ({ label: org.name, _value: org.id })) || [],
  //     },
  //   ],
  //   sortOptions: [
  //     { field: 'firstName', label: 'First Name' },
  //     { field: 'lastName', label: 'Last Name' },
  //     { field: 'email', label: 'Email' },
  //     { field: 'role', label: 'Role' },
  //     { field: 'createdAt', label: 'Created Date' },
  //   ],
  // };
  // Use server-side paginated results directly
  // Client-side filtering removed to avoid conflicts with server-side pagination
  // TODO: Move all filtering to server-side for proper search across all users
  const filteredUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[223]++, users);
  // Filter handlers - temporarily disabled
  // const handleAddFilter = (filter: FilterValue) => {
  //   setFilters((prev) => [...prev.filter((f) => f.field !== filter.field), filter]);
  // };
  // const handleRemoveFilter = (field: string) => {
  //   setFilters((prev) => prev.filter((f) => f.field !== field));
  // };
  // const handleFilterUpdate = (field: string, filter: FilterValue) => {
  //   setFilters((prev) => prev.map((f) => (f.field === field ? filter : f)));
  // };
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[224]++;
  const handleClearFilters = () => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[55]++;
    cov_1b1a9cyvql().s[225]++;
    setSearchInput('');
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[226]++;
    setSearch('');
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[227]++;
    setRoleFilter('');
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[228]++;
    setStatusFilter('');
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[229]++;
    setOrganizationFilter('');
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[230]++;
    setOrphanFilter('');
  };
  // Clear orphan filter when organization is selected
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[231]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[56]++;
    cov_1b1a9cyvql().s[232]++;
    if (organizationFilter) {
      /* istanbul ignore next */
      cov_1b1a9cyvql().b[47][0]++;
      cov_1b1a9cyvql().s[233]++;
      setOrphanFilter('');
    } else
    /* istanbul ignore next */
    {
      cov_1b1a9cyvql().b[47][1]++;
    }
  }, [organizationFilter]);
  // Delete orphan users mutation (admin only)
  const deleteOrphanUsersMutation =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[234]++, (0, react_query_1.useMutation)({
    mutationFn: async () => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[57]++;
      cov_1b1a9cyvql().s[235]++;
      console.log('🗑️ [FRONTEND] Delete orphans mutation started');
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[236]++;
      console.log('🔍 [FRONTEND] Current user:', currentUser?.email, 'role:', currentUser?.role);
      const response =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[237]++, await fetch('/api/users/orphans', {
        method: 'DELETE'
      }));
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[238]++;
      console.log('📡 [FRONTEND] API response status:', response.status, response.statusText);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[239]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b1a9cyvql().b[48][0]++;
        const error =
        /* istanbul ignore next */
        (cov_1b1a9cyvql().s[240]++, await response.json());
        /* istanbul ignore next */
        cov_1b1a9cyvql().s[241]++;
        console.error('❌ [FRONTEND] API Error response:', error);
        /* istanbul ignore next */
        cov_1b1a9cyvql().s[242]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[49][0]++, error.error) ||
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[49][1]++, 'Failed to delete orphan users'));
      } else
      /* istanbul ignore next */
      {
        cov_1b1a9cyvql().b[48][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1b1a9cyvql().s[243]++, await response.json());
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[244]++;
      console.log('✅ [FRONTEND] API Success response:', result);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[245]++;
      return result;
    },
    onSuccess: data => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[58]++;
      cov_1b1a9cyvql().s[246]++;
      console.log('🎉 [FRONTEND] Delete orphans mutation succeeded:', data);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[247]++;
      toast({
        title: 'Success',
        description:
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[50][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[50][1]++, `Deleted ${data.deletedCount} orphan users`)
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[248]++;
      console.log('🔄 [FRONTEND] Refreshing users list...');
      // Refresh the users list
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[249]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/users']
      });
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[250]++;
      setShowDeleteOrphansDialog(false);
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1b1a9cyvql().f[59]++;
      cov_1b1a9cyvql().s[251]++;
      console.error('💥 [FRONTEND] Delete orphans mutation failed:', error);
      /* istanbul ignore next */
      cov_1b1a9cyvql().s[252]++;
      toast({
        title: 'Error',
        description: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[51][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1b1a9cyvql().b[51][1]++, 'Failed to delete orphan users'),
        variant: 'destructive'
      });
    }
  }));
  // Handle delete orphan users
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[253]++;
  const handleDeleteOrphanUsers = () => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[60]++;
    cov_1b1a9cyvql().s[254]++;
    console.log('🖱️ [FRONTEND] Delete orphans button clicked');
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[255]++;
    console.log('👤 [FRONTEND] Triggering delete for user:', currentUser?.email);
    /* istanbul ignore next */
    cov_1b1a9cyvql().s[256]++;
    deleteOrphanUsersMutation.mutate();
  };
  // const handleToggleSort = (field: string) => {
  //   if (sort?.field === field) {
  //     setSort({ ...sort, direction: sort.direction === 'asc' ? 'desc' : 'asc' });
  //   } else {
  //     setSort({ field, direction: 'asc' });
  //   }
  // };
  // Calculate stats using server-side pagination data
  const totalUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[257]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[52][0]++, paginationInfo?.total) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[52][1]++, 0));
  const filteredTotal =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[258]++, filteredUsers.length);
  // Calculate stats based on current page results when filters are applied
  const hasActiveFilters =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[259]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[53][0]++, roleFilter) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[53][1]++, statusFilter) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[53][2]++, organizationFilter) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[53][3]++, orphanFilter));
  // If filters are applied, show stats for current visible users, otherwise show total stats
  const displayedActiveUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[260]++, hasActiveFilters ?
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[54][0]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[55][0]++, users?.filter(user => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[61]++;
    cov_1b1a9cyvql().s[261]++;
    return user.isActive;
  }).length) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[55][1]++, 0)) :
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[54][1]++, totalUsers > 0 ?
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[56][0]++, Math.floor(totalUsers * 0.85)) :
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[56][1]++, 0))); // Estimate 85% active when no filters
  const displayedAdminUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[262]++, hasActiveFilters ?
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[57][0]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[58][0]++, users?.filter(user => {
    /* istanbul ignore next */
    cov_1b1a9cyvql().f[62]++;
    cov_1b1a9cyvql().s[263]++;
    return user.role === 'admin';
  }).length) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[58][1]++, 0)) :
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[57][1]++, totalUsers > 0 ?
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[59][0]++, Math.floor(totalUsers * 0.02)) :
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[59][1]++, 0))); // Estimate 2% admin when no filters
  const displayedTotalUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[264]++, hasActiveFilters ?
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[60][0]++, `~${users.length}`) :
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[60][1]++, totalUsers));
  // Use server-side pagination calculations
  const totalPages =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[265]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[61][0]++, paginationInfo?.totalPages) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[61][1]++, 1));
  const hasNext =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[266]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[62][0]++, paginationInfo?.hasNext) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[62][1]++, false));
  const hasPrev =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[267]++,
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[63][0]++, paginationInfo?.hasPrev) ||
  /* istanbul ignore next */
  (cov_1b1a9cyvql().b[63][1]++, false));
  // For display, use filteredUsers (which may be less than the page size if filters are applied)
  const currentUsers =
  /* istanbul ignore next */
  (cov_1b1a9cyvql().s[268]++, filteredUsers);
  /* istanbul ignore next */
  cov_1b1a9cyvql().s[269]++;
  if (usersError) {
    /* istanbul ignore next */
    cov_1b1a9cyvql().b[64][0]++;
    cov_1b1a9cyvql().s[270]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: t('userManagement'),
        subtitle: t('manageAllUsers')
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 overflow-auto p-6',
        children: (0, jsx_runtime_1.jsx)(card_1.Card, {
          children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
            className: 'p-6',
            children: (0, jsx_runtime_1.jsx)("p", {
              className: 'text-red-600',
              children: t('anErrorOccurred')
            })
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_1b1a9cyvql().b[64][1]++;
  }
  cov_1b1a9cyvql().s[271]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: 'flex-1 flex flex-col overflow-hidden',
    children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
      title: t('userManagement'),
      subtitle: t('manageAllUsers')
    }), (0, jsx_runtime_1.jsx)("div", {
      className: 'flex-1 overflow-auto p-6',
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'max-w-7xl mx-auto space-y-6',
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: 'grid grid-cols-1 md:grid-cols-3 gap-6',
          children: [(0, jsx_runtime_1.jsxs)(card_1.Card, {
            children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
              className: 'flex flex-row items-center justify-between space-y-0 pb-2',
              children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, {
                className: 'text-sm font-medium text-gray-600',
                children: t('totalUsers')
              }), (0, jsx_runtime_1.jsx)(lucide_react_1.Users, {
                className: 'h-4 w-4 text-muted-foreground'
              })]
            }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
              children: [(0, jsx_runtime_1.jsx)("div", {
                className: 'text-2xl font-bold',
                children: displayedTotalUsers
              }), (0, jsx_runtime_1.jsx)("p", {
                className: 'text-xs text-muted-foreground',
                children: hasActiveFilters ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[65][0]++,
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[66][0]++, t('filtered')) ||
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[66][1]++, 'Filtered')) :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[65][1]++, t('total'))
              })]
            })]
          }), (0, jsx_runtime_1.jsxs)(card_1.Card, {
            children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
              className: 'flex flex-row items-center justify-between space-y-0 pb-2',
              children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, {
                className: 'text-sm font-medium text-gray-600',
                children: t('activeUsers')
              }), (0, jsx_runtime_1.jsx)(lucide_react_1.UserPlus, {
                className: 'h-4 w-4 text-muted-foreground'
              })]
            }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
              children: [(0, jsx_runtime_1.jsx)("div", {
                className: 'text-2xl font-bold',
                children: displayedActiveUsers
              }), (0, jsx_runtime_1.jsx)("p", {
                className: 'text-xs text-muted-foreground',
                children: hasActiveFilters ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[67][0]++,
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[68][0]++, t('onThisPage')) ||
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[68][1]++, 'On this page')) :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[67][1]++, t('active'))
              })]
            })]
          }), (0, jsx_runtime_1.jsxs)(card_1.Card, {
            children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
              className: 'flex flex-row items-center justify-between space-y-0 pb-2',
              children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, {
                className: 'text-sm font-medium text-gray-600',
                children: t('admin')
              }), (0, jsx_runtime_1.jsx)(lucide_react_1.Shield, {
                className: 'h-4 w-4 text-muted-foreground'
              })]
            }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
              children: [(0, jsx_runtime_1.jsx)("div", {
                className: 'text-2xl font-bold',
                children: displayedAdminUsers
              }), (0, jsx_runtime_1.jsx)("p", {
                className: 'text-xs text-muted-foreground',
                children: hasActiveFilters ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[69][0]++,
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[70][0]++, t('onThisPage')) ||
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[70][1]++, 'On this page')) :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[69][1]++, t('role'))
              })]
            })]
          })]
        }), (0, jsx_runtime_1.jsxs)(tabs_1.Tabs, {
          defaultValue: 'users',
          className: 'space-y-6',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center justify-between',
            children: [(0, jsx_runtime_1.jsxs)(tabs_1.TabsList, {
              children: [(0, jsx_runtime_1.jsxs)(tabs_1.TabsTrigger, {
                value: 'users',
                className: 'flex items-center gap-2',
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Users, {
                  className: 'h-4 w-4'
                }), t('users')]
              }), (0, jsx_runtime_1.jsxs)(tabs_1.TabsTrigger, {
                value: 'invitations',
                className: 'flex items-center gap-2',
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Mail, {
                  className: 'h-4 w-4'
                }), t('invitations')]
              })]
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: "flex gap-2",
              children: [(0, jsx_runtime_1.jsxs)(button_1.Button, {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_1b1a9cyvql().f[63]++;
                  cov_1b1a9cyvql().s[272]++;
                  return setShowInviteDialog(true);
                },
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.UserPlus, {
                  className: 'h-4 w-4 mr-2'
                }), t('inviteUser')]
              }),
              /* istanbul ignore next */
              (cov_1b1a9cyvql().b[71][0]++, currentUser?.role === 'admin') &&
              /* istanbul ignore next */
              (cov_1b1a9cyvql().b[71][1]++, (0, jsx_runtime_1.jsxs)(button_1.Button, {
                variant: "destructive",
                onClick: () => {
                  /* istanbul ignore next */
                  cov_1b1a9cyvql().f[64]++;
                  cov_1b1a9cyvql().s[273]++;
                  return setShowDeleteOrphansDialog(true);
                },
                "data-testid": "button-delete-orphans",
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, {
                  className: 'h-4 w-4 mr-2'
                }), "Delete Orphan Users"]
              }))]
            })]
          }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
            value: 'users',
            className: 'space-y-6',
            children: (0, jsx_runtime_1.jsx)(card_1.Card, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
                className: 'p-6',
                children: usersLoading ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[72][0]++, (0, jsx_runtime_1.jsx)("p", {
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[73][0]++, t('loadingUsers')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[73][1]++, 'Loading users...')
                })) :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[72][1]++, (0, jsx_runtime_1.jsxs)("div", {
                  className: 'space-y-4',
                  children: [(0, jsx_runtime_1.jsxs)("div", {
                    className: 'flex flex-col sm:flex-row gap-4 mb-4 p-4 bg-gray-50 rounded-lg',
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: 'flex-1',
                      children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                        placeholder: t('searchUsers'),
                        value: searchInput,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_1b1a9cyvql().f[65]++;
                          cov_1b1a9cyvql().s[274]++;
                          return setSearchInput(e.target.value);
                        },
                        className: 'w-full'
                      })
                    }), (0, jsx_runtime_1.jsx)("select", {
                      value: roleFilter,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[66]++;
                        cov_1b1a9cyvql().s[275]++;
                        return setRoleFilter(e.target.value);
                      },
                      className: 'px-3 py-2 border border-gray-300 rounded-md',
                      children:
                      /* istanbul ignore next */
                      (cov_1b1a9cyvql().b[74][0]++, filterOptions?.roles?.map(role => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[67]++;
                        cov_1b1a9cyvql().s[276]++;
                        return (0, jsx_runtime_1.jsx)("option", {
                          value: role.value,
                          children: role.label
                        }, role.value);
                      })) ||
                      /* istanbul ignore next */
                      (cov_1b1a9cyvql().b[74][1]++, [])
                    }), (0, jsx_runtime_1.jsx)("select", {
                      value: statusFilter,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[68]++;
                        cov_1b1a9cyvql().s[277]++;
                        return setStatusFilter(e.target.value);
                      },
                      className: 'px-3 py-2 border border-gray-300 rounded-md',
                      children:
                      /* istanbul ignore next */
                      (cov_1b1a9cyvql().b[75][0]++, filterOptions?.statuses?.map(status => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[69]++;
                        cov_1b1a9cyvql().s[278]++;
                        return (0, jsx_runtime_1.jsx)("option", {
                          value: status.value,
                          children: status.label
                        }, status.value);
                      })) ||
                      /* istanbul ignore next */
                      (cov_1b1a9cyvql().b[75][1]++, [])
                    }),
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[76][0]++, filterOptions?.organizations) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[76][1]++, filterOptions.organizations.length > 0) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[76][2]++, (0, jsx_runtime_1.jsx)("select", {
                      value: organizationFilter,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[70]++;
                        cov_1b1a9cyvql().s[279]++;
                        return setOrganizationFilter(e.target.value);
                      },
                      className: 'px-3 py-2 border border-gray-300 rounded-md',
                      children: filterOptions.organizations.map(org => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[71]++;
                        cov_1b1a9cyvql().s[280]++;
                        return (0, jsx_runtime_1.jsx)("option", {
                          value: org.value,
                          children: org.label
                        }, org.value);
                      })
                    })),
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[77][0]++, filterOptions?.orphanOptions) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[77][1]++, filterOptions.orphanOptions.length > 0) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[77][2]++, !organizationFilter) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[77][3]++, (0, jsx_runtime_1.jsx)("select", {
                      value: orphanFilter,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[72]++;
                        cov_1b1a9cyvql().s[281]++;
                        return setOrphanFilter(e.target.value);
                      },
                      className: 'px-3 py-2 border border-gray-300 rounded-md',
                      children: filterOptions.orphanOptions.map(option => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[73]++;
                        cov_1b1a9cyvql().s[282]++;
                        return (0, jsx_runtime_1.jsx)("option", {
                          value: option.value,
                          children: option.label
                        }, option.value);
                      })
                    })),
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[78][0]++, organizationFilter) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[78][1]++, filterOptions?.orphanOptions) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[78][2]++, filterOptions.orphanOptions.length > 0) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[78][3]++, (0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-gray-500 italic px-3 py-2 border border-gray-200 rounded-md bg-gray-100",
                      children: "Orphan filter unavailable (organization selected)"
                    })), (
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[79][0]++, searchInput) ||
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[79][1]++, roleFilter) ||
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[79][2]++, statusFilter) ||
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[79][3]++, organizationFilter) ||
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[79][4]++, orphanFilter)) &&
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[79][5]++, (0, jsx_runtime_1.jsx)(button_1.Button, {
                      variant: 'outline',
                      onClick: handleClearFilters,
                      children: t('clearFilters')
                    }))]
                  }), (0, jsx_runtime_1.jsxs)("h3", {
                    className: 'text-lg font-semibold',
                    children: [t('users'), " (", filteredTotal, " of ", totalUsers, " ", t('users').toLowerCase(), ")"]
                  }), (0, jsx_runtime_1.jsx)(UserAssignmentsTableClean_1.UserAssignmentsTable, {
                    users: currentUsers,
                    isLoading: usersLoading,
                    onEditUser: openEditDialog,
                    onEditOrganizations: setEditingUserOrganizations,
                    onEditResidences: setEditingUserResidences,
                    onDeleteUser: openDeleteDialog,
                    canEditOrganizations: canEditOrganizations,
                    canEditResidences: canEditResidences,
                    canDeleteUsers: canDeleteUsers
                  }),
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[80][0]++, totalPages > 1) &&
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[80][1]++, (0, jsx_runtime_1.jsxs)("div", {
                    className: 'flex justify-between items-center mt-4',
                    children: [(0, jsx_runtime_1.jsxs)("div", {
                      className: 'text-sm text-gray-600',
                      children: ["Page ", currentPage, " of ", totalPages, " - Showing ", users.length, " ", t('users').toLowerCase(), " (", totalUsers, " total)"]
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: 'flex gap-2',
                      children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
                        variant: 'outline',
                        size: 'sm',
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_1b1a9cyvql().f[74]++;
                          cov_1b1a9cyvql().s[283]++;
                          return setCurrentPage(prev => {
                            /* istanbul ignore next */
                            cov_1b1a9cyvql().f[75]++;
                            cov_1b1a9cyvql().s[284]++;
                            return Math.max(prev - 1, 1);
                          });
                        },
                        disabled:
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[81][0]++, !hasPrev) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[81][1]++, usersLoading),
                        children:
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[82][0]++, t('previous')) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[82][1]++, 'Previous')
                      }), (0, jsx_runtime_1.jsxs)("span", {
                        className: 'px-3 py-1 text-sm',
                        children: [
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[83][0]++, t('page')) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[83][1]++, 'Page'), " ", currentPage, " ",
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[84][0]++, t('of')) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[84][1]++, 'of'), " ", totalPages]
                      }), (0, jsx_runtime_1.jsx)(button_1.Button, {
                        variant: 'outline',
                        size: 'sm',
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_1b1a9cyvql().f[76]++;
                          cov_1b1a9cyvql().s[285]++;
                          return setCurrentPage(prev => {
                            /* istanbul ignore next */
                            cov_1b1a9cyvql().f[77]++;
                            cov_1b1a9cyvql().s[286]++;
                            return Math.min(prev + 1, totalPages);
                          });
                        },
                        disabled:
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[85][0]++, !hasNext) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[85][1]++, usersLoading),
                        children:
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[86][0]++, t('next')) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[86][1]++, 'Next')
                      })]
                    })]
                  }))]
                }))
              })
            })
          }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
            value: 'invitations',
            className: 'space-y-6',
            children: (0, jsx_runtime_1.jsx)(InvitationManagement_1.InvitationManagement, {})
          })]
        }), (0, jsx_runtime_1.jsx)(send_invitation_dialog_1.SendInvitationDialog, {
          open: showInviteDialog,
          onOpenChange: setShowInviteDialog,
          onSuccess: () => {
            /* istanbul ignore next */
            cov_1b1a9cyvql().f[78]++;
            cov_1b1a9cyvql().s[287]++;
            // Refresh users list after successful invitation
            queryClient_1.queryClient.invalidateQueries({
              queryKey: ['/api/users']
            });
          }
        }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
          open: !!editingUser,
          onOpenChange: open => {
            /* istanbul ignore next */
            cov_1b1a9cyvql().f[79]++;
            cov_1b1a9cyvql().s[288]++;
            return /* istanbul ignore next */(cov_1b1a9cyvql().b[87][0]++, !open) &&
            /* istanbul ignore next */
            (cov_1b1a9cyvql().b[87][1]++, setEditingUser(null));
          },
          children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
            className: 'sm:max-w-[800px] max-h-[90vh] overflow-y-auto',
            children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
              children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
                children: t('editUserTitle')
              }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, {
                children: t('editUserDescription')
              })]
            }), (0, jsx_runtime_1.jsxs)(tabs_1.Tabs, {
              defaultValue: 'basic',
              className: 'w-full',
              children: [(0, jsx_runtime_1.jsxs)(tabs_1.TabsList, {
                className: `grid w-full ${
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[89][0]++, canEditOrganizations) &&
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[89][1]++, canEditResidences) ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[88][0]++, 'grid-cols-4') :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[88][1]++,
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[91][0]++, canEditOrganizations) ||
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[91][1]++, canEditResidences) ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[90][0]++, 'grid-cols-3') :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[90][1]++, 'grid-cols-2'))}`,
                children: [(0, jsx_runtime_1.jsx)(tabs_1.TabsTrigger, {
                  value: 'basic',
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[92][0]++, t('basicInfo')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[92][1]++, 'Basic Info')
                }),
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[93][0]++, canEditOrganizations) &&
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[93][1]++, (0, jsx_runtime_1.jsx)(tabs_1.TabsTrigger, {
                  value: 'organizations',
                  children: t('organizations')
                })), (0, jsx_runtime_1.jsx)(tabs_1.TabsTrigger, {
                  value: 'buildings',
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[94][0]++, t('buildings')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[94][1]++, 'Buildings')
                }),
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[95][0]++, canEditResidences) &&
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[95][1]++, (0, jsx_runtime_1.jsx)(tabs_1.TabsTrigger, {
                  value: 'residences',
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[96][0]++, t('residences')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[96][1]++, 'Residences')
                }))]
              }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
                value: 'basic',
                className: 'space-y-4',
                children: (0, jsx_runtime_1.jsx)(form_1.Form, {
                  ...editForm,
                  children: (0, jsx_runtime_1.jsxs)("form", {
                    onSubmit: editForm.handleSubmit(handleEditUser),
                    className: 'space-y-4',
                    children: [(0, jsx_runtime_1.jsxs)("div", {
                      className: 'grid grid-cols-2 gap-4',
                      children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
                        control: editForm.control,
                        name: 'firstName',
                        render: ({
                          field
                        }) => {
                          /* istanbul ignore next */
                          cov_1b1a9cyvql().f[80]++;
                          cov_1b1a9cyvql().s[289]++;
                          return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                            children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                              children: t('firstName')
                            }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                              children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                                ...field,
                                "data-testid": 'input-edit-firstName'
                              })
                            }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                          });
                        }
                      }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                        control: editForm.control,
                        name: 'lastName',
                        render: ({
                          field
                        }) => {
                          /* istanbul ignore next */
                          cov_1b1a9cyvql().f[81]++;
                          cov_1b1a9cyvql().s[290]++;
                          return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                            children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                              children: t('lastName')
                            }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                              children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                                ...field,
                                "data-testid": 'input-edit-lastName'
                              })
                            }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                          });
                        }
                      })]
                    }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                      control: editForm.control,
                      name: 'email',
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[82]++;
                        cov_1b1a9cyvql().s[291]++;
                        return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                          children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                            children: t('email')
                          }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                            children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                              ...field,
                              type: 'email',
                              "data-testid": 'input-edit-email'
                            })
                          }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                        });
                      }
                    }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                      control: editForm.control,
                      name: 'role',
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[83]++;
                        cov_1b1a9cyvql().s[292]++;
                        return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                          children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                            children: t('role')
                          }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                            onValueChange: field.onChange,
                            value: field.value,
                            children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                              children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                                "data-testid": 'select-edit-role',
                                children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                                  placeholder: t('selectRole')
                                })
                              })
                            }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                              children:
                              /* istanbul ignore next */
                              (cov_1b1a9cyvql().b[97][0]++, getAvailableRoles?.map(role => {
                                /* istanbul ignore next */
                                cov_1b1a9cyvql().f[84]++;
                                cov_1b1a9cyvql().s[293]++;
                                return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                                  value: role.value,
                                  children: role.label
                                }, role.value);
                              })) ||
                              /* istanbul ignore next */
                              (cov_1b1a9cyvql().b[97][1]++, [])
                            })]
                          }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                        });
                      }
                    }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                      control: editForm.control,
                      name: 'isActive',
                      render: ({
                        field
                      }) => {
                        /* istanbul ignore next */
                        cov_1b1a9cyvql().f[85]++;
                        cov_1b1a9cyvql().s[294]++;
                        return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                          children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                            children: t('accountStatus')
                          }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                            onValueChange: value => {
                              /* istanbul ignore next */
                              cov_1b1a9cyvql().f[86]++;
                              cov_1b1a9cyvql().s[295]++;
                              return field.onChange(value === 'true');
                            },
                            defaultValue: field.value.toString(),
                            children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                              children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                                "data-testid": 'select-edit-status',
                                children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                                  placeholder:
                                  /* istanbul ignore next */
                                  (cov_1b1a9cyvql().b[98][0]++, t('selectStatus')) ||
                                  /* istanbul ignore next */
                                  (cov_1b1a9cyvql().b[98][1]++, 'Select status')
                                })
                              })
                            }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                              children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                                value: 'true',
                                children: t('statusActive')
                              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                                value: 'false',
                                children: t('statusInactive')
                              })]
                            })]
                          }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                        });
                      }
                    }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, {
                      children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
                        type: 'button',
                        variant: 'outline',
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_1b1a9cyvql().f[87]++;
                          cov_1b1a9cyvql().s[296]++;
                          return setEditingUser(null);
                        },
                        "data-testid": 'button-cancel-edit',
                        children: t('cancel')
                      }), (0, jsx_runtime_1.jsx)(button_1.Button, {
                        type: 'submit',
                        disabled: editUserMutation.isPending,
                        "data-testid": 'button-save-edit',
                        children: editUserMutation.isPending ?
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[99][0]++,
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[100][0]++, t('saving')) ||
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[100][1]++, 'Saving...')) :
                        /* istanbul ignore next */
                        (cov_1b1a9cyvql().b[99][1]++, t('saveChanges'))
                      })]
                    })]
                  })
                })
              }),
              /* istanbul ignore next */
              (cov_1b1a9cyvql().b[101][0]++, canEditOrganizations) &&
              /* istanbul ignore next */
              (cov_1b1a9cyvql().b[101][1]++, (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
                value: 'organizations',
                className: 'space-y-4',
                children: (0, jsx_runtime_1.jsx)(UserOrganizationsTab_1.UserOrganizationsTab, {
                  user: editingUser ?
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[102][0]++, findUserWithAssignments(editingUser.id)) :
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[102][1]++, null),
                  organizations: organizations,
                  onSave: organizationIds => {
                    /* istanbul ignore next */
                    cov_1b1a9cyvql().f[88]++;
                    cov_1b1a9cyvql().s[297]++;
                    if (editingUser) {
                      /* istanbul ignore next */
                      cov_1b1a9cyvql().b[103][0]++;
                      cov_1b1a9cyvql().s[298]++;
                      editOrganizationsMutation.mutate({
                        userId: editingUser.id,
                        organizationIds
                      });
                    } else
                    /* istanbul ignore next */
                    {
                      cov_1b1a9cyvql().b[103][1]++;
                    }
                  },
                  isLoading: editOrganizationsMutation.isPending
                })
              })), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
                value: 'buildings',
                className: 'space-y-4',
                children: (0, jsx_runtime_1.jsx)(UserBuildingsTab_1.UserBuildingsTab, {
                  user: editingUser ?
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[104][0]++, findUserWithAssignments(editingUser.id)) :
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[104][1]++, null),
                  buildings: buildings,
                  onSave: buildingIds => {
                    /* istanbul ignore next */
                    cov_1b1a9cyvql().f[89]++;
                    cov_1b1a9cyvql().s[299]++;
                    if (editingUser) {
                      /* istanbul ignore next */
                      cov_1b1a9cyvql().b[105][0]++;
                      cov_1b1a9cyvql().s[300]++;
                      editBuildingsMutation.mutate({
                        userId: editingUser.id,
                        buildingIds
                      });
                    } else
                    /* istanbul ignore next */
                    {
                      cov_1b1a9cyvql().b[105][1]++;
                    }
                  },
                  isLoading: editBuildingsMutation.isPending
                })
              }),
              /* istanbul ignore next */
              (cov_1b1a9cyvql().b[106][0]++, canEditResidences) &&
              /* istanbul ignore next */
              (cov_1b1a9cyvql().b[106][1]++, (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
                value: 'residences',
                className: 'space-y-4',
                children: (0, jsx_runtime_1.jsx)(UserResidencesTab_1.UserResidencesTab, {
                  user: editingUser ?
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[107][0]++, findUserWithAssignments(editingUser.id)) :
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[107][1]++, null),
                  residences: residences,
                  onSave: residenceAssignments => {
                    /* istanbul ignore next */
                    cov_1b1a9cyvql().f[90]++;
                    cov_1b1a9cyvql().s[301]++;
                    if (editingUser) {
                      /* istanbul ignore next */
                      cov_1b1a9cyvql().b[108][0]++;
                      cov_1b1a9cyvql().s[302]++;
                      editResidencesMutation.mutate({
                        userId: editingUser.id,
                        residenceAssignments
                      });
                    } else
                    /* istanbul ignore next */
                    {
                      cov_1b1a9cyvql().b[108][1]++;
                    }
                  },
                  isLoading: editResidencesMutation.isPending
                })
              }))]
            })]
          })
        }), (0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialog, {
          open: showDeleteOrphansDialog,
          onOpenChange: setShowDeleteOrphansDialog,
          children: (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogContent, {
            className: 'sm:max-w-[500px]',
            children: [(0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogHeader, {
              children: [(0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialogTitle, {
                className: 'text-red-600',
                children: "Delete All Orphan Users"
              }), (0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialogDescription, {
                children: "This will permanently mark all orphan users (users with no organization or residence assignments) as inactive."
              })]
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: 'bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800 mb-4',
              children: [(0, jsx_runtime_1.jsxs)("p", {
                className: 'text-red-700 dark:text-red-300 text-sm',
                children: [(0, jsx_runtime_1.jsx)("strong", {
                  children: "Warning:"
                }), " This action will:"]
              }), (0, jsx_runtime_1.jsxs)("ul", {
                className: 'text-red-700 dark:text-red-300 text-sm mt-2 list-disc list-inside',
                children: [(0, jsx_runtime_1.jsx)("li", {
                  children: "Mark all orphan users as inactive (they will be hidden from the interface)"
                }), (0, jsx_runtime_1.jsx)("li", {
                  children: "Preserve their data for audit purposes but remove access"
                }), (0, jsx_runtime_1.jsx)("li", {
                  children: "Only affect users with no organization or residence assignments"
                }), (0, jsx_runtime_1.jsx)("li", {
                  children: "Cannot be undone through the interface"
                })]
              })]
            }), (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogFooter, {
              children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
                variant: 'outline',
                onClick: () => {
                  /* istanbul ignore next */
                  cov_1b1a9cyvql().f[91]++;
                  cov_1b1a9cyvql().s[303]++;
                  return setShowDeleteOrphansDialog(false);
                },
                disabled: deleteOrphanUsersMutation.isPending,
                children: "Cancel"
              }), (0, jsx_runtime_1.jsx)(button_1.Button, {
                variant: 'destructive',
                onClick: handleDeleteOrphanUsers,
                disabled: deleteOrphanUsersMutation.isPending,
                "data-testid": "button-confirm-delete-orphans",
                children: deleteOrphanUsersMutation.isPending ?
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[109][0]++, 'Deleting...') :
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[109][1]++, 'Delete Orphan Users')
              })]
            })]
          })
        }), (0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialog, {
          open: !!deletingUser,
          onOpenChange: open => {
            /* istanbul ignore next */
            cov_1b1a9cyvql().f[92]++;
            cov_1b1a9cyvql().s[304]++;
            return /* istanbul ignore next */(cov_1b1a9cyvql().b[110][0]++, !open) &&
            /* istanbul ignore next */
            (cov_1b1a9cyvql().b[110][1]++, setDeletingUser(null));
          },
          children: (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogContent, {
            className: 'sm:max-w-[500px]',
            children: [(0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogHeader, {
              children: [(0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialogTitle, {
                className: 'text-red-600',
                children: t('deleteUserTitle')
              }), (0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialogDescription, {
                children: t('deleteUserDescription').replace('and all associated data', `${deletingUser?.firstName} ${deletingUser?.lastName} and all associated data`)
              })]
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: 'bg-red-50 dark:bg-red-950 p-4 rounded-lg border border-red-200 dark:border-red-800 mb-4',
              children: [(0, jsx_runtime_1.jsxs)("p", {
                className: 'text-red-700 dark:text-red-300 text-sm',
                children: [(0, jsx_runtime_1.jsxs)("strong", {
                  children: [
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[111][0]++, t('warning')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[111][1]++, 'Warning'), ":"]
                }), " ",
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[112][0]++, t('deleteUserDataWarning')) ||
                /* istanbul ignore next */
                (cov_1b1a9cyvql().b[112][1]++, 'This will delete all user data including'), ":"]
              }), (0, jsx_runtime_1.jsxs)("ul", {
                className: 'text-red-700 dark:text-red-300 text-sm mt-2 list-disc list-inside',
                children: [(0, jsx_runtime_1.jsx)("li", {
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[113][0]++, t('profileInfoAccess')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[113][1]++, 'Profile information and account access')
                }), (0, jsx_runtime_1.jsx)("li", {
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[114][0]++, t('orgResidenceAssignments')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[114][1]++, 'Organization and residence assignments')
                }), (0, jsx_runtime_1.jsx)("li", {
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[115][0]++, t('billsDocsMaintenance')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[115][1]++, 'Bills, documents, and maintenance requests')
                }), (0, jsx_runtime_1.jsx)("li", {
                  children:
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[116][0]++, t('notificationsActivity')) ||
                  /* istanbul ignore next */
                  (cov_1b1a9cyvql().b[116][1]++, 'Notifications and activity history')
                })]
              })]
            }), (0, jsx_runtime_1.jsx)(form_1.Form, {
              ...deleteForm,
              children: (0, jsx_runtime_1.jsxs)("form", {
                onSubmit: deleteForm.handleSubmit(handleDeleteUser),
                className: 'space-y-4',
                children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
                  control: deleteForm.control,
                  name: 'confirmEmail',
                  render: ({
                    field
                  }) => {
                    /* istanbul ignore next */
                    cov_1b1a9cyvql().f[93]++;
                    cov_1b1a9cyvql().s[305]++;
                    return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                      children: [(0, jsx_runtime_1.jsxs)(form_1.FormLabel, {
                        children: [t('confirmEmailLabel'), ":", ' ', (0, jsx_runtime_1.jsx)("span", {
                          className: 'font-mono text-sm',
                          children: deletingUser?.email
                        })]
                      }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                        children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                          ...field,
                          type: 'email',
                          placeholder: deletingUser?.email,
                          "data-testid": 'input-confirm-delete-email'
                        })
                      }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                    });
                  }
                }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                  control: deleteForm.control,
                  name: 'reason',
                  render: ({
                    field
                  }) => {
                    /* istanbul ignore next */
                    cov_1b1a9cyvql().f[94]++;
                    cov_1b1a9cyvql().s[306]++;
                    return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                      children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                        children: t('reasonOptional')
                      }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                        children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                          ...field,
                          placeholder:
                          /* istanbul ignore next */
                          (cov_1b1a9cyvql().b[117][0]++, t('enterReasonDeletion')) ||
                          /* istanbul ignore next */
                          (cov_1b1a9cyvql().b[117][1]++, 'Enter reason for deletion...'),
                          "data-testid": 'input-delete-reason'
                        })
                      }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                    });
                  }
                }), (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogFooter, {
                  children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
                    type: 'button',
                    variant: 'outline',
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1b1a9cyvql().f[95]++;
                      cov_1b1a9cyvql().s[307]++;
                      return setDeletingUser(null);
                    },
                    disabled: deleteUserMutation.isPending,
                    "data-testid": 'button-cancel-delete',
                    children: "Cancel"
                  }), (0, jsx_runtime_1.jsx)(button_1.Button, {
                    type: 'submit',
                    variant: 'destructive',
                    disabled: deleteUserMutation.isPending,
                    "data-testid": 'button-confirm-delete',
                    children: deleteUserMutation.isPending ?
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[118][0]++, 'Deleting...') :
                    /* istanbul ignore next */
                    (cov_1b1a9cyvql().b[118][1]++, 'Delete Account')
                  })]
                })]
              })
            })]
          })
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,