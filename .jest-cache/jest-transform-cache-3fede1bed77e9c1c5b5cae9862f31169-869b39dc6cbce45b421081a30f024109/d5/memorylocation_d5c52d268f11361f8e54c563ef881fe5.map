{"file":"/home/runner/workspace/node_modules/wouter/esm/memory-location.js","mappings":";;;;;;AAAA,gDAAwB;AACxB,mDAAuD;AAEvD;;GAEG;AAEH,MAAM,cAAc,GAAG,CAAC,EACtB,IAAI,GAAG,GAAG,EACV,UAAU,GAAG,EAAE,EACf,MAAM,EAAE,cAAc,EACtB,MAAM,GACP,GAAG,EAAE,EAAE,EAAE;IACR,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,IAAI,UAAU,EAAE,CAAC;QACf,6DAA6D;QAC7D,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9C,WAAW,IAAI,UAAU,CAAC;IAC5B,CAAC;IAED,IAAI,CAAC,WAAW,EAAE,aAAa,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/D,MAAM,OAAO,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9B,MAAM,OAAO,GAAG,IAAA,cAAI,GAAE,CAAC;IAEvB,MAAM,sBAAsB,GAAG,CAAC,IAAI,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE;QAChE,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,OAAO,EAAE,CAAC;gBACZ,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAC9C,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;QACH,CAAC;QAED,CAAC,WAAW,EAAE,aAAa,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpD,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;IAEvE,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE;QACvB,OAAO,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC3B,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,GAAG,EAAE,CAAC;QAC9B,IAAA,oCAAoB,EAAC,SAAS,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC;QAClD,QAAQ;KACT,CAAC;IAEF,MAAM,cAAc,GAAG,GAAG,EAAE,CAC1B,IAAA,oCAAoB,EAAC,SAAS,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,KAAK;QACZ,qDAAqD;QACrD,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAElC,sBAAsB,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,OAAO;QACL,IAAI,EAAE,iBAAiB;QACvB,UAAU,EAAE,cAAc;QAC1B,QAAQ;QACR,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;QACrC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;KAClC,CAAC;AACJ,CAAC,CAAC;AAEO,wCAAc","names":[],"sources":["/home/runner/workspace/node_modules/wouter/esm/memory-location.js"],"sourcesContent":["import mitt from 'mitt';\nimport { useSyncExternalStore } from './react-deps.js';\n\n/**\n * In-memory location that supports navigation\n */\n\nconst memoryLocation = ({\n  path = \"/\",\n  searchPath = \"\",\n  static: staticLocation,\n  record,\n} = {}) => {\n  let initialPath = path;\n  if (searchPath) {\n    // join with & if path contains search query, and ? otherwise\n    initialPath += path.split(\"?\")[1] ? \"&\" : \"?\";\n    initialPath += searchPath;\n  }\n\n  let [currentPath, currentSearch = \"\"] = initialPath.split(\"?\");\n  const history = [initialPath];\n  const emitter = mitt();\n\n  const navigateImplementation = (path, { replace = false } = {}) => {\n    if (record) {\n      if (replace) {\n        history.splice(history.length - 1, 1, path);\n      } else {\n        history.push(path);\n      }\n    }\n\n    [currentPath, currentSearch = \"\"] = path.split(\"?\");\n    emitter.emit(\"navigate\", path);\n  };\n\n  const navigate = !staticLocation ? navigateImplementation : () => null;\n\n  const subscribe = (cb) => {\n    emitter.on(\"navigate\", cb);\n    return () => emitter.off(\"navigate\", cb);\n  };\n\n  const useMemoryLocation = () => [\n    useSyncExternalStore(subscribe, () => currentPath),\n    navigate,\n  ];\n\n  const useMemoryQuery = () =>\n    useSyncExternalStore(subscribe, () => currentSearch);\n\n  function reset() {\n    // clean history array with mutation to preserve link\n    history.splice(0, history.length);\n\n    navigateImplementation(initialPath);\n  }\n\n  return {\n    hook: useMemoryLocation,\n    searchHook: useMemoryQuery,\n    navigate,\n    history: record ? history : undefined,\n    reset: record ? reset : undefined,\n  };\n};\n\nexport { memoryLocation };\n"],"version":3}