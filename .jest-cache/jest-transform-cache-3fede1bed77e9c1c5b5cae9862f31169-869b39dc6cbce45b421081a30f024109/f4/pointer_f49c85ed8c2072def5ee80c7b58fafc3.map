{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/system/pointer/pointer.js","mappings":"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","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/system/pointer/pointer.js"],"sourcesContent":["'use strict';\n\nrequire('../../utils/dataTransfer/Clipboard.js');\nvar getTreeDiff = require('../../utils/misc/getTreeDiff.js');\nvar cssPointerEvents = require('../../utils/pointer/cssPointerEvents.js');\nvar shared = require('./shared.js');\nvar buttons = require('./buttons.js');\n\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nclass Pointer {\n    init(instance) {\n        const target = this.getTarget(instance);\n        const [, enter] = getTreeDiff.getTreeDiff(null, target);\n        const init = this.getEventInit();\n        cssPointerEvents.assertPointerEvents(instance, target);\n        instance.dispatchUIEvent(target, 'pointerover', init);\n        enter.forEach((el)=>instance.dispatchUIEvent(el, 'pointerenter', init));\n        return this;\n    }\n    move(instance, position) {\n        const prevPosition = this.position;\n        const prevTarget = this.getTarget(instance);\n        this.position = position;\n        if (!shared.isDifferentPointerPosition(prevPosition, position)) {\n            return;\n        }\n        const nextTarget = this.getTarget(instance);\n        const init = this.getEventInit(-1);\n        const [leave, enter] = getTreeDiff.getTreeDiff(prevTarget, nextTarget);\n        return {\n            leave: ()=>{\n                if (cssPointerEvents.hasPointerEvents(instance, prevTarget)) {\n                    if (prevTarget !== nextTarget) {\n                        instance.dispatchUIEvent(prevTarget, 'pointerout', init);\n                        leave.forEach((el)=>instance.dispatchUIEvent(el, 'pointerleave', init));\n                    }\n                }\n            },\n            enter: ()=>{\n                cssPointerEvents.assertPointerEvents(instance, nextTarget);\n                if (prevTarget !== nextTarget) {\n                    instance.dispatchUIEvent(nextTarget, 'pointerover', init);\n                    enter.forEach((el)=>instance.dispatchUIEvent(el, 'pointerenter', init));\n                }\n            },\n            move: ()=>{\n                instance.dispatchUIEvent(nextTarget, 'pointermove', init);\n            }\n        };\n    }\n    down(instance, button = 0) {\n        if (this.isDown) {\n            return;\n        }\n        const target = this.getTarget(instance);\n        cssPointerEvents.assertPointerEvents(instance, target);\n        this.isDown = true;\n        this.isPrevented = !instance.dispatchUIEvent(target, 'pointerdown', this.getEventInit(button));\n    }\n    up(instance, button = 0) {\n        if (!this.isDown) {\n            return;\n        }\n        const target = this.getTarget(instance);\n        cssPointerEvents.assertPointerEvents(instance, target);\n        this.isPrevented = false;\n        this.isDown = false;\n        instance.dispatchUIEvent(target, 'pointerup', this.getEventInit(button));\n    }\n    release(instance) {\n        const target = this.getTarget(instance);\n        const [leave] = getTreeDiff.getTreeDiff(target, null);\n        const init = this.getEventInit();\n        // Currently there is no PointerEventsCheckLevel that would\n        // make this check not use the *asserted* cached value from `up`.\n        /* istanbul ignore else */ if (cssPointerEvents.hasPointerEvents(instance, target)) {\n            instance.dispatchUIEvent(target, 'pointerout', init);\n            leave.forEach((el)=>instance.dispatchUIEvent(el, 'pointerleave', init));\n        }\n        this.isCancelled = true;\n    }\n    getTarget(instance) {\n        var _this_position_target;\n        return (_this_position_target = this.position.target) !== null && _this_position_target !== undefined ? _this_position_target : instance.config.document.body;\n    }\n    getEventInit(/**\n     * The `button` that caused the event.\n     *\n     * This should be `-1` if the event is not caused by a button or touch/pen contact,\n     * e.g. a moving pointer.\n     */ button) {\n        return {\n            ...this.position.coords,\n            pointerId: this.pointerId,\n            pointerType: this.pointerType,\n            isPrimary: this.isPrimary,\n            button: buttons.getMouseEventButton(button),\n            buttons: this.buttons.getButtons()\n        };\n    }\n    constructor({ pointerId, pointerType, isPrimary }, buttons){\n        _define_property(this, \"pointerId\", undefined);\n        _define_property(this, \"pointerType\", undefined);\n        _define_property(this, \"isPrimary\", undefined);\n        _define_property(this, \"buttons\", undefined);\n        _define_property(this, \"isMultitouch\", false);\n        _define_property(this, \"isCancelled\", false);\n        _define_property(this, \"isDown\", false);\n        _define_property(this, \"isPrevented\", false);\n        _define_property(this, \"position\", {});\n        this.pointerId = pointerId;\n        this.pointerType = pointerType;\n        this.isPrimary = isPrimary;\n        this.isMultitouch = !isPrimary;\n        this.buttons = buttons;\n    }\n}\n\nexports.Pointer = Pointer;\n"],"version":3}