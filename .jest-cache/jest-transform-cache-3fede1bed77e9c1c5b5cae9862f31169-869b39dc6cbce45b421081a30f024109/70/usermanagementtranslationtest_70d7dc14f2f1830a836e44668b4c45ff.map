{"file":"/home/runner/workspace/tests/unit/user-management-translation.test.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/user-management-translation.test.ts"],"sourcesContent":["/**\n * User Management Translation Test Suite\n * Validates that ALL user management page elements are properly translated:\n * - Page titles and headers\n * - Filter components and search\n * - Tabs (Users, Invitations) \n * - Table headers and data\n * - Forms (Edit User, Delete User, Invite User)\n * - User assignment tabs (Organizations, Buildings, Residences)\n * - Buttons, actions, and UI elements\n * - Status messages and confirmations\n */\n\nimport { describe, it, expect } from '@jest/globals';\nimport { translations, type Language } from '../../client/src/lib/i18n.ts';\n\ndescribe('User Management Translation Coverage', () => {\n  const languages: Language[] = ['en', 'fr'];\n\n  describe('Page Headers and Main Elements', () => {\n    const mainPageKeys = [\n      'userManagement',\n      'manageUsersInvitationsRoles',\n      'users',\n      'invitations',\n      'totalUsers',\n      'activeUsers',\n      'admin',\n      'manager',\n      'tenant',\n      'resident'\n    ];\n\n    it('should have all main page elements translated', () => {\n      mainPageKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          expect(t[key]).toBeDefined();\n          expect(typeof t[key]).toBe('string');\n          expect(t[key].length).toBeGreaterThan(0);\n        });\n      });\n    });\n\n    it('should have proper Quebec French main page terminology', () => {\n      const fr = translations.fr;\n      expect(fr.userManagement).toBe('Gestion des utilisateurs');\n      expect(fr.manageUsersInvitationsRoles).toBe('Gérer les utilisateurs, invitations et rôles');\n      expect(fr.users).toBe('utilisateurs');\n      expect(fr.admin).toBe('Admin');\n      expect(fr.manager).toBe('Gestionnaire');\n      expect(fr.tenant).toBe('Locataire');\n      expect(fr.resident).toBe('Résident');\n    });\n  });\n\n  describe('Filter and Search Elements', () => {\n    const filterKeys = [\n      'searchUsersInvitations',\n      'filterByRole',\n      'allRoles',\n      'filterByStatus',\n      'allStatuses',\n      'organization',\n      'selectOrganization',\n      'building',\n      'selectBuilding',\n      'residence',\n      'selectResidence'\n    ];\n\n    it('should have all filter components translated', () => {\n      filterKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French filter translations', () => {\n      const fr = translations.fr;\n      expect(fr.searchUsersInvitations).toBe('Rechercher des utilisateurs et invitations...');\n      expect(fr.filterByRole).toBe('Filtrer par rôle');\n      expect(fr.allRoles).toBe('Tous les rôles');\n      expect(fr.filterByStatus).toBe('Filtrer par statut');\n      expect(fr.organization).toBe('Organisation');\n      expect(fr.building).toBe('Bâtiment');\n    });\n  });\n\n  describe('Tab Navigation Elements', () => {\n    const tabKeys = [\n      'users',\n      'invitations',\n      'pendingInvitations',\n      'totalInvitations',\n      'inviteUser',\n      'bulkActions',\n      'moreActions'\n    ];\n\n    it('should have all tab navigation elements translated', () => {\n      tabKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          expect(t[key]).toBeDefined();\n          expect(typeof t[key]).toBe('string');\n          expect(t[key].length).toBeGreaterThan(0);\n        });\n      });\n    });\n\n    it('should have proper French tab navigation', () => {\n      const fr = translations.fr;\n      expect(fr.users).toBe('utilisateurs');\n      expect(fr.invitations).toBe('Invitations');\n      expect(fr.pendingInvitations).toBe('Invitations en attente');\n      expect(fr.inviteUser).toBe('Inviter un utilisateur');\n      expect(fr.bulkActions).toBe('Actions groupées');\n    });\n  });\n\n  describe('User Table Elements', () => {\n    const tableKeys = [\n      'firstName',\n      'lastName',\n      'email',\n      'role',\n      'status',\n      'organization',\n      'building',\n      'residence',\n      'activeUser',\n      'createdAt',\n      'actions'\n    ];\n\n    it('should have all table headers translated', () => {\n      tableKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French table headers', () => {\n      const fr = translations.fr;\n      expect(fr.firstName).toBe('Prénom');\n      expect(fr.lastName).toBe('Nom de famille');\n      expect(fr.email).toBe('Courriel');\n      expect(fr.role).toBe('Rôle');\n      expect(fr.status).toBe('Statut');\n      expect(fr.organization).toBe('Organisation');\n      expect(fr.building).toBe('Bâtiment');\n    });\n  });\n\n  describe('Edit User Form Elements', () => {\n    const editFormKeys = [\n      'editUser',\n      'editUserDescription',\n      'firstName',\n      'lastName',\n      'email',\n      'role',\n      'status',\n      'activeUser',\n      'isActive',\n      'save',\n      'cancel',\n      'basicInfo',\n      'organizations',\n      'buildings',\n      'residences'\n    ];\n\n    it('should have all edit user form elements translated', () => {\n      editFormKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French edit user form', () => {\n      const fr = translations.fr;\n      expect(fr.editUser).toBe('Modifier l\\'utilisateur');\n      expect(fr.firstName).toBe('Prénom');\n      expect(fr.lastName).toBe('Nom de famille');\n      expect(fr.email).toBe('Courriel');\n      expect(fr.role).toBe('Rôle');\n      expect(fr.cancel).toBe('Annuler');\n      // Note: save key may not exist in translations, checking if it exists\n      if (fr.save) expect(fr.save).toBe('Enregistrer');\n    });\n  });\n\n  describe('Delete User Form Elements', () => {\n    const deleteFormKeys = [\n      'deleteUser',\n      'confirmDeleteUser',\n      'confirmEmail',\n      'reason',\n      'deleteAccount',\n      'thisActionCannotBeUndone',\n      'cancel',\n      'confirm',\n      'deleteFailed',\n      'accountDeleted'\n    ];\n\n    it('should have all delete user form elements translated', () => {\n      deleteFormKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French delete user form', () => {\n      const fr = translations.fr;\n      expect(fr.deleteUser).toBe('Supprimer l\\'utilisateur');\n      expect(fr.cancel).toBe('Annuler');\n      expect(fr.confirm).toBe('Confirmer');\n    });\n  });\n\n  describe('Invite User Form Elements', () => {\n    const inviteFormKeys = [\n      'inviteUser',\n      'inviteUserDescription',\n      'singleInvitation',\n      'bulkInvitations',\n      'emailAddress',\n      'enterEmailAddress',\n      'role',\n      'selectRole',\n      'organization',\n      'selectOrganization',\n      'building',\n      'selectBuilding',\n      'residence',\n      'selectResidence',\n      'expiresIn',\n      'days',\n      'securityLevel',\n      'standard',\n      'enhanced',\n      'personalMessage',\n      'optional',\n      'sendInvitation'\n    ];\n\n    it('should have all invite user form elements translated', () => {\n      inviteFormKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French invite user form', () => {\n      const fr = translations.fr;\n      expect(fr.inviteUser).toBe('Inviter un utilisateur');\n      expect(fr.inviteUserDescription).toBe('Envoyer des invitations aux nouveaux utilisateurs pour rejoindre votre système de gestion immobilière');\n      expect(fr.singleInvitation).toBe('Invitation unique');\n      expect(fr.emailAddress).toBe('Adresse courriel');\n      expect(fr.selectRole).toBe('Sélectionner le rôle');\n      expect(fr.optional).toBe('Facultatif');\n    });\n  });\n\n  describe('User Assignment Tabs Elements', () => {\n    const assignmentKeys = [\n      'organizations',\n      'buildings',\n      'residences',\n      'organizationAssignments',\n      'buildingAssignments', \n      'residenceAssignments',\n      'selectOrganization',\n      'selectBuilding',\n      'selectResidence',\n      'relationshipType',\n      'tenant',\n      'resident',\n      'owner',\n      'occupant',\n      'save',\n      'saveAssignments'\n    ];\n\n    it('should have all assignment tab elements translated', () => {\n      assignmentKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French assignment tabs', () => {\n      const fr = translations.fr;\n      expect(fr.organizations).toBe('Organisations');\n      expect(fr.buildings).toBe('Bâtiments');\n      expect(fr.tenant).toBe('Locataire');\n      expect(fr.resident).toBe('Résident');\n      // Note: save key may not exist in translations, checking if it exists\n      if (fr.save) expect(fr.save).toBe('Enregistrer');\n    });\n  });\n\n  describe('Action Buttons and Status Messages', () => {\n    const actionKeys = [\n      'edit',\n      'delete',\n      'view',\n      'activate',\n      'deactivate',\n      'activateUser',\n      'deactivateUser',\n      'activateUsers',\n      'deactivateUsers',\n      'changeRole',\n      'sendPasswordReset',\n      'exportUsers',\n      'processing',\n      'loading',\n      'success',\n      'error',\n      'userUpdated',\n      'userUpdatedSuccessfully'\n    ];\n\n    it('should have all action buttons translated', () => {\n      actionKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French action buttons', () => {\n      const fr = translations.fr;\n      // Note: edit and delete may not exist as standalone keys\n      if (fr.edit) expect(fr.edit).toBe('Modifier');\n      if (fr.delete) expect(fr.delete).toBe('Supprimer');\n      expect(fr.loading).toBe('Chargement...');\n      expect(fr.userUpdated).toBe('Utilisateur mis à jour');\n      expect(fr.userUpdatedSuccessfully).toBe('L\\'utilisateur a été mis à jour avec succès');\n    });\n  });\n\n  describe('Bulk Actions Elements', () => {\n    const bulkActionKeys = [\n      'bulkActions',\n      'selectedUsers',\n      'usersSelected',\n      'activateSelectedUsers',\n      'deactivateSelectedUsers',\n      'changeRoleSelectedUsers',\n      'sendPasswordResetSelectedUsers',\n      'exportSelectedUsersData',\n      'deleteSelectedUsers',\n      'newRole',\n      'applyRoleChange'\n    ];\n\n    it('should have all bulk action elements translated', () => {\n      bulkActionKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French bulk actions', () => {\n      const fr = translations.fr;\n      expect(fr.bulkActions).toBe('Actions groupées');\n      expect(fr.activateSelectedUsers).toBe('Activer les utilisateurs sélectionnés');\n      expect(fr.deactivateSelectedUsers).toBe('Désactiver les utilisateurs sélectionnés');\n      expect(fr.deleteSelectedUsers).toBe('Supprimer les utilisateurs sélectionnés');\n      expect(fr.exportSelectedUsersData).toBe('Exporter les données des utilisateurs sélectionnés');\n    });\n  });\n\n  describe('Pagination and Search Results', () => {\n    const paginationKeys = [\n      'noUsersFound',\n      'showingResults',\n      'page',\n      'of',\n      'next',\n      'previous',\n      'first',\n      'last',\n      'resultsFound',\n      'itemsPerPage'\n    ];\n\n    it('should have pagination elements translated', () => {\n      paginationKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French pagination', () => {\n      const fr = translations.fr;\n      expect(fr.noUsersFound).toBe('Aucun utilisateur trouvé');\n      expect(fr.showingResults).toBe('Affichage de {start} à {end} sur {total} demandes');\n      if (fr.next) expect(fr.next).toBe('Suivant');\n      if (fr.previous) expect(fr.previous).toBe('Précédent');\n    });\n  });\n\n  describe('Validation Messages for User Management', () => {\n    const validationKeys = [\n      'firstNameRequired',\n      'lastNameRequired',\n      'emailRequired',\n      'roleRequired',\n      'organizationRequired',\n      'firstNameTooLong',\n      'lastNameTooLong',\n      'firstNameInvalidCharacters',\n      'lastNameInvalidCharacters',\n      'emailInvalid',\n      'passwordsNotMatch'\n    ];\n\n    it('should have validation messages translated', () => {\n      validationKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper French validation messages', () => {\n      const fr = translations.fr;\n      expect(fr.firstNameRequired).toBe('Le prénom est requis pour l\\'inscription');\n      expect(fr.lastNameRequired).toBe('Le nom de famille est requis pour l\\'inscription');\n      expect(fr.organizationRequired).toBe('Veuillez sélectionner une organisation dans le menu déroulant');\n      expect(fr.firstNameTooLong).toBe('Le prénom doit contenir moins de 50 caractères');\n      expect(fr.lastNameTooLong).toBe('Le nom de famille doit contenir moins de 50 caractères');\n    });\n  });\n\n  describe('Role-specific Translation Consistency', () => {\n    it('should have consistent role translations across contexts', () => {\n      const roleKeys = ['admin', 'manager', 'tenant', 'resident'];\n      const demoRoles = ['demo_manager', 'demo_tenant', 'demo_resident'];\n      \n      languages.forEach(lang => {\n        const t = translations[lang] as any;\n        roleKeys.forEach(role => {\n          expect(t[role]).toBeDefined();\n          expect(typeof t[role]).toBe('string');\n        });\n      });\n    });\n\n    it('should have Quebec French role terminology', () => {\n      const fr = translations.fr;\n      expect(fr.admin).toBe('Admin');\n      expect(fr.manager).toBe('Gestionnaire');\n      expect(fr.tenant).toBe('Locataire');\n      expect(fr.resident).toBe('Résident');\n    });\n  });\n\n  describe('User Management Component Integration', () => {\n    it('should support user management workflow translations', () => {\n      const workflowKeys = [\n        'userManagement',\n        'editUser',\n        'deleteUser',\n        'inviteUser',\n        'userUpdatedSuccessfully',\n        'invitationSent',\n        'accountDeleted'\n      ];\n\n      languages.forEach(lang => {\n        const t = translations[lang] as any;\n        workflowKeys.forEach(key => {\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should handle dynamic content placeholders', () => {\n      const fr = translations.fr;\n      // Test dynamic content support for user names, counts, etc.\n      if (fr.editUserDescription) {\n        expect(fr.editUserDescription).toContain('{name}');\n      }\n      if (fr.confirmDeleteUser) {\n        expect(fr.confirmDeleteUser).toContain('{name}');\n      }\n      if (fr.selectedUsers) {\n        expect(fr.selectedUsers).toContain('{count}');\n      }\n    });\n  });\n});"],"version":3}