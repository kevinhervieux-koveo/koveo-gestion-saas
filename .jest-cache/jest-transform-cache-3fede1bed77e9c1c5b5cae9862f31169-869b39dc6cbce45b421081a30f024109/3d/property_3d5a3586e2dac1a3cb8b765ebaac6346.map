{"file":"/home/runner/workspace/shared/schemas/property.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/shared/schemas/property.ts"],"sourcesContent":["import { sql } from 'drizzle-orm';\nimport {\n  pgTable,\n  text,\n  timestamp,\n  jsonb,\n  uuid,\n  pgEnum,\n  boolean,\n  integer,\n  decimal,\n  numeric,\n  date,\n  varchar,\n} from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { relations } from 'drizzle-orm';\nimport { users, organizations } from './core';\n\n// Property enums\nexport const buildingTypeEnum = pgEnum('building_type', ['apartment', 'condo', 'rental']);\n\nexport const contactEntityEnum = pgEnum('contact_entity', [\n  'organization',\n  'building',\n  'residence',\n]);\n\nexport const contactCategoryEnum = pgEnum('contact_category', [\n  'resident',\n  'manager',\n  'tenant',\n  'maintenance',\n  'emergency',\n  'other',\n]);\n\nexport const bookingStatusEnum = pgEnum('booking_status', ['confirmed', 'cancelled']);\n\n// Property tables\n/**\n * Buildings table storing properties managed by organizations.\n * Each building represents a distinct property managed by an organization.\n */\nexport const buildings = pgTable('buildings', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  organizationId: varchar('organization_id')\n    .notNull()\n    .references(() => organizations.id, { onDelete: 'cascade' }),\n  name: text('name').notNull(),\n  address: text('address').notNull(),\n  city: text('city').notNull(),\n  province: text('province').notNull().default('QC'),\n  postalCode: text('postal_code').notNull(),\n  buildingType: buildingTypeEnum('building_type').notNull(),\n  yearBuilt: integer('year_built'),\n  totalUnits: integer('total_units').notNull(),\n  totalFloors: integer('total_floors'),\n  parkingSpaces: integer('parking_spaces'),\n  storageSpaces: integer('storage_spaces'),\n  amenities: jsonb('amenities'), // Array of amenities\n  managementCompany: text('management_company'),\n  bankAccountNumber: text('bank_account_number'),\n  bankAccountNotes: text('bank_account_notes'), // For reconciliation notes when updating account number\n  bankAccountUpdatedAt: timestamp('bank_account_updated_at'),\n  bankAccountStartDate: timestamp('bank_account_start_date'), // Date when account started tracking\n  bankAccountStartAmount: numeric('bank_account_start_amount', { precision: 10, scale: 2 }), // Starting balance\n  bankAccountMinimums: text('bank_account_minimums'), // JSON string of minimum balance settings\n  inflationSettings: text('inflation_settings'), // JSON string of inflation configuration by category\n  isActive: boolean('is_active').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Residences table storing individual housing units within buildings.\n * Represents apartments, condos, or units that can be occupied by tenants.\n */\nexport const residences = pgTable('residences', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  buildingId: varchar('building_id')\n    .notNull()\n    .references(() => buildings.id, { onDelete: 'cascade' }),\n  unitNumber: text('unit_number').notNull(),\n  floor: integer('floor'),\n  squareFootage: decimal('square_footage', { precision: 8, scale: 2 }),\n  bedrooms: integer('bedrooms'),\n  bathrooms: decimal('bathrooms', { precision: 3, scale: 1 }),\n  balcony: boolean('balcony').default(false),\n  parkingSpaceNumbers: text('parking_space_numbers').array(),\n  storageSpaceNumbers: text('storage_space_numbers').array(),\n  ownershipPercentage: decimal('ownership_percentage', { precision: 5, scale: 2 }), // For condos, 0-100 scale\n  monthlyFees: decimal('monthly_fees', { precision: 10, scale: 2 }),\n  isActive: boolean('is_active').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * User-Residence relationship table to track user assignments to residences.\n * Supports owner, tenant, and occupant relationships with date ranges.\n */\nexport const userResidences = pgTable('user_residences', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  residenceId: varchar('residence_id')\n    .notNull()\n    .references(() => residences.id, { onDelete: 'cascade' }),\n  relationshipType: text('relationship_type').notNull(), // 'owner', 'tenant', 'occupant'\n  startDate: date('start_date').notNull(),\n  endDate: date('end_date'),\n  isActive: boolean('is_active').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Contacts table storing contact information for organizations, buildings, and residences.\n * Allows tracking various types of contacts like residents, managers, tenants, maintenance, etc.\n */\nexport const contacts = pgTable('contacts', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  name: text('name').notNull(),\n  email: text('email'),\n  phone: text('phone'),\n  entity: contactEntityEnum('entity').notNull(),\n  entityId: varchar('entity_id').notNull(),\n  contactCategory: contactCategoryEnum('contact_category').notNull(),\n  isActive: boolean('is_active').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Common spaces table storing shared facilities within buildings.\n * Represents spaces like gyms, lounges, meeting rooms that can be reserved by residents.\n */\nexport const commonSpaces = pgTable('common_spaces', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  name: varchar('name', { length: 255 }).notNull(),\n  description: text('description'),\n  buildingId: varchar('building_id')\n    .notNull()\n    .references(() => buildings.id, { onDelete: 'cascade' }),\n  isReservable: boolean('is_reservable').notNull().default(false),\n  capacity: integer('capacity'),\n  contactPersonId: varchar('contact_person_id').references(() => users.id, { onDelete: 'set null' }),\n  openingHours: jsonb('opening_hours'),\n  availableDays: jsonb('available_days'), // Array of available days: ['monday', 'tuesday', etc.]\n  bookingRules: text('booking_rules'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Bookings table for common space reservations.\n * Tracks user reservations for common spaces with time slots and status.\n */\nexport const bookings = pgTable('bookings', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  commonSpaceId: varchar('common_space_id')\n    .notNull()\n    .references(() => commonSpaces.id, { onDelete: 'cascade' }),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  startTime: timestamp('start_time', { withTimezone: true }).notNull(),\n  endTime: timestamp('end_time', { withTimezone: true }).notNull(),\n  status: bookingStatusEnum('status').notNull().default('confirmed'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * User booking restrictions table to manage blocked users.\n * Allows administrators to block specific users from booking certain common spaces.\n */\nexport const userBookingRestrictions = pgTable('user_booking_restrictions', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  commonSpaceId: varchar('common_space_id')\n    .notNull()\n    .references(() => commonSpaces.id, { onDelete: 'cascade' }),\n  isBlocked: boolean('is_blocked').notNull().default(true),\n  reason: text('reason'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * User time limits table to manage booking time quotas.\n * Allows setting monthly/yearly limits on how much time users can reserve.\n */\nexport const userTimeLimits = pgTable('user_time_limits', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  commonSpaceId: varchar('common_space_id').references(() => commonSpaces.id, { onDelete: 'cascade' }), // null means applies to all spaces\n  limitType: varchar('limit_type', { length: 20 }).notNull(), // 'monthly' or 'yearly'\n  limitHours: integer('limit_hours').notNull(), // Maximum hours allowed\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n// Insert schemas\nexport const insertBuildingSchema = z.object({\n  organizationId: z.string().uuid(),\n  name: z.string().min(1),\n  address: z.string(),\n  city: z.string(),\n  province: z.string().default('QC'),\n  postalCode: z.string(),\n  buildingType: z.string(),\n  yearBuilt: z.number().int().optional(),\n  totalUnits: z.number().int().optional(),\n  totalFloors: z.number().int().optional(),\n  parkingSpaces: z.number().int().optional(),\n  storageSpaces: z.number().int().optional(),\n  amenities: z.array(z.string()).optional(),\n  managementCompany: z.string().optional(),\n  bankAccountNumber: z.string().optional(),\n  bankAccountNotes: z.string().optional(),\n  bankAccountStartDate: z.date().optional(),\n  bankAccountStartAmount: z.number().optional(),\n  bankAccountMinimums: z.record(z.string(), z.number()).optional(),\n});\n\nexport const insertResidenceSchema = z.object({\n  buildingId: z.string().uuid(),\n  unitNumber: z.string(),\n  floor: z.number().int().optional(),\n  squareFootage: z.number().optional(),\n  bedrooms: z.number().int().optional(),\n  bathrooms: z.number().optional(),\n  balcony: z.boolean().optional(),\n  parkingSpaceNumbers: z.array(z.string()).optional(),\n  storageSpaceNumbers: z.array(z.string()).optional(),\n  ownershipPercentage: z.number().optional(),\n  monthlyFees: z.number().optional(),\n});\n\nexport const insertUserResidenceSchema = z.object({\n  userId: z.string().uuid(),\n  residenceId: z.string().uuid(),\n  relationshipType: z.string(),\n  startDate: z.date(),\n  endDate: z.date().optional(),\n});\n\nexport const insertContactSchema = z.object({\n  name: z.string(),\n  email: z.string().email().optional(),\n  phone: z.string().optional(),\n  entity: z.string(),\n  entityId: z.string().uuid(),\n  contactCategory: z.string(),\n});\n\nexport const insertCommonSpaceSchema = z.object({\n  name: z.string().min(1).max(255),\n  description: z.string().optional(),\n  buildingId: z.string().uuid(),\n  isReservable: z.boolean().default(false),\n  capacity: z.number().int().optional(),\n  contactPersonId: z.string().uuid().optional(),\n  openingHours: z\n    .array(\n      z.object({\n        day: z.string(),\n        open: z.string(),\n        close: z.string(),\n      })\n    )\n    .optional(),\n  availableDays: z\n    .array(\n      z.enum(['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'])\n    )\n    .optional(),\n  bookingRules: z.string().optional(),\n});\n\nexport const insertBookingSchema = z.object({\n  commonSpaceId: z.string().uuid(),\n  userId: z.string().uuid(),\n  startTime: z.date(),\n  endTime: z.date(),\n  status: z.enum(['confirmed', 'cancelled']).default('confirmed'),\n});\n\nexport const insertUserBookingRestrictionSchema = z.object({\n  userId: z.string().uuid(),\n  commonSpaceId: z.string().uuid(),\n  isBlocked: z.boolean().default(true),\n  reason: z.string().optional(),\n});\n\n// Types\n/**\n *\n */\nexport type InsertBuilding = z.infer<typeof insertBuildingSchema>;\n/**\n *\n */\nexport type Building = typeof buildings.$inferSelect;\n\n/**\n *\n */\nexport type InsertResidence = z.infer<typeof insertResidenceSchema>;\n/**\n *\n */\nexport type Residence = typeof residences.$inferSelect;\n\n/**\n *\n */\nexport type InsertUserResidence = z.infer<typeof insertUserResidenceSchema>;\n/**\n *\n */\nexport type UserResidence = typeof userResidences.$inferSelect;\n\n/**\n *\n */\nexport type InsertContact = z.infer<typeof insertContactSchema>;\n/**\n *\n */\nexport type Contact = typeof contacts.$inferSelect;\n\n/**\n *\n */\nexport type InsertCommonSpace = z.infer<typeof insertCommonSpaceSchema>;\n/**\n *\n */\nexport type CommonSpace = typeof commonSpaces.$inferSelect;\n\n/**\n *\n */\nexport type InsertBooking = z.infer<typeof insertBookingSchema>;\n/**\n *\n */\nexport type Booking = typeof bookings.$inferSelect;\n\nexport const insertUserTimeLimitSchema = z.object({\n  userId: z.string().uuid(),\n  commonSpaceId: z.string().uuid().optional(), // null means applies to all spaces\n  limitType: z.enum(['monthly', 'yearly']),\n  limitHours: z.number().int().min(1).max(8760), // Max 1 year worth of hours\n});\n\n/**\n *\n */\nexport type InsertUserBookingRestriction = z.infer<typeof insertUserBookingRestrictionSchema>;\n/**\n *\n */\nexport type UserBookingRestriction = typeof userBookingRestrictions.$inferSelect;\n\n/**\n *\n */\nexport type InsertUserTimeLimit = z.infer<typeof insertUserTimeLimitSchema>;\n/**\n *\n */\nexport type UserTimeLimit = typeof userTimeLimits.$inferSelect;\n\n// Relations - Temporarily commented out due to drizzle-orm version compatibility\n/*\nexport const buildingsRelations = relations(buildings, ({ one, many }) => ({\n  organization: one(organizations, {\n    fields: [buildings.organizationId],\n    references: [organizations.id],\n  }),\n  residences: many(residences),\n}));\n*/\n\n/*\nexport const residencesRelations = relations(residences, ({ one, many }) => ({\n  building: one(buildings, {\n    fields: [residences.buildingId],\n    references: [buildings.id],\n  }),\n  userResidences: many(userResidences),\n}));\n*/\n\n/*\nexport const userResidencesRelations = relations(userResidences, ({ one }) => ({\n  user: one(users, {\n    fields: [userResidences.userId],\n    references: [users.id],\n  }),\n  residence: one(residences, {\n    fields: [userResidences.residenceId],\n    references: [residences.id],\n  }),\n}));\n*/\n"],"version":3}