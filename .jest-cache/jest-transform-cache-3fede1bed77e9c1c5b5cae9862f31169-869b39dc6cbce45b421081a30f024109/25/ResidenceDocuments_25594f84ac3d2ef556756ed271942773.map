{"file":"/home/runner/workspace/client/src/pages/manager/ResidenceDocuments.tsx","mappings":";;;;;AAOA,qCAsEC;;AA7ED,uDAAiD;AACjD,mCAAgD;AAChD,mDAA+C;AAC/C,0FAAkE;AAClE,mDAAgD;AAChD,+CAAyC;AAEzC,SAAwB,kBAAkB;IACxC,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,IAAA,oBAAW,GAAE,CAAC;IACnC,MAAM,MAAM,GAAG,IAAA,kBAAS,GAAE,CAAC;IAE3B,6DAA6D;IAC7D,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9D,MAAM,WAAW,GAAI,MAAc,CAAC,WAAW,IAAI,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAEhF,mBAAmB;IACnB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAA,sBAAQ,EAAC;QAC9B,QAAQ,EAAE,CAAC,gBAAgB,CAAC;QAC5B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAA,wBAAU,EAAC,KAAK,EAAE,gBAAgB,CAAiB;KACnE,CAAC,CAAC;IAEH,qBAAqB;IACrB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,IAAA,sBAAQ,EAAC;QACnC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,WAAW,CAAC;QAC1C,OAAO,EAAE,KAAK,IAAI,EAAE;YAClB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,mBAAmB,WAAW,EAAE,EAAE;gBAC7D,WAAW,EAAE,SAAS;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;YAC/D,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,WAAW;KACvB,CAAC,CAAC;IAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO,CACL,gCAAK,SAAS,EAAC,sCAAsC,YACnD,gCAAK,SAAS,EAAC,yCAAyC,YACtD,8BAAG,SAAS,EAAC,eAAe,yCAA6B,GACrD,GACF,CACP,CAAC;IACJ,CAAC;IAED,MAAM,SAAS,GAAG,IAAI,EAAE,IAAI,KAAK,SAAS,IAAI,IAAI,EAAE,IAAI,KAAK,OAAO,CAAC;IACrE,MAAM,aAAa,GAAG,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;IAE3F,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aAEnD,gCAAK,SAAS,EAAC,UAAU,YACvB,wBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAC9C,SAAS,EAAC,MAAM,iBACJ,aAAa,aAEzB,uBAAC,wBAAS,IAAC,SAAS,EAAC,cAAc,GAAG,0BAE/B,GACL,EAEN,uBAAC,yBAAe,IACd,MAAM,EAAE;oBACN,IAAI,EAAE,WAAW;oBACjB,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,WAAW;oBACrB,UAAU,EAAE,aAAa;oBACzB,aAAa,EAAE,SAAS,EAAE,OAAO;oBACjC,WAAW,EAAE,SAAS;oBACtB,SAAS,EAAE,SAAS;oBACpB,WAAW,EAAE,SAAS;oBACtB,oBAAoB,EAAE,SAAS;iBAChC,GACD,IACE,CACP,CAAC;AACJ,CAAC","names":[],"sources":["/home/runner/workspace/client/src/pages/manager/ResidenceDocuments.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { useLocation, useParams } from 'wouter';\nimport { apiRequest } from '@/lib/queryClient';\nimport DocumentManager from '@/components/common/DocumentManager';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft } from 'lucide-react';\n\nexport default function ResidenceDocuments() {\n  const [, navigate] = useLocation();\n  const params = useParams();\n\n  // Get residenceId from URL (both path param and query param)\n  const urlParams = new URLSearchParams(window.location.search);\n  const residenceId = (params as any).residenceId || urlParams.get('residenceId');\n\n  // Get current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // Get residence info\n  const { data: residence } = useQuery({\n    queryKey: ['/api/residences', residenceId],\n    queryFn: async () => {\n      const response = await fetch(`/api/residences/${residenceId}`, {\n        credentials: 'include',\n      });\n      if (!response.ok) throw new Error('Failed to fetch residence');\n      return response.json();\n    },\n    enabled: !!residenceId,\n  });\n\n  if (!residenceId) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <div className='flex-1 flex items-center justify-center'>\n          <p className='text-gray-500'>Residence ID is required</p>\n        </div>\n      </div>\n    );\n  }\n\n  const isManager = user?.role === 'manager' || user?.role === 'admin';\n  const residenceName = residence?.unitNumber ? `Unit ${residence.unitNumber}` : 'Residence';\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      {/* Back button */}\n      <div className='p-6 pb-0'>\n        <Button\n          variant='outline'\n          onClick={() => navigate('/manager/residences')}\n          className='mb-4'\n          data-testid='button-back'\n        >\n          <ArrowLeft className='w-4 h-4 mr-2' />\n          Back to Residences\n        </Button>\n      </div>\n\n      <DocumentManager\n        config={{\n          type: 'residence',\n          userRole: 'manager',\n          entityId: residenceId,\n          entityName: residenceName,\n          entityAddress: residence?.address,\n          allowCreate: isManager,\n          allowEdit: isManager,\n          allowDelete: isManager,\n          showVisibilityToggle: isManager,\n        }}\n      />\n    </div>\n  );\n}\n"],"version":3}