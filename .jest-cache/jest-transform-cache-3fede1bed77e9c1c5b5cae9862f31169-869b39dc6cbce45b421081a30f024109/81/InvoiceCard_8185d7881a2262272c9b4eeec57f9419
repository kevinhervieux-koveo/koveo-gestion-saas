d4e697462b893ea887dcec0e1df6ee66
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoiceCard = InvoiceCard;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const card_1 = require("@/components/ui/card");
const badge_1 = require("@/components/ui/badge");
const button_1 = require("@/components/ui/button");
const dropdown_menu_1 = require("@/components/ui/dropdown-menu");
const dialog_1 = require("@/components/ui/dialog");
const lucide_react_1 = require("lucide-react");
const date_fns_1 = require("date-fns");
const react_query_1 = require("@tanstack/react-query");
const use_toast_1 = require("@/hooks/use-toast");
const queryClient_1 = require("@/lib/queryClient");
const InvoiceForm_1 = require("./InvoiceForm");
const DocumentCard_1 = require("@/components/document-management/DocumentCard");
function InvoiceCard({ invoice, onUpdate }) {
    const [showEditDialog, setShowEditDialog] = (0, react_1.useState)(false);
    const [showViewDialog, setShowViewDialog] = (0, react_1.useState)(false);
    const queryClient = (0, react_query_1.useQueryClient)();
    const { toast } = (0, use_toast_1.useToast)();
    const deleteMutation = (0, react_query_1.useMutation)({
        mutationFn: async () => {
            const response = await (0, queryClient_1.apiRequest)('DELETE', `/api/invoices/${invoice.id}`);
            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || 'Failed to delete invoice');
            }
            return response.json();
        },
        onSuccess: () => {
            toast({
                title: 'Success',
                description: 'Invoice deleted successfully',
            });
            queryClient.invalidateQueries({ queryKey: ['/api/invoices'] });
            onUpdate?.();
        },
        onError: (error) => {
            toast({
                title: 'Error',
                description: error.message,
                variant: 'destructive',
            });
        },
    });
    const handleDelete = () => {
        if (window.confirm('Are you sure you want to delete this invoice? This action cannot be undone.')) {
            deleteMutation.mutate();
        }
    };
    const handleEditSuccess = () => {
        setShowEditDialog(false);
        onUpdate?.();
    };
    const getPaymentTypeVariant = (paymentType) => {
        return paymentType === 'recurring' ? 'default' : 'secondary';
    };
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)(card_1.Card, { className: "hover:shadow-md transition-shadow", "data-testid": `invoice-card-${invoice.id}`, children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, { className: "pb-3", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-start justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { className: "space-y-1", children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: "text-lg font-semibold", children: invoice.vendorName }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["#", invoice.invoiceNumber] })] }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenu, { children: [(0, jsx_runtime_1.jsx)(dropdown_menu_1.DropdownMenuTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "ghost", size: "sm", "data-testid": `button-actions-${invoice.id}`, children: (0, jsx_runtime_1.jsx)(lucide_react_1.MoreHorizontal, { className: "w-4 h-4" }) }) }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuContent, { align: "end", children: [(0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuItem, { onClick: () => setShowViewDialog(true), children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Eye, { className: "w-4 h-4 mr-2" }), "View Details"] }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuItem, { onClick: () => setShowEditDialog(true), children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Edit2, { className: "w-4 h-4 mr-2" }), "Edit"] }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuItem, { onClick: handleDelete, className: "text-destructive focus:text-destructive", disabled: deleteMutation.isPending, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, { className: "w-4 h-4 mr-2" }), "Delete"] })] })] })] }) }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.DollarSign, { className: "w-4 h-4 text-muted-foreground" }), (0, jsx_runtime_1.jsxs)("span", { className: "font-semibold text-lg", children: ["$", parseFloat(invoice.totalAmount.toString()).toFixed(2)] })] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: getPaymentTypeVariant(invoice.paymentType), children: invoice.paymentType === 'recurring' ? 'Recurring' : 'One-time' })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-2 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Calendar, { className: "w-4 h-4 text-muted-foreground" }), (0, jsx_runtime_1.jsxs)("span", { children: ["Due: ", (0, date_fns_1.format)(new Date(invoice.dueDate), 'MMM dd, yyyy')] })] }), invoice.frequency && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "w-4 h-4" }), (0, jsx_runtime_1.jsx)("span", { className: "text-muted-foreground", children: invoice.frequency.charAt(0).toUpperCase() + invoice.frequency.slice(1) })] })), invoice.buildingId && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: "w-4 h-4 text-muted-foreground" }), (0, jsx_runtime_1.jsxs)("span", { className: "text-muted-foreground truncate", children: ["Building ID: ", invoice.buildingId.slice(0, 8), "..."] })] }))] }), invoice.documentId && ((0, jsx_runtime_1.jsx)("div", { className: "pt-2 border-t", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 text-sm text-muted-foreground", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, { className: "w-4 h-4" }), (0, jsx_runtime_1.jsx)("span", { children: "Document attached" }), invoice.isAiExtracted && ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "outline", className: "text-xs", children: "AI Processed" }))] }) }))] })] }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, { open: showEditDialog, onOpenChange: setShowEditDialog, children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, { className: "max-w-4xl max-h-[90vh] overflow-y-auto", children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, { children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, { children: "Edit Invoice" }) }), (0, jsx_runtime_1.jsx)(InvoiceForm_1.InvoiceForm, { mode: "edit", invoice: invoice, onSuccess: handleEditSuccess, onCancel: () => setShowEditDialog(false) })] }) }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, { open: showViewDialog, onOpenChange: setShowViewDialog, children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, { className: "max-w-2xl max-h-[90vh] overflow-y-auto", children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, { children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, { children: "Invoice Details" }) }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium mb-2", children: "Vendor Information" }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Vendor: ", invoice.vendorName] }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Invoice #: ", invoice.invoiceNumber] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium mb-2", children: "Payment Information" }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Amount: $", parseFloat(invoice.totalAmount.toString()).toFixed(2)] }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Due: ", (0, date_fns_1.format)(new Date(invoice.dueDate), 'PPP')] }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Type: ", invoice.paymentType] }), invoice.frequency && ((0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Frequency: ", invoice.frequency] }))] })] }), invoice.documentId && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium mb-4", children: "Attached Document" }), (0, jsx_runtime_1.jsx)(DocumentCard_1.DocumentCard, { documentId: invoice.documentId, showRemove: false })] })), invoice.isAiExtracted && invoice.extractionConfidence && ((0, jsx_runtime_1.jsxs)("div", { className: "bg-muted/50 p-4 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium mb-2", children: "AI Extraction Info" }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-muted-foreground", children: ["Confidence: ", (parseFloat(invoice.extractionConfidence.toString()) * 100).toFixed(1), "%"] })] })), (0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-muted-foreground", children: [(0, jsx_runtime_1.jsxs)("p", { children: ["Created: ", (0, date_fns_1.format)(new Date(invoice.createdAt), 'PPP pp')] }), (0, jsx_runtime_1.jsxs)("p", { children: ["Updated: ", (0, date_fns_1.format)(new Date(invoice.updatedAt), 'PPP pp')] })] })] })] }) })] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,