b9ea604409d6b1cb650b65e85356725b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteConfirmationDialog = DeleteConfirmationDialog;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const dialog_1 = require("@/components/ui/dialog");
const lucide_react_1 = require("lucide-react");
const button_1 = require("@/components/ui/button");
const badge_1 = require("@/components/ui/badge");
const use_toast_1 = require("@/hooks/use-toast");
const queryClient_1 = require("@/lib/queryClient");
/**
 * Delete Confirmation Dialog with Impact Analysis.
 * Shows exactly what will be deleted when cascading delete is performed.
 * @param root0 - Component props.
 * @param root0.open - Whether the dialog is open.
 * @param root0.onOpenChange - Callback when dialog open state changes.
 * @param root0.entityType - Type of entity being deleted.
 * @param root0.entityId - ID of the entity being deleted.
 * @param root0.entityName - Name of the entity being deleted.
 * @param root0.onConfirm - Callback when deletion is confirmed.
 * @param root0.isDeleting - Whether deletion is in progress.
 * @returns JSX element for the delete confirmation dialog.
 */
/**
 * DeleteConfirmationDialog function.
 * @param root0
 * @param root0.open
 * @param root0.onOpenChange
 * @param root0.entityType
 * @param root0.entityId
 * @param root0.entityName
 * @param root0.onConfirm
 * @param root0.isDeleting
 * @returns Function result.
 */
function DeleteConfirmationDialog({ open, onOpenChange, entityType, entityId, entityName, onConfirm, isDeleting = false, }) {
    const [impact, setImpact] = (0, react_1.useState)(null);
    const [loadingImpact, setLoadingImpact] = (0, react_1.useState)(false);
    const { toast } = (0, use_toast_1.useToast)();
    // Fetch deletion impact when dialog opens
    (0, react_1.useEffect)(() => {
        if (open && entityId) {
            fetchDeletionImpact();
        }
    }, [open, entityId, entityType]);
    const fetchDeletionImpact = async () => {
        setLoadingImpact(true);
        try {
            const endpoint = entityType === 'organization'
                ? `/api/organizations/${entityId}/deletion-impact`
                : `/api/admin/buildings/${entityId}/deletion-impact`;
            const response = await (0, queryClient_1.apiRequest)('GET', endpoint);
            const impactData = await response.json();
            setImpact(impactData);
            toast({
                title: 'Error',
                description: 'Failed to analyze deletion impact',
                variant: 'destructive',
            });
        }
        finally {
            setLoadingImpact(false);
        }
    };
    const handleConfirm = () => {
        onConfirm();
    };
    const getTotalItemsToDelete = () => {
        if (!impact) {
            return 0;
        }
        let total = 1; // The entity itself
        if (impact.buildings) {
            total += impact.buildings;
        }
        total += impact.residences;
        total += impact.documents;
        total += impact.potentialOrphanedUsers;
        return total;
    };
    return ((0, jsx_runtime_1.jsx)(dialog_1.Dialog, { open: open, onOpenChange: onOpenChange, children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, { className: 'sm:max-w-[500px] max-h-[90vh] overflow-y-auto', children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, { children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogTitle, { className: 'flex items-center gap-2 text-red-600 dark:text-red-400', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, { className: 'h-5 w-5' }), "Confirm Deletion"] }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, { children: "This action cannot be undone. Please review the impact before proceeding." })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-4', children: [(0, jsx_runtime_1.jsx)("div", { className: 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4', children: (0, jsx_runtime_1.jsxs)("p", { className: 'text-sm text-red-800 dark:text-red-200', children: [(0, jsx_runtime_1.jsx)("strong", { children: "Warning:" }), " This action cannot be undone. Deleting this ", entityType, ' ', "will cascade and remove all related data."] }) }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsxs)("h4", { className: 'font-medium mb-2', children: ["You are about to delete:", ' ', (0, jsx_runtime_1.jsx)("span", { className: 'text-red-600 dark:text-red-400', children: entityName })] }) }), loadingImpact ? ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-center py-8', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Loader2, { className: 'h-6 w-6 animate-spin' }), (0, jsx_runtime_1.jsx)("span", { className: 'ml-2 text-sm text-gray-600 dark:text-gray-400', children: "Analyzing deletion impact..." })] })) : impact ? ((0, jsx_runtime_1.jsxs)("div", { className: 'space-y-4', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h5", { className: 'font-medium mb-3 text-gray-900 dark:text-gray-100', children: "This will also delete:" }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-2', children: [entityType === 'organization' && impact.buildings && impact.buildings > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: 'h-4 w-4 text-blue-500' }), (0, jsx_runtime_1.jsx)("span", { className: 'text-sm', children: "Buildings" })] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: 'secondary', children: impact.buildings })] })), impact.residences > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Home, { className: 'h-4 w-4 text-green-500' }), (0, jsx_runtime_1.jsx)("span", { className: 'text-sm', children: "Residences" })] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: 'secondary', children: impact.residences })] })), impact.documents > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, { className: 'h-4 w-4 text-orange-500' }), (0, jsx_runtime_1.jsx)("span", { className: 'text-sm', children: "Documents" })] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: 'secondary', children: impact.documents })] })), impact.potentialOrphanedUsers > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Users, { className: 'h-4 w-4 text-purple-500' }), (0, jsx_runtime_1.jsx)("span", { className: 'text-sm', children: "Orphaned Users" })] }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: 'secondary', children: impact.potentialOrphanedUsers })] })), getTotalItemsToDelete() === 1 && ((0, jsx_runtime_1.jsx)("p", { className: 'text-sm text-gray-600 dark:text-gray-400 italic', children: "No related entities will be affected." }))] })] }), getTotalItemsToDelete() > 1 && ((0, jsx_runtime_1.jsx)("div", { className: 'bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3', children: (0, jsx_runtime_1.jsxs)("p", { className: 'text-sm text-orange-800 dark:text-orange-200', children: [(0, jsx_runtime_1.jsx)("strong", { children: "Total items to delete:" }), " ", getTotalItemsToDelete()] }) }))] })) : ((0, jsx_runtime_1.jsx)("div", { className: 'text-center py-4', children: (0, jsx_runtime_1.jsx)("p", { className: 'text-sm text-gray-600 dark:text-gray-400', children: "Unable to analyze deletion impact. Proceed with caution." }) })), (0, jsx_runtime_1.jsx)("div", { className: 'bg-gray-50 dark:bg-gray-800 rounded-lg p-3', children: (0, jsx_runtime_1.jsxs)("p", { className: 'text-xs text-gray-600 dark:text-gray-400', children: [(0, jsx_runtime_1.jsx)("strong", { children: "Note:" }), " Deleted items are soft-deleted and may be recoverable by system administrators."] }) })] }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, { className: 'flex gap-2', children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'outline', onClick: () => onOpenChange(false), disabled: isDeleting, children: "Cancel" }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'destructive', onClick: handleConfirm, disabled: isDeleting || loadingImpact, children: isDeleting ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Loader2, { className: 'h-4 w-4 mr-2 animate-spin' }), "Deleting..."] })) : (`Delete ${entityType === 'organization' ? 'Organization' : 'Building'}`) })] })] }) }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,