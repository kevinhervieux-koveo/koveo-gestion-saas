{"version":3,"names":["cov_1i9pyy2y0f","actualCoverage","s","exports","FeatureForm","react_1","require","button_1","input_1","textarea_1","label_1","dialog_1","select_1","switch_1","badge_1","lucide_react_1","use_toast_1","react_query_1","document_management_1","feature","open","onOpenChange","f","toast","useToast","queryClient","useQueryClient","createFeatureMutation","useMutation","mutationFn","featureData","response","fetch","method","headers","body","JSON","stringify","ok","b","Error","json","onSuccess","newFeature","invalidateQueries","queryKey","title","description","name","handleClose","onError","variant","savePromptMutation","featureId","prompt","id","formData","setFormData","useState","featureName","featureCategory","featureDescription","isStrategicPath","businessObjective","targetUsers","successMetrics","priority","timeline","complexity","dependencies","dataRequirements","integrationNeeds","securityConsiderations","userFlow","uiRequirements","accessibilityNeeds","performanceRequirements","testingStrategy","additionalNotes","rbacRequired","rbacRoles","admin","read","write","organizationalLimitation","manager","owner","tenant","step","setStep","generatedPrompt","setGeneratedPrompt","lastSaved","setLastSaved","isDirty","setIsDirty","attachedFiles","setAttachedFiles","getDraftKey","useCallback","baseKey","saveDraft","draftData","timestamp","Date","toISOString","window","localStorage","setItem","duration","error","loadDraft","savedDraft","getItem","parse","clearDraft","removeItem","updateFormData","field","value","prev","handleFilesSelect","files","generatePrompt","category","featureStatus","status","featurePriority","Object","entries","filter","_","permissions","map","role","accessTypes","push","orgLimit","replace","toUpperCase","join","mutate","copyPrompt","navigator","clipboard","writeText","console","integrateToRoadmap","isNewFeature","undefined","technicalComplexity","resetDialog","useEffect","timer","setTimeout","clearTimeout","allKeys","keys","draftKeys","key","startsWith","forEach","jsx_runtime_1","jsx","Dialog","children","jsxs","DialogContent","className","DialogHeader","DialogTitle","FileText","Clock","toLocaleTimeString","Button","size","onClick","Trash2","Badge","Label","htmlFor","Input","placeholder","onChange","e","target","Select","onValueChange","_value","SelectTrigger","SelectValue","SelectContent","SelectItem","Textarea","Switch","checked","onCheckedChange","type","newRoles","Paperclip","SharedUploader","onDocumentChange","file","extractedText","allowedFileTypes","maxFileSize","showCamera","compact","length","index","i","Copy","disabled","isPending","Save","DialogFooter","trim","Plus","Zap"],"sources":["/home/runner/workspace/client/src/components/forms/feature-form.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Badge } from '@/components/ui/badge';\nimport { Copy, FileText, Zap, Save, Clock, Trash2, Plus, Paperclip } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport type { Feature } from '@shared/schema';\nimport { SharedUploader } from '@/components/document-management';\n\n/**\n * Props for the FeatureForm component.\n */\ninterface FeatureFormProps {\n  feature: Feature | null;\n  open: boolean;\n  onOpenChange: (_open: boolean) => void;\n}\n\n/**\n * Reusable form dialog component for planning feature development.\n * Collects detailed requirements and generates development prompts.\n * Located in forms directory for easy reuse across the application.\n * @param root0 - Component props.\n * @param root0.feature - The feature to edit, null for new features.\n * @param root0.open - Dialog open state.\n * @param root0.onOpenChange - Callback to handle dialog open state changes.\n * @returns Feature form dialog component.\n */\n/**\n * FeatureForm function.\n * @param root0\n * @param root0.feature\n * @param root0.open\n * @param root0.onOpenChange\n * @returns Function result.\n */\nexport function FeatureForm({ feature, open, onOpenChange }: FeatureFormProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Mutation to create feature in roadmap\n  const createFeatureMutation = useMutation({\n    mutationFn: async (featureData: {\n      name: string;\n      description: string;\n      category: string;\n      status?: string;\n      priority?: string;\n      businessObjective?: string;\n      targetUsers?: string;\n      successMetrics?: string;\n      technicalComplexity?: string;\n      dependencies?: string;\n      userFlow?: string;\n    }) => {\n      const response = await fetch('/api/features', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(featureData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create feature');\n      }\n\n      return response.json();\n    },\n    onSuccess: (newFeature) => {\n      // Invalidate queries to refresh roadmap data\n      queryClient.invalidateQueries({ queryKey: ['/api/features'] });\n\n      toast({\n        title: 'Feature Integrated',\n        description: `\"${newFeature.name}\" has been successfully added to the roadmap.`,\n      });\n\n      // Close the dialog\n      handleClose(false);\n    },\n    onError: () => {\n      toast({\n        title: 'Integration Failed',\n        description: 'Failed to add the feature to the roadmap. Please try again.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Mutation to save generated prompt as actionable item\n  const savePromptMutation = useMutation({\n    mutationFn: async ({\n      featureId,\n      prompt,\n      title,\n    }: {\n      featureId: string;\n      prompt: string;\n      title: string;\n    }) => {\n      const response = await fetch(`/api/features/${featureId}/actionable-items/from-prompt`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt,\n          title,\n          description: 'AI-generated development prompt',\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save prompt as actionable item');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      // Invalidate queries to refresh data\n      if (feature?.id) {\n        queryClient.invalidateQueries({\n          queryKey: [`/api/features/${feature.id}/actionable-items`],\n        });\n      }\n\n      toast({\n        title: 'Prompt Saved',\n        description: 'The development prompt has been saved as an actionable item.',\n      });\n    },\n    onError: () => {\n      toast({\n        title: 'Save Failed',\n        description: 'Failed to save the prompt as an actionable item.',\n        variant: 'destructive',\n      });\n    },\n  });\n  const [formData, setFormData] = useState({\n    // New feature fields\n    featureName: '',\n    featureCategory: 'Compliance & Security', // Default to a valid category\n    featureDescription: '',\n    isStrategicPath: false,\n\n    // General questions\n    businessObjective: '',\n    targetUsers: '',\n    successMetrics: '',\n    priority: '',\n    timeline: '',\n\n    // Technical questions\n    complexity: '',\n    dependencies: '',\n    dataRequirements: '',\n    integrationNeeds: '',\n    securityConsiderations: '',\n\n    // User experience questions\n    userFlow: '',\n    uiRequirements: '',\n    accessibilityNeeds: '',\n\n    // Additional requirements\n    performanceRequirements: '',\n    testingStrategy: '',\n    additionalNotes: '',\n\n    // RBAC requirements\n    rbacRequired: false,\n    rbacRoles: {\n      admin: { read: true, write: true, organizationalLimitation: '' },\n      manager: { read: true, write: true, organizationalLimitation: '' },\n      owner: { read: true, write: false, organizationalLimitation: '' },\n      tenant: { read: false, write: false, organizationalLimitation: '' },\n    },\n  });\n\n  const [step, setStep] = useState<'form' | 'prompt'>('form');\n  const [generatedPrompt, setGeneratedPrompt] = useState('');\n  const [lastSaved, setLastSaved] = useState<Date | null>(null);\n  const [isDirty, setIsDirty] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState<File[]>([]);\n\n  /**\n   * Gets the localStorage key for drafts.\n   * @returns The localStorage key for feature drafts.\n   */\n  const getDraftKey = useCallback(() => {\n    const baseKey = 'koveo-feature-draft';\n    return feature?.id ? `${baseKey}-${feature.id}` : `${baseKey}-new`;\n  }, [feature?.id]);\n\n  /**\n   * Saves form data to localStorage.\n   */\n  const saveDraft = useCallback(() => {\n    try {\n      const draftData = {\n        formData,\n        timestamp: new Date().toISOString(),\n        featureId: feature?.id || null,\n      };\n      window.localStorage.setItem(getDraftKey(), JSON.stringify(draftData));\n      setLastSaved(new Date());\n      setIsDirty(false);\n\n      toast({\n        title: 'Draft Saved',\n        description: 'Your progress has been automatically saved.',\n        duration: 2000,\n      });\n    } catch (error) {\n      // Error saving draft\n    }\n  }, [formData, feature?.id, toast, getDraftKey]);\n\n  /**\n   * Loads draft from localStorage.\n   */\n  const loadDraft = useCallback(() => {\n    try {\n      const savedDraft = window.localStorage.getItem(getDraftKey());\n      if (savedDraft) {\n        const draftData = JSON.parse(savedDraft);\n        const formData = draftData.formData;\n\n        // Fix invalid category if it exists\n        if (formData.featureCategory === 'Strategic Path') {\n          formData.featureCategory = 'Compliance & Security';\n        }\n\n        setFormData(formData);\n        setLastSaved(new Date(draftData.timestamp));\n        setIsDirty(false);\n      }\n    } catch (error) {\n      // Error loading draft\n    }\n  }, [feature?.id, getDraftKey]);\n\n  /**\n   * Clears the saved draft.\n   */\n  const clearDraft = useCallback(() => {\n    try {\n      window.localStorage.removeItem(getDraftKey());\n      setLastSaved(null);\n      setIsDirty(false);\n      \n      toast({\n        title: 'Draft Cleared',\n        description: 'Saved draft has been removed.',\n      });\n    } catch (error) {\n      // Error clearing draft\n    }\n  }, [feature?.id, toast, getDraftKey]);\n\n  /**\n   * Updates form data when input values change.\n   * @param field - The form field to update.\n   * @param value - The new value for the field.\n   * @param _value\n   */\n  const updateFormData = (field: string, value: string | boolean | unknown) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n    setIsDirty(true);\n  };\n\n  /**\n   * Handle file attachments for mockups, wireframes, or supporting documents.\n   */\n  const handleFilesSelect = useCallback((files: File[]) => {\n    setAttachedFiles(prev => [...prev, ...files]);\n    setIsDirty(true);\n  }, []);\n\n  /**\n   * Generates a comprehensive development prompt based on the collected requirements.\n   */\n  const generatePrompt = () => {\n    const featureName = feature?.name || formData.featureName || 'New Feature';\n    const featureCategory = feature?.category || formData.featureCategory || 'Not specified';\n    const featureStatus = feature?.status || 'submitted';\n    const featurePriority = formData.priority || feature?.priority || 'Medium';\n    const featureDescription =\n      feature?.description || formData.featureDescription || 'Feature description not provided';\n\n    const prompt = `# Feature Development Request: ${featureName}\n\n## 🎯 Overview\n**Category:** ${featureCategory}\n**Current Status:** ${featureStatus}\n**Priority:** ${featurePriority}\n**Description:** ${featureDescription}\n\n## 📋 Business Requirements\n\n### Business Objective\n${formData.businessObjective || 'Not specified'}\n\n### Target Users\n${formData.targetUsers || 'All system users'}\n\n### Success Metrics\n${formData.successMetrics || 'Feature completion and user adoption'}\n\n### Timeline\n${formData.timeline || 'Standard development timeline'}\n\n## 🔧 Technical Requirements\n\n### Complexity Assessment\n${formData.complexity || 'Medium complexity'}\n\n### Dependencies\n${formData.dependencies || 'None specified'}\n\n### Data Requirements\n${formData.dataRequirements || 'Standard data handling'}\n\n### Integration Needs\n${formData.integrationNeeds || 'Standard system integration'}\n\n### Security Considerations\n${formData.securityConsiderations || 'Follow standard security practices'}\n\n${\n  formData.rbacRequired\n    ? `\n### Role-Based Access Control (RBAC)\n**RBAC Required:** Yes\n\n**Role Permissions:**\n${Object.entries(formData.rbacRoles)\n  .filter(([_, permissions]) => permissions.read || permissions.write)\n  .map(([role, permissions]) => {\n    const accessTypes = [];\n    if (permissions.read) {\n      accessTypes.push('Read');\n    }\n    if (permissions.write) {\n      accessTypes.push('Write');\n    }\n    const orgLimit = permissions.organizationalLimitation\n      ? ` (${permissions.organizationalLimitation})`\n      : '';\n    return `- **${role.replace('_', ' ').toUpperCase()}**: ${accessTypes.join(', ')} access${orgLimit}`;\n  })\n  .join('\\n')}\n\n**Implementation Notes:**\n- Use the existing RBAC system in server/auth.ts with requireAuth and authorize middleware\n- Apply role-based query scoping using the functions in server/db/queries/scope-query.ts\n- Ensure all API endpoints check permissions using the authorize('permission:action') middleware\n- Follow the established patterns in config/permissions.json for permission naming\n`\n    : ''\n}\n\n## 👤 User Experience Requirements\n\n### User Flow\n${formData.userFlow || 'Standard user interaction pattern'}\n\n### UI Requirements\n${formData.uiRequirements || 'Follow existing design system (shadcn/ui)'}\n\n### Accessibility Needs\n${formData.accessibilityNeeds || 'WCAG 2.1 AA compliance required'}\n\n## ⚡ Performance & Quality Requirements\n\n### Performance Requirements\n${formData.performanceRequirements || 'Standard performance expectations'}\n\n### Testing Strategy\n${formData.testingStrategy || 'Unit tests, integration tests, and manual testing'}\n\n## 📝 Implementation Guidelines\n\n**CRITICAL: This feature must be implemented with the highest standards of quality, maintainability, and best practices.**\n\n### Code Quality Standards\n- Follow TypeScript strict mode and maintain 100% type safety\n- Implement comprehensive error handling and user feedback\n- Use consistent naming conventions and clear, self-documenting code\n- Add thorough JSDoc comments for all exported functions and interfaces\n- Maintain test coverage above 90% for all new code\n\n### Architecture & Design Patterns\n- Follow the existing project architecture (React + Express + PostgreSQL + Drizzle ORM)\n- Use established patterns: React Query for data fetching, Zod for validation\n- Implement proper separation of concerns (UI components, business logic, data layer)\n- Follow SOLID principles and avoid code duplication\n- Use composition over inheritance where applicable\n\n### User Interface Standards\n- Use the established shadcn/ui component system exclusively\n- Ensure responsive design works on all screen sizes (mobile, tablet, desktop)\n- Follow the existing design tokens and color scheme\n- Implement proper loading states, error states, and empty states\n- Add appropriate micro-interactions and transitions\n\n### Database & Backend Standards\n- Create proper database migrations using Drizzle Kit\n- Implement input validation on both client and server sides using Zod schemas\n- Follow RESTful API conventions and proper HTTP status codes\n- Add comprehensive error handling and logging\n- Ensure proper data relationships and foreign key constraints\n\n### Security & Performance\n- Implement proper authentication and authorization checks\n- Sanitize all user inputs to prevent XSS and injection attacks\n- Use prepared statements and parameterized queries\n- Optimize database queries and add proper indexing\n- Implement caching strategies where appropriate\n\n### Testing Requirements\n- Write unit tests for all business logic and utility functions\n- Add integration tests for API endpoints and database operations\n- Include component tests for React components with user interactions\n- Test error scenarios and edge cases thoroughly\n- Add end-to-end tests for critical user flows\n\n### Documentation & Maintenance\n- Update the project's replit.md file with any architectural changes\n- Add inline comments explaining complex business logic\n- Create clear commit messages following conventional commit format\n- Ensure backward compatibility unless explicitly requested otherwise\n\n## 🚀 Additional Notes\n${formData.additionalNotes || 'No additional notes'}\n\n## ✅ Definition of Done\n- [ ] Feature implemented following all quality standards above\n- [ ] All tests pass with >90% coverage for new code\n- [ ] Code review completed and approved\n- [ ] Documentation updated (JSDoc, inline comments, replit.md if needed)\n- [ ] Manual testing completed across different devices and browsers\n- [ ] Performance benchmarks meet requirements\n- [ ] Security review completed\n- [ ] Feature deployed and working in production environment\n\n**Remember: Quality and maintainability are more important than speed. Take the time to implement this feature properly, following all established patterns and best practices in the Koveo Gestion codebase.**`;\n\n    setGeneratedPrompt(prompt);\n    setStep('prompt');\n\n    // Save prompt as actionable item if we have a feature ID\n    if (feature?.id) {\n      savePromptMutation.mutate({\n        featureId: feature.id,\n        prompt,\n        title: `Development Prompt: ${featureName}`,\n      });\n    }\n  };\n\n  /**\n   * Copies the generated prompt to clipboard.\n   */\n  const copyPrompt = async () => {\n    try {\n      await navigator.clipboard.writeText(generatedPrompt);\n      toast({\n        title: 'Prompt Copied',\n        description: 'The development prompt has been copied to your clipboard.',\n      });\n    } catch (error) {\n      console.error('Error copying prompt:', error);\n      toast({\n        title: 'Copy Failed',\n        description: 'Failed to copy prompt to clipboard.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  /**\n   * Handles integrating the feature into the roadmap.\n   */\n  const integrateToRoadmap = () => {\n    if (isNewFeature) {\n      // For new features, create them in the roadmap with minimal required data\n      const featureData = {\n        name: formData.featureName,\n        description: formData.featureDescription || `Feature: ${formData.featureName}`, // Default description\n        category: formData.featureCategory || 'Compliance & Security', // Default category\n        status: 'submitted' as const,\n        priority: (formData.priority || 'medium') as 'low' | 'medium' | 'high',\n        businessObjective: formData.businessObjective || undefined,\n        targetUsers: formData.targetUsers || undefined,\n        successMetrics: formData.successMetrics || undefined,\n        technicalComplexity: formData.complexity || undefined,\n        dependencies: formData.dependencies || undefined,\n        userFlow: formData.userFlow || undefined,\n        isStrategicPath: formData.isStrategicPath,\n      };\n\n      createFeatureMutation.mutate(featureData);\n    } else {\n      // For existing features, just close the dialog\n      // (they're already in the roadmap)\n      toast({\n        title: 'Feature Already in Roadmap',\n        description: 'This feature is already part of the roadmap.',\n      });\n      handleClose(false);\n    }\n  };\n\n  /**\n   * Resets the dialog to initial state.\n   */\n  const resetDialog = () => {\n    setStep('form');\n    setFormData({\n      featureName: '',\n      featureCategory: 'Compliance & Security', // Default to a valid category\n      featureDescription: '',\n      isStrategicPath: false,\n      businessObjective: '',\n      targetUsers: '',\n      successMetrics: '',\n      priority: '',\n      timeline: '',\n      complexity: '',\n      dependencies: '',\n      dataRequirements: '',\n      integrationNeeds: '',\n      securityConsiderations: '',\n      userFlow: '',\n      uiRequirements: '',\n      accessibilityNeeds: '',\n      performanceRequirements: '',\n      testingStrategy: '',\n      additionalNotes: '',\n      rbacRequired: false,\n      rbacRoles: {\n        admin: { read: true, write: true, organizationalLimitation: '' },\n        manager: { read: true, write: true, organizationalLimitation: '' },\n        owner: { read: true, write: false, organizationalLimitation: '' },\n        tenant: { read: false, write: false, organizationalLimitation: '' },\n      },\n    });\n    setGeneratedPrompt('');\n  };\n\n  const handleClose = (open: boolean) => {\n    if (!open) {\n      if (isDirty) {\n        // Save draft before closing if there are unsaved changes\n        saveDraft();\n      }\n      resetDialog();\n    }\n    onOpenChange(open);\n  };\n\n  // Auto-save effect - saves after 3 seconds of inactivity\n  useEffect(() => {\n    if (!isDirty) {\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      saveDraft();\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, [formData, isDirty, saveDraft]);\n\n  // Clear invalid drafts and load draft when form opens\n  useEffect(() => {\n    if (open) {\n      // Clear any drafts with invalid \"Strategic Path\" category\n      try {\n        const allKeys = Object.keys(window.localStorage);\n        const draftKeys = allKeys.filter((key) => key.startsWith('koveo-feature-draft'));\n\n        draftKeys.forEach((key) => {\n          try {\n            const draftData = JSON.parse(window.localStorage.getItem(key) || '{}');\n            if (draftData.formData?.featureCategory === 'Strategic Path') {\n              window.localStorage.removeItem(key);\n            }\n          } catch (error) {\n            // Invalid JSON, remove it\n            window.localStorage.removeItem(key);\n          }\n        });\n      } catch (error) {\n        console.error('Error clearing invalid drafts:', error);\n      }\n\n      loadDraft();\n    }\n  }, [open, loadDraft]);\n\n  const isNewFeature = !feature;\n\n  return (\n    <Dialog open={open} onOpenChange={handleClose}>\n      <DialogContent className='max-w-4xl max-h-[90vh] overflow-y-auto'>\n        <DialogHeader>\n          <div className='flex items-center justify-between'>\n            <DialogTitle className='flex items-center gap-2'>\n              <FileText className='h-5 w-5' />\n              {step === 'form'\n                ? isNewFeature\n                  ? 'Create New Feature'\n                  : 'Plan Feature Development'\n                : 'Generated Development Prompt'}\n            </DialogTitle>\n\n            {step === 'form' && (\n              <div className='flex items-center gap-2'>\n                {lastSaved && (\n                  <div className='flex items-center gap-1 text-xs text-gray-500'>\n                    <Clock className='h-3 w-3' />\n                    Saved {lastSaved.toLocaleTimeString()}\n                  </div>\n                )}\n\n                {lastSaved && (\n                  <Button\n                    variant='ghost'\n                    size='sm'\n                    onClick={clearDraft}\n                    className='text-xs text-red-600 hover:text-red-700'\n                  >\n                    <Trash2 className='h-3 w-3' />\n                  </Button>\n                )}\n              </div>\n            )}\n          </div>\n\n          {isDirty && step === 'form' && (\n            <div className='flex items-center gap-1 text-xs text-amber-600 mt-1'>\n              <Clock className='h-3 w-3' />\n              Auto-saving in progress...\n            </div>\n          )}\n        </DialogHeader>\n\n        {step === 'form' ? (\n          <div className='space-y-6'>\n            {/* Feature Info */}\n            {!isNewFeature && (\n              <div className='bg-gray-50 p-4 rounded-lg'>\n                <h3 className='font-semibold text-lg mb-2'>{feature.name}</h3>\n                <p className='text-sm text-gray-600 mb-2'>{feature.description}</p>\n                <div className='flex gap-2'>\n                  <Badge variant='outline'>{feature.category}</Badge>\n                  <Badge variant={feature.status === 'completed' ? 'default' : 'secondary'}>\n                    {feature.status}\n                  </Badge>\n                  {feature.priority && (\n                    <Badge variant={feature.priority === 'high' ? 'destructive' : 'secondary'}>\n                      {feature.priority}\n                    </Badge>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* New Feature Fields */}\n            {isNewFeature && (\n              <div className='space-y-4 bg-blue-50 p-4 rounded-lg'>\n                <h3 className='text-lg font-semibold'>New Feature Details</h3>\n                <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                  <div>\n                    <Label htmlFor='featureName'>Feature Name *</Label>\n                    <Input\n                      id='featureName'\n                      placeholder='Enter feature name'\n                      value={formData.featureName || ''}\n                      onChange={(e) => updateFormData('featureName', e.target.value)}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor='featureCategory'>Category</Label>\n                    <Select\n                      value={formData.featureCategory || ''}\n                      onValueChange={(_value: string) => updateFormData('featureCategory', _value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder='Select category' />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value='Dashboard & Home'>Dashboard & Home</SelectItem>\n                        <SelectItem value='Property Management'>Property Management</SelectItem>\n                        <SelectItem value='Resident Management'>Resident Management</SelectItem>\n                        <SelectItem value='Financial Management'>Financial Management</SelectItem>\n                        <SelectItem value='Maintenance & Requests'>\n                          Maintenance & Requests\n                        </SelectItem>\n                        <SelectItem value='Document Management'>Document Management</SelectItem>\n                        <SelectItem value='Communication'>Communication</SelectItem>\n                        <SelectItem value='AI & Automation'>AI & Automation</SelectItem>\n                        <SelectItem value='Compliance & Security'>Compliance & Security</SelectItem>\n                        <SelectItem value='Analytics & Reporting'>Analytics & Reporting</SelectItem>\n                        <SelectItem value='Integration & API'>Integration & API</SelectItem>\n                        <SelectItem value='Infrastructure & Performance'>\n                          Infrastructure & Performance\n                        </SelectItem>\n                        <SelectItem value='Website'>Website</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                <div>\n                  <Label htmlFor='featureDescription'>Feature Description</Label>\n                  <Textarea\n                    id='featureDescription'\n                    placeholder='Describe what this feature will do'\n                    value={formData.featureDescription || ''}\n                    onChange={(e) => updateFormData('featureDescription', e.target.value)}\n                  />\n                </div>\n\n                {/* Strategic Path Toggle */}\n                <div className='flex items-center gap-3 pt-2'>\n                  <Label htmlFor='strategic-path' className='text-sm font-medium'>\n                    Strategic Path:\n                  </Label>\n                  <Switch\n                    id='strategic-path'\n                    checked={formData.isStrategicPath}\n                    onCheckedChange={(checked: boolean) =>\n                      updateFormData('isStrategicPath', checked)\n                    }\n                    className='scale-90'\n                  />\n                  <span className='text-xs text-gray-500'>\n                    Mark this feature as part of the strategic roadmap\n                  </span>\n                </div>\n              </div>\n            )}\n\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>\n              {/* Business Requirements */}\n              <div className='space-y-4'>\n                <h3 className='text-lg font-semibold'>Business Requirements</h3>\n\n                <div>\n                  <Label htmlFor='businessObjective'>Business Objective *</Label>\n                  <Textarea\n                    id='businessObjective'\n                    placeholder='What problem does this feature solve? What business value does it provide?'\n                    value={formData.businessObjective}\n                    onChange={(e) => updateFormData('businessObjective', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='targetUsers'>Target Users *</Label>\n                  <Input\n                    id='targetUsers'\n                    placeholder='e.g., Property managers, Tenants, Owners'\n                    value={formData.targetUsers}\n                    onChange={(e) => updateFormData('targetUsers', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='successMetrics'>Success Metrics</Label>\n                  <Textarea\n                    id='successMetrics'\n                    placeholder='How will we measure success? What are the KPIs?'\n                    value={formData.successMetrics}\n                    onChange={(e) => updateFormData('successMetrics', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='priority'>Development Priority</Label>\n                  <Select\n                    value={formData.priority}\n                    onValueChange={(_value: string) => updateFormData('priority', _value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder='Select priority level' />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value='critical'>Critical</SelectItem>\n                      <SelectItem value='high'>High</SelectItem>\n                      <SelectItem value='medium'>Medium</SelectItem>\n                      <SelectItem value='low'>Low</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor='timeline'>Expected Timeline</Label>\n                  <Input\n                    id='timeline'\n                    placeholder='e.g., 2 weeks, 1 month, Next sprint'\n                    value={formData.timeline}\n                    onChange={(e) => updateFormData('timeline', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              {/* Technical Requirements */}\n              <div className='space-y-4'>\n                <h3 className='text-lg font-semibold'>Technical Requirements</h3>\n\n                <div>\n                  <Label htmlFor='complexity'>Complexity Assessment</Label>\n                  <Select\n                    value={formData.complexity}\n                    onValueChange={(_value: string) => updateFormData('complexity', _value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder='Assess technical complexity' />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value='simple'>Simple (1-3 days)</SelectItem>\n                      <SelectItem value='medium'>Medium (1-2 weeks)</SelectItem>\n                      <SelectItem value='complex'>Complex (2-4 weeks)</SelectItem>\n                      <SelectItem value='very-complex'>Very Complex (1+ months)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor='dependencies'>Dependencies</Label>\n                  <Textarea\n                    id='dependencies'\n                    placeholder='What other features, APIs, or systems does this depend on?'\n                    value={formData.dependencies}\n                    onChange={(e) => updateFormData('dependencies', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='dataRequirements'>Data Requirements</Label>\n                  <Textarea\n                    id='dataRequirements'\n                    placeholder='What data needs to be stored, modified, or accessed?'\n                    value={formData.dataRequirements}\n                    onChange={(e) => updateFormData('dataRequirements', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='integrationNeeds'>Integration Needs</Label>\n                  <Textarea\n                    id='integrationNeeds'\n                    placeholder='External APIs, services, or third-party integrations needed'\n                    value={formData.integrationNeeds}\n                    onChange={(e) => updateFormData('integrationNeeds', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='securityConsiderations'>Security Considerations</Label>\n                  <Textarea\n                    id='securityConsiderations'\n                    placeholder='Authentication, authorization, data privacy concerns'\n                    value={formData.securityConsiderations}\n                    onChange={(e) => updateFormData('securityConsiderations', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* User Experience Section */}\n            <div className='space-y-4'>\n              <h3 className='text-lg font-semibold'>User Experience</h3>\n              <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                <div>\n                  <Label htmlFor='userFlow'>User Flow *</Label>\n                  <Textarea\n                    id='userFlow'\n                    placeholder='Describe the step-by-step user interaction with this feature'\n                    value={formData.userFlow}\n                    onChange={(e) => updateFormData('userFlow', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='uiRequirements'>UI Requirements</Label>\n                  <Textarea\n                    id='uiRequirements'\n                    placeholder='Specific UI components, layouts, or visual requirements'\n                    value={formData.uiRequirements}\n                    onChange={(e) => updateFormData('uiRequirements', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor='accessibilityNeeds'>Accessibility Needs</Label>\n                <Input\n                  id='accessibilityNeeds'\n                  placeholder='Screen reader support, keyboard navigation, color contrast'\n                  value={formData.accessibilityNeeds}\n                  onChange={(e) => updateFormData('accessibilityNeeds', e.target.value)}\n                />\n              </div>\n            </div>\n\n            {/* Quality & Performance Section */}\n            <div className='space-y-4'>\n              <h3 className='text-lg font-semibold'>Quality & Performance</h3>\n              <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                <div>\n                  <Label htmlFor='performanceRequirements'>Performance Requirements</Label>\n                  <Textarea\n                    id='performanceRequirements'\n                    placeholder='Load times, data processing speed, scalability needs'\n                    value={formData.performanceRequirements}\n                    onChange={(e) => updateFormData('performanceRequirements', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor='testingStrategy'>Testing Strategy</Label>\n                  <Textarea\n                    id='testingStrategy'\n                    placeholder='Unit tests, integration tests, user acceptance criteria'\n                    value={formData.testingStrategy}\n                    onChange={(e) => updateFormData('testingStrategy', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* RBAC Requirements Section */}\n            <div className='space-y-4'>\n              <h3 className='text-lg font-semibold'>Role-Based Access Control (RBAC)</h3>\n\n              <div className='flex items-center gap-3'>\n                <Label htmlFor='rbacRequired' className='text-sm font-medium'>\n                  Does this feature require RBAC?\n                </Label>\n                <Switch\n                  id='rbacRequired'\n                  checked={formData.rbacRequired}\n                  onCheckedChange={(checked: boolean) => updateFormData('rbacRequired', checked)}\n                />\n                <span className='text-xs text-gray-500'>\n                  Enable role-based access control for this feature\n                </span>\n              </div>\n\n              {formData.rbacRequired && (\n                <div className='bg-yellow-50 p-4 rounded-lg space-y-4'>\n                  <h4 className='font-medium text-yellow-800'>Configure Role Permissions</h4>\n                  <p className='text-sm text-yellow-700'>\n                    For each role, specify read/write permissions and organizational limitations.\n                  </p>\n\n                  {Object.entries(formData.rbacRoles).map(([role, permissions]) => (\n                    <div key={role} className='bg-white p-3 rounded border'>\n                      <div className='flex items-center justify-between mb-2'>\n                        <h5 className='font-medium capitalize text-gray-900'>\n                          {role.replace('_', ' ')}\n                        </h5>\n                      </div>\n\n                      <div className='grid grid-cols-1 md:grid-cols-3 gap-3'>\n                        <div className='flex items-center gap-2'>\n                          <input\n                            type='checkbox'\n                            id={`${role}-read`}\n                            checked={permissions.read}\n                            onChange={(e) => {\n                              const newRoles = { ...formData.rbacRoles };\n                              newRoles[role as keyof typeof formData.rbacRoles].read =\n                                e.target.checked;\n                              updateFormData('rbacRoles', newRoles);\n                            }}\n                            className='rounded'\n                          />\n                          <Label htmlFor={`${role}-read`} className='text-sm'>\n                            Read Access\n                          </Label>\n                        </div>\n\n                        <div className='flex items-center gap-2'>\n                          <input\n                            type='checkbox'\n                            id={`${role}-write`}\n                            checked={permissions.write}\n                            onChange={(e) => {\n                              const newRoles = { ...formData.rbacRoles };\n                              newRoles[role as keyof typeof formData.rbacRoles].write =\n                                e.target.checked;\n                              updateFormData('rbacRoles', newRoles);\n                            }}\n                            className='rounded'\n                          />\n                          <Label htmlFor={`${role}-write`} className='text-sm'>\n                            Write Access\n                          </Label>\n                        </div>\n\n                        <div>\n                          <Input\n                            placeholder='Organizational limitations'\n                            value={permissions.organizationalLimitation}\n                            onChange={(e) => {\n                              const newRoles = { ...formData.rbacRoles };\n                              newRoles[\n                                role as keyof typeof formData.rbacRoles\n                              ].organizationalLimitation = e.target.value;\n                              updateFormData('rbacRoles', newRoles);\n                            }}\n                            className='text-xs'\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Additional Notes */}\n            <div>\n              <Label htmlFor='additionalNotes'>Additional Notes</Label>\n              <Textarea\n                id='additionalNotes'\n                placeholder='Any other requirements, constraints, or considerations'\n                value={formData.additionalNotes}\n                onChange={(e) => updateFormData('additionalNotes', e.target.value)}\n              />\n            </div>\n\n            {/* File Attachments */}\n            <div className=\"space-y-3 border-t pt-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <Paperclip className=\"w-4 h-4 text-gray-500\" />\n                  <Label className=\"text-sm font-medium\">Supporting Documents</Label>\n                  <span className=\"text-xs text-gray-500\">\n                    (Optional - Mockups, wireframes, screenshots, requirements docs)\n                  </span>\n                </div>\n                <SharedUploader\n                  onDocumentChange={(file, extractedText) => {\n                    if (file) {\n                      handleFilesSelect([file]);\n                    }\n                  }}\n                  allowedFileTypes={['image/*', 'application/pdf', '.doc', '.docx', '.txt', '.fig', '.sketch']}\n                  maxFileSize={25}\n                  showCamera={true}\n                  compact={true}\n                  placeholder=\"Upload wireframes, mockups, or requirements\"\n                />\n              </div>\n              {attachedFiles.length > 0 && (\n                <div className=\"space-y-2\">\n                  <p className=\"text-xs text-gray-600\">\n                    Selected files ({attachedFiles.length}):\n                  </p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {attachedFiles.map((file, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center gap-1 px-2 py-1 bg-gray-100 rounded text-xs\"\n                      >\n                        <span className=\"truncate max-w-[100px]\">{file.name}</span>\n                        <button\n                          onClick={() => setAttachedFiles(prev => prev.filter((_, i) => i !== index))}\n                          className=\"text-gray-500 hover:text-red-500\"\n                          type=\"button\"\n                        >\n                          ×\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className='space-y-4'>\n            <div className='bg-gray-50 p-4 rounded-lg'>\n              <div className='flex items-center justify-between mb-2'>\n                <p className='text-sm text-gray-600'>\n                  Generated development prompt for{' '}\n                  <strong>{feature?.name || formData.featureName || 'New Feature'}</strong>\n                </p>\n                <div className='flex gap-2'>\n                  <Button onClick={copyPrompt} size='sm' variant='outline'>\n                    <Copy className='h-4 w-4 mr-1' />\n                    Copy Prompt\n                  </Button>\n\n                  {feature?.id && (\n                    <Button\n                      onClick={() =>\n                        savePromptMutation.mutate({\n                          featureId: feature.id,\n                          prompt: generatedPrompt,\n                          title: `Development Prompt: ${feature.name}`,\n                        })\n                      }\n                      size='sm'\n                      variant='outline'\n                      disabled={savePromptMutation.isPending}\n                      className='bg-green-50 border-green-200 text-green-700 hover:bg-green-100'\n                    >\n                      <Save className='h-4 w-4 mr-1' />\n                      {savePromptMutation.isPending ? 'Saving...' : 'Save as Task'}\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className='bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm max-h-96 overflow-y-auto'>\n              <pre className='whitespace-pre-wrap'>{generatedPrompt}</pre>\n            </div>\n          </div>\n        )}\n\n        <DialogFooter className='flex justify-between'>\n          <div className='flex items-center gap-2'>\n            <Button\n              variant='outline'\n              onClick={integrateToRoadmap}\n              disabled={\n                createFeatureMutation.isPending || (isNewFeature && !formData.featureName.trim())\n              }\n              className='bg-blue-50 border-blue-200 text-blue-700 hover:bg-blue-100'\n            >\n              <Plus className='h-4 w-4 mr-2' />\n              {createFeatureMutation.isPending ? 'Integrating...' : 'Integrate to Roadmap'}\n            </Button>\n\n            {lastSaved && step === 'form' && (\n              <Button\n                variant='ghost'\n                size='sm'\n                onClick={clearDraft}\n                className='text-red-600 hover:text-red-700'\n              >\n                <Trash2 className='h-4 w-4 mr-1' />\n                Clear Draft\n              </Button>\n            )}\n          </div>\n\n          <div className='flex gap-2'>\n            {step === 'form' && (\n              <Button\n                onClick={saveDraft}\n                variant='outline'\n                className='bg-green-50 border-green-200 text-green-700 hover:bg-green-100'\n              >\n                <Save className='h-4 w-4 mr-2' />\n                Save Progress\n              </Button>\n            )}\n\n            {step === 'prompt' && (\n              <Button variant='outline' onClick={() => setStep('form')}>\n                Back to Form\n              </Button>\n            )}\n\n            <Button\n              onClick={generatePrompt}\n              disabled={\n                !formData.businessObjective ||\n                !formData.targetUsers ||\n                !formData.userFlow ||\n                (isNewFeature && !formData.featureName.trim())\n              }\n              className='flex items-center gap-2'\n            >\n              <Zap className='h-4 w-4' />\n              {step === 'form' ? 'Generate Prompt' : 'Regenerate'}\n            </Button>\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"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","ignoreList":[]}