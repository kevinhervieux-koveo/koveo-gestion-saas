{"file":"/home/runner/workspace/node_modules/react-day-picker/dist/cjs/helpers/getInitialMonth.js","mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C;;;;;;;;;;GAUG;AACH,SAAS,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO;IACrD,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,EAAE,cAAc,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;IACpF,IAAI,YAAY,GAAG,KAAK,IAAI,YAAY,IAAI,KAAK,CAAC;IAClD,MAAM,EAAE,0BAA0B,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;IACxE,IAAI,MAAM;QACN,0BAA0B,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE,CAAC;QACxE,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;QACzC,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IACD,IAAI,QAAQ,IAAI,0BAA0B,CAAC,YAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACrE,YAAY,GAAG,QAAQ,CAAC;IAC5B,CAAC;IACD,OAAO,YAAY,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/react-day-picker/dist/cjs/helpers/getInitialMonth.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInitialMonth = getInitialMonth;\n/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nfunction getInitialMonth(props, navStart, navEnd, dateLib) {\n    const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1, } = props;\n    let initialMonth = month || defaultMonth || today;\n    const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n    if (navEnd &&\n        differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n        const offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(navEnd, offset);\n    }\n    if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n        initialMonth = navStart;\n    }\n    return startOfMonth(initialMonth);\n}\n"],"version":3}