{"file":"/home/runner/workspace/client/src/components/hoc/withHierarchicalSelection.tsx","mappings":";;;;;AAsDA,8DA+UC;;AArYD,kDAA0B;AAC1B,mCAAgD;AAChD,uDAAiD;AACjD,qEAAqF;AACrF,uDAAoD;AACpD,mDAAgD;AAChD,+CAAyC;AACzC,uDAAmD;AA2CnD;;;GAGG;AACH,SAAgB,yBAAyB,CACvC,gBAAyD,EACzD,MAAuB;IAEvB,OAAO,SAAS,4BAA4B,CAAC,KAAQ;QACnD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,IAAA,oBAAW,GAAE,CAAC;QAC9C,MAAM,MAAM,GAAG,IAAA,kBAAS,GAAE,CAAC;QAC3B,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,0BAAW,GAAE,CAAC;QAE5B,wCAAwC;QACxC,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;YACnB,gCAAgC;QAClC,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAEvB,sDAAsD;QACtD,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,cAAc,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACrD,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC7C,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAE/C,oCAAoC;QACpC,MAAM,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;QAIpG,oCAAoC;QACpC,MAAM,QAAQ,GAAG,CAAC,OAAsC,EAAE,EAAE;YAC1D,gCAAgC;YAChC,MAAM,mBAAmB,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACjF,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,mBAAmB,CAAC,CAAC;YAE3D,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;gBAC/C,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;oBACnB,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACxB,CAAC;qBAAM,CAAC;oBACN,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;YACvC,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAI,SAAS,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAEjE,WAAW,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;QAEF,sBAAsB;QACtB,MAAM,EACJ,IAAI,EAAE,aAAa,GAAG,EAAE,EACxB,SAAS,EAAE,sBAAsB,EAClC,GAAG,IAAA,sBAAQ,EAAiB;YAC3B,QAAQ,EAAE,CAAC,6BAA6B,CAAC;YACzC,OAAO,EAAE,YAAY,KAAK,cAAc;SACzC,CAAC,CAAC;QAEH,yEAAyE;QACzE,MAAM,EACJ,IAAI,EAAE,cAAc,GAAG,EAAE,EACzB,SAAS,EAAE,uBAAuB,EACnC,GAAG,IAAA,sBAAQ,EAAyB;YACnC,QAAQ,EAAE,CAAC,oCAAoC,CAAC;YAChD,OAAO,EAAE,YAAY,KAAK,cAAc,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC;YACpE,OAAO,EAAE,KAAK,IAAI,EAAE;gBAClB,MAAM,MAAM,GAA2B,EAAE,CAAC;gBAE1C,6CAA6C;gBAC7C,KAAK,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;oBAChC,IAAI,CAAC;wBACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,sBAAsB,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC;wBACvE,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC;4BAChB,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;4BACxC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;wBACpC,CAAC;6BAAM,CAAC;4BACN,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;wBACrB,CAAC;oBACH,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,OAAO,CAAC,KAAK,CAAC,0CAA0C,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;wBAC1E,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC;gBACH,CAAC;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC;SACF,CAAC,CAAC;QAEH,8EAA8E;QAC9E,MAAM,EACJ,IAAI,EAAE,SAAS,GAAG,EAAE,EACpB,SAAS,EAAE,kBAAkB,EAC9B,GAAG,IAAA,sBAAQ,EAAa;YACvB,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,oBAAoB,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,yBAAyB,CAAC;YAC5G,OAAO,EAAE,KAAK,IAAI,EAAE;gBAClB,MAAM,GAAG,GAAG,cAAc;oBACxB,CAAC,CAAC,sBAAsB,cAAc,YAAY;oBAClD,CAAC,CAAC,yBAAyB,CAAC;gBAE9B,kDAAkD;gBAClD,MAAM,kBAAkB,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC9E,MAAM,OAAO,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,yBAAyB,CAAC,CAAC,CAAC,GAAG,CAAC;gBAE3E,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;gBACtC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;oBACjB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;gBAC/C,CAAC;gBACD,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC;YACD,OAAO,EAAE,CAAC,YAAY,KAAK,UAAU,IAAI,YAAY,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;YAC5H,SAAS,EAAE,CAAC;SACb,CAAC,CAAC;QAEH,mBAAmB;QACnB,MAAM,EACJ,IAAI,EAAE,UAAU,GAAG,EAAE,EACrB,SAAS,EAAE,mBAAmB,EAC/B,GAAG,IAAA,sBAAQ,EAAc;YACxB,QAAQ,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,YAAY,CAAC;YACtD,OAAO,EAAE,YAAY,KAAK,WAAW,IAAI,CAAC,CAAC,UAAU;SACtD,CAAC,CAAC;QAEH,wBAAwB;QACxB,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;YACnB,IAAI,YAAY,KAAK,cAAc,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBACrF,wCAAwC;gBACxC,QAAQ,CAAC,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAChD,OAAO;YACT,CAAC;YAED,IAAI,YAAY,KAAK,UAAU,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;gBACzE,8DAA8D;gBAC9D,QAAQ,CAAC,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACtE,OAAO;YACT,CAAC;YAED,IAAI,YAAY,KAAK,WAAW,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBAC5E,0EAA0E;gBAC1E,QAAQ,CAAC,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC9F,OAAO;YACT,CAAC;QACH,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;QAEvH,mBAAmB;QACnB,MAAM,eAAe,GAAG,CAAC,EAAU,EAAE,EAAE;YACrC,IAAI,YAAY,KAAK,cAAc,EAAE,CAAC;gBACpC,QAAQ,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;YACjC,CAAC;iBAAM,IAAI,YAAY,KAAK,UAAU,EAAE,CAAC;gBACvC,gDAAgD;gBAChD,QAAQ,CAAC,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;YAC3D,CAAC;iBAAM,IAAI,YAAY,KAAK,WAAW,EAAE,CAAC;gBACxC,8DAA8D;gBAC9D,QAAQ,CAAC,EAAE,YAAY,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;YAClF,CAAC;QACH,CAAC,CAAC;QAEF,yBAAyB;QACzB,MAAM,UAAU,GAAG,GAAG,EAAE;YACtB,IAAI,YAAY,KAAK,UAAU,EAAE,CAAC;gBAChC,QAAQ,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YACpE,CAAC;iBAAM,IAAI,YAAY,KAAK,WAAW,EAAE,CAAC;gBACxC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YAChD,CAAC;QACH,CAAC,CAAC;QAEF,2BAA2B;QAC3B,IAAI,YAAY,KAAK,cAAc,EAAE,CAAC;YACpC,MAAM,KAAK,GAAwB,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACzD,MAAM,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAClD,MAAM,YAAY,GAAG,aAAa,GAAG,CAAC,CAAC;gBAEvC,OAAO;oBACL,EAAE,EAAE,GAAG,CAAC,EAAE;oBACV,IAAI,EAAE,GAAG,CAAC,IAAI;oBACd,OAAO,EAAE,YAAY;wBACnB,CAAC,CAAC,GAAG,aAAa,YAAY,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;wBAC9D,CAAC,CAAC,wBAAwB;oBAC5B,IAAI,EAAE,cAAuB;oBAC7B,QAAQ,EAAE,CAAC,YAAY;oBACvB,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc;iBAC1D,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IAAC,KAAK,EAAE,CAAC,CAAC,iBAAwB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,oBAA2B,CAAC,GAAI,EACxF,gCAAK,SAAS,EAAC,0BAA0B,YACvC,uBAAC,6BAAa,IACZ,KAAK,EAAC,EAAE,EACR,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,eAAe,EAC7B,MAAM,EAAE,IAAI,EACZ,SAAS,EAAE,sBAAsB,IAAI,uBAAuB,GAC5D,GACE,IACF,CACP,CAAC;QACJ,CAAC;QAED,IAAI,YAAY,KAAK,UAAU,EAAE,CAAC;YAChC,MAAM,KAAK,GAAwB,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC5D,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACf,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,IAAI,EAAE,UAAU;aACjB,CAAC,CAAC,CAAC;YAEJ,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IAAC,KAAK,EAAE,CAAC,CAAC,iBAAwB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAuB,CAAC,GAAI,EAGnF,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CACxE,gCAAK,SAAS,EAAC,gBAAgB,YAC7B,wBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,OAAO,EAAE,UAAU,EACnB,SAAS,EAAC,yBAAyB,iBACvB,6BAA6B,aAEzC,uBAAC,wBAAS,IAAC,SAAS,EAAC,SAAS,GAAG,oBAE1B,GACL,CACP,EAED,gCAAK,SAAS,EAAC,0BAA0B,YACvC,uBAAC,6BAAa,IACZ,KAAK,EAAC,EAAE,EACR,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,eAAe,EAC7B,MAAM,EAAE,IAAI,EACZ,SAAS,EAAE,kBAAkB,GAC7B,GACE,IACF,CACP,CAAC;QACJ,CAAC;QAED,IAAI,YAAY,KAAK,WAAW,EAAE,CAAC;YACjC,MAAM,KAAK,GAAwB,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBAC9D,EAAE,EAAE,SAAS,CAAC,EAAE;gBAChB,IAAI,EAAE,GAAG,CAAC,CAAC,MAAa,CAAC,IAAI,SAAS,CAAC,UAAU,EAAE;gBACnD,OAAO,EAAE,SAAS,CAAC,YAAY;gBAC/B,IAAI,EAAE,WAAW;aAClB,CAAC,CAAC,CAAC;YAEJ,4DAA4D;YAC5D,MAAM,kBAAkB,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;YAEzF,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IAAC,KAAK,EAAE,CAAC,CAAC,iBAAwB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,iBAAwB,CAAC,GAAI,EAGpF,kBAAkB,IAAI,CACrB,gCAAK,SAAS,EAAC,gBAAgB,YAC7B,wBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,OAAO,EAAE,UAAU,EACnB,SAAS,EAAC,yBAAyB,iBACvB,yBAAyB,aAErC,uBAAC,wBAAS,IAAC,SAAS,EAAC,SAAS,GAAG,gBAE1B,GACL,CACP,EAED,gCAAK,SAAS,EAAC,0BAA0B,YACvC,uBAAC,6BAAa,IACZ,KAAK,EAAC,EAAE,EACR,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,eAAe,EAC7B,MAAM,EAAE,IAAI,EACZ,SAAS,EAAE,mBAAmB,GAC9B,GACE,IACF,CACP,CAAC;QACJ,CAAC;QAED,sEAAsE;QACtE,kCAAkC;QAClC,MAAM,sBAAsB,GAAG,GAAG,EAAE;YAClC,2FAA2F;YAC3F,oEAAoE;YACpE,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACjH,OAAO;oBACL,cAAc,EAAE,IAAI;oBACpB,eAAe,EAAE,UAAU;oBAC3B,MAAM,EAAE,GAAG,EAAE;wBACX,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACxC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;wBAC7C,WAAW,CAAC,QAAQ,CAAC,CAAC;oBACxB,CAAC;iBACF,CAAC;YACJ,CAAC;YAED,uEAAuE;YACvE,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC;gBAChF,OAAO;oBACL,cAAc,EAAE,IAAI;oBACpB,eAAe,EAAE,UAAU;oBAC3B,MAAM,EAAE,GAAG,EAAE;wBACX,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChD,CAAC;iBACF,CAAC;YACJ,CAAC;YAED,iDAAiD;YACjD,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,EAAE,CAAC;gBAC5F,OAAO;oBACL,cAAc,EAAE,IAAI;oBACpB,eAAe,EAAE,cAAc;oBAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;iBAChF,CAAC;YACJ,CAAC;YAED,OAAO;gBACL,cAAc,EAAE,KAAK;gBACrB,eAAe,EAAE,SAAS;gBAC1B,MAAM,EAAE,SAAS;aAClB,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,YAAY,GAAG,sBAAsB,EAAE,CAAC;QAE9C,OAAO,CACL,uBAAC,gBAAgB,OACX,KAAK,EACT,cAAc,EAAE,cAAc,IAAI,SAAS,EAC3C,UAAU,EAAE,UAAU,IAAI,SAAS,EACnC,WAAW,EAAE,WAAW,IAAI,SAAS,KACjC,YAAY,GAChB,CACH,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,SAAS,eAAe,CACtB,SAAwD,EACxD,GAA6F;IAE7F,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC;IAExD,6CAA6C;IAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC1C,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAE3B,IAAI,KAAK,KAAK,cAAc,IAAI,CAAC,cAAc,EAAE,CAAC;YAChD,OAAO,cAAc,CAAC;QACxB,CAAC;QAED,4DAA4D;QAC5D,IAAI,KAAK,KAAK,UAAU,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,gEAAgE;YAChE,IAAI,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC1D,OAAO,cAAc,CAAC;YACxB,CAAC;YACD,+CAA+C;YAC/C,OAAO,UAAU,CAAC;QACpB,CAAC;QAED,IAAI,KAAK,KAAK,WAAW,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,8DAA8D;YAC9D,IAAI,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC1D,OAAO,cAAc,CAAC;YACxB,CAAC;YACD,IAAI,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClD,OAAO,UAAU,CAAC;YACpB,CAAC;YACD,OAAO,WAAW,CAAC;QACrB,CAAC;IACH,CAAC;IAED,2DAA2D;IAC3D,OAAO,UAAU,CAAC;AACpB,CAAC","names":[],"sources":["/home/runner/workspace/client/src/components/hoc/withHierarchicalSelection.tsx"],"sourcesContent":["import React from 'react';\nimport { useLocation, useSearch } from 'wouter';\nimport { useQuery } from '@tanstack/react-query';\nimport { SelectionGrid, SelectionGridItem } from '@/components/common/SelectionGrid';\nimport { Header } from '@/components/layout/header';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\n\n/**\n * Configuration for the hierarchical selection flow\n */\ninterface HierarchyConfig {\n  hierarchy: ('organization' | 'building' | 'residence')[];\n}\n\n/**\n * Props passed to the wrapped component with selected IDs and back navigation\n */\ninterface HierarchyProps {\n  organizationId?: string;\n  buildingId?: string;\n  residenceId?: string;\n  // Back navigation props\n  showBackButton?: boolean;\n  backButtonLabel?: string;\n  onBack?: () => void;\n}\n\n/**\n * API data structures\n */\ninterface Organization {\n  id: string;\n  name: string;\n  description: string;\n}\n\ninterface Building {\n  id: string;\n  name: string;\n  address: string;\n}\n\ninterface Residence {\n  id: string;\n  unitNumber: string;\n  buildingName: string;\n}\n\n/**\n * Higher-Order Component for hierarchical selection flow\n * Handles Organization → Building → Residence selection logic\n */\nexport function withHierarchicalSelection<T extends object>(\n  WrappedComponent: React.ComponentType<T & HierarchyProps>,\n  config: HierarchyConfig\n) {\n  return function HierarchicalSelectionWrapper(props: T) {\n    const [location, setLocation] = useLocation();\n    const search = useSearch();\n    const { t } = useLanguage();\n    \n    // Force re-render when location changes\n    React.useEffect(() => {\n      // Location effect for debugging\n    }, [location, search]);\n    \n    // Parse URL query parameters using wouter's useSearch\n    const urlParams = new URLSearchParams(search);\n    const organizationId = urlParams.get('organization');\n    const buildingId = urlParams.get('building');\n    const residenceId = urlParams.get('residence');\n\n    // Determine current selection level\n    const currentLevel = getCurrentLevel(config.hierarchy, { organizationId, buildingId, residenceId });\n    \n    \n    \n    // Navigate to update URL parameters\n    const navigate = (updates: Record<string, string | null>) => {\n      // Start with current URL params\n      const currentSearchParams = location.includes('?') ? location.split('?')[1] : '';\n      const newParams = new URLSearchParams(currentSearchParams);\n      \n      Object.entries(updates).forEach(([key, value]) => {\n        if (value === null) {\n          newParams.delete(key);\n        } else {\n          newParams.set(key, value);\n        }\n      });\n\n      const newSearch = newParams.toString();\n      const basePath = location.split('?')[0];\n      const newUrl = newSearch ? `${basePath}?${newSearch}` : basePath;\n      \n      setLocation(newUrl);\n    };\n\n    // Fetch organizations\n    const {\n      data: organizations = [],\n      isLoading: isLoadingOrganizations\n    } = useQuery<Organization[]>({\n      queryKey: ['/api/users/me/organizations'],\n      enabled: currentLevel === 'organization'\n    });\n\n    // Fetch building counts for each organization when at organization level\n    const {\n      data: buildingCounts = {},\n      isLoading: isLoadingBuildingCounts\n    } = useQuery<Record<string, number>>({\n      queryKey: ['/api/organizations/building-counts'],\n      enabled: currentLevel === 'organization' && organizations.length > 0,\n      queryFn: async () => {\n        const counts: Record<string, number> = {};\n        \n        // Fetch building count for each organization\n        for (const org of organizations) {\n          try {\n            const response = await fetch(`/api/organizations/${org.id}/buildings`);\n            if (response.ok) {\n              const buildings = await response.json();\n              counts[org.id] = buildings.length;\n            } else {\n              counts[org.id] = 0;\n            }\n          } catch (error) {\n            console.error(`Failed to fetch building count for org ${org.id}:`, error);\n            counts[org.id] = 0;\n          }\n        }\n        \n        return counts;\n      }\n    });\n\n    // Fetch buildings (with optional common spaces filter for common-spaces page)\n    const {\n      data: buildings = [],\n      isLoading: isLoadingBuildings\n    } = useQuery<Building[]>({\n      queryKey: organizationId ? ['/api/organizations', organizationId, 'buildings'] : ['/api/users/me/buildings'],\n      queryFn: async () => {\n        const url = organizationId \n          ? `/api/organizations/${organizationId}/buildings`\n          : '/api/users/me/buildings';\n        \n        // Add common spaces filter for common-spaces page\n        const isCommonSpacesPage = window.location.pathname.includes('common-spaces');\n        const fullUrl = isCommonSpacesPage ? `${url}?has_common_spaces=true` : url;\n        \n        const response = await fetch(fullUrl);\n        if (!response.ok) {\n          throw new Error('Failed to fetch buildings');\n        }\n        return response.json();\n      },\n      enabled: (currentLevel === 'building' || currentLevel === 'complete') && (!!organizationId || config.hierarchy.length === 1),\n      staleTime: 0\n    });\n\n    // Fetch residences\n    const {\n      data: residences = [],\n      isLoading: isLoadingResidences\n    } = useQuery<Residence[]>({\n      queryKey: ['/api/buildings', buildingId, 'residences'],\n      enabled: currentLevel === 'residence' && !!buildingId\n    });\n\n    // Auto-forwarding logic\n    React.useEffect(() => {\n      if (currentLevel === 'organization' && organizations.length === 1 && !organizationId) {\n        // Auto-forward if only one organization\n        navigate({ organization: organizations[0].id });\n        return;\n      }\n      \n      if (currentLevel === 'building' && buildings.length === 1 && !buildingId) {\n        // Auto-forward if only one building (preserve organization)  \n        navigate({ organization: organizationId, building: buildings[0].id });\n        return;\n      }\n      \n      if (currentLevel === 'residence' && residences.length === 1 && !residenceId) {\n        // Auto-forward if only one residence (preserve organization and building)\n        navigate({ organization: organizationId, building: buildingId, residence: residences[0].id });\n        return;\n      }\n    }, [organizations.length, buildings.length, residences.length, currentLevel, organizationId, buildingId, residenceId]);\n\n    // Handle selection\n    const handleSelection = (id: string) => {      \n      if (currentLevel === 'organization') {\n        navigate({ organization: id });\n      } else if (currentLevel === 'building') {\n        // Preserve organization when selecting building\n        navigate({ organization: organizationId, building: id });\n      } else if (currentLevel === 'residence') {\n        // Preserve organization and building when selecting residence\n        navigate({ organization: organizationId, building: buildingId, residence: id });\n      }\n    };\n\n    // Handle back navigation\n    const handleBack = () => {\n      if (currentLevel === 'building') {\n        navigate({ organization: null, building: null, residence: null });\n      } else if (currentLevel === 'residence') {\n        navigate({ building: null, residence: null });\n      }\n    };\n\n    // Render selection screens\n    if (currentLevel === 'organization') {\n      const items: SelectionGridItem[] = organizations.map(org => {\n        const buildingCount = buildingCounts[org.id] ?? 0;\n        const hasBuildings = buildingCount > 0;\n        \n        return {\n          id: org.id,\n          name: org.name,\n          details: hasBuildings \n            ? `${buildingCount} building${buildingCount !== 1 ? 's' : ''}` \n            : 'No buildings available',\n          type: 'organization' as const,\n          disabled: !hasBuildings,\n          disabledReason: hasBuildings ? undefined : 'No Buildings'\n        };\n      });\n\n      return (\n        <div className='flex-1 flex flex-col overflow-hidden'>\n          <Header title={t('billsManagement' as any)} subtitle={t('selectOrganization' as any)} />\n          <div className='flex-1 overflow-auto p-6'>\n            <SelectionGrid\n              title=\"\"\n              items={items}\n              onSelectItem={handleSelection}\n              onBack={null}\n              isLoading={isLoadingOrganizations || isLoadingBuildingCounts}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    if (currentLevel === 'building') {\n      const items: SelectionGridItem[] = buildings.map(building => ({\n        id: building.id,\n        name: building.name,\n        details: building.address,\n        type: 'building'\n      }));\n\n      return (\n        <div className='flex-1 flex flex-col overflow-hidden'>\n          <Header title={t('billsManagement' as any)} subtitle={t('selectBuilding' as any)} />\n          \n          {/* Back to Organization Navigation - only show if user has multiple organizations */}\n          {config.hierarchy.includes('organization') && organizations.length > 1 && (\n            <div className=\"px-6 pt-6 pb-0\">\n              <Button\n                variant=\"outline\"\n                onClick={handleBack}\n                className=\"flex items-center gap-2\"\n                data-testid=\"button-back-to-organization\"\n              >\n                <ArrowLeft className=\"w-4 h-4\" />\n                Organization\n              </Button>\n            </div>\n          )}\n          \n          <div className='flex-1 overflow-auto p-6'>\n            <SelectionGrid\n              title=\"\"\n              items={items}\n              onSelectItem={handleSelection}\n              onBack={null}\n              isLoading={isLoadingBuildings}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    if (currentLevel === 'residence') {\n      const items: SelectionGridItem[] = residences.map(residence => ({\n        id: residence.id,\n        name: `${t('unit' as any)} ${residence.unitNumber}`,\n        details: residence.buildingName,\n        type: 'residence'\n      }));\n\n      // Determine if we should show back button to building level\n      const showBackToBuilding = config.hierarchy.includes('building') && buildings.length > 1;\n\n      return (\n        <div className='flex-1 flex flex-col overflow-hidden'>\n          <Header title={t('billsManagement' as any)} subtitle={t('selectResidence' as any)} />\n          \n          {/* Back to Building Navigation - only show if user has multiple buildings */}\n          {showBackToBuilding && (\n            <div className=\"px-6 pt-6 pb-0\">\n              <Button\n                variant=\"outline\"\n                onClick={handleBack}\n                className=\"flex items-center gap-2\"\n                data-testid=\"button-back-to-building\"\n              >\n                <ArrowLeft className=\"w-4 h-4\" />\n                Building\n              </Button>\n            </div>\n          )}\n          \n          <div className='flex-1 overflow-auto p-6'>\n            <SelectionGrid\n              title=\"\"\n              items={items}\n              onSelectItem={handleSelection}\n              onBack={null}\n              isLoading={isLoadingResidences}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    // All required selections are complete - render the wrapped component\n    // Determine back navigation props\n    const getBackNavigationProps = () => {\n      // For residents with building hierarchy, always show back button if they have a buildingId\n      // This means they selected a building and should be able to go back\n      if (config.hierarchy.includes('building') && config.hierarchy.length === 1 && buildingId && buildings.length > 1) {\n        return {\n          showBackButton: true,\n          backButtonLabel: 'Building',\n          onBack: () => {\n            const basePath = location.split('?')[0];\n            window.history.pushState(null, '', basePath);\n            setLocation(basePath);\n          }\n        };\n      }\n      \n      // Check if we should show back to building for multi-level hierarchies\n      if (config.hierarchy.includes('building') && buildings.length > 1 && buildingId) {\n        return {\n          showBackButton: true,\n          backButtonLabel: 'Building',\n          onBack: () => {\n            navigate({ building: null, residence: null });\n          }\n        };\n      }\n      \n      // Check if we should show back to organization  \n      if (config.hierarchy.includes('organization') && organizations.length > 1 && organizationId) {\n        return {\n          showBackButton: true,\n          backButtonLabel: 'Organization',\n          onBack: () => navigate({ organization: null, building: null, residence: null })\n        };\n      }\n      \n      return {\n        showBackButton: false,\n        backButtonLabel: undefined,\n        onBack: undefined\n      };\n    };\n\n    const backNavProps = getBackNavigationProps();\n\n    return (\n      <WrappedComponent\n        {...props}\n        organizationId={organizationId || undefined}\n        buildingId={buildingId || undefined}\n        residenceId={residenceId || undefined}\n        {...backNavProps}\n      />\n    );\n  };\n}\n\n/**\n * Determine the current selection level based on hierarchy and available IDs\n */\nfunction getCurrentLevel(\n  hierarchy: ('organization' | 'building' | 'residence')[],\n  ids: { organizationId: string | null; buildingId: string | null; residenceId: string | null }\n): 'organization' | 'building' | 'residence' | 'complete' {\n  const { organizationId, buildingId, residenceId } = ids;\n\n  // Check each level in the hierarchy in order\n  for (let i = 0; i < hierarchy.length; i++) {\n    const level = hierarchy[i];\n    \n    if (level === 'organization' && !organizationId) {\n      return 'organization';\n    }\n    \n    // For building level, check if we need organization context\n    if (level === 'building' && !buildingId) {\n      // If organization is in hierarchy, we need organizationId first\n      if (hierarchy.includes('organization') && !organizationId) {\n        return 'organization';\n      }\n      // Otherwise, go directly to building selection\n      return 'building';\n    }\n    \n    if (level === 'residence' && !residenceId) {\n      // Need both organization and building if they're in hierarchy\n      if (hierarchy.includes('organization') && !organizationId) {\n        return 'organization';\n      }\n      if (hierarchy.includes('building') && !buildingId) {\n        return 'building';\n      }\n      return 'residence';\n    }\n  }\n\n  // All required levels in the hierarchy have been satisfied\n  return 'complete';\n}"],"version":3}