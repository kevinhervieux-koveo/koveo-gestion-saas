{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/clipboard/paste.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACpE,IAAI,SAAS,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;AAC9D,IAAI,SAAS,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAEtD,KAAK,UAAU,KAAK,CAAC,aAAa;IAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;IACjC,IAAI,kBAAkB,CAAC;IACvB,MAAM,MAAM,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC;IAChK,IAAI,IAAI,CAAC;IACT,MAAM,YAAY,GAAG,CAAC,IAAI,GAAG,OAAO,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,0BAA0B,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,SAAS,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAE,EAAE;QAClO,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;IAChH,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,EAAE;QAClC,aAAa,EAAE,YAAY;KAC9B,CAAC,CAAC;AACP,CAAC;AACD,SAAS,0BAA0B,CAAC,GAAG,EAAE,IAAI;IACzC,MAAM,EAAE,GAAG,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB,OAAO,EAAE,CAAC;AACd,CAAC;AAED,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/clipboard/paste.js"],"sourcesContent":["'use strict';\n\nvar DataTransfer = require('../utils/dataTransfer/DataTransfer.js');\nvar Clipboard = require('../utils/dataTransfer/Clipboard.js');\nvar getWindow = require('../utils/misc/getWindow.js');\n\nasync function paste(clipboardData) {\n    const doc = this.config.document;\n    var _doc_activeElement;\n    const target = (_doc_activeElement = doc.activeElement) !== null && _doc_activeElement !== undefined ? _doc_activeElement : /* istanbul ignore next */ doc.body;\n    var _ref;\n    const dataTransfer = (_ref = typeof clipboardData === 'string' ? getClipboardDataFromString(doc, clipboardData) : clipboardData) !== null && _ref !== undefined ? _ref : await Clipboard.readDataTransferFromClipboard(doc).catch(()=>{\n        throw new Error('`userEvent.paste()` without `clipboardData` requires the `ClipboardAPI` to be available.');\n    });\n    this.dispatchUIEvent(target, 'paste', {\n        clipboardData: dataTransfer\n    });\n}\nfunction getClipboardDataFromString(doc, text) {\n    const dt = DataTransfer.createDataTransfer(getWindow.getWindow(doc));\n    dt.setData('text', text);\n    return dt;\n}\n\nexports.paste = paste;\n"],"version":3}