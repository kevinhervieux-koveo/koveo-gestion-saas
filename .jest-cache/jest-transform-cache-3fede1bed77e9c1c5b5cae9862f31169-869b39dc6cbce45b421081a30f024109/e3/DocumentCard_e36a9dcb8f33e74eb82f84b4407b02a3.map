{"file":"/home/runner/workspace/client/src/components/document-management/DocumentCard.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/document-management/DocumentCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Eye, FileText, Image, File, Calendar, User } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { StandardCard } from '@/components/ui/standard-card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\n\ninterface DocumentCardProps {\n  title: string;\n  documentId: string;\n  onViewClick: (documentId: string) => void;\n  \n  // Optional metadata for enhanced display\n  documentType?: string;\n  description?: string;\n  createdAt?: string;\n  fileSize?: number;\n  mimeType?: string;\n  uploadedBy?: string;\n  isVisibleToTenants?: boolean;\n  \n  // Visual customization\n  className?: string;\n  compact?: boolean;\n  showMetadata?: boolean;\n}\n\n/**\n * DocumentCard - A standardized card component for displaying document summaries\n * Optimized for mobile interactions with large touch targets\n */\nexport function DocumentCard({\n  title,\n  documentId,\n  onViewClick,\n  documentType,\n  description,\n  createdAt,\n  fileSize,\n  mimeType,\n  uploadedBy,\n  isVisibleToTenants,\n  className,\n  compact = false,\n  showMetadata = true\n}: DocumentCardProps) {\n  \n  // Get appropriate icon based on document type/mime type\n  const getDocumentIcon = () => {\n    if (mimeType?.startsWith('image/')) {\n      return <Image className=\"w-5 h-5 text-blue-500\" />;\n    }\n    \n    switch (mimeType) {\n      case 'application/pdf':\n        return <FileText className=\"w-5 h-5 text-red-500\" />;\n      case 'application/msword':\n      case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n        return <FileText className=\"w-5 h-5 text-blue-600\" />;\n      case 'application/vnd.ms-excel':\n      case 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n        return <FileText className=\"w-5 h-5 text-green-600\" />;\n      default:\n        return <File className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  // Format file size for display\n  const formatFileSize = (bytes?: number) => {\n    if (!bytes) return null;\n    const kb = bytes / 1024;\n    if (kb < 1024) return `${kb.toFixed(1)} KB`;\n    const mb = kb / 1024;\n    return `${mb.toFixed(1)} MB`;\n  };\n\n  // Format date for display\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return null;\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Get document type badge color\n  const getTypeColor = (type?: string) => {\n    const colors: Record<string, string> = {\n      'bylaw': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n      'financial': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',\n      'maintenance': 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200',\n      'legal': 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200',\n      'inspection': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',\n      'insurance': 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-200',\n    };\n    return colors[type || ''] || 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200';\n  };\n\n  // Handle card click - entire card is clickable for mobile friendliness\n  const handleCardClick = () => {\n    onViewClick(documentId);\n  };\n\n  // Handle view button click (prevent event bubbling)\n  const handleViewButtonClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onViewClick(documentId);\n  };\n\n  return (\n    <Card \n      className={cn(\n        \"group cursor-pointer transition-all duration-200 hover:shadow-md hover:border-blue-200 dark:hover:border-blue-700\",\n        \"active:scale-[0.98] transform\", // Touch feedback\n        compact ? \"p-3\" : \"\",\n        className\n      )}\n      onClick={handleCardClick}\n      data-testid={`document-card-${documentId}`}\n    >\n      <CardHeader className={cn(\"flex flex-row items-start justify-between space-y-0\", compact ? \"pb-2\" : \"pb-3\")}>\n        <div className=\"flex items-start space-x-3 flex-1 min-w-0\">\n          {/* Document icon */}\n          <div className=\"flex-shrink-0 mt-1\">\n            {getDocumentIcon()}\n          </div>\n          \n          {/* Document info */}\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className={cn(\n              \"text-left leading-tight break-words\",\n              compact ? \"text-sm\" : \"text-base\"\n            )}>\n              {title}\n            </CardTitle>\n            \n            {description && !compact && (\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1 line-clamp-2\">\n                {description}\n              </p>\n            )}\n          </div>\n        </div>\n\n        {/* View button */}\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={handleViewButtonClick}\n          className=\"flex-shrink-0 ml-2 min-h-[36px] min-w-[36px] hover:bg-blue-50 dark:hover:bg-blue-950\"\n          data-testid={`view-document-${documentId}`}\n        >\n          <Eye className=\"w-4 h-4\" />\n          <span className=\"sr-only\">View document</span>\n        </Button>\n      </CardHeader>\n\n      {showMetadata && !compact && (\n        <CardContent className=\"pt-0\">\n          <div className=\"space-y-2\">\n            {/* Document type and visibility badges */}\n            <div className=\"flex flex-wrap gap-2\">\n              {documentType && (\n                <Badge variant=\"secondary\" className={cn(\"text-xs\", getTypeColor(documentType))}>\n                  {documentType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                </Badge>\n              )}\n              \n              {isVisibleToTenants && (\n                <Badge variant=\"outline\" className=\"text-xs border-green-300 text-green-700 dark:border-green-600 dark:text-green-400\">\n                  👥 Visible to Tenants\n                </Badge>\n              )}\n            </div>\n\n            {/* Metadata row */}\n            <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n              <div className=\"flex items-center space-x-4\">\n                {createdAt && (\n                  <div className=\"flex items-center space-x-1\">\n                    <Calendar className=\"w-3 h-3\" />\n                    <span>{formatDate(createdAt)}</span>\n                  </div>\n                )}\n                \n                {uploadedBy && (\n                  <div className=\"flex items-center space-x-1\">\n                    <User className=\"w-3 h-3\" />\n                    <span className=\"truncate max-w-20\">{uploadedBy}</span>\n                  </div>\n                )}\n              </div>\n              \n              {fileSize && (\n                <span className=\"text-gray-400 dark:text-gray-500\">\n                  {formatFileSize(fileSize)}\n                </span>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      )}\n\n      {/* Compact metadata for compact mode */}\n      {showMetadata && compact && (\n        <CardContent className=\"pt-0\">\n          <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center space-x-2\">\n              {documentType && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  {documentType}\n                </Badge>\n              )}\n              {createdAt && <span>{formatDate(createdAt)}</span>}\n            </div>\n            {fileSize && <span>{formatFileSize(fileSize)}</span>}\n          </div>\n        </CardContent>\n      )}\n    </Card>\n  );\n}"],"version":3}