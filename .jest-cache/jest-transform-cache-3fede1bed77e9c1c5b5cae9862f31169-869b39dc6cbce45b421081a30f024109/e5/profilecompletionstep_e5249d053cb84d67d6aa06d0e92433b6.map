{"file":"/home/runner/workspace/client/src/components/auth/steps/profile-completion-step.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/auth/steps/profile-completion-step.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { User, Phone, Globe } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { WizardStepProps } from '../registration-wizard';\n\n/**\n * Interface for profile completion step data.\n * Contains user profile information for registration.\n * Note: Address comes from assigned building/residence, not user profile.\n */\ninterface ProfileCompletionData {\n  firstName: string;\n  lastName: string;\n  phone: string;\n  language: string;\n  dateOfBirth: string;\n  isValid: boolean;\n  error?: string;\n}\n\n/**\n * Profile Completion Step Component.\n *\n * Collects user profile information required for Quebec property management.\n * Includes address validation and bilingual support.\n * @param root0 - The wizard step props.\n * @param root0.data - Current step data.\n * @param root0.onDataChange - Callback when step data changes.\n * @param root0.onValidationChange - Callback when validation status changes.\n * @returns JSX element for the profile completion step.\n */\n/**\n * ProfileCompletionStep function.\n * @param root0\n * @param root0.data\n * @param root0.onDataChange\n * @param root0.onValidationChange\n * @param root0._data\n * @returns Function result.\n */\nexport function ProfileCompletionStep({\n  _data,\n  onDataChange,\n  onValidationChange,\n}: WizardStepProps) {\n  const { t: _t } = useLanguage();\n  const [formData, setFormData] = useState<ProfileCompletionData>({\n    firstName: '',\n    lastName: '',\n    phone: '',\n    language: 'fr',\n    dateOfBirth: '',\n    isValid: false,\n    ..._data,\n  });\n\n  const [touched, setTouched] = useState<{ [_key: string]: boolean }>({});\n\n  // Phone validation function - moved before useEffect to avoid hoisting issues\n  const validatePhone = (phone: string) => {\n    if (!phone) {\n      return false;\n    }\n    // Quebec phone number format validation\n    const phoneRegex = /^(\\+1[-.\\s]?)?(\\(?\\d{3}\\)?[-.\\s]?)?\\d{3}[-.\\s]?\\d{4}$/;\n    return phoneRegex.test(phone);\n  };\n\n  // Validate form whenever relevant fields change\n  useEffect(() => {\n    const requiredFields = ['firstName', 'lastName', 'language'];\n    const hasRequiredFields = requiredFields.every(\n      (field) =>\n        formData[field as keyof ProfileCompletionData] &&\n        String(formData[field as keyof ProfileCompletionData]).trim().length > 0\n    );\n\n    // Phone is optional, but if provided must be valid\n    const isValidPhone = !formData.phone || validatePhone(formData.phone);\n    const isValid = hasRequiredFields && isValidPhone;\n\n    // Only update if validation state actually changed\n    if (formData.isValid !== isValid) {\n      const updatedData = { ...formData, isValid };\n      onDataChange(updatedData);\n      onValidationChange(isValid);\n    }\n  }, [formData.firstName, formData.lastName, formData.language, formData.phone, formData.isValid]);\n\n  const handleInputChange = (field: keyof ProfileCompletionData, _value: string) => {\n    setFormData((prev) => ({\n      ...prev,\n      [field]: _value,\n      _error: undefined,\n    }));\n  };\n\n  const handleBlur = (field: string) => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  const getFieldError = (field: keyof ProfileCompletionData, label: string) => {\n    if (!touched[field]) {\n      return null;\n    }\n\n    const value = formData[field];\n\n    if (['firstName', 'lastName', 'language'].includes(field)) {\n      if (!value || String(value).trim().length === 0) {\n        return `${label} est requis`;\n      }\n    }\n\n    if (field === 'phone' && value && !validatePhone(String(value))) {\n      return 'Format de téléphone invalide (ex: 514-123-4567)';\n    }\n\n    return null;\n  };\n\n  return (\n    <div className='space-y-6 max-w-2xl mx-auto'>\n      <Alert className='border-blue-200 bg-blue-50'>\n        <User className='h-4 w-4 text-blue-600' />\n        <AlertDescription className='text-blue-800'>\n          <strong>Profil utilisateur:</strong> Complétez votre profil pour finaliser votre\n          inscription et accéder aux services de gestion immobilière.\n        </AlertDescription>\n      </Alert>\n\n      <Card>\n        <CardContent className='pt-6 space-y-6'>\n          {/* Personal Information */}\n          <div className='space-y-4'>\n            <h3 className='text-lg font-medium text-gray-900 flex items-center'>\n              <User className='h-5 w-5 mr-2' />\n              Informations personnelles\n            </h3>\n\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n              {/* First Name */}\n              <div className='space-y-2'>\n                <Label htmlFor='firstName' className='text-sm font-medium text-gray-700'>\n                  Prénom *\n                </Label>\n                <Input\n                  id='firstName'\n                  type='text'\n                  value={formData.firstName}\n                  onChange={(e) => handleInputChange('firstName', e.target.value)}\n                  onBlur={() => handleBlur('firstName')}\n                  placeholder='Votre prénom'\n                  className={getFieldError('firstName', 'Prénom') ? 'border-red-500' : ''}\n                />\n                {getFieldError('firstName', 'Prénom') && (\n                  <p className='text-sm text-red-600'>{getFieldError('firstName', 'Prénom')}</p>\n                )}\n              </div>\n\n              {/* Last Name */}\n              <div className='space-y-2'>\n                <Label htmlFor='lastName' className='text-sm font-medium text-gray-700'>\n                  Nom de famille *\n                </Label>\n                <Input\n                  id='lastName'\n                  type='text'\n                  value={formData.lastName}\n                  onChange={(e) => handleInputChange('lastName', e.target.value)}\n                  onBlur={() => handleBlur('lastName')}\n                  placeholder='Votre nom de famille'\n                  className={getFieldError('lastName', 'Nom de famille') ? 'border-red-500' : ''}\n                />\n                {getFieldError('lastName', 'Nom de famille') && (\n                  <p className='text-sm text-red-600'>\n                    {getFieldError('lastName', 'Nom de famille')}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n              {/* Phone */}\n              <div className='space-y-2'>\n                <Label htmlFor='phone' className='text-sm font-medium text-gray-700'>\n                  Téléphone (optionnel)\n                </Label>\n                <div className='relative'>\n                  <Phone className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n                  <Input\n                    id='phone'\n                    type='tel'\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\n                    onBlur={() => handleBlur('phone')}\n                    placeholder='514-123-4567'\n                    className={`pl-10 ${getFieldError('phone', 'Téléphone') ? 'border-red-500' : ''}`}\n                  />\n                </div>\n                {getFieldError('phone', 'Téléphone') && (\n                  <p className='text-sm text-red-600'>{getFieldError('phone', 'Téléphone')}</p>\n                )}\n              </div>\n\n              {/* Language */}\n              <div className='space-y-2'>\n                <Label htmlFor='language' className='text-sm font-medium text-gray-700'>\n                  Langue préférée *\n                </Label>\n                <Select\n                  value={formData.language}\n                  onValueChange={(_value) => handleInputChange('language', _value)}\n                >\n                  <SelectTrigger className='w-full'>\n                    <Globe className='h-4 w-4 mr-2 text-gray-400' />\n                    <SelectValue placeholder='Choisir une langue' />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value='fr'>Français</SelectItem>\n                    <SelectItem value='en'>English</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </div>\n\n          {/* Quebec Compliance Notice */}\n          <div className='bg-blue-50 border border-blue-200 p-4 rounded-lg'>\n            <h4 className='text-sm font-medium text-blue-900 mb-2'>\n              🛡️ Protection de la vie privée\n            </h4>\n            <p className='text-xs text-blue-800'>\n              Vos informations personnelles sont collectées et utilisées uniquement pour les\n              services de gestion immobilière, conformément à la Loi 25 du Québec. Vous pouvez\n              demander l'accès, la correction ou la suppression de vos données à tout moment en\n              contactant l'administrateur.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"version":3}