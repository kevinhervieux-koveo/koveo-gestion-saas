{"file":"/home/runner/workspace/client/src/utils/password-validation.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/utils/password-validation.ts"],"sourcesContent":["/**\n * Password validation utilities with strength indicators for secure registration.\n * Implements Quebec-compliant security standards for property management systems.\n */\n\n/**\n *\n */\nexport interface PasswordStrengthResult {\n  score: number; // 0-4 (weak to very strong)\n  feedback: string[];\n  isValid: boolean;\n}\n\n/**\n *\n */\nexport interface PasswordCriteria {\n  minLength: boolean;\n  hasUpperCase: boolean;\n  hasLowerCase: boolean;\n  hasNumbers: boolean;\n  hasSymbols: boolean;\n  noCommonPatterns: boolean;\n}\n\n/**\n * Common weak passwords and patterns to avoid.\n */\nconst COMMON_PATTERNS = [\n  'password',\n  '123456',\n  'admin',\n  'user',\n  'test',\n  'demo',\n  'qwerty',\n  'azerty',\n  'letmein',\n  'welcome',\n  'monkey',\n  'dragon',\n  'master',\n  'shadow',\n  'superman',\n  'batman',\n];\n\n/**\n * Validates password strength and provides detailed feedback.\n * @param password\n */\n/**\n * ValidatePasswordStrength function.\n * @param password\n * @returns Function result.\n */\nexport function validatePasswordStrength(\n  password: string | undefined | null\n): PasswordStrengthResult {\n  // Safety guard: handle undefined/null inputs\n  if (!password || typeof password !== 'string') {\n    return {\n      score: 0,\n      feedback: ['Veuillez entrer un mot de passe'],\n      isValid: false,\n    };\n  }\n  const criteria = getPasswordCriteria(password);\n  const feedback: string[] = [];\n  let score = 0;\n\n  // Check minimum length (8+ characters)\n  if (!criteria.minLength) {\n    feedback.push('Mot de passe doit contenir au moins 8 caractères');\n  } else {\n    score += 1;\n  }\n\n  // Check character variety\n  if (!criteria.hasUpperCase) {\n    feedback.push('Ajouter au moins une lettre majuscule');\n  } else {\n    score += 0.5;\n  }\n\n  if (!criteria.hasLowerCase) {\n    feedback.push('Ajouter au moins une lettre minuscule');\n  } else {\n    score += 0.5;\n  }\n\n  if (!criteria.hasNumbers) {\n    feedback.push('Ajouter au moins un chiffre');\n  } else {\n    score += 1;\n  }\n\n  if (!criteria.hasSymbols) {\n    feedback.push('Ajouter au moins un symbole (@, #, !, etc.)');\n  } else {\n    score += 1;\n  }\n\n  // Check for common patterns\n  if (!criteria.noCommonPatterns) {\n    feedback.push('Éviter les mots de passe communs');\n  } else {\n    score += 0.5;\n  }\n\n  // Bonus points for length\n  if (password.length >= 12) {\n    score += 0.5;\n  }\n\n  // Ensure score is within bounds\n  score = Math.min(4, Math.max(0, score));\n\n  // Determine if password is valid (minimum requirements met)\n  const isValid =\n    criteria.minLength &&\n    criteria.hasUpperCase &&\n    criteria.hasLowerCase &&\n    (criteria.hasNumbers || criteria.hasSymbols) &&\n    criteria.noCommonPatterns;\n\n  return {\n    score: Math.round(score),\n    feedback: feedback.length > 0 ? feedback : ['Mot de passe sécurisé'],\n    isValid,\n  };\n}\n\n/**\n * Gets detailed password criteria evaluation.\n * @param password\n */\n/**\n * GetPasswordCriteria function.\n * @param password\n * @returns Function result.\n */\nexport function getPasswordCriteria(password: string | undefined | null): PasswordCriteria {\n  // Safety guard: handle undefined/null inputs\n  if (!password || typeof password !== 'string') {\n    return {\n      minLength: false,\n      hasUpperCase: false,\n      hasLowerCase: false,\n      hasNumbers: false,\n      hasSymbols: false,\n      noCommonPatterns: true, // Empty strings don't contain common patterns\n    };\n  }\n  return {\n    minLength: password.length >= 8,\n    hasUpperCase: /[A-Z]/.test(password),\n    hasLowerCase: /[a-z]/.test(password),\n    hasNumbers: /\\d/.test(password),\n    hasSymbols: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\n    noCommonPatterns: !COMMON_PATTERNS.some((pattern) =>\n      password.toLowerCase().includes(pattern.toLowerCase())\n    ),\n  };\n}\n\n/**\n * Gets password strength level text with Quebec French labels.\n * @param score\n */\n/**\n * GetPasswordStrengthLabel function.\n * @param score\n * @returns Function result.\n */\nexport function getPasswordStrengthLabel(score: number): string {\n  switch (score) {\n    case 0:\n    case 1:\n      return 'Très faible';\n    case 2:\n      return 'Faible';\n    case 3:\n      return 'Moyen';\n    case 4:\n      return 'Fort';\n    default:\n      return 'Très faible';\n  }\n}\n\n/**\n * Gets password strength color for UI indicators.\n * @param score\n */\n/**\n * GetPasswordStrengthColor function.\n * @param score\n * @returns Function result.\n */\nexport function getPasswordStrengthColor(score: number): string {\n  switch (score) {\n    case 0:\n    case 1:\n      return 'text-red-600';\n    case 2:\n      return 'text-orange-500';\n    case 3:\n      return 'text-yellow-500';\n    case 4:\n      return 'text-green-600';\n    default:\n      return 'text-red-600';\n  }\n}\n\n/**\n * Gets progress bar color for password strength visualization.\n * @param score\n */\n/**\n * GetPasswordStrengthBarColor function.\n * @param score\n * @returns Function result.\n */\nexport function getPasswordStrengthBarColor(score: number): string {\n  switch (score) {\n    case 0:\n    case 1:\n      return 'bg-red-500';\n    case 2:\n      return 'bg-orange-500';\n    case 3:\n      return 'bg-yellow-500';\n    case 4:\n      return 'bg-green-500';\n    default:\n      return 'bg-red-500';\n  }\n}\n"],"version":3}