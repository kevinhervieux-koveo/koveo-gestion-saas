{"file":"/home/runner/workspace/tests/mocks/supertestMock.js","mappings":"AAAA;;GAEG;AAEH,MAAM,YAAY,GAAG;IACnB,MAAM,EAAE,GAAG;IACX,OAAO,EAAE,EAAE;IACX,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;IACjC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IACjD,IAAI,EAAE,kBAAkB;CACzB,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;IACzC,MAAM,WAAW,GAAG;QAClB,OAAO,EAAE,MAAM;QACf,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,EAAE;QACV,YAAY,EAAE,EAAE;QAEhB,oBAAoB;QACpB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE;QAChC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE;QACjC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE;QAC/B,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE;QAChC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE;QAClC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE;QAChC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;YAC7D,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YACzD,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QACF,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAClD,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAClC,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QAEF,yBAAyB;QACzB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7C,OAAO,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC,CAAC;QACF,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,EAAE;YAC7C,OAAO,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrD,CAAC,CAAC;QAEF,eAAe;QACf,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,UAAU,EAAE,EAAE;YAClD,MAAM,SAAS,GAAG;gBAChB,MAAM,EAAE,UAAU;gBAClB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC7C,MAAM,kBAAkB,GAAG,EAAE,GAAG,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;oBACnE,OAAO,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3D,CAAC,CAAC;gBACF,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC7C,MAAM,kBAAkB,GAAG,EAAE,GAAG,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;oBACnE,OAAO,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3D,CAAC,CAAC;aACH,CAAC;YACF,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;QAEF,mCAAmC;QACnC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC7C,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC/B,CAAC;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC,CAAC;KACH,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG;IACd,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3E,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7E,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3E,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC/E,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACjF,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACnF,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAE7E,sBAAsB;IACtB,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;IACd,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE;QACtD,IAAI,QAAQ;YAAE,QAAQ,EAAE,CAAC;QACzB,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;IAC9B,CAAC,CAAC;IACF,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;IACd,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;IACd,MAAM,EAAE,EAAE;IAEV,yBAAyB;IACzB,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,EAAE;CACb,CAAC;AAEF,MAAM,aAAa,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAAE;IACzD,8CAA8C;IAC9C,OAAO;QACL,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC;QAC7C,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC;QAC/C,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC;QAC7C,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC;QACjD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC;QACnD,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC;QACrD,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC;KAChD,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,qCAAqC;AACrC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAAE;IACzD,MAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,wBAAwB;IACxC,OAAO,KAAK,CAAC;AACf,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG;IACf,OAAO,EAAE,aAAa;IACtB,UAAU,EAAE,IAAI;IAChB,SAAS,EAAE,aAAa;IACxB,OAAO;CACR,CAAC","names":[],"sources":["/home/runner/workspace/tests/mocks/supertestMock.js"],"sourcesContent":["/**\n * Mock for supertest to prevent actual server requests during tests\n */\n\nconst mockResponse = {\n  status: 200,\n  headers: {},\n  body: { success: true, data: [] },\n  text: JSON.stringify({ success: true, data: [] }),\n  type: 'application/json'\n};\n\nconst createMockRequest = (method, path) => {\n  const mockRequest = {\n    _method: method,\n    _path: path,\n    _headers: {},\n    _fields: {},\n    _files: {},\n    _attachments: [],\n    \n    // Chainable methods\n    send: jest.fn().mockReturnThis(),\n    query: jest.fn().mockReturnThis(),\n    set: jest.fn().mockReturnThis(),\n    type: jest.fn().mockReturnThis(),\n    accept: jest.fn().mockReturnThis(),\n    auth: jest.fn().mockReturnThis(),\n    attach: jest.fn().mockImplementation((field, file, filename) => {\n      mockRequest._attachments.push({ field, file, filename });\n      return mockRequest;\n    }),\n    field: jest.fn().mockImplementation((name, value) => {\n      mockRequest._fields[name] = value;\n      return mockRequest;\n    }),\n    \n    // Promise-like interface\n    then: jest.fn().mockImplementation((resolve) => {\n      return Promise.resolve(mockResponse).then(resolve);\n    }),\n    catch: jest.fn().mockImplementation((reject) => {\n      return Promise.resolve(mockResponse).catch(reject);\n    }),\n    \n    // Expectations\n    expect: jest.fn().mockImplementation((statusCode) => {\n      const expectObj = {\n        status: statusCode,\n        then: jest.fn().mockImplementation((resolve) => {\n          const responseWithStatus = { ...mockResponse, status: statusCode };\n          return Promise.resolve(responseWithStatus).then(resolve);\n        }),\n        catch: jest.fn().mockImplementation((reject) => {\n          const responseWithStatus = { ...mockResponse, status: statusCode };\n          return Promise.resolve(responseWithStatus).catch(reject);\n        })\n      };\n      return expectObj;\n    }),\n    \n    // End method for manual resolution\n    end: jest.fn().mockImplementation((callback) => {\n      if (callback) {\n        callback(null, mockResponse);\n      }\n      return Promise.resolve(mockResponse);\n    })\n  };\n  \n  return mockRequest;\n};\n\nconst mockApp = {\n  get: jest.fn().mockImplementation((path) => createMockRequest('GET', path)),\n  post: jest.fn().mockImplementation((path) => createMockRequest('POST', path)),\n  put: jest.fn().mockImplementation((path) => createMockRequest('PUT', path)),\n  patch: jest.fn().mockImplementation((path) => createMockRequest('PATCH', path)),\n  delete: jest.fn().mockImplementation((path) => createMockRequest('DELETE', path)),\n  options: jest.fn().mockImplementation((path) => createMockRequest('OPTIONS', path)),\n  head: jest.fn().mockImplementation((path) => createMockRequest('HEAD', path)),\n  \n  // Express app methods\n  use: jest.fn(),\n  listen: jest.fn().mockImplementation((port, callback) => {\n    if (callback) callback();\n    return { close: jest.fn() };\n  }),\n  set: jest.fn(),\n  get: jest.fn(),\n  locals: {},\n  \n  // For middleware testing\n  request: {},\n  response: {}\n};\n\nconst mockSupertest = jest.fn().mockImplementation((app) => {\n  // Return an object with HTTP method functions\n  return {\n    get: (path) => createMockRequest('GET', path),\n    post: (path) => createMockRequest('POST', path),\n    put: (path) => createMockRequest('PUT', path),\n    patch: (path) => createMockRequest('PATCH', path),\n    delete: (path) => createMockRequest('DELETE', path),\n    options: (path) => createMockRequest('OPTIONS', path),\n    head: (path) => createMockRequest('HEAD', path)\n  };\n});\n\n// Mock agent for session persistence\nmockSupertest.agent = jest.fn().mockImplementation((app) => {\n  const agent = mockSupertest(app);\n  agent.jar = {}; // Cookie jar simulation\n  return agent;\n});\n\nmodule.exports = {\n  default: mockSupertest,\n  __esModule: true,\n  supertest: mockSupertest,\n  mockApp\n};"],"version":3}