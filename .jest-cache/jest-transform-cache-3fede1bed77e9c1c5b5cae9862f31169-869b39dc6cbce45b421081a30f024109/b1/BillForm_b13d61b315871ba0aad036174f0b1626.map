{"file":"/home/runner/workspace/client/src/components/common/BillForm.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/common/BillForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { FileText, Upload, Sparkles, Paperclip, Plus, X, Trash2 } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { Bill } from '@shared/schema';\nimport { FileUpload } from '@/components/ui/file-upload';\nimport { AttachedFileSection } from './AttachedFileSection';\nimport { DocumentTypeSelector, type DocumentMode } from './DocumentTypeSelector';\n\n// Unified form schema\nconst billFormSchema = z.object({\n  title: z.string().min(1, 'Bill title is required (example: Monthly Electricity Bill)').max(200, 'Title must be less than 200 characters'),\n  description: z.string().max(1000, 'Description must be less than 1000 characters').optional(),\n  category: z.enum([\n    'insurance',\n    'maintenance',\n    'salary',\n    'utilities',\n    'cleaning',\n    'security',\n    'landscaping',\n    'professional_services',\n    'administration',\n    'repairs',\n    'supplies',\n    'taxes',\n    'technology',\n    'reserves',\n    'other',\n  ]),\n  vendor: z.string().max(150, 'Vendor name must be less than 150 characters').optional(),\n  paymentType: z.enum(['unique', 'recurrent']),\n  schedulePayment: z.enum(['weekly', 'monthly', 'quarterly', 'yearly', 'custom']).optional(),\n  customPayments: z.array(z.object({\n    amount: z.string().min(1, 'Amount is required').refine((val) => {\n      const num = parseFloat(val);\n      return !isNaN(num) && num > 0 && num <= 999999.99;\n    }, 'Amount must be between $0.01 and $999,999.99'),\n    date: z.string().min(1, 'Date is required').refine((val) => {\n      return !isNaN(Date.parse(val));\n    }, 'Date must be a valid date'),\n    description: z.string().optional()\n  })).optional(),\n  totalAmount: z.string().min(1, 'Amount is required and must be a valid number (example: 1250.50)').refine((val) => {\n    const num = parseFloat(val);\n    return !isNaN(num) && num > 0 && num <= 999999.99;\n  }, 'Amount must be between $0.01 and $999,999.99 (example: 1250.50)'),\n  startDate: z.string().min(1, 'Start date is required (example: 2025-01-15)').refine((val) => {\n    return !isNaN(Date.parse(val));\n  }, 'Start date must be a valid date (example: 2025-01-15)'),\n  endDate: z.string().optional().refine((val) => {\n    if (!val) return true;\n    return !isNaN(Date.parse(val));\n  }, 'End date must be a valid date (example: 2025-12-31)'),\n  status: z.enum(['draft', 'sent', 'overdue', 'paid', 'cancelled']),\n  notes: z.string().max(2000, 'Notes must be less than 2000 characters').optional(),\n});\n\n/**\n *\n */\ntype BillFormData = z.infer<typeof billFormSchema>;\n\ntype CustomPayment = {\n  amount: string;\n  date: string;\n  description?: string;\n};\n\n// AI analysis result interface\n/**\n *\n */\ninterface AiAnalysisResult {\n  title: string;\n  vendor?: string;\n  category: BillFormData['category'];\n  totalAmount: string;\n  description?: string;\n  issueDate?: string;\n  dueDate?: string;\n  billNumber?: string;\n  vendorContact?: string;\n  paymentType?: 'unique' | 'recurrent';\n  isRecurrent?: boolean;\n  confidence: number;\n  fieldConfidences: {\n    title: number;\n    vendor: number;\n    category: number;\n    totalAmount: number;\n    paymentType: number;\n    dates: number;\n  };\n}\n\n// Custom Payment Schedule Component\ninterface CustomPaymentScheduleProps {\n  payments: CustomPayment[];\n  onChange: (payments: CustomPayment[]) => void;\n  onTotalAmountChange: (total: string) => void;\n}\n\nfunction CustomPaymentSchedule({ payments, onChange, onTotalAmountChange }: CustomPaymentScheduleProps) {\n  const addPayment = () => {\n    const newPayment: CustomPayment = {\n      amount: '',\n      date: '',\n      description: ''\n    };\n    const updatedPayments = [...payments, newPayment];\n    onChange(updatedPayments);\n  };\n\n  const removePayment = (index: number) => {\n    const updatedPayments = payments.filter((_, i) => i !== index);\n    onChange(updatedPayments);\n    updateTotalAmount(updatedPayments);\n  };\n\n  const updatePayment = (index: number, field: keyof CustomPayment, value: string) => {\n    const updatedPayments = payments.map((payment, i) => \n      i === index ? { ...payment, [field]: value } : payment\n    );\n    onChange(updatedPayments);\n    \n    if (field === 'amount') {\n      updateTotalAmount(updatedPayments);\n    }\n  };\n\n  const updateTotalAmount = (paymentsArray: CustomPayment[]) => {\n    const total = paymentsArray.reduce((sum, payment) => {\n      const amount = parseFloat(payment.amount) || 0;\n      return sum + amount;\n    }, 0);\n    onTotalAmountChange(total.toFixed(2));\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <span className=\"text-sm text-gray-600\">Add individual payment amounts and dates</span>\n        <Button\n          type=\"button\"\n          onClick={addPayment}\n          size=\"sm\"\n          variant=\"outline\"\n          className=\"gap-2\"\n          data-testid=\"button-add-payment\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          Add Payment\n        </Button>\n      </div>\n\n      {payments.length === 0 && (\n        <div className=\"text-center py-6 text-gray-500 border-2 border-dashed border-gray-200 rounded-lg\">\n          Click \"Add Payment\" to create your custom payment schedule\n        </div>\n      )}\n\n      <div className=\"space-y-3\">\n        {payments.map((payment, index) => (\n          <div key={index} className=\"flex gap-3 items-start p-3 border border-gray-200 rounded-lg bg-gray-50\">\n            <div className=\"flex-1 grid grid-cols-3 gap-3\">\n              <div>\n                <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                  Amount *\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"0.00\"\n                  value={payment.amount}\n                  onChange={(e) => updatePayment(index, 'amount', e.target.value)}\n                  data-testid={`input-payment-amount-${index}`}\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                  Date *\n                </label>\n                <Input\n                  type=\"date\"\n                  value={payment.date}\n                  onChange={(e) => updatePayment(index, 'date', e.target.value)}\n                  data-testid={`input-payment-date-${index}`}\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                  Description\n                </label>\n                <Input\n                  placeholder=\"Payment note\"\n                  value={payment.description || ''}\n                  onChange={(e) => updatePayment(index, 'description', e.target.value)}\n                  data-testid={`input-payment-description-${index}`}\n                />\n              </div>\n            </div>\n            <Button\n              type=\"button\"\n              onClick={() => removePayment(index)}\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"text-red-500 hover:text-red-700 p-2\"\n              data-testid={`button-remove-payment-${index}`}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        ))}\n      </div>\n\n      {payments.length > 0 && (\n        <div className=\"text-right text-sm text-gray-600\">\n          Total: ${payments.reduce((sum, payment) => sum + (parseFloat(payment.amount) || 0), 0).toFixed(2)}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Component props interface\n/**\n *\n */\ninterface BillFormProps {\n  mode: 'create' | 'edit';\n  buildingId: string;\n  bill?: Bill; // Required for edit mode\n  onSuccess: () => void;\n  onCancel?: () => void; // Optional for create mode\n}\n\n// Bill category options - centralized list\nexport const BILL_CATEGORIES = [\n  { value: 'insurance', label: 'Insurance' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'salary', label: 'Salary' },\n  { value: 'utilities', label: 'Utilities' },\n  { value: 'cleaning', label: 'Cleaning' },\n  { value: 'security', label: 'Security' },\n  { value: 'landscaping', label: 'Landscaping' },\n  { value: 'professional_services', label: 'Professional Services' },\n  { value: 'administration', label: 'Administration' },\n  { value: 'repairs', label: 'Repairs' },\n  { value: 'supplies', label: 'Supplies' },\n  { value: 'taxes', label: 'Taxes' },\n  { value: 'technology', label: 'Technology' },\n  { value: 'reserves', label: 'Reserves' },\n  { value: 'other', label: 'Other' },\n] as const;\n\n// Payment type options\nexport const PAYMENT_TYPES = [\n  { value: 'unique', label: 'One-time Payment' },\n  { value: 'recurrent', label: 'Recurring Payment' },\n] as const;\n\n// Schedule options\nexport const SCHEDULE_OPTIONS = [\n  { value: 'weekly', label: 'Weekly' },\n  { value: 'monthly', label: 'Monthly' },\n  { value: 'quarterly', label: 'Quarterly' },\n  { value: 'yearly', label: 'Yearly' },\n  { value: 'custom', label: 'Custom' },\n] as const;\n\n// Status options\nexport const STATUS_OPTIONS = [\n  { value: 'draft', label: 'Draft' },\n  { value: 'sent', label: 'Sent' },\n  { value: 'overdue', label: 'Overdue' },\n  { value: 'paid', label: 'Paid' },\n  { value: 'cancelled', label: 'Cancelled' },\n] as const;\n\n/**\n * Unified bill form component for creating and editing bills.\n * Supports both manual entry and AI document analysis for creation.\n * @param root0\n * @param root0.mode\n * @param root0.buildingId\n * @param root0.bill\n * @param root0.onSuccess\n * @param root0.onCancel\n */\nexport function BillForm({ mode, buildingId, bill, onSuccess, onCancel }: BillFormProps) {\n  const { t } = useLanguage();\n  const [activeTab, setActiveTab] = useState(mode === 'edit' ? 'manual' : 'manual');\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [aiAnalysisData, setAiAnalysisData] = useState<AiAnalysisResult | null>(null);\n  const [aiDocumentFile, setAiDocumentFile] = useState<File | null>(null); // Store the AI analyzed document\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState<File[]>([]);\n  const [attachmentMode, setAttachmentMode] = useState<DocumentMode>('file');\n  const [attachmentText, setAttachmentText] = useState('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n  const queryClient = useQueryClient();\n\n  // Form setup with default values based on mode\n  const getDefaultValues = (): BillFormData => {\n    if (mode === 'edit' && bill) {\n      return {\n        title: bill.title,\n        description: bill.description || '',\n        category: bill.category,\n        vendor: bill.vendor || '',\n        paymentType: bill.paymentType,\n        schedulePayment: bill.schedulePayment || 'monthly',\n        customPayments: [],\n        totalAmount: bill.totalAmount.toString(),\n        startDate: bill.startDate,\n        endDate: bill.endDate || '',\n        status: bill.status,\n        notes: bill.notes || '',\n      };\n    }\n\n    // Default values for create mode\n    return {\n      title: '',\n      description: '',\n      category: 'other',\n      vendor: '',\n      paymentType: 'unique',\n      schedulePayment: 'monthly',\n      customPayments: [],\n      totalAmount: '',\n      startDate: new Date().toISOString().split('T')[0],\n      endDate: '',\n      status: 'draft',\n      notes: '',\n    };\n  };\n\n  const form = useForm<BillFormData>({\n    resolver: zodResolver(billFormSchema),\n    defaultValues: getDefaultValues(),\n  });\n\n  // Update form when bill changes (for edit mode)\n  useEffect(() => {\n    if (mode === 'edit' && bill) {\n      form.reset(getDefaultValues());\n    }\n  }, [mode, bill]);\n\n  // Main mutation for create/update\n  const submitMutation = useMutation({\n    mutationFn: async (billData: BillFormData) => {\n      const url = mode === 'create' ? '/api/bills' : `/api/bills/${bill?.id}`;\n      const method = mode === 'create' ? 'POST' : 'PATCH';\n\n      // Handle custom payments vs regular payment\n      const costs = billData.schedulePayment === 'custom' && billData.customPayments?.length\n        ? billData.customPayments.map(payment => payment.amount)\n        : [billData.totalAmount];\n\n      const payload = {\n        ...billData,\n        costs,\n        ...(mode === 'create' && { buildingId }),\n      };\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to ${mode} bill`);\n      }\n\n      const billResult = await response.json();\n\n      // If we have an AI document file and we're creating a bill, upload it\n      if (mode === 'create' && aiDocumentFile && billResult.id) {\n        const formData = new FormData();\n        formData.append('document', aiDocumentFile);\n\n        const uploadResponse = await fetch(`/api/bills/${billResult.id}/upload-document`, {\n          method: 'POST',\n          credentials: 'include',\n          body: formData,\n        });\n\n        if (!uploadResponse.ok) {\n          console.warn('Failed to upload AI document to created bill');\n        }\n      }\n\n      return billResult;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      onSuccess();\n    },\n  });\n\n  // Delete mutation (only for edit mode)\n  const deleteMutation = useMutation({\n    mutationFn: async () => {\n      if (!bill?.id) throw new Error('No bill ID provided');\n      \n      const response = await fetch(`/api/bills/${bill.id}`, {\n        method: 'DELETE',\n        credentials: 'include',\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete bill');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      onSuccess();\n    },\n  });\n\n  // AI analysis mutation (only for create mode)\n  const uploadAndAnalyzeMutation = useMutation({\n    mutationFn: async (file: File) => {\n      setIsAnalyzing(true);\n      \n      // Direct API call to analyze document without creating a bill\n      const formData = new FormData();\n      formData.append('document', file);\n\n      const response = await fetch('/api/bills/analyze-document', {\n        method: 'POST',\n        credentials: 'include',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to analyze document');\n      }\n\n      const result = await response.json();\n      return { analysisResult: result, file };\n    },\n    onSuccess: (data) => {\n      setIsAnalyzing(false);\n      setAiAnalysisData(data.analysisResult);\n      setAiDocumentFile(data.file); // Store the analyzed file for later upload\n      \n      // Auto-switch to manual tab and smartly fill form\n      setActiveTab('manual');\n      \n      // Apply AI analysis while respecting user input\n      setTimeout(() => {\n        if (data.analysisResult) {\n          const currentValues = form.getValues();\n          \n          // Only fill empty or default fields\n          if (!currentValues.title || currentValues.title === '' || currentValues.title === 'AI Analysis Draft') {\n            form.setValue('title', data.analysisResult.title);\n          }\n          \n          if (!currentValues.vendor || currentValues.vendor === '') {\n            form.setValue('vendor', data.analysisResult.vendor || '');\n          }\n          \n          if (!currentValues.category || currentValues.category === 'other') {\n            form.setValue('category', data.analysisResult.category);\n          }\n          \n          if (!currentValues.totalAmount || currentValues.totalAmount === '' || currentValues.totalAmount === '0') {\n            form.setValue('totalAmount', data.analysisResult.totalAmount);\n          }\n          \n          if (!currentValues.description || currentValues.description === '') {\n            form.setValue('description', data.analysisResult.description || '');\n          }\n\n          // Only set start date if it's the default (today) or empty\n          const today = new Date().toISOString().split('T')[0];\n          if ((!currentValues.startDate || currentValues.startDate === today) && data.analysisResult.issueDate) {\n            form.setValue('startDate', data.analysisResult.issueDate);\n          }\n\n          // Apply payment type if detected and user hasn't changed from default\n          if (currentValues.paymentType === 'unique' && data.analysisResult.paymentType) {\n            form.setValue('paymentType', data.analysisResult.paymentType);\n          }\n\n          // Append to notes (don't overwrite user notes)\n          let notes = currentValues.notes || '';\n          const aiNotesSection = [];\n          \n          if (data.analysisResult.billNumber) {\n            aiNotesSection.push(`Bill Number: ${data.analysisResult.billNumber}`);\n          }\n          if (data.analysisResult.vendorContact) {\n            aiNotesSection.push(`Vendor Contact: ${data.analysisResult.vendorContact}`);\n          }\n          if (data.analysisResult.dueDate) {\n            aiNotesSection.push(`Due Date: ${data.analysisResult.dueDate}`);\n          }\n          aiNotesSection.push(`AI Analysis Confidence: ${(data.analysisResult.confidence * 100).toFixed(1)}%`);\n          \n          if (aiNotesSection.length > 0) {\n            const aiNotes = aiNotesSection.join('\\n');\n            notes = notes ? `${notes}\\n\\n--- AI Analysis ---\\n${aiNotes}` : aiNotes;\n            form.setValue('notes', notes.trim());\n          }\n          \n          // Form filling completed\n        }\n      }, 100); // Small delay to ensure tab switch happens first\n    },\n    onError: (error) => {\n      console.error('❌ [DEBUG] AI analysis failed with error:', error);\n      setIsAnalyzing(false);\n    },\n  });\n\n  // Event handlers\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && mode === 'create') {\n      setUploadedFile(file);\n      // Don't auto-analyze, wait for user to click the analyze button\n    }\n  };\n\n  // Smart form filling that respects user input\n  const applyAiAnalysisSmartly = useCallback(() => {\n    // Smart AI analysis application\n    \n    if (!aiAnalysisData) {\n      console.warn('⚠️ [DEBUG] No AI analysis data available for smart application');\n      return;\n    }\n\n    const currentValues = form.getValues();\n    // Check current form values\n    \n    // Only fill empty or default fields\n    if (!currentValues.title || currentValues.title === '') {\n      form.setValue('title', aiAnalysisData.title);\n    }\n    \n    if (!currentValues.vendor || currentValues.vendor === '') {\n      form.setValue('vendor', aiAnalysisData.vendor || '');\n    }\n    \n    if (!currentValues.category || currentValues.category === 'other') {\n      form.setValue('category', aiAnalysisData.category);\n    }\n    \n    if (!currentValues.totalAmount || currentValues.totalAmount === '' || currentValues.totalAmount === '0') {\n      form.setValue('totalAmount', aiAnalysisData.totalAmount);\n    }\n    \n    if (!currentValues.description || currentValues.description === '') {\n      form.setValue('description', aiAnalysisData.description || '');\n    }\n\n    // Only set start date if it's the default (today) or empty\n    const today = new Date().toISOString().split('T')[0];\n    if ((!currentValues.startDate || currentValues.startDate === today) && aiAnalysisData.issueDate) {\n      form.setValue('startDate', aiAnalysisData.issueDate);\n    }\n\n    // Apply payment type if detected and user hasn't changed from default\n    if (currentValues.paymentType === 'unique' && aiAnalysisData.paymentType) {\n      form.setValue('paymentType', aiAnalysisData.paymentType);\n    }\n\n    // Append to notes (don't overwrite user notes)\n    let notes = currentValues.notes || '';\n    const aiNotesSection = [];\n    \n    if (aiAnalysisData.billNumber) {\n      aiNotesSection.push(`Bill Number: ${aiAnalysisData.billNumber}`);\n    }\n    if (aiAnalysisData.vendorContact) {\n      aiNotesSection.push(`Vendor Contact: ${aiAnalysisData.vendorContact}`);\n    }\n    if (aiAnalysisData.dueDate) {\n      aiNotesSection.push(`Due Date: ${aiAnalysisData.dueDate}`);\n    }\n    aiNotesSection.push(`AI Analysis Confidence: ${(aiAnalysisData.confidence * 100).toFixed(1)}%`);\n    \n    if (aiNotesSection.length > 0) {\n      const aiNotes = aiNotesSection.join('\\n');\n      notes = notes ? `${notes}\\n\\n--- AI Analysis ---\\n${aiNotes}` : aiNotes;\n      console.log('📝 [DEBUG] Smart apply - Setting notes:', notes.trim());\n      form.setValue('notes', notes.trim());\n    }\n    \n    console.log('🔍 [DEBUG] Final form values after smart AI application:', form.getValues());\n    console.log('🎉 [DEBUG] === SMART AI ANALYSIS APPLICATION COMPLETED ===');\n  }, [aiAnalysisData, form]);\n\n  // Manual apply function (for the button)\n  const applyAiAnalysis = () => {\n    console.log('🤖 [DEBUG] === APPLYING AI ANALYSIS TO FORM (MANUAL BUTTON) ===');\n    console.log('📊 [DEBUG] AI Analysis Data received:', aiAnalysisData);\n    console.log('🔍 [DEBUG] Current form values before applying AI:', form.getValues());\n    \n    if (aiAnalysisData) {\n      console.log('✅ [DEBUG] AI data exists, setting form values...');\n      \n      // This overrides all fields (for manual application)\n      console.log('📝 [DEBUG] Setting title:', aiAnalysisData.title);\n      form.setValue('title', aiAnalysisData.title);\n      \n      console.log('📝 [DEBUG] Setting vendor:', aiAnalysisData.vendor);\n      form.setValue('vendor', aiAnalysisData.vendor || '');\n      \n      console.log('📝 [DEBUG] Setting category:', aiAnalysisData.category);\n      form.setValue('category', aiAnalysisData.category);\n      \n      console.log('📝 [DEBUG] Setting totalAmount:', aiAnalysisData.totalAmount);\n      form.setValue('totalAmount', aiAnalysisData.totalAmount);\n      \n      console.log('📝 [DEBUG] Setting description:', aiAnalysisData.description);\n      form.setValue('description', aiAnalysisData.description || '');\n\n      if (aiAnalysisData.issueDate) {\n        console.log('📝 [DEBUG] Setting startDate:', aiAnalysisData.issueDate);\n        form.setValue('startDate', aiAnalysisData.issueDate);\n      }\n\n      if (aiAnalysisData.paymentType) {\n        console.log('📝 [DEBUG] Setting paymentType:', aiAnalysisData.paymentType);\n        form.setValue('paymentType', aiAnalysisData.paymentType);\n      }\n\n      // Apply notes with AI information\n      let notes = form.getValues('notes') || '';\n      const aiNotesSection = [];\n      \n      if (aiAnalysisData.billNumber) {\n        aiNotesSection.push(`Bill Number: ${aiAnalysisData.billNumber}`);\n      }\n      if (aiAnalysisData.vendorContact) {\n        aiNotesSection.push(`Vendor Contact: ${aiAnalysisData.vendorContact}`);\n      }\n      if (aiAnalysisData.dueDate) {\n        aiNotesSection.push(`Due Date: ${aiAnalysisData.dueDate}`);\n      }\n      aiNotesSection.push(`AI Analysis Confidence: ${(aiAnalysisData.confidence * 100).toFixed(1)}%`);\n      \n      if (aiNotesSection.length > 0) {\n        const aiNotes = aiNotesSection.join('\\n');\n        notes = notes ? `${notes}\\n\\n--- AI Analysis ---\\n${aiNotes}` : aiNotes;\n        console.log('📝 [DEBUG] Setting notes with AI analysis:', notes.trim());\n        form.setValue('notes', notes.trim());\n      }\n      \n      console.log('🔍 [DEBUG] Final form values after applying AI:', form.getValues());\n      console.log('🎉 [DEBUG] === AI ANALYSIS APPLICATION COMPLETED ===');\n    } else {\n      console.error('❌ [DEBUG] No AI analysis data available when applying to form');\n    }\n  };\n\n  const onSubmit = (values: BillFormData) => {\n    submitMutation.mutate(values);\n    // TODO: Handle attached files upload after bill creation\n  };\n\n  // Handle file attachments\n  const handleFilesSelect = useCallback((files: File[]) => {\n    setAttachedFiles(prev => [...prev, ...files]);\n  }, []);\n\n  const handleFileRemove = useCallback((fileIndex: number) => {\n    setAttachedFiles(prev => prev.filter((_, index) => index !== fileIndex));\n  }, []);\n\n  const renderFormFields = () => (\n    <>\n      <div className='grid grid-cols-2 gap-4'>\n        {/* Title */}\n        <FormField\n          control={form.control}\n          name='title'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('title')} *</FormLabel>\n              <FormControl>\n                <Input {...field} placeholder={t('billTitle')} data-testid='input-title' />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Vendor */}\n        <FormField\n          control={form.control}\n          name='vendor'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('vendor')}</FormLabel>\n              <FormControl>\n                <Input\n                  {...field}\n                  placeholder={t('companyOrServiceProvider')}\n                  data-testid='input-vendor'\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Category */}\n        <FormField\n          control={form.control}\n          name='category'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('category')} *</FormLabel>\n              <Select onValueChange={field.onChange} value={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid='select-category'>\n                    <SelectValue placeholder={t('selectCategory')} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {BILL_CATEGORIES.map((category) => (\n                    <SelectItem key={category.value} value={category.value}>\n                      {category.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Total Amount */}\n        <FormField\n          control={form.control}\n          name='totalAmount'\n          render={({ field }) => {\n            const isCustomPayments = form.watch('paymentType') === 'recurrent' && \n                                   form.watch('schedulePayment') === 'custom';\n            return (\n              <FormItem>\n                <FormLabel>\n                  Total Amount * \n                  {isCustomPayments && <span className=\"text-xs text-blue-600 ml-1\">(Auto-calculated)</span>}\n                </FormLabel>\n                <FormControl>\n                  <Input\n                    {...field}\n                    type='number'\n                    step='0.01'\n                    placeholder='0.00'\n                    readOnly={isCustomPayments}\n                    className={isCustomPayments ? 'bg-gray-100 cursor-not-allowed' : ''}\n                    data-testid='input-amount'\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            );\n          }}\n        />\n\n        {/* Payment Type */}\n        <FormField\n          control={form.control}\n          name='paymentType'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Payment Type *</FormLabel>\n              <Select onValueChange={field.onChange} value={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid='select-payment-type'>\n                    <SelectValue placeholder='Select payment type' />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {PAYMENT_TYPES.map((type) => (\n                    <SelectItem key={type.value} value={type.value}>\n                      {type.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Schedule Payment (only for recurrent) */}\n        {form.watch('paymentType') === 'recurrent' && (\n          <FormField\n            control={form.control}\n            name='schedulePayment'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Schedule *</FormLabel>\n                <Select onValueChange={field.onChange} value={field.value}>\n                  <FormControl>\n                    <SelectTrigger data-testid='select-schedule'>\n                      <SelectValue placeholder='Select schedule' />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {SCHEDULE_OPTIONS.map((option) => (\n                      <SelectItem key={option.value} value={option.value}>\n                        {option.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {/* Custom Payment Schedule (only when schedule is custom) */}\n        {form.watch('paymentType') === 'recurrent' && form.watch('schedulePayment') === 'custom' && (\n          <div className='col-span-2'>\n            <FormField\n              control={form.control}\n              name='customPayments'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Custom Payment Schedule *</FormLabel>\n                  <FormControl>\n                    <CustomPaymentSchedule\n                      payments={field.value || []}\n                      onChange={field.onChange}\n                      onTotalAmountChange={(total) => form.setValue('totalAmount', total)}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n        )}\n\n        {/* Start Date */}\n        <FormField\n          control={form.control}\n          name='startDate'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Start Date *</FormLabel>\n              <FormControl>\n                <Input {...field} type='date' data-testid='input-start-date' />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* End Date (only for recurrent) */}\n        {form.watch('paymentType') === 'recurrent' && (\n          <FormField\n            control={form.control}\n            name='endDate'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>End Date (Optional)</FormLabel>\n                <FormControl>\n                  <Input {...field} type='date' data-testid='input-end-date' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {/* Status */}\n        <FormField\n          control={form.control}\n          name='status'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Status *</FormLabel>\n              <Select onValueChange={field.onChange} value={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid='select-status'>\n                    <SelectValue placeholder='Select status' />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {STATUS_OPTIONS.map((status) => (\n                    <SelectItem key={status.value} value={status.value}>\n                      {status.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      </div>\n\n      {/* Description */}\n      <FormField\n        control={form.control}\n        name='description'\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Description</FormLabel>\n            <FormControl>\n              <Textarea\n                {...field}\n                placeholder='Bill description...'\n                rows={3}\n                data-testid='textarea-description'\n              />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      {/* Notes */}\n      <FormField\n        control={form.control}\n        name='notes'\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Notes</FormLabel>\n            <FormControl>\n              <Textarea\n                {...field}\n                placeholder='Additional notes...'\n                rows={3}\n                data-testid='textarea-notes'\n              />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      {/* Document Type Selection - Common Component */}\n      <DocumentTypeSelector\n        mode={attachmentMode}\n        onModeChange={setAttachmentMode}\n        onFileSelect={setSelectedFile}\n        textContent={attachmentText}\n        onTextChange={setAttachmentText}\n        fileInputProps={{\n          accept: 'image/*,.pdf,.doc,.docx,.txt'\n        }}\n        textAreaProps={{\n          placeholder: 'Enter text notes or details about this bill...'\n        }}\n      />\n    </>\n  );\n\n  // For edit mode, render simple form\n  if (mode === 'edit') {\n    return (\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6 pt-4 border-t'>\n          {renderFormFields()}\n\n          {/* Show existing attached file if present */}\n          {bill?.documentPath && (\n            <div className='space-y-3'>\n              <Label className='text-sm font-medium text-gray-900'>Attached Document</Label>\n              <AttachedFileSection\n                entityType='bill'\n                entityId={bill.id}\n                filePath={bill.documentPath}\n                fileName={bill.documentName}\n                canView={true}\n                canDownload={true}\n                className='bg-gray-50 rounded-lg'\n              />\n            </div>\n          )}\n\n          {/* Form Actions */}\n          <div className='flex justify-between gap-2 pt-4 border-t'>\n            {/* Delete button for edit mode */}\n            <Button\n              type='button'\n              variant='destructive'\n              onClick={() => {\n                if (confirm('Are you sure you want to delete this bill? This action cannot be undone.')) {\n                  deleteMutation.mutate();\n                }\n              }}\n              disabled={deleteMutation.isPending}\n              className='flex items-center gap-2'\n              data-testid='button-delete-bill'\n            >\n              <Trash2 className='w-4 h-4' />\n              {deleteMutation.isPending ? 'Deleting...' : 'Delete Bill'}\n            </Button>\n            \n            <div className='flex gap-2'>\n              {onCancel && (\n                <Button\n                  type='button'\n                  variant='outline'\n                  onClick={onCancel}\n                  disabled={submitMutation.isPending || deleteMutation.isPending}\n                  data-testid='button-cancel'\n                >\n                  Cancel\n                </Button>\n              )}\n              <Button\n                type='submit'\n                disabled={submitMutation.isPending || deleteMutation.isPending}\n                className='min-w-[120px]'\n                data-testid='button-update'\n              >\n                {submitMutation.isPending ? 'Updating...' : 'Update Bill'}\n              </Button>\n            </div>\n          </div>\n        </form>\n      </Form>\n    );\n  }\n\n  // For create mode, render with tabs (manual + AI upload)\n  return (\n    <div className='space-y-6'>\n      <Tabs value={activeTab} onValueChange={setActiveTab} className='w-full'>\n        <TabsList className='grid w-full grid-cols-2'>\n          <TabsTrigger value='manual' data-testid='tab-manual'>\n            Create Manually\n          </TabsTrigger>\n          <TabsTrigger value='upload' data-testid='tab-upload'>\n            Upload & Analyze\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value='upload' className='space-y-4'>\n          <div className='p-6 text-center border-2 border-dashed border-gray-200 rounded-lg'>\n            <h3 className='text-lg font-semibold mb-2'>Upload Bill Document</h3>\n            <p className='text-gray-600 mb-4'>\n              Upload an image or PDF of your bill for AI analysis\n            </p>\n\n            <Input\n              type='file'\n              accept='image/*,.pdf'\n              onChange={handleFileUpload}\n              disabled={isAnalyzing}\n              className='max-w-sm mx-auto mb-4'\n              data-testid='input-file-upload'\n            />\n\n            {uploadedFile && !isAnalyzing && !aiAnalysisData && (\n              <Button\n                onClick={() => uploadAndAnalyzeMutation.mutate(uploadedFile)}\n                className='mt-4'\n                data-testid='button-analyze-document'\n              >\n                Analyze Document\n              </Button>\n            )}\n\n            {isAnalyzing && (\n              <div\n                className='mt-4 flex items-center justify-center gap-2'\n                data-testid='loading-analysis'\n              >\n                <div className='animate-spin w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full'></div>\n                <span className='text-sm text-gray-600'>Analyzing document with AI...</span>\n              </div>\n            )}\n\n            {aiAnalysisData && (\n              <div className='mt-4 p-4 bg-blue-50 rounded-lg' data-testid='ai-analysis-result'>\n                <div className='flex items-center gap-2 mb-3'>\n                  <span className='font-medium text-blue-800'>AI Analysis Complete</span>\n                  <Badge variant='outline' className='text-xs'>\n                    {(aiAnalysisData.confidence * 100).toFixed(1)}% overall confidence\n                  </Badge>\n                </div>\n                \n                <div className='grid grid-cols-1 md:grid-cols-2 gap-3 text-sm'>\n                  <div className='space-y-2'>\n                    <div className='flex justify-between'>\n                      <span className='text-blue-700'><strong>Title:</strong> {aiAnalysisData.title}</span>\n                      {aiAnalysisData.fieldConfidences && (\n                        <Badge variant='outline' className='text-xs'>\n                          {(aiAnalysisData.fieldConfidences.title * 100).toFixed(0)}%\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    {aiAnalysisData.vendor && (\n                      <div className='flex justify-between'>\n                        <span className='text-blue-700'><strong>Vendor:</strong> {aiAnalysisData.vendor}</span>\n                        {aiAnalysisData.fieldConfidences && (\n                          <Badge variant='outline' className='text-xs'>\n                            {(aiAnalysisData.fieldConfidences.vendor * 100).toFixed(0)}%\n                          </Badge>\n                        )}\n                      </div>\n                    )}\n                    \n                    <div className='flex justify-between'>\n                      <span className='text-blue-700'><strong>Amount:</strong> ${aiAnalysisData.totalAmount}</span>\n                      {aiAnalysisData.fieldConfidences && (\n                        <Badge variant='outline' className='text-xs'>\n                          {(aiAnalysisData.fieldConfidences.totalAmount * 100).toFixed(0)}%\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className='space-y-2'>\n                    <div className='flex justify-between'>\n                      <span className='text-blue-700'><strong>Category:</strong> {aiAnalysisData.category}</span>\n                      {aiAnalysisData.fieldConfidences && (\n                        <Badge variant='outline' className='text-xs'>\n                          {(aiAnalysisData.fieldConfidences.category * 100).toFixed(0)}%\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    {aiAnalysisData.paymentType && (\n                      <div className='flex justify-between'>\n                        <span className='text-blue-700'><strong>Type:</strong> {aiAnalysisData.paymentType === 'recurrent' ? 'Recurring' : 'One-time'}</span>\n                        {aiAnalysisData.fieldConfidences && (\n                          <Badge variant='outline' className='text-xs'>\n                            {(aiAnalysisData.fieldConfidences.paymentType * 100).toFixed(0)}%\n                          </Badge>\n                        )}\n                      </div>\n                    )}\n                    \n                    {(aiAnalysisData.issueDate || aiAnalysisData.dueDate) && (\n                      <div className='flex justify-between'>\n                        <span className='text-blue-700'><strong>Dates:</strong> {aiAnalysisData.issueDate || aiAnalysisData.dueDate}</span>\n                        {aiAnalysisData.fieldConfidences && (\n                          <Badge variant='outline' className='text-xs'>\n                            {(aiAnalysisData.fieldConfidences.dates * 100).toFixed(0)}%\n                          </Badge>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                {(aiAnalysisData.billNumber || aiAnalysisData.vendorContact) && (\n                  <div className='mt-3 pt-3 border-t border-blue-200 text-xs text-blue-600'>\n                    {aiAnalysisData.billNumber && <p><strong>Bill Number:</strong> {aiAnalysisData.billNumber}</p>}\n                    {aiAnalysisData.vendorContact && <p><strong>Vendor Contact:</strong> {aiAnalysisData.vendorContact}</p>}\n                  </div>\n                )}\n                \n                <Button\n                  onClick={applyAiAnalysis}\n                  className='mt-3 w-full'\n                  size='sm'\n                  data-testid='button-apply-ai'\n                >\n                  Apply All Fields to Form\n                </Button>\n              </div>\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value='manual' className='space-y-4'>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n              {renderFormFields()}\n\n              {/* AI Analysis Info */}\n              {aiAnalysisData && (\n                <div\n                  className='p-4 bg-blue-50 rounded-lg border border-blue-200'\n                  data-testid='ai-info-badge'\n                >\n                  <div className='flex items-center gap-2 mb-2'>\n                    <span className='text-sm font-medium text-blue-800'>\n                      Form populated from AI analysis\n                    </span>\n                    <Badge variant='outline' className='text-xs'>\n                      {(aiAnalysisData.confidence * 100).toFixed(1)}% confidence\n                    </Badge>\n                  </div>\n                  <p className='text-xs text-blue-600'>\n                    Review and modify the form as needed before creating the bill.\n                  </p>\n                </div>\n              )}\n\n              {/* Form Actions */}\n              <div className='flex justify-between gap-2 pt-4 border-t'>\n                {/* Delete button for edit mode */}\n                {mode === 'edit' && (\n                  <Button\n                    type='button'\n                    variant='destructive'\n                    onClick={() => {\n                      if (confirm('Are you sure you want to delete this bill? This action cannot be undone.')) {\n                        deleteMutation.mutate();\n                      }\n                    }}\n                    disabled={deleteMutation.isPending}\n                    className='flex items-center gap-2'\n                    data-testid='button-delete-bill'\n                  >\n                    <Trash2 className='w-4 h-4' />\n                    {deleteMutation.isPending ? 'Deleting...' : 'Delete Bill'}\n                  </Button>\n                )}\n                \n                <div className='flex gap-2'>\n                  {onCancel && (\n                    <Button\n                      type='button'\n                      variant='outline'\n                      onClick={onCancel}\n                      disabled={submitMutation.isPending || deleteMutation.isPending}\n                      data-testid='button-cancel'\n                    >\n                      Cancel\n                    </Button>\n                  )}\n                  <Button\n                    type='submit'\n                    disabled={submitMutation.isPending || deleteMutation.isPending}\n                    className='min-w-[120px]'\n                    data-testid={mode === 'create' ? 'button-create' : 'button-update'}\n                  >\n                    {submitMutation.isPending \n                      ? (mode === 'create' ? 'Creating...' : 'Updating...') \n                      : (mode === 'create' ? 'Create Bill' : 'Update Bill')\n                    }\n                  </Button>\n                </div>\n              </div>\n            </form>\n          </Form>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default BillForm;\n"],"version":3}