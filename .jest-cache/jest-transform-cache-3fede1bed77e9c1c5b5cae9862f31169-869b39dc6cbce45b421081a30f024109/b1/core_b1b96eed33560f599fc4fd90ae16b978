1cfba9b0d043571419f3ed5c78f7fbb8
"use strict";

/* istanbul ignore next */
function cov_1p68d5mlqs() {
  var path = "/home/runner/workspace/shared/schemas/core.ts";
  var hash = "303b259a1eb87bdfb5c91ae7cfcbbc3cd9eee004";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/shared/schemas/core.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 655
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 28
        }
      },
      "5": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "6": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "7": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "8": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 76,
          column: 3
        }
      },
      "9": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "10": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 87,
          column: 42
        }
      },
      "11": {
        start: {
          line: 90,
          column: 26
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "12": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 128,
          column: 3
        }
      },
      "13": {
        start: {
          line: 133,
          column: 0
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "14": {
        start: {
          line: 139,
          column: 26
        },
        end: {
          line: 139,
          column: 42
        }
      },
      "15": {
        start: {
          line: 153,
          column: 0
        },
        end: {
          line: 166,
          column: 3
        }
      },
      "16": {
        start: {
          line: 157,
          column: 75
        },
        end: {
          line: 157,
          column: 97
        }
      },
      "17": {
        start: {
          line: 159,
          column: 73
        },
        end: {
          line: 159,
          column: 89
        }
      },
      "18": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "19": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 198,
          column: 3
        }
      },
      "20": {
        start: {
          line: 200,
          column: 0
        },
        end: {
          line: 213,
          column: 3
        }
      },
      "21": {
        start: {
          line: 214,
          column: 0
        },
        end: {
          line: 225,
          column: 3
        }
      },
      "22": {
        start: {
          line: 221,
          column: 26
        },
        end: {
          line: 221,
          column: 48
        }
      },
      "23": {
        start: {
          line: 222,
          column: 69
        },
        end: {
          line: 222,
          column: 85
        }
      },
      "24": {
        start: {
          line: 226,
          column: 0
        },
        end: {
          line: 239,
          column: 3
        }
      },
      "25": {
        start: {
          line: 232,
          column: 26
        },
        end: {
          line: 232,
          column: 42
        }
      },
      "26": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 48
        }
      },
      "27": {
        start: {
          line: 241,
          column: 0
        },
        end: {
          line: 267,
          column: 3
        }
      },
      "28": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 115
        }
      },
      "29": {
        start: {
          line: 268,
          column: 0
        },
        end: {
          line: 279,
          column: 3
        }
      },
      "30": {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 295,
          column: 3
        }
      },
      "31": {
        start: {
          line: 296,
          column: 0
        },
        end: {
          line: 317,
          column: 3
        }
      },
      "32": {
        start: {
          line: 315,
          column: 32
        },
        end: {
          line: 315,
          column: 45
        }
      },
      "33": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 325,
          column: 3
        }
      },
      "34": {
        start: {
          line: 326,
          column: 0
        },
        end: {
          line: 335,
          column: 3
        }
      },
      "35": {
        start: {
          line: 336,
          column: 0
        },
        end: {
          line: 344,
          column: 3
        }
      },
      "36": {
        start: {
          line: 345,
          column: 0
        },
        end: {
          line: 356,
          column: 3
        }
      },
      "37": {
        start: {
          line: 357,
          column: 0
        },
        end: {
          line: 361,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 21
          }
        },
        loc: {
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 87,
            column: 42
          }
        },
        line: 87
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 21
          }
        },
        loc: {
          start: {
            line: 90,
            column: 26
          },
          end: {
            line: 90,
            column: 50
          }
        },
        line: 90
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 139,
            column: 20
          },
          end: {
            line: 139,
            column: 21
          }
        },
        loc: {
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 42
          }
        },
        line: 139
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 157,
            column: 69
          },
          end: {
            line: 157,
            column: 70
          }
        },
        loc: {
          start: {
            line: 157,
            column: 75
          },
          end: {
            line: 157,
            column: 97
          }
        },
        line: 157
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 159,
            column: 67
          },
          end: {
            line: 159,
            column: 68
          }
        },
        loc: {
          start: {
            line: 159,
            column: 73
          },
          end: {
            line: 159,
            column: 89
          }
        },
        line: 159
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 221,
            column: 20
          },
          end: {
            line: 221,
            column: 21
          }
        },
        loc: {
          start: {
            line: 221,
            column: 26
          },
          end: {
            line: 221,
            column: 48
          }
        },
        line: 221
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 222,
            column: 63
          },
          end: {
            line: 222,
            column: 64
          }
        },
        loc: {
          start: {
            line: 222,
            column: 69
          },
          end: {
            line: 222,
            column: 85
          }
        },
        line: 222
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 232,
            column: 21
          }
        },
        loc: {
          start: {
            line: 232,
            column: 26
          },
          end: {
            line: 232,
            column: 42
          }
        },
        line: 232
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 235,
            column: 21
          }
        },
        loc: {
          start: {
            line: 235,
            column: 26
          },
          end: {
            line: 235,
            column: 48
          }
        },
        line: 235
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        loc: {
          start: {
            line: 253,
            column: 27
          },
          end: {
            line: 253,
            column: 115
          }
        },
        line: 253
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 315,
            column: 23
          },
          end: {
            line: 315,
            column: 24
          }
        },
        loc: {
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 315,
            column: 45
          }
        },
        line: 315
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 253,
            column: 27
          },
          end: {
            line: 253,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 27
          },
          end: {
            line: 253,
            column: 33
          }
        }, {
          start: {
            line: 253,
            column: 37
          },
          end: {
            line: 253,
            column: 115
          }
        }],
        line: 253
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/shared/schemas/core.ts",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/shared/schemas/core.ts"],
      sourcesContent: ["import { sql } from 'drizzle-orm';\nimport {\n  pgTable,\n  text,\n  varchar,\n  timestamp,\n  uuid,\n  pgEnum,\n  boolean,\n  date,\n  integer,\n  json,\n} from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { relations } from 'drizzle-orm';\n\n// Core enums\n/**\n * Enum defining user roles in the Quebec property management system.\n * Determines user permissions and access levels across the application.\n */\nexport const userRoleEnum = pgEnum('user_role', [\n  'admin',\n  'manager',\n  'tenant',\n  'resident',\n  'demo_manager',\n  'demo_tenant',\n  'demo_resident',\n]);\n\n/**\n * Enum defining invitation status values for user invitation system.\n * Tracks the lifecycle of user invitations from creation to completion.\n */\nexport const invitationStatusEnum = pgEnum('invitation_status', [\n  'pending',\n  'accepted',\n  'expired',\n  'cancelled',\n]);\n\n// Core tables\n/**\n * Users table for the Koveo Gestion property management system.\n * Stores user authentication and profile information for all system users.\n * Supports Quebec-specific language preferences and role-based access.\n */\nexport const users = pgTable('users', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  username: text('username').notNull().unique(), // Username field required by database\n  email: text('email').notNull().unique(),\n  password: text('password').notNull(),\n  firstName: text('first_name').notNull(),\n  lastName: text('last_name').notNull(),\n  phone: text('phone'),\n  profileImage: text('profile_image'),\n  language: text('language').notNull().default('fr'), // Default to French for Quebec\n  role: userRoleEnum('role').notNull().default('tenant'),\n  isActive: boolean('is_active').notNull().default(true),\n  lastLoginAt: timestamp('last_login_at'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Organizations table storing management companies, syndicates, and co-ownership entities.\n * Represents the legal entities responsible for property management in Quebec.\n */\nexport const organizations = pgTable('organizations', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  name: text('name').notNull(),\n  type: text('type').notNull(), // 'management_company', 'syndicate', 'cooperative', 'condo_association', 'demo'\n  address: text('address').notNull(),\n  city: text('city').notNull(),\n  province: text('province').notNull().default('QC'),\n  postalCode: text('postal_code').notNull(),\n  phone: text('phone'),\n  email: text('email'),\n  website: text('website'),\n  registrationNumber: text('registration_number'), // Quebec business registration\n  isActive: boolean('is_active').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * User-Organization relationship table to manage users belonging to organizations.\n * Users can belong to multiple organizations with different roles.\n */\nexport const userOrganizations = pgTable('user_organizations', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  organizationId: varchar('organization_id')\n    .notNull()\n    .references(() => organizations.id, { onDelete: 'cascade' }),\n  organizationRole: userRoleEnum('organization_role').notNull().default('tenant'),\n  isActive: boolean('is_active').notNull().default(true),\n  canAccessAllOrganizations: boolean('can_access_all_organizations').notNull().default(false),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Invitations table for managing user invitations to organizations.\n * Supports role-based invitations with expiration and security features.\n */\nexport const invitations = pgTable('invitations', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  organizationId: varchar('organization_id'),\n  buildingId: varchar('building_id'),\n  residenceId: text('residence_id'),\n  email: text('email').notNull(),\n  token: text('token').notNull().unique(),\n  role: userRoleEnum('role').notNull(),\n  status: invitationStatusEnum('status').notNull().default('pending'),\n  invitedByUserId: varchar('invited_by_user_id').notNull(),\n  expiresAt: timestamp('expires_at').notNull(),\n  tokenHash: text('token_hash').notNull(),\n  usageCount: integer('usage_count').notNull().default(0),\n  maxUsageCount: integer('max_usage_count').notNull().default(1),\n  personalMessage: text('personal_message'),\n  invitationContext: json('invitation_context'),\n  securityLevel: text('security_level'),\n  requires2fa: boolean('requires_2fa').notNull().default(false),\n  acceptedAt: timestamp('accepted_at'),\n  acceptedBy: varchar('accepted_by_user_id'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n  lastAccessedAt: timestamp('last_accessed_at'),\n  ipAddress: text('ip_address'),\n  userAgent: text('user_agent'),\n});\n\n/**\n * Password reset tokens table for secure password reset functionality.\n * Stores temporary tokens that expire after a set time for security.\n */\nexport const passwordResetTokens = pgTable('password_reset_tokens', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id, { onDelete: 'cascade' }),\n  token: text('token').notNull().unique(),\n  tokenHash: text('token_hash').notNull(), // Hashed version for security\n  expiresAt: timestamp('expires_at').notNull(),\n  usedAt: timestamp('used_at'),\n  isUsed: boolean('is_used').notNull().default(false),\n  ipAddress: text('ip_address'),\n  userAgent: text('user_agent'),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\n/**\n * Invitation audit log table for tracking invitation operations and security events.\n * Provides comprehensive logging for invitation lifecycle and security monitoring.\n */\nexport const invitationAuditLog = pgTable('invitation_audit_log', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  invitationId: varchar('invitation_id').references(() => invitations.id, { onDelete: 'cascade' }),\n  action: text('action').notNull(),\n  performedBy: varchar('performed_by').references(() => users.id),\n  ipAddress: text('ip_address'),\n  userAgent: text('user_agent'),\n  details: json('details'),\n  previousStatus: invitationStatusEnum('previous_status'),\n  newStatus: invitationStatusEnum('new_status'),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\n// Permissions enums\nexport const resourceTypeEnum = pgEnum('resource_type', [\n  'user',\n  'users', // Added to handle existing production data\n  'organization',\n  'building',\n  'residence',\n  'bill',\n  'budget',\n  'maintenance_request',\n  'document',\n  'audit_log',\n  'system_settings',\n  'development_pillar',\n  'quality_metric',\n  'feature',\n  'actionable_item',\n  'improvement_suggestion',\n]);\n\nexport const actionEnum = pgEnum('action', [\n  'read',\n  'create',\n  'update',\n  'delete',\n  'manage',\n  'approve',\n  'assign',\n  'share',\n  'export',\n  'backup',\n  'restore',\n]);\n\n// Permissions tables\nexport const permissions = pgTable('permissions', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  name: text('name').notNull().unique(),\n  displayName: text('display_name').notNull(),\n  description: text('description'),\n  resourceType: resourceTypeEnum('resource_type').notNull(),\n  action: actionEnum('action').notNull(),\n  conditions: json('conditions'),\n  isActive: boolean('is_active').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\nexport const rolePermissions = pgTable('role_permissions', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  role: userRoleEnum('role').notNull(),\n  permissionId: uuid('permission_id')\n    .notNull()\n    .references(() => permissions.id),\n  grantedBy: varchar('granted_by').references(() => users.id),\n  grantedAt: timestamp('granted_at').defaultNow(),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\nexport const userPermissions = pgTable('user_permissions', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  userId: varchar('user_id')\n    .notNull()\n    .references(() => users.id),\n  permissionId: uuid('permission_id')\n    .notNull()\n    .references(() => permissions.id),\n  granted: boolean('granted').notNull().default(true),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n// Insert schemas - manual Zod schemas to avoid drizzle-zod compatibility issues\nexport const insertUserSchema = z.object({\n  username: z.string().min(1).max(50, 'Username must be between 1-50 characters'),\n  email: z.string().email('Must be a valid email address').toLowerCase(),\n  password: z\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .regex(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>])/,\n      'Password must contain uppercase, lowercase, number, and special character'\n    ),\n  firstName: z.string().min(1).max(100, 'First name must be 1-100 characters').trim(),\n  lastName: z.string().min(1).max(100, 'Last name must be 1-100 characters').trim(),\n  phone: z\n    .string()\n    .optional()\n    .refine(\n      (phone) =>\n        !phone || /^(\\+1\\s?)?(\\([0-9]{3}\\)|[0-9]{3})[\\s.-]?[0-9]{3}[\\s.-]?[0-9]{4}$/.test(phone),\n      'Phone must be a valid North American format (e.g., 514-123-4567 or (514) 123-4567)'\n    ),\n  profileImage: z.string().optional(),\n  language: z.string().default('fr'),\n  role: z\n    .enum([\n      'admin',\n      'manager',\n      'tenant',\n      'resident',\n      'demo_manager',\n      'demo_tenant',\n      'demo_resident',\n    ])\n    .default('tenant'),\n});\n\nexport const insertOrganizationSchema = z.object({\n  name: z.string().min(1),\n  type: z.string(),\n  address: z.string(),\n  city: z.string(),\n  province: z.string().default('QC'),\n  postalCode: z.string(),\n  phone: z.string().optional(),\n  email: z.string().email().optional(),\n  website: z.string().url().optional(),\n  registrationNumber: z.string().optional(),\n});\n\nexport const insertUserOrganizationSchema = z.object({\n  userId: z.string().uuid(),\n  organizationId: z.string().uuid(),\n  organizationRole: z\n    .enum([\n      'admin',\n      'manager',\n      'tenant',\n      'resident',\n      'demo_manager',\n      'demo_tenant',\n      'demo_resident',\n    ])\n    .default('tenant'),\n  canAccessAllOrganizations: z.boolean().default(false),\n});\n\nexport const insertInvitationSchema = z.object({\n  organizationId: z.string().uuid().optional(),\n  residenceId: z.union([z.string().uuid(), z.null()]).optional(),\n  email: z.string().email(),\n  role: z.enum([\n    'admin',\n    'manager',\n    'tenant',\n    'resident',\n    'demo_manager',\n    'demo_tenant',\n    'demo_resident',\n  ]),\n  invitedByUserId: z.string().uuid(),\n  expiresAt: z.union([\n    z.date(),\n    z\n      .string()\n      .datetime()\n      .transform((str) => new Date(str)),\n  ]),\n});\n\nexport const insertPasswordResetTokenSchema = z.object({\n  userId: z.string().uuid(),\n  token: z.string(),\n  tokenHash: z.string(),\n  expiresAt: z.date(),\n  ipAddress: z.string().optional(),\n  userAgent: z.string().optional(),\n});\n\nexport const insertInvitationAuditLogSchema = z.object({\n  invitationId: z.string().uuid(),\n  action: z.string(),\n  performedBy: z.string().uuid(),\n  ipAddress: z.string().optional(),\n  userAgent: z.string().optional(),\n  details: z.record(z.string(), z.any()).optional(),\n  previousStatus: z.string().optional(),\n  newStatus: z.string().optional(),\n});\n\nexport const insertPermissionSchema = z.object({\n  name: z.string(),\n  displayName: z.string(),\n  description: z.string().optional(),\n  resourceType: z.string(),\n  action: z.string(),\n  conditions: z.record(z.string(), z.any()).optional(),\n  isActive: z.boolean().default(true),\n});\n\nexport const insertRolePermissionSchema = z.object({\n  role: z.enum([\n    'admin',\n    'manager',\n    'tenant',\n    'resident',\n    'demo_manager',\n    'demo_tenant',\n    'demo_resident',\n  ]),\n  permissionId: z.string().uuid(),\n});\n\nexport const insertUserPermissionSchema = z.object({\n  userId: z.string().uuid(),\n  permissionId: z.string().uuid(),\n  granted: z.boolean().default(true),\n});\n\n// Types\n/**\n *\n */\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n/**\n *\n */\nexport type User = typeof users.$inferSelect;\n\n// Extended user type with assignment data for user management\nexport type UserWithAssignments = User & {\n  organizations: Array<{\n    id: string;\n    name: string;\n    type: string;\n  }>;\n  buildings: Array<{\n    id: string;\n    name: string;\n  }>;\n  residences: Array<{\n    id: string;\n    unitNumber: string;\n    buildingId: string;\n    buildingName: string;\n  }>;\n};\n\n/**\n *\n */\nexport type InsertOrganization = z.infer<typeof insertOrganizationSchema>;\n/**\n *\n */\nexport type Organization = typeof organizations.$inferSelect;\n\n/**\n *\n */\nexport type InsertUserOrganization = z.infer<typeof insertUserOrganizationSchema>;\n/**\n *\n */\nexport type UserOrganization = typeof userOrganizations.$inferSelect;\n\n/**\n *\n */\nexport type InsertInvitation = z.infer<typeof insertInvitationSchema>;\n/**\n *\n */\nexport type Invitation = typeof invitations.$inferSelect;\n\n/**\n *\n */\nexport type InsertPasswordResetToken = z.infer<typeof insertPasswordResetTokenSchema>;\n/**\n *\n */\nexport type PasswordResetToken = typeof passwordResetTokens.$inferSelect;\n\n/**\n *\n */\nexport type InsertPermission = z.infer<typeof insertPermissionSchema>;\n/**\n *\n */\nexport type Permission = typeof permissions.$inferSelect;\n\n/**\n *\n */\nexport type InsertRolePermission = z.infer<typeof insertRolePermissionSchema>;\n/**\n *\n */\nexport type RolePermission = typeof rolePermissions.$inferSelect;\n\n/**\n *\n */\nexport type InsertUserPermission = z.infer<typeof insertUserPermissionSchema>;\n/**\n *\n */\nexport type UserPermission = typeof userPermissions.$inferSelect;\n\n/**\n *\n */\nexport type InsertInvitationAuditLog = z.infer<typeof insertInvitationAuditLogSchema>;\n/**\n *\n */\nexport type InvitationAuditLog = typeof invitationAuditLog.$inferSelect;\n\n// Relations - Temporarily commented out due to drizzle-orm version compatibility\n// TODO: Fix relations import compatibility with current drizzle-orm version\n/*\nexport const usersRelations = relations(users, ({ many }) => ({\n  userOrganizations: many(userOrganizations),\n  sentInvitations: many(invitations, { relationName: 'invitedByUserId' }),\n  acceptedInvitations: many(invitations, { relationName: 'acceptedBy' }),\n  passwordResetTokens: many(passwordResetTokens),\n}));\n*/\n\n/*\nexport const organizationsRelations = relations(organizations, ({ many }) => ({\n  userOrganizations: many(userOrganizations),\n  invitations: many(invitations),\n}));\n*/\n\n/*\nexport const userOrganizationsRelations = relations(userOrganizations, ({ one }) => ({\n  user: one(users, {\n    fields: [userOrganizations.userId],\n    references: [users.id],\n  }),\n  organization: one(organizations, {\n    fields: [userOrganizations.organizationId],\n    references: [organizations.id],\n  }),\n}));\n*/\n\n/*\nexport const invitationsRelations = relations(invitations, ({ one }) => ({\n  organization: one(organizations, {\n    fields: [invitations.organizationId],\n    references: [organizations.id],\n  }),\n  invitedByUserId: one(users, {\n    fields: [invitations.invitedByUserId],\n    references: [users.id],\n    relationName: 'invitedByUserId',\n  }),\n  acceptedBy: one(users, {\n    fields: [invitations.acceptedBy],\n    references: [users.id],\n    relationName: 'acceptedBy',\n  }),\n}));\n*/\n\n/*\nexport const passwordResetTokensRelations = relations(passwordResetTokens, ({ one }) => ({\n  user: one(users, {\n    fields: [passwordResetTokens.userId],\n    references: [users.id],\n  }),\n}));\n*/\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "303b259a1eb87bdfb5c91ae7cfcbbc3cd9eee004"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p68d5mlqs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p68d5mlqs();
cov_1p68d5mlqs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[1]++;
exports.insertUserPermissionSchema = exports.insertRolePermissionSchema = exports.insertPermissionSchema = exports.insertInvitationAuditLogSchema = exports.insertPasswordResetTokenSchema = exports.insertInvitationSchema = exports.insertUserOrganizationSchema = exports.insertOrganizationSchema = exports.insertUserSchema = exports.userPermissions = exports.rolePermissions = exports.permissions = exports.actionEnum = exports.resourceTypeEnum = exports.invitationAuditLog = exports.passwordResetTokens = exports.invitations = exports.userOrganizations = exports.organizations = exports.users = exports.invitationStatusEnum = exports.userRoleEnum = void 0;
const drizzle_orm_1 =
/* istanbul ignore next */
(cov_1p68d5mlqs().s[2]++, require("drizzle-orm"));
const pg_core_1 =
/* istanbul ignore next */
(cov_1p68d5mlqs().s[3]++, require("drizzle-orm/pg-core"));
const zod_1 =
/* istanbul ignore next */
(cov_1p68d5mlqs().s[4]++, require("zod"));
// Core enums
/**
 * Enum defining user roles in the Quebec property management system.
 * Determines user permissions and access levels across the application.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[5]++;
exports.userRoleEnum = (0, pg_core_1.pgEnum)('user_role', ['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident']);
/**
 * Enum defining invitation status values for user invitation system.
 * Tracks the lifecycle of user invitations from creation to completion.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[6]++;
exports.invitationStatusEnum = (0, pg_core_1.pgEnum)('invitation_status', ['pending', 'accepted', 'expired', 'cancelled']);
// Core tables
/**
 * Users table for the Koveo Gestion property management system.
 * Stores user authentication and profile information for all system users.
 * Supports Quebec-specific language preferences and role-based access.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[7]++;
exports.users = (0, pg_core_1.pgTable)('users', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  username: (0, pg_core_1.text)('username').notNull().unique(),
  // Username field required by database
  email: (0, pg_core_1.text)('email').notNull().unique(),
  password: (0, pg_core_1.text)('password').notNull(),
  firstName: (0, pg_core_1.text)('first_name').notNull(),
  lastName: (0, pg_core_1.text)('last_name').notNull(),
  phone: (0, pg_core_1.text)('phone'),
  profileImage: (0, pg_core_1.text)('profile_image'),
  language: (0, pg_core_1.text)('language').notNull().default('fr'),
  // Default to French for Quebec
  role: (0, exports.userRoleEnum)('role').notNull().default('tenant'),
  isActive: (0, pg_core_1.boolean)('is_active').notNull().default(true),
  lastLoginAt: (0, pg_core_1.timestamp)('last_login_at'),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Organizations table storing management companies, syndicates, and co-ownership entities.
 * Represents the legal entities responsible for property management in Quebec.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[8]++;
exports.organizations = (0, pg_core_1.pgTable)('organizations', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  name: (0, pg_core_1.text)('name').notNull(),
  type: (0, pg_core_1.text)('type').notNull(),
  // 'management_company', 'syndicate', 'cooperative', 'condo_association', 'demo'
  address: (0, pg_core_1.text)('address').notNull(),
  city: (0, pg_core_1.text)('city').notNull(),
  province: (0, pg_core_1.text)('province').notNull().default('QC'),
  postalCode: (0, pg_core_1.text)('postal_code').notNull(),
  phone: (0, pg_core_1.text)('phone'),
  email: (0, pg_core_1.text)('email'),
  website: (0, pg_core_1.text)('website'),
  registrationNumber: (0, pg_core_1.text)('registration_number'),
  // Quebec business registration
  isActive: (0, pg_core_1.boolean)('is_active').notNull().default(true),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * User-Organization relationship table to manage users belonging to organizations.
 * Users can belong to multiple organizations with different roles.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[9]++;
exports.userOrganizations = (0, pg_core_1.pgTable)('user_organizations', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  userId: (0, pg_core_1.varchar)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[0]++;
    cov_1p68d5mlqs().s[10]++;
    return exports.users.id;
  }, {
    onDelete: 'cascade'
  }),
  organizationId: (0, pg_core_1.varchar)('organization_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[1]++;
    cov_1p68d5mlqs().s[11]++;
    return exports.organizations.id;
  }, {
    onDelete: 'cascade'
  }),
  organizationRole: (0, exports.userRoleEnum)('organization_role').notNull().default('tenant'),
  isActive: (0, pg_core_1.boolean)('is_active').notNull().default(true),
  canAccessAllOrganizations: (0, pg_core_1.boolean)('can_access_all_organizations').notNull().default(false),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Invitations table for managing user invitations to organizations.
 * Supports role-based invitations with expiration and security features.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[12]++;
exports.invitations = (0, pg_core_1.pgTable)('invitations', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  organizationId: (0, pg_core_1.varchar)('organization_id'),
  buildingId: (0, pg_core_1.varchar)('building_id'),
  residenceId: (0, pg_core_1.text)('residence_id'),
  email: (0, pg_core_1.text)('email').notNull(),
  token: (0, pg_core_1.text)('token').notNull().unique(),
  role: (0, exports.userRoleEnum)('role').notNull(),
  status: (0, exports.invitationStatusEnum)('status').notNull().default('pending'),
  invitedByUserId: (0, pg_core_1.varchar)('invited_by_user_id').notNull(),
  expiresAt: (0, pg_core_1.timestamp)('expires_at').notNull(),
  tokenHash: (0, pg_core_1.text)('token_hash').notNull(),
  usageCount: (0, pg_core_1.integer)('usage_count').notNull().default(0),
  maxUsageCount: (0, pg_core_1.integer)('max_usage_count').notNull().default(1),
  personalMessage: (0, pg_core_1.text)('personal_message'),
  invitationContext: (0, pg_core_1.json)('invitation_context'),
  securityLevel: (0, pg_core_1.text)('security_level'),
  requires2fa: (0, pg_core_1.boolean)('requires_2fa').notNull().default(false),
  acceptedAt: (0, pg_core_1.timestamp)('accepted_at'),
  acceptedBy: (0, pg_core_1.varchar)('accepted_by_user_id'),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow(),
  lastAccessedAt: (0, pg_core_1.timestamp)('last_accessed_at'),
  ipAddress: (0, pg_core_1.text)('ip_address'),
  userAgent: (0, pg_core_1.text)('user_agent')
});
/**
 * Password reset tokens table for secure password reset functionality.
 * Stores temporary tokens that expire after a set time for security.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[13]++;
exports.passwordResetTokens = (0, pg_core_1.pgTable)('password_reset_tokens', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  userId: (0, pg_core_1.varchar)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[2]++;
    cov_1p68d5mlqs().s[14]++;
    return exports.users.id;
  }, {
    onDelete: 'cascade'
  }),
  token: (0, pg_core_1.text)('token').notNull().unique(),
  tokenHash: (0, pg_core_1.text)('token_hash').notNull(),
  // Hashed version for security
  expiresAt: (0, pg_core_1.timestamp)('expires_at').notNull(),
  usedAt: (0, pg_core_1.timestamp)('used_at'),
  isUsed: (0, pg_core_1.boolean)('is_used').notNull().default(false),
  ipAddress: (0, pg_core_1.text)('ip_address'),
  userAgent: (0, pg_core_1.text)('user_agent'),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow()
});
/**
 * Invitation audit log table for tracking invitation operations and security events.
 * Provides comprehensive logging for invitation lifecycle and security monitoring.
 */
/* istanbul ignore next */
cov_1p68d5mlqs().s[15]++;
exports.invitationAuditLog = (0, pg_core_1.pgTable)('invitation_audit_log', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  invitationId: (0, pg_core_1.varchar)('invitation_id').references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[3]++;
    cov_1p68d5mlqs().s[16]++;
    return exports.invitations.id;
  }, {
    onDelete: 'cascade'
  }),
  action: (0, pg_core_1.text)('action').notNull(),
  performedBy: (0, pg_core_1.varchar)('performed_by').references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[4]++;
    cov_1p68d5mlqs().s[17]++;
    return exports.users.id;
  }),
  ipAddress: (0, pg_core_1.text)('ip_address'),
  userAgent: (0, pg_core_1.text)('user_agent'),
  details: (0, pg_core_1.json)('details'),
  previousStatus: (0, exports.invitationStatusEnum)('previous_status'),
  newStatus: (0, exports.invitationStatusEnum)('new_status'),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow()
});
// Permissions enums
/* istanbul ignore next */
cov_1p68d5mlqs().s[18]++;
exports.resourceTypeEnum = (0, pg_core_1.pgEnum)('resource_type', ['user', 'users',
// Added to handle existing production data
'organization', 'building', 'residence', 'bill', 'budget', 'maintenance_request', 'document', 'audit_log', 'system_settings', 'development_pillar', 'quality_metric', 'feature', 'actionable_item', 'improvement_suggestion']);
/* istanbul ignore next */
cov_1p68d5mlqs().s[19]++;
exports.actionEnum = (0, pg_core_1.pgEnum)('action', ['read', 'create', 'update', 'delete', 'manage', 'approve', 'assign', 'share', 'export', 'backup', 'restore']);
// Permissions tables
/* istanbul ignore next */
cov_1p68d5mlqs().s[20]++;
exports.permissions = (0, pg_core_1.pgTable)('permissions', {
  id: (0, pg_core_1.uuid)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  name: (0, pg_core_1.text)('name').notNull().unique(),
  displayName: (0, pg_core_1.text)('display_name').notNull(),
  description: (0, pg_core_1.text)('description'),
  resourceType: (0, exports.resourceTypeEnum)('resource_type').notNull(),
  action: (0, exports.actionEnum)('action').notNull(),
  conditions: (0, pg_core_1.json)('conditions'),
  isActive: (0, pg_core_1.boolean)('is_active').notNull().default(true),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[21]++;
exports.rolePermissions = (0, pg_core_1.pgTable)('role_permissions', {
  id: (0, pg_core_1.uuid)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  role: (0, exports.userRoleEnum)('role').notNull(),
  permissionId: (0, pg_core_1.uuid)('permission_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[5]++;
    cov_1p68d5mlqs().s[22]++;
    return exports.permissions.id;
  }),
  grantedBy: (0, pg_core_1.varchar)('granted_by').references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[6]++;
    cov_1p68d5mlqs().s[23]++;
    return exports.users.id;
  }),
  grantedAt: (0, pg_core_1.timestamp)('granted_at').defaultNow(),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow()
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[24]++;
exports.userPermissions = (0, pg_core_1.pgTable)('user_permissions', {
  id: (0, pg_core_1.uuid)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  userId: (0, pg_core_1.varchar)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[7]++;
    cov_1p68d5mlqs().s[25]++;
    return exports.users.id;
  }),
  permissionId: (0, pg_core_1.uuid)('permission_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[8]++;
    cov_1p68d5mlqs().s[26]++;
    return exports.permissions.id;
  }),
  granted: (0, pg_core_1.boolean)('granted').notNull().default(true),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
// Insert schemas - manual Zod schemas to avoid drizzle-zod compatibility issues
/* istanbul ignore next */
cov_1p68d5mlqs().s[27]++;
exports.insertUserSchema = zod_1.z.object({
  username: zod_1.z.string().min(1).max(50, 'Username must be between 1-50 characters'),
  email: zod_1.z.string().email('Must be a valid email address').toLowerCase(),
  password: zod_1.z.string().min(8, 'Password must be at least 8 characters').regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*(),.?":{}|<>])/, 'Password must contain uppercase, lowercase, number, and special character'),
  firstName: zod_1.z.string().min(1).max(100, 'First name must be 1-100 characters').trim(),
  lastName: zod_1.z.string().min(1).max(100, 'Last name must be 1-100 characters').trim(),
  phone: zod_1.z.string().optional().refine(phone => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[9]++;
    cov_1p68d5mlqs().s[28]++;
    return /* istanbul ignore next */(cov_1p68d5mlqs().b[0][0]++, !phone) ||
    /* istanbul ignore next */
    (cov_1p68d5mlqs().b[0][1]++, /^(\+1\s?)?(\([0-9]{3}\)|[0-9]{3})[\s.-]?[0-9]{3}[\s.-]?[0-9]{4}$/.test(phone));
  }, 'Phone must be a valid North American format (e.g., 514-123-4567 or (514) 123-4567)'),
  profileImage: zod_1.z.string().optional(),
  language: zod_1.z.string().default('fr'),
  role: zod_1.z.enum(['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident']).default('tenant')
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[29]++;
exports.insertOrganizationSchema = zod_1.z.object({
  name: zod_1.z.string().min(1),
  type: zod_1.z.string(),
  address: zod_1.z.string(),
  city: zod_1.z.string(),
  province: zod_1.z.string().default('QC'),
  postalCode: zod_1.z.string(),
  phone: zod_1.z.string().optional(),
  email: zod_1.z.string().email().optional(),
  website: zod_1.z.string().url().optional(),
  registrationNumber: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[30]++;
exports.insertUserOrganizationSchema = zod_1.z.object({
  userId: zod_1.z.string().uuid(),
  organizationId: zod_1.z.string().uuid(),
  organizationRole: zod_1.z.enum(['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident']).default('tenant'),
  canAccessAllOrganizations: zod_1.z.boolean().default(false)
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[31]++;
exports.insertInvitationSchema = zod_1.z.object({
  organizationId: zod_1.z.string().uuid().optional(),
  residenceId: zod_1.z.union([zod_1.z.string().uuid(), zod_1.z.null()]).optional(),
  email: zod_1.z.string().email(),
  role: zod_1.z.enum(['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident']),
  invitedByUserId: zod_1.z.string().uuid(),
  expiresAt: zod_1.z.union([zod_1.z.date(), zod_1.z.string().datetime().transform(str => {
    /* istanbul ignore next */
    cov_1p68d5mlqs().f[10]++;
    cov_1p68d5mlqs().s[32]++;
    return new Date(str);
  })])
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[33]++;
exports.insertPasswordResetTokenSchema = zod_1.z.object({
  userId: zod_1.z.string().uuid(),
  token: zod_1.z.string(),
  tokenHash: zod_1.z.string(),
  expiresAt: zod_1.z.date(),
  ipAddress: zod_1.z.string().optional(),
  userAgent: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[34]++;
exports.insertInvitationAuditLogSchema = zod_1.z.object({
  invitationId: zod_1.z.string().uuid(),
  action: zod_1.z.string(),
  performedBy: zod_1.z.string().uuid(),
  ipAddress: zod_1.z.string().optional(),
  userAgent: zod_1.z.string().optional(),
  details: zod_1.z.record(zod_1.z.string(), zod_1.z.any()).optional(),
  previousStatus: zod_1.z.string().optional(),
  newStatus: zod_1.z.string().optional()
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[35]++;
exports.insertPermissionSchema = zod_1.z.object({
  name: zod_1.z.string(),
  displayName: zod_1.z.string(),
  description: zod_1.z.string().optional(),
  resourceType: zod_1.z.string(),
  action: zod_1.z.string(),
  conditions: zod_1.z.record(zod_1.z.string(), zod_1.z.any()).optional(),
  isActive: zod_1.z.boolean().default(true)
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[36]++;
exports.insertRolePermissionSchema = zod_1.z.object({
  role: zod_1.z.enum(['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident']),
  permissionId: zod_1.z.string().uuid()
});
/* istanbul ignore next */
cov_1p68d5mlqs().s[37]++;
exports.insertUserPermissionSchema = zod_1.z.object({
  userId: zod_1.z.string().uuid(),
  permissionId: zod_1.z.string().uuid(),
  granted: zod_1.z.boolean().default(true)
});
// Relations - Temporarily commented out due to drizzle-orm version compatibility
// TODO: Fix relations import compatibility with current drizzle-orm version
/*
export const usersRelations = relations(users, ({ many }) => ({
  userOrganizations: many(userOrganizations),
  sentInvitations: many(invitations, { relationName: 'invitedByUserId' }),
  acceptedInvitations: many(invitations, { relationName: 'acceptedBy' }),
  passwordResetTokens: many(passwordResetTokens),
}));
*/
/*
export const organizationsRelations = relations(organizations, ({ many }) => ({
  userOrganizations: many(userOrganizations),
  invitations: many(invitations),
}));
*/
/*
export const userOrganizationsRelations = relations(userOrganizations, ({ one }) => ({
  user: one(users, {
    fields: [userOrganizations.userId],
    references: [users.id],
  }),
  organization: one(organizations, {
    fields: [userOrganizations.organizationId],
    references: [organizations.id],
  }),
}));
*/
/*
export const invitationsRelations = relations(invitations, ({ one }) => ({
  organization: one(organizations, {
    fields: [invitations.organizationId],
    references: [organizations.id],
  }),
  invitedByUserId: one(users, {
    fields: [invitations.invitedByUserId],
    references: [users.id],
    relationName: 'invitedByUserId',
  }),
  acceptedBy: one(users, {
    fields: [invitations.acceptedBy],
    references: [users.id],
    relationName: 'acceptedBy',
  }),
}));
*/
/*
export const passwordResetTokensRelations = relations(passwordResetTokens, ({ one }) => ({
  user: one(users, {
    fields: [passwordResetTokens.userId],
    references: [users.id],
  }),
}));
*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,