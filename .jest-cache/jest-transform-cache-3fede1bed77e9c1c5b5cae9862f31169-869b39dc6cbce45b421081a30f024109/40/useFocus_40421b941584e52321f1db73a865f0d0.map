{"file":"/home/runner/workspace/node_modules/react-day-picker/dist/cjs/useFocus.js","mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,MAAM,yBAAyB,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC/E,MAAM,iBAAiB,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAC/D;;;;;;;;;;;;;GAaG;AACH,SAAS,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO;IAChE,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IAC5B,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC9D,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,yBAAyB,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,UAAU,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;IAC/I,MAAM,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC5F,MAAM,IAAI,GAAG,GAAG,EAAE;QACd,cAAc,CAAC,UAAU,CAAC,CAAC;QAC3B,UAAU,CAAC,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF,MAAM,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;QAClC,IAAI,CAAC,UAAU;YACX,OAAO;QACX,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,iBAAiB,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QACvI,IAAI,CAAC,SAAS;YACV,OAAO;QACX,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5B,UAAU,CAAC,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF,MAAM,aAAa,GAAG,CAAC,GAAG,EAAE,EAAE;QAC1B,OAAO,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC;IACF,MAAM,QAAQ,GAAG;QACb,aAAa;QACb,UAAU;QACV,OAAO,EAAE,UAAU;QACnB,IAAI;QACJ,SAAS;KACZ,CAAC;IACF,OAAO,QAAQ,CAAC;AACpB,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/react-day-picker/dist/cjs/useFocus.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFocus = useFocus;\nconst react_1 = require(\"react\");\nconst calculateFocusTarget_js_1 = require(\"./helpers/calculateFocusTarget.js\");\nconst getNextFocus_js_1 = require(\"./helpers/getNextFocus.js\");\n/**\n * Manages focus behavior for the DayPicker component, including setting,\n * moving, and blurring focus on calendar days.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param calendar - The calendar object containing the displayed days and\n *   months.\n * @param getModifiers - A function to retrieve modifiers for a given day.\n * @param isSelected - A function to check if a date is selected.\n * @param dateLib - The date utility library instance.\n * @returns An object containing focus-related methods and the currently focused\n *   day.\n */\nfunction useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n    const { autoFocus } = props;\n    const [lastFocused, setLastFocused] = (0, react_1.useState)();\n    const focusTarget = (0, calculateFocusTarget_js_1.calculateFocusTarget)(calendar.days, getModifiers, isSelected || (() => false), lastFocused);\n    const [focusedDay, setFocused] = (0, react_1.useState)(autoFocus ? focusTarget : undefined);\n    const blur = () => {\n        setLastFocused(focusedDay);\n        setFocused(undefined);\n    };\n    const moveFocus = (moveBy, moveDir) => {\n        if (!focusedDay)\n            return;\n        const nextFocus = (0, getNextFocus_js_1.getNextFocus)(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n        if (!nextFocus)\n            return;\n        calendar.goToDay(nextFocus);\n        setFocused(nextFocus);\n    };\n    const isFocusTarget = (day) => {\n        return Boolean(focusTarget?.isEqualTo(day));\n    };\n    const useFocus = {\n        isFocusTarget,\n        setFocused,\n        focused: focusedDay,\n        blur,\n        moveFocus,\n    };\n    return useFocus;\n}\n"],"version":3}