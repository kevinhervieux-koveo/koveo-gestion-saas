{"file":"/home/runner/workspace/client/src/pages/settings/settings.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/settings/settings.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Separator } from '@/components/ui/separator';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Settings as SettingsIcon,\n  User,\n  Bell,\n  Shield,\n  Globe,\n  Palette,\n  Download,\n  Trash2,\n  Eye,\n  EyeOff,\n  Save,\n  Key,\n} from 'lucide-react';\nimport { z } from 'zod';\nimport { useLanguage } from '@/hooks/use-language';\n\n// Form schemas\nconst profileSchema = z.object({\n  firstName: z.string().min(1, 'First name is required (example: Jean)').max(50, 'First name must be less than 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'First name can only contain letters, spaces, apostrophes and hyphens'),\n  lastName: z.string().min(1, 'Last name is required (example: Dupont)').max(50, 'Last name must be less than 50 characters').regex(/^[a-zA-ZÀ-ÿ\\s'-]+$/, 'Last name can only contain letters, spaces, apostrophes and hyphens'),\n  email: z.string().min(1, 'Email address is required').email('Please enter a valid email address (example: jean.dupont@email.com)'),\n  username: z.string().min(3, 'Username must be between 3 and 30 characters (example: jdupont)').max(30, 'Username must be between 3 and 30 characters (example: jdupont)').regex(/^[a-zA-Z0-9._-]+$/, 'Username can only contain letters, numbers, dots, underscores and hyphens'),\n  phone: z.string().optional().refine((val) => {\n    if (!val) return true;\n    return /^(\\+1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/.test(val);\n  }, 'Phone number must be a valid North American format (example: (514) 123-4567)'),\n  language: z.enum(['fr', 'en']),\n});\n\nconst passwordSchema = z\n  .object({\n    currentPassword: z.string().min(1, 'Current password is required to verify your identity'),\n    newPassword: z.string()\n      .min(8, 'New password must be at least 8 characters long (example: MonNouveauMotDePasse123!)')\n      .max(100, 'New password must be less than 100 characters')\n      .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, 'New password must contain at least one lowercase letter, one uppercase letter, and one number'),\n    confirmPassword: z.string().min(1, 'Please confirm your new password by typing it again'),\n  })\n  .refine((data) => data.newPassword === data.confirmPassword, {\n    message: \"Passwords don't match - please enter the same password in both fields\",\n    path: ['confirmPassword'],\n  });\n\nconst deleteAccountSchema = z.object({\n  confirmEmail: z.string().min(1, 'Email confirmation is required to delete account').email('Please enter a valid email address that matches your account'),\n  reason: z.string().max(500, 'Reason must be less than 500 characters').optional(),\n});\n\n/**\n *\n */\ntype ProfileFormData = z.infer<typeof profileSchema>;\n/**\n *\n */\ntype PasswordFormData = z.infer<typeof passwordSchema>;\n/**\n *\n */\ntype DeleteAccountFormData = z.infer<typeof deleteAccountSchema>;\n\n/**\n *\n */\nexport default function Settings() {\n  const { user, logout } = useAuth();\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const queryClient = useQueryClient();\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  // Profile form\n  const profileForm = useForm<ProfileFormData>({\n    resolver: zodResolver(profileSchema),\n    defaultValues: {\n      firstName: user?.firstName || '',\n      lastName: user?.lastName || '',\n      email: user?.email || '',\n      username: user?.username || '',\n      phone: user?.phone || '',\n      language: (user?.language as 'fr' | 'en') || 'fr',\n    },\n  });\n\n  // Password form\n  const passwordForm = useForm<PasswordFormData>({\n    resolver: zodResolver(passwordSchema),\n    defaultValues: {\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n    },\n  });\n\n  // Delete account form\n  const deleteForm = useForm<DeleteAccountFormData>({\n    resolver: zodResolver(deleteAccountSchema),\n    defaultValues: {\n      confirmEmail: '',\n      reason: '',\n    },\n  });\n\n  // Profile update mutation\n  const profileMutation = useMutation({\n    mutationFn: async (data: ProfileFormData) => {\n      const response = await fetch('/api/users/me', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to update profile');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Profile updated',\n        description: 'Your profile has been updated successfully.',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to update profile',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Password change mutation\n  const passwordMutation = useMutation({\n    mutationFn: async (data: PasswordFormData) => {\n      const response = await fetch('/api/users/me/change-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          currentPassword: data.currentPassword,\n          newPassword: data.newPassword,\n        }),\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to change password');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Password changed',\n        description: 'Your password has been changed successfully.',\n      });\n      passwordForm.reset();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to change password',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Data export mutation\n  const exportMutation = useMutation({\n    mutationFn: async () => {\n      const response = await fetch('/api/users/me/data-export', {\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to export data');\n      }\n      return response.blob();\n    },\n    onSuccess: (blob) => {\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `user-data-export-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      toast({\n        title: 'Data exported',\n        description: 'Your data has been downloaded successfully.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Export failed',\n        description: error.message || 'Failed to export data',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Account deletion mutation\n  const deleteMutation = useMutation({\n    mutationFn: async (data: DeleteAccountFormData) => {\n      const response = await fetch('/api/users/me/delete-account', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to delete account');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Account deleted',\n        description: 'Your account and all associated data have been permanently deleted.',\n      });\n      logout();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Deletion failed',\n        description: error.message || 'Failed to delete account',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onProfileSubmit = (data: ProfileFormData) => {\n    profileMutation.mutate(data);\n  };\n\n  const onPasswordSubmit = (data: PasswordFormData) => {\n    passwordMutation.mutate(data);\n  };\n\n  const onDeleteSubmit = (data: DeleteAccountFormData) => {\n    deleteMutation.mutate(data);\n    setShowDeleteDialog(false);\n  };\n\n  const handleDataExport = () => {\n    exportMutation.mutate();\n  };\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden' data-testid='settings-page'>\n      <Header title={t('settings')} subtitle={t('manageAccountSettings')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-4xl mx-auto space-y-6'>\n          {/* General Settings */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <User className='w-5 h-5' />\n                {t('generalSettings')}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Form {...profileForm}>\n                <form onSubmit={profileForm.handleSubmit(onProfileSubmit)} className='space-y-4'>\n                  <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                    <FormField\n                      control={profileForm.control}\n                      name='firstName'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('firstName')}</FormLabel>\n                          <FormControl>\n                            <Input data-testid='input-first-name' {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={profileForm.control}\n                      name='lastName'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('lastName')}</FormLabel>\n                          <FormControl>\n                            <Input data-testid='input-last-name' {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <FormField\n                    control={profileForm.control}\n                    name='email'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('email')}</FormLabel>\n                        <FormControl>\n                          <Input type='email' data-testid='input-email' {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={profileForm.control}\n                    name='username'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('username')}</FormLabel>\n                        <FormControl>\n                          <Input data-testid='input-username' {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={profileForm.control}\n                    name='phone'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('phone')}</FormLabel>\n                        <FormControl>\n                          <Input type='tel' data-testid='input-phone' {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={profileForm.control}\n                    name='language'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('language')}</FormLabel>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                          data-testid='select-language'\n                        >\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder={t('selectLanguage')} />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value='fr'>Français</SelectItem>\n                            <SelectItem value='en'>English</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <Button\n                    type='submit'\n                    data-testid='button-save-profile'\n                    disabled={profileMutation.isPending}\n                    className='flex items-center gap-2'\n                  >\n                    <Save className='w-4 h-4' />\n                    {profileMutation.isPending ? t('saving') : t('saveChanges')}\n                  </Button>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n\n          {/* Security Settings */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <Key className='w-5 h-5' />\n                {t('securitySettings')}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Form {...passwordForm}>\n                <form onSubmit={passwordForm.handleSubmit(onPasswordSubmit)} className='space-y-4'>\n                  <FormField\n                    control={passwordForm.control}\n                    name='currentPassword'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('currentPassword')}</FormLabel>\n                        <FormControl>\n                          <div className='relative'>\n                            <Input\n                              type={showCurrentPassword ? 'text' : 'password'}\n                              autoComplete=\"current-password\"\n                              data-testid='input-current-password'\n                              {...field}\n                            />\n                            <Button\n                              type='button'\n                              variant='ghost'\n                              size='sm'\n                              className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                              onClick={() => setShowCurrentPassword(!showCurrentPassword)}\n                              data-testid='toggle-current-password'\n                            >\n                              {showCurrentPassword ? (\n                                <EyeOff className='h-4 w-4' />\n                              ) : (\n                                <Eye className='h-4 w-4' />\n                              )}\n                            </Button>\n                          </div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={passwordForm.control}\n                    name='newPassword'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('newPassword')}</FormLabel>\n                        <FormControl>\n                          <div className='relative'>\n                            <Input\n                              type={showNewPassword ? 'text' : 'password'}\n                              autoComplete=\"new-password\"\n                              data-testid='input-new-password'\n                              {...field}\n                            />\n                            <Button\n                              type='button'\n                              variant='ghost'\n                              size='sm'\n                              className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                              onClick={() => setShowNewPassword(!showNewPassword)}\n                              data-testid='toggle-new-password'\n                            >\n                              {showNewPassword ? (\n                                <EyeOff className='h-4 w-4' />\n                              ) : (\n                                <Eye className='h-4 w-4' />\n                              )}\n                            </Button>\n                          </div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={passwordForm.control}\n                    name='confirmPassword'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{t('confirmNewPassword')}</FormLabel>\n                        <FormControl>\n                          <div className='relative'>\n                            <Input\n                              type={showConfirmPassword ? 'text' : 'password'}\n                              autoComplete=\"new-password\"\n                              data-testid='input-confirm-password'\n                              {...field}\n                            />\n                            <Button\n                              type='button'\n                              variant='ghost'\n                              size='sm'\n                              className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                              data-testid='toggle-confirm-password'\n                            >\n                              {showConfirmPassword ? (\n                                <EyeOff className='h-4 w-4' />\n                              ) : (\n                                <Eye className='h-4 w-4' />\n                              )}\n                            </Button>\n                          </div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <Button\n                    type='submit'\n                    data-testid='button-change-password'\n                    disabled={passwordMutation.isPending}\n                    className='flex items-center gap-2'\n                  >\n                    <Shield className='w-4 h-4' />\n                    {passwordMutation.isPending ? t('changing') : t('changePassword')}\n                  </Button>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n\n          {/* Future Settings */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <SettingsIcon className='w-5 h-5' />\n                {t('additionalSettings')}\n                <Badge variant='secondary' className='text-xs ml-2'>\n                  {t('future')}\n                </Badge>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className='grid grid-cols-1 md:grid-cols-3 gap-4'>\n                <Button\n                  variant='outline'\n                  className='h-auto p-4 flex flex-col space-y-2'\n                  disabled\n                  data-testid='button-notifications'\n                >\n                  <Bell className='w-6 h-6' />\n                  <span>{t('notifications')}</span>\n                  <Badge variant='secondary' className='text-xs'>\n                    {t('future')}\n                  </Badge>\n                </Button>\n                <Button\n                  variant='outline'\n                  className='h-auto p-4 flex flex-col space-y-2'\n                  disabled\n                  data-testid='button-theme'\n                >\n                  <Palette className='w-6 h-6' />\n                  <span>{t('theme')}</span>\n                  <Badge variant='secondary' className='text-xs'>\n                    {t('future')}\n                  </Badge>\n                </Button>\n                <Button\n                  variant='outline'\n                  className='h-auto p-4 flex flex-col space-y-2'\n                  disabled\n                  data-testid='button-advanced'\n                >\n                  <Globe className='w-6 h-6' />\n                  <span>{t('advanced')}</span>\n                  <Badge variant='secondary' className='text-xs'>\n                    {t('future')}\n                  </Badge>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Law 25 Compliance */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <Shield className='w-5 h-5' />\n                {t('privacyDataCompliance')}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-4'>\n              <div className='bg-blue-50 dark:bg-blue-950 p-4 rounded-lg border border-blue-200 dark:border-blue-800'>\n                <h4 className='font-semibold text-blue-900 dark:text-blue-100 mb-2'>\n                  {t('yourDataRights')}\n                </h4>\n                <p className='text-blue-700 dark:text-blue-300 text-sm mb-3'>\n                  {t('dataRightsDescription')}\n                </p>\n              </div>\n\n              <div className='space-y-3'>\n                <div className='flex items-center justify-between p-4 border rounded-lg'>\n                  <div className='space-y-1'>\n                    <h5 className='font-medium'>Download Your Data</h5>\n                    <p className='text-sm text-muted-foreground'>\n                      Export all your personal data including profile information, bills, documents,\n                      and activity history.\n                    </p>\n                  </div>\n                  <Button\n                    onClick={handleDataExport}\n                    disabled={exportMutation.isPending}\n                    className='flex items-center gap-2'\n                    data-testid='button-export-data'\n                  >\n                    <Download className='w-4 h-4' />\n                    {exportMutation.isPending ? t('exporting') : t('exportData')}\n                  </Button>\n                </div>\n\n                <Separator />\n\n                <div className='flex items-center justify-between p-4 border rounded-lg border-red-200 dark:border-red-800'>\n                  <div className='space-y-1'>\n                    <h5 className='font-medium text-red-900 dark:text-red-100'>\n                      Delete Your Account\n                    </h5>\n                    <p className='text-sm text-red-700 dark:text-red-300'>\n                      Permanently delete your account and all associated data. This action cannot be\n                      undone.\n                    </p>\n                  </div>\n                  <Button\n                    variant='destructive'\n                    onClick={() => setShowDeleteDialog(true)}\n                    className='flex items-center gap-2'\n                    data-testid='button-delete-account'\n                  >\n                    <Trash2 className='w-4 h-4' />\n                    Delete Account\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Account Deletion Dialog */}\n      <AlertDialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>\n        <AlertDialogContent data-testid='dialog-delete-account'>\n          <AlertDialogHeader>\n            <AlertDialogTitle className='flex items-center gap-2 text-red-600'>\n              <Trash2 className='w-5 h-5' />\n              Delete Account Permanently\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              This will permanently delete your account and all associated data, including:\n              <ul className='list-disc list-inside mt-2 space-y-1'>\n                <li>Your profile information</li>\n                <li>All documents and files</li>\n                <li>Bill history and payments</li>\n                <li>Maintenance requests</li>\n                <li>All other personal data</li>\n              </ul>\n              <strong className='text-red-600 block mt-3'>This action cannot be undone.</strong>\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n\n          <Form {...deleteForm}>\n            <form onSubmit={deleteForm.handleSubmit(onDeleteSubmit)} className='space-y-4'>\n              <FormField\n                control={deleteForm.control}\n                name='confirmEmail'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Confirm your email to proceed</FormLabel>\n                    <FormControl>\n                      <Input\n                        type='email'\n                        placeholder={user?.email}\n                        data-testid='input-confirm-email'\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={deleteForm.control}\n                name='reason'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Reason for deletion (optional)</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder='Let us know why you are deleting your account...'\n                        data-testid='textarea-delete-reason'\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <AlertDialogFooter>\n                <Button\n                  type='button'\n                  variant='outline'\n                  onClick={() => setShowDeleteDialog(false)}\n                  data-testid='button-cancel-delete'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type='submit'\n                  variant='destructive'\n                  disabled={deleteMutation.isPending}\n                  data-testid='button-confirm-delete'\n                >\n                  {deleteMutation.isPending ? 'Deleting...' : 'Delete Account'}\n                </Button>\n              </AlertDialogFooter>\n            </form>\n          </Form>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}\n"],"version":3}