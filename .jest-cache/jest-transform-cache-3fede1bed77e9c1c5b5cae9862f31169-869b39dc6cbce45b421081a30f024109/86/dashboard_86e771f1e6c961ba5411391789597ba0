881e73e65f7d53ef893e317d45265417
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ResidentsDashboard;
const jsx_runtime_1 = require("react/jsx-runtime");
const card_1 = require("@/components/ui/card");
const button_1 = require("@/components/ui/button");
const header_1 = require("@/components/layout/header");
const use_language_1 = require("@/hooks/use-language");
const use_fullscreen_1 = require("@/hooks/use-fullscreen");
const react_query_1 = require("@tanstack/react-query");
const queryClient_1 = require("@/lib/queryClient");
const document_management_1 = require("@/components/document-management");
const lucide_react_1 = require("lucide-react");
/**
 * Residents Dashboard - Main dashboard for residents.
 */
function ResidentsDashboard() {
    const { isFullscreen, toggleFullscreen } = (0, use_fullscreen_1.useFullscreen)();
    const { language } = (0, use_language_1.useLanguage)();
    // Modal state removed - using simple document opening instead
    // Fetch recent documents (limit to 3 for dashboard)
    const { data: documents = [] } = (0, react_query_1.useQuery)({
        queryKey: ['/api/documents', 'recent'],
        queryFn: () => (0, queryClient_1.apiRequest)('GET', '/api/documents?limit=3'),
    });
    const handleDocumentView = async (documentId) => {
        try {
            // Use fetch with credentials to ensure authentication
            const response = await fetch(`/api/documents/${documentId}/file`, {
                method: 'GET',
                credentials: 'include', // Include authentication cookies
            });
            if (!response.ok) {
                throw new Error(`View failed: ${response.status} ${response.statusText}`);
            }
            // Convert response to blob and open in new tab
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            // Open in new tab
            window.open(url, '_blank');
            // Clean up the URL after a delay to allow the tab to load
            setTimeout(() => {
                window.URL.revokeObjectURL(url);
            }, 1000);
        }
        catch (error) {
            console.error('View failed:', error);
            // Could add toast notification here if needed
        }
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: 'flex-1 flex flex-col overflow-hidden', children: [(0, jsx_runtime_1.jsx)(header_1.Header, { title: 'Welcome Back', subtitle: 'Your personal residence dashboard - manage your home and stay connected with your building community' }), (0, jsx_runtime_1.jsx)("div", { className: 'flex-1 overflow-auto p-6', children: (0, jsx_runtime_1.jsxs)("div", { className: 'max-w-7xl mx-auto space-y-6', children: [(0, jsx_runtime_1.jsx)("div", { className: 'flex justify-end mb-4', children: (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'outline', size: 'sm', onClick: toggleFullscreen, className: 'flex items-center gap-2', "data-testid": 'button-fullscreen-toggle', children: isFullscreen ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Minimize2, { className: 'w-4 h-4' }), (0, jsx_runtime_1.jsx)("span", { className: 'hidden sm:inline', children: "Exit Fullscreen" })] })) : ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Maximize2, { className: 'w-4 h-4' }), (0, jsx_runtime_1.jsx)("span", { className: 'hidden sm:inline', children: "Fullscreen" })] })) }) }), (0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4', children: [(0, jsx_runtime_1.jsxs)(card_1.Card, { className: 'cursor-pointer hover:shadow-md transition-shadow', children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: "My Home" }), (0, jsx_runtime_1.jsx)(lucide_react_1.Home, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "Unit 4B" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Building status: Good" })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { className: 'cursor-pointer hover:shadow-md transition-shadow', children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: "Documents" }), (0, jsx_runtime_1.jsx)(lucide_react_1.FileText, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: documents.length }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Recent documents" })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { className: 'cursor-pointer hover:shadow-md transition-shadow', children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: "Maintenance" }), (0, jsx_runtime_1.jsx)(lucide_react_1.Wrench, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "1" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Active request" })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { className: 'cursor-pointer hover:shadow-md transition-shadow', children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: "Bills" }), (0, jsx_runtime_1.jsx)(lucide_react_1.DollarSign, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "$1,250" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Next payment due" })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { className: 'cursor-pointer hover:shadow-md transition-shadow', children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: "Messages" }), (0, jsx_runtime_1.jsx)(lucide_react_1.MessageSquare, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "2" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Unread messages" })] })] })] }), documents.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: 'mb-6', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between mb-4', children: [(0, jsx_runtime_1.jsx)("h2", { className: 'text-lg font-semibold', children: "Recent Documents" }), (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'outline', size: 'sm', className: 'flex items-center gap-2', children: ["View All ", (0, jsx_runtime_1.jsx)(lucide_react_1.ArrowRight, { className: 'w-4 h-4' })] })] }), (0, jsx_runtime_1.jsx)("div", { className: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4', children: documents.slice(0, 3).map((doc) => ((0, jsx_runtime_1.jsx)(document_management_1.DocumentCard, { title: doc.name, documentId: doc.id, onViewClick: handleDocumentView, documentType: doc.documentType, description: doc.description, createdAt: doc.createdAt, fileSize: doc.fileSize, mimeType: doc.mimeType, uploadedBy: doc.uploadedBy, isVisibleToTenants: doc.isVisibleToTenants, compact: true }, doc.id))) })] })), (0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-1 lg:grid-cols-2 gap-6', children: [(0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Recent Activity" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Latest updates from your building" })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: 'space-y-4', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center space-x-4', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-2 h-2 bg-blue-500 rounded-full' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)("p", { className: 'text-sm font-medium', children: "Maintenance completed" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Elevator maintenance finished - Unit 4B" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "2 hours ago" })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center space-x-4', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-2 h-2 bg-green-500 rounded-full' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)("p", { className: 'text-sm font-medium', children: "Payment confirmed" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Monthly condo fees - $1,250" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "1 day ago" })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center space-x-4', children: [(0, jsx_runtime_1.jsx)("div", { className: 'w-2 h-2 bg-orange-500 rounded-full' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)("p", { className: 'text-sm font-medium', children: "New building notice" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Pool maintenance scheduled for next week" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "3 days ago" })] })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Upcoming Events" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Building events and important dates" })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: 'space-y-4', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between p-3 bg-blue-50 rounded-lg', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: 'text-sm font-medium', children: "Board Meeting" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Monthly community meeting" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-sm text-blue-600', children: "Jan 15" })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between p-3 bg-green-50 rounded-lg', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: 'text-sm font-medium', children: "Pool Reopening" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "After maintenance completion" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-sm text-green-600', children: "Jan 20" })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between p-3 bg-orange-50 rounded-lg', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: 'text-sm font-medium', children: "Fire Drill" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: "Mandatory building safety drill" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-sm text-orange-600', children: "Jan 25" })] })] })] })] })] }) })] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,