{"file":"/home/runner/workspace/node_modules/react-day-picker/dist/cjs/selection/useSingle.js","mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,MAAM,uBAAuB,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;AAC5E;;;;;;;;GAQG;AACH,SAAS,SAAS,CAAC,KAAK,EAAE,OAAO;IAC7B,MAAM,EAAE,QAAQ,EAAE,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,GAAG,GAAG,KAAK,CAAC;IACnE,MAAM,CAAC,kBAAkB,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACvJ,MAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,CAAC;IACpE,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAC9B,MAAM,UAAU,GAAG,CAAC,WAAW,EAAE,EAAE;QAC/B,OAAO,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/D,CAAC,CAAC;IACF,MAAM,MAAM,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE;QACzC,IAAI,OAAO,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,CAAC;YACxE,gDAAgD;YAChD,OAAO,GAAG,SAAS,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACZ,WAAW,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC;aACI,CAAC;YACF,QAAQ,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IACF,OAAO;QACH,QAAQ;QACR,MAAM;QACN,UAAU;KACb,CAAC;AACN,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/react-day-picker/dist/cjs/selection/useSingle.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSingle = useSingle;\nconst useControlledValue_js_1 = require(\"../helpers/useControlledValue.js\");\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */\nfunction useSingle(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = (0, useControlledValue_js_1.useControlledValue)(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (compareDate) => {\n        return selected ? isSameDay(selected, compareDate) : false;\n    };\n    const select = (triggerDate, modifiers, e) => {\n        let newDate = triggerDate;\n        if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n            // If the date is the same, clear the selection.\n            newDate = undefined;\n        }\n        if (!onSelect) {\n            setSelected(newDate);\n        }\n        if (required) {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        else {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        return newDate;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n"],"version":3}