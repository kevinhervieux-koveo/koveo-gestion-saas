{"file":"/home/runner/workspace/client/src/lib/documents.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/lib/documents.ts"],"sourcesContent":["/**\n * Document utility functions and constants.\n * Consolidates document-related functionality across the application.\n */\n\nimport { apiRequest } from '@/lib/queryClient';\nimport type { UploadResult } from '@uppy/core';\n\n/**\n * Document categories for building documents.\n */\nexport const BUILDING_DOCUMENT_CATEGORIES = [\n  { _value: 'bylaw', label: 'Bylaws' },\n  { _value: 'financial', label: 'Financial' },\n  { _value: 'maintenance', label: 'Maintenance' },\n  { _value: 'legal', label: 'Legal' },\n  { _value: 'meeting_minutes', label: 'Meeting Minutes' },\n  { _value: 'insurance', label: 'Insurance' },\n  { _value: 'contracts', label: 'Contracts' },\n  { _value: 'permits', label: 'Permits' },\n  { _value: 'inspection', label: 'Inspection' },\n  { _value: 'other', label: 'Other' },\n] as const;\n\n/**\n * Document categories for residence documents.\n */\nexport const RESIDENCE_DOCUMENT_CATEGORIES = [\n  { _value: 'lease', label: 'Lease Documents' },\n  { _value: 'inspection', label: 'Inspections' },\n  { _value: 'maintenance', label: 'Maintenance' },\n  { _value: 'financial', label: 'Financial' },\n  { _value: 'insurance', label: 'Insurance' },\n  { _value: 'legal', label: 'Legal' },\n  { _value: 'correspondence', label: 'Correspondence' },\n  { _value: 'permits', label: 'Permits' },\n  { _value: 'utilities', label: 'Utilities' },\n  { _value: 'other', label: 'Other' },\n] as const;\n\n/**\n * General document categories for resident use.\n */\nexport const GENERAL_DOCUMENT_CATEGORIES = [\n  { _value: 'lease', label: 'Lease Agreement' },\n  { _value: 'insurance', label: 'Insurance' },\n  { _value: 'inspection', label: 'Inspections' },\n  { _value: 'maintenance', label: 'Maintenance' },\n  { _value: 'financial', label: 'Financial' },\n  { _value: 'legal', label: 'Legal Documents' },\n  { _value: 'correspondence', label: 'Correspondence' },\n  { _value: 'utilities', label: 'Utilities' },\n  { _value: 'other', label: 'Other' },\n] as const;\n\n/**\n * Utility function to convert raw object storage URLs to server routes.\n * @param fileUrl - The file URL to convert.\n * @returns The displayable file URL.\n */\n/**\n * Get displayable file url.\n * @param fileUrl - FileUrl parameter.\n * @returns String result.\n */\nexport function /**\n * Get displayable file url.\n * @param fileUrl - FileUrl parameter.\n * @returns String result.\n */ /**\n * Get displayable file url.\n * @param fileUrl - FileUrl parameter.\n * @returns String result.\n */\n\ngetDisplayableFileUrl(fileUrl: string): string {\n  /**\n   * If function.\n   * @param !fileUrl - !fileUrl parameter.\n   */ /**\n   * If function.\n   * @param !fileUrl - !fileUrl parameter.\n   */\n\n  if (!fileUrl) {\n    return '';\n  }\n\n  // If it's already a proper server route, return as-is\n  if (fileUrl.startsWith('/objects/') || fileUrl.startsWith('/public-objects/')) {\n    return fileUrl;\n  }\n\n  // If it starts with /objects/, use as-is\n  if (fileUrl.startsWith('/objects/')) {\n    return fileUrl;\n  }\n\n  // For other formats, try to use as objects route\n  return `/objects/${fileUrl.replace(/^\\/+/, '')}`;\n}\n\n/**\n * Document API operations.\n */\nexport const documentApi = {\n  /**\n   * Create a new document.\n   * @param data - Document data to create.\n   * @param _data\n   * @returns Promise with the created document.\n   */\n  create: (_data: Record<string, unknown>) => {\n    return apiRequest('POST', '/api/documents', _data);\n  },\n\n  /**\n   * Update an existing document.\n   * @param id - Document ID to update.\n   * @param data - Updated document data.\n   * @param _data\n   * @returns Promise with the updated document.\n   */\n  update: (id: string, _data: Record<string, unknown>) => {\n    return apiRequest('PUT', `/api/documents/${id}`, _data);\n  },\n\n  /**\n   * Delete a document.\n   * @param id - Document ID to delete.\n   * @returns Promise with deletion confirmation.\n   */\n  delete: (id: string) => {\n    return apiRequest('DELETE', `/api/documents/${id}`);\n  },\n\n  /**\n   * Upload a file for a document.\n   * @param id - Document ID.\n   * @param fileData - File data to upload.\n   * @returns Promise with upload result.\n   */\n  upload: (id: string, fileData: FormData) => {\n    return apiRequest('POST', `/api/documents/${id}/upload`, fileData);\n  },\n};\n\n/**\n * Common upload handler factory.\n * @param documentId - The document ID.\n * @param onSuccess - Success callback.\n * @param onError - Error callback.\n * @returns Upload handler function.\n */\nexport function createUploadHandler(\n  documentId: string,\n  onSuccess?: () => void,\n  onError?: (_error: Error) => void\n) {\n  return (_result: UploadResult<Record<string, unknown>, Record<string, unknown>>) => {\n    try {\n      /**\n       * If function.\n       * @param result.successful && result.successful.length > 0 - result.successful && result.successful.length > 0 parameter.\n       */ /**\n       * If function.\n       * @param result.successful && result.successful.length > 0 - result.successful && result.successful.length > 0 parameter.\n       */\n\n      if (_result.successful && _result.successful.length > 0) {\n        onSuccess?.();\n      } else if (_result.failed && _result.failed.length > 0) {\n        const error = new Error(`Upload failed: ${_result.failed[0].error}`);\n        onError?.(error);\n      }\n    } catch (error) {\n      onError?.(error as Error);\n    }\n  };\n}\n\n/**\n * Get category label by value.\n * @param categories - Array of category objects.\n * @param value - Category value to find.\n * @returns Category label or the original value.\n */\n/**\n * Get category label.\n * @param categories - Categories parameter.\n * @param value - Value to process.\n * @param _value\n * @returns String result.\n */\nexport function /**\n * Get category label.\n * @param categories - Categories parameter.\n * @param value - Value to process.\n * @returns String result.\n */ /**\n * Get category label.\n * @param categories - Categories parameter.\n * @param value - Value to process.\n * @returns String result.\n */\n\ngetCategoryLabel(categories: readonly { _value: string; label: string }[], _value: string): string {\n  return categories.find((cat) => cat._value === _value)?.label || _value;\n}\n"],"version":3}