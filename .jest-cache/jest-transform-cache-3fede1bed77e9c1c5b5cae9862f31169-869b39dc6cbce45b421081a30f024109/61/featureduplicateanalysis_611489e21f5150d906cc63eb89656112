d13b92a3192e2f91ef6a5baf38b6fae7
"use strict";

/* istanbul ignore next */
function cov_2cf4xlcy1w() {
  var path = "/home/runner/workspace/client/src/components/roadmap/feature-duplicate-analysis.tsx";
  var hash = "9b0a2c475330bef79a18483180f7b007cdfd35d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/components/roadmap/feature-duplicate-analysis.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 66
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 44
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "5": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "6": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "7": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 46
        }
      },
      "8": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "10": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "11": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "13": {
        start: {
          line: 26,
          column: 31
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "14": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "16": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 32,
          column: 17
        }
      },
      "17": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "18": {
        start: {
          line: 33,
          column: 34
        },
        end: {
          line: 33,
          column: 110
        }
      },
      "19": {
        start: {
          line: 34,
          column: 34
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "20": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "21": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "22": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "23": {
        start: {
          line: 43,
          column: 41
        },
        end: {
          line: 46,
          column: 52
        }
      },
      "24": {
        start: {
          line: 46,
          column: 39
        },
        end: {
          line: 46,
          column: 51
        }
      },
      "25": {
        start: {
          line: 47,
          column: 39
        },
        end: {
          line: 50,
          column: 52
        }
      },
      "26": {
        start: {
          line: 50,
          column: 39
        },
        end: {
          line: 50,
          column: 51
        }
      },
      "27": {
        start: {
          line: 51,
          column: 40
        },
        end: {
          line: 51,
          column: 96
        }
      },
      "28": {
        start: {
          line: 51,
          column: 70
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "29": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 55,
          column: 21
        }
      },
      "30": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 54
        }
      },
      "31": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "32": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 24
        }
      },
      "33": {
        start: {
          line: 67,
          column: 27
        },
        end: {
          line: 76,
          column: 27
        }
      },
      "34": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 68,
          column: 114
        }
      },
      "35": {
        start: {
          line: 68,
          column: 85
        },
        end: {
          line: 68,
          column: 113
        }
      },
      "36": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 69,
          column: 116
        }
      },
      "37": {
        start: {
          line: 69,
          column: 85
        },
        end: {
          line: 69,
          column: 115
        }
      },
      "38": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "39": {
        start: {
          line: 73,
          column: 86
        },
        end: {
          line: 73,
          column: 99
        }
      },
      "40": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "41": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "42": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "43": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 52
        }
      },
      "44": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "45": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 20
        }
      },
      "46": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "47": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 286
        }
      },
      "48": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 278
        }
      },
      "49": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "50": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 20
        }
      },
      "51": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "52": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "53": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 20
        }
      },
      "54": {
        start: {
          line: 124,
          column: 27
        },
        end: {
          line: 124,
          column: 82
        }
      },
      "55": {
        start: {
          line: 124,
          column: 64
        },
        end: {
          line: 124,
          column: 70
        }
      },
      "56": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "57": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 149
        }
      },
      "58": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 155
        }
      }
    },
    fnMap: {
      "0": {
        name: "useFeatureDuplicateAnalysis",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 36
          }
        },
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 51
          },
          end: {
            line: 20,
            column: 52
          }
        },
        loc: {
          start: {
            line: 20,
            column: 57
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 26
          }
        },
        loc: {
          start: {
            line: 25,
            column: 46
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 30
          }
        },
        loc: {
          start: {
            line: 29,
            column: 59
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 33
          }
        },
        loc: {
          start: {
            line: 46,
            column: 39
          },
          end: {
            line: 46,
            column: 51
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 33
          }
        },
        loc: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 51
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 60
          },
          end: {
            line: 51,
            column: 61
          }
        },
        loc: {
          start: {
            line: 51,
            column: 70
          },
          end: {
            line: 51,
            column: 95
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 48
          },
          end: {
            line: 67,
            column: 49
          }
        },
        loc: {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 78
          },
          end: {
            line: 68,
            column: 79
          }
        },
        loc: {
          start: {
            line: 68,
            column: 85
          },
          end: {
            line: 68,
            column: 113
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 69,
            column: 78
          },
          end: {
            line: 69,
            column: 79
          }
        },
        loc: {
          start: {
            line: 69,
            column: 85
          },
          end: {
            line: 69,
            column: 115
          }
        },
        line: 69
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 73,
            column: 79
          },
          end: {
            line: 73,
            column: 80
          }
        },
        loc: {
          start: {
            line: 73,
            column: 86
          },
          end: {
            line: 73,
            column: 99
          }
        },
        line: 73
      },
      "11": {
        name: "getDuplicateBadge",
        decl: {
          start: {
            line: 90,
            column: 9
          },
          end: {
            line: 90,
            column: 26
          }
        },
        loc: {
          start: {
            line: 90,
            column: 57
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 90
      },
      "12": {
        name: "getDuplicateNote",
        decl: {
          start: {
            line: 116,
            column: 9
          },
          end: {
            line: 116,
            column: 25
          }
        },
        loc: {
          start: {
            line: 116,
            column: 56
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 116
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 124,
            column: 57
          },
          end: {
            line: 124,
            column: 58
          }
        },
        loc: {
          start: {
            line: 124,
            column: 64
          },
          end: {
            line: 124,
            column: 70
          }
        },
        line: 124
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        }, {
          start: {
            line: 42,
            column: 21
          },
          end: {
            line: 56,
            column: 17
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 20
          },
          end: {
            line: 37,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 20
          },
          end: {
            line: 37,
            column: 29
          }
        }, {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 43
          }
        }, {
          start: {
            line: 37,
            column: 47
          },
          end: {
            line: 37,
            column: 66
          }
        }, {
          start: {
            line: 37,
            column: 70
          },
          end: {
            line: 37,
            column: 94
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 55,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 55,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 47
          }
        }, {
          start: {
            line: 53,
            column: 51
          },
          end: {
            line: 53,
            column: 97
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 62,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 62,
            column: 52
          }
        }, {
          start: {
            line: 62,
            column: 55
          },
          end: {
            line: 62,
            column: 97
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 55
          },
          end: {
            line: 62,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 79
          },
          end: {
            line: 62,
            column: 88
          }
        }, {
          start: {
            line: 62,
            column: 91
          },
          end: {
            line: 62,
            column: 97
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 16
          }
        }, {
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 40
          }
        }],
        line: 95
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 103,
            column: 5
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "13": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "14": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 16
          }
        }, {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 121,
            column: 40
          }
        }],
        line: 121
      },
      "15": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 125
      },
      "16": {
        loc: {
          start: {
            line: 126,
            column: 70
          },
          end: {
            line: 126,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 101
          },
          end: {
            line: 126,
            column: 112
          }
        }, {
          start: {
            line: 126,
            column: 115
          },
          end: {
            line: 126,
            column: 127
          }
        }],
        line: 126
      },
      "17": {
        loc: {
          start: {
            line: 129,
            column: 80
          },
          end: {
            line: 129,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 111
          },
          end: {
            line: 129,
            column: 120
          }
        }, {
          start: {
            line: 129,
            column: 123
          },
          end: {
            line: 129,
            column: 133
          }
        }],
        line: 129
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/components/roadmap/feature-duplicate-analysis.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/components/roadmap/feature-duplicate-analysis.tsx"],
      sourcesContent: ["import { useMemo } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { AlertTriangle, Copy } from 'lucide-react';\nimport type { Feature } from '@shared/schema';\n\n/**\n * Duplicate analysis result for a feature.\n */\nexport interface DuplicateInfo {\n  isDuplicate: boolean;\n  duplicateCount: number;\n  duplicateFeatures: Feature[];\n  similarityType: 'exact' | 'similar' | 'none';\n}\n\n/**\n * Props for duplicate analysis component.\n */\ninterface FeatureDuplicateAnalysisProps {\n  features: Feature[];\n}\n\n/**\n * Hook for analyzing feature duplicates and similarities.\n * @param features\n */\n/**\n * UseFeatureDuplicateAnalysis function.\n * @param features\n * @returns Function result.\n */\nexport function useFeatureDuplicateAnalysis(features: Feature[]) {\n  const duplicateAnalysis = useMemo(() => {\n    if (!features.length) {\n      return new Map<string, DuplicateInfo>();\n    }\n\n    const analysis = new Map<string, DuplicateInfo>();\n\n    features.forEach((feature: Feature, _index: number) => {\n      const duplicates: Feature[] = [];\n      let exactMatch = false;\n\n      // Compare with all other features\n      features.forEach((otherFeature: Feature, otherIndex: number) => {\n        if (_index === otherIndex) {\n          return;\n        }\n\n        const nameMatch =\n          feature.name.toLowerCase().trim() === otherFeature.name.toLowerCase().trim();\n        const descMatch =\n          feature.description?.toLowerCase().trim() ===\n          otherFeature.description?.toLowerCase().trim();\n\n        // Check for exact duplicates (same name OR same description)\n        if (nameMatch || (descMatch && feature.description && otherFeature.description)) {\n          duplicates.push(otherFeature);\n          exactMatch = true;\n        }\n        // Check for similar features (containing similar keywords)\n        else {\n          const featureWords = feature.name\n            .toLowerCase()\n            .split(/\\s+/)\n            .filter((w: string) => w.length > 3);\n          const otherWords = otherFeature.name\n            .toLowerCase()\n            .split(/\\s+/)\n            .filter((w: string) => w.length > 3);\n\n          const commonWords = featureWords.filter((word: string) => otherWords.includes(word));\n\n          // If more than 50% of significant words match, consider it similar\n          if (featureWords.length > 0 && commonWords.length / featureWords.length > 0.5) {\n            duplicates.push(otherFeature);\n          }\n        }\n      });\n\n      analysis.set(feature.id, {\n        isDuplicate: duplicates.length > 0,\n        duplicateCount: duplicates.length,\n        duplicateFeatures: duplicates,\n        similarityType: exactMatch ? 'exact' : duplicates.length > 0 ? 'similar' : 'none',\n      });\n    });\n\n    return analysis;\n  }, [features]);\n\n  const duplicateStats = useMemo(() => {\n    const exactDuplicates = Array.from(duplicateAnalysis.values()).filter(\n      (d) => d.similarityType === 'exact'\n    );\n    const similarFeatures = Array.from(duplicateAnalysis.values()).filter(\n      (d) => d.similarityType === 'similar'\n    );\n\n    return {\n      totalExact: exactDuplicates.length,\n      totalSimilar: similarFeatures.length,\n      totalWithDuplicates: Array.from(duplicateAnalysis.values()).filter((d) => d.isDuplicate)\n        .length,\n    };\n  }, [duplicateAnalysis]);\n\n  return { duplicateAnalysis, duplicateStats };\n}\n\n/**\n * Gets duplicate badge for a feature.\n * @param featureId\n * @param duplicateAnalysis\n */\n/**\n * GetDuplicateBadge function.\n * @param featureId\n * @param duplicateAnalysis\n * @returns Function result.\n */\nexport function getDuplicateBadge(\n  featureId: string,\n  duplicateAnalysis: Map<string, DuplicateInfo> | undefined\n) {\n  if (!duplicateAnalysis) {\n    return null;\n  }\n  const dupInfo = duplicateAnalysis.get(featureId);\n  if (!dupInfo || !dupInfo.isDuplicate) {\n    return null;\n  }\n\n  if (dupInfo.similarityType === 'exact') {\n    return (\n      <Badge className='bg-red-100 text-red-800 hover:bg-red-100 ml-2 flex items-center gap-1'>\n        <AlertTriangle className='h-3 w-3' />\n        Exact Duplicate ({dupInfo.duplicateCount})\n      </Badge>\n    );\n  } else {\n    return (\n      <Badge className='bg-orange-100 text-orange-800 hover:bg-orange-100 ml-2 flex items-center gap-1'>\n        <Copy className='h-3 w-3' />\n        Similar ({dupInfo.duplicateCount})\n      </Badge>\n    );\n  }\n}\n\n/**\n * Gets duplicate note text for a feature.\n * @param featureId\n * @param duplicateAnalysis\n */\n/**\n * GetDuplicateNote function.\n * @param featureId\n * @param duplicateAnalysis\n * @returns Function result.\n */\nexport function getDuplicateNote(\n  featureId: string,\n  duplicateAnalysis: Map<string, DuplicateInfo> | undefined\n) {\n  if (!duplicateAnalysis) {\n    return null;\n  }\n  const dupInfo = duplicateAnalysis.get(featureId);\n  if (!dupInfo || !dupInfo.isDuplicate) {\n    return null;\n  }\n\n  const duplicateNames = dupInfo.duplicateFeatures.map((f) => f.name).join(', ');\n\n  if (dupInfo.similarityType === 'exact') {\n    return `\u26A0\uFE0F This feature has ${dupInfo.duplicateCount} exact ${dupInfo.duplicateCount === 1 ? 'duplicate' : 'duplicates'}: ${duplicateNames}`;\n  } else {\n    return `\uD83D\uDCCB This feature is similar to ${dupInfo.duplicateCount} other ${dupInfo.duplicateCount === 1 ? 'feature' : 'features'}: ${duplicateNames}`;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9b0a2c475330bef79a18483180f7b007cdfd35d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cf4xlcy1w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cf4xlcy1w();
cov_2cf4xlcy1w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2cf4xlcy1w().s[1]++;
exports.useFeatureDuplicateAnalysis = useFeatureDuplicateAnalysis;
/* istanbul ignore next */
cov_2cf4xlcy1w().s[2]++;
exports.getDuplicateBadge = getDuplicateBadge;
/* istanbul ignore next */
cov_2cf4xlcy1w().s[3]++;
exports.getDuplicateNote = getDuplicateNote;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_2cf4xlcy1w().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_2cf4xlcy1w().s[5]++, require("react"));
const badge_1 =
/* istanbul ignore next */
(cov_2cf4xlcy1w().s[6]++, require("@/components/ui/badge"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_2cf4xlcy1w().s[7]++, require("lucide-react"));
/**
 * Hook for analyzing feature duplicates and similarities.
 * @param features
 */
/**
 * UseFeatureDuplicateAnalysis function.
 * @param features
 * @returns Function result.
 */
function useFeatureDuplicateAnalysis(features) {
  /* istanbul ignore next */
  cov_2cf4xlcy1w().f[0]++;
  const duplicateAnalysis =
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().s[8]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().f[1]++;
    cov_2cf4xlcy1w().s[9]++;
    if (!features.length) {
      /* istanbul ignore next */
      cov_2cf4xlcy1w().b[0][0]++;
      cov_2cf4xlcy1w().s[10]++;
      return new Map();
    } else
    /* istanbul ignore next */
    {
      cov_2cf4xlcy1w().b[0][1]++;
    }
    const analysis =
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().s[11]++, new Map());
    /* istanbul ignore next */
    cov_2cf4xlcy1w().s[12]++;
    features.forEach((feature, _index) => {
      /* istanbul ignore next */
      cov_2cf4xlcy1w().f[2]++;
      const duplicates =
      /* istanbul ignore next */
      (cov_2cf4xlcy1w().s[13]++, []);
      let exactMatch =
      /* istanbul ignore next */
      (cov_2cf4xlcy1w().s[14]++, false);
      // Compare with all other features
      /* istanbul ignore next */
      cov_2cf4xlcy1w().s[15]++;
      features.forEach((otherFeature, otherIndex) => {
        /* istanbul ignore next */
        cov_2cf4xlcy1w().f[3]++;
        cov_2cf4xlcy1w().s[16]++;
        if (_index === otherIndex) {
          /* istanbul ignore next */
          cov_2cf4xlcy1w().b[1][0]++;
          cov_2cf4xlcy1w().s[17]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2cf4xlcy1w().b[1][1]++;
        }
        const nameMatch =
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().s[18]++, feature.name.toLowerCase().trim() === otherFeature.name.toLowerCase().trim());
        const descMatch =
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().s[19]++, feature.description?.toLowerCase().trim() === otherFeature.description?.toLowerCase().trim());
        // Check for exact duplicates (same name OR same description)
        /* istanbul ignore next */
        cov_2cf4xlcy1w().s[20]++;
        if (
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[3][0]++, nameMatch) ||
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[3][1]++, descMatch) &&
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[3][2]++, feature.description) &&
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[3][3]++, otherFeature.description)) {
          /* istanbul ignore next */
          cov_2cf4xlcy1w().b[2][0]++;
          cov_2cf4xlcy1w().s[21]++;
          duplicates.push(otherFeature);
          /* istanbul ignore next */
          cov_2cf4xlcy1w().s[22]++;
          exactMatch = true;
        }
        // Check for similar features (containing similar keywords)
        else {
          /* istanbul ignore next */
          cov_2cf4xlcy1w().b[2][1]++;
          const featureWords =
          /* istanbul ignore next */
          (cov_2cf4xlcy1w().s[23]++, feature.name.toLowerCase().split(/\s+/).filter(w => {
            /* istanbul ignore next */
            cov_2cf4xlcy1w().f[4]++;
            cov_2cf4xlcy1w().s[24]++;
            return w.length > 3;
          }));
          const otherWords =
          /* istanbul ignore next */
          (cov_2cf4xlcy1w().s[25]++, otherFeature.name.toLowerCase().split(/\s+/).filter(w => {
            /* istanbul ignore next */
            cov_2cf4xlcy1w().f[5]++;
            cov_2cf4xlcy1w().s[26]++;
            return w.length > 3;
          }));
          const commonWords =
          /* istanbul ignore next */
          (cov_2cf4xlcy1w().s[27]++, featureWords.filter(word => {
            /* istanbul ignore next */
            cov_2cf4xlcy1w().f[6]++;
            cov_2cf4xlcy1w().s[28]++;
            return otherWords.includes(word);
          }));
          // If more than 50% of significant words match, consider it similar
          /* istanbul ignore next */
          cov_2cf4xlcy1w().s[29]++;
          if (
          /* istanbul ignore next */
          (cov_2cf4xlcy1w().b[5][0]++, featureWords.length > 0) &&
          /* istanbul ignore next */
          (cov_2cf4xlcy1w().b[5][1]++, commonWords.length / featureWords.length > 0.5)) {
            /* istanbul ignore next */
            cov_2cf4xlcy1w().b[4][0]++;
            cov_2cf4xlcy1w().s[30]++;
            duplicates.push(otherFeature);
          } else
          /* istanbul ignore next */
          {
            cov_2cf4xlcy1w().b[4][1]++;
          }
        }
      });
      /* istanbul ignore next */
      cov_2cf4xlcy1w().s[31]++;
      analysis.set(feature.id, {
        isDuplicate: duplicates.length > 0,
        duplicateCount: duplicates.length,
        duplicateFeatures: duplicates,
        similarityType: exactMatch ?
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[6][0]++, 'exact') :
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[6][1]++, duplicates.length > 0 ?
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[7][0]++, 'similar') :
        /* istanbul ignore next */
        (cov_2cf4xlcy1w().b[7][1]++, 'none'))
      });
    });
    /* istanbul ignore next */
    cov_2cf4xlcy1w().s[32]++;
    return analysis;
  }, [features]));
  const duplicateStats =
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().s[33]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().f[7]++;
    const exactDuplicates =
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().s[34]++, Array.from(duplicateAnalysis.values()).filter(d => {
      /* istanbul ignore next */
      cov_2cf4xlcy1w().f[8]++;
      cov_2cf4xlcy1w().s[35]++;
      return d.similarityType === 'exact';
    }));
    const similarFeatures =
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().s[36]++, Array.from(duplicateAnalysis.values()).filter(d => {
      /* istanbul ignore next */
      cov_2cf4xlcy1w().f[9]++;
      cov_2cf4xlcy1w().s[37]++;
      return d.similarityType === 'similar';
    }));
    /* istanbul ignore next */
    cov_2cf4xlcy1w().s[38]++;
    return {
      totalExact: exactDuplicates.length,
      totalSimilar: similarFeatures.length,
      totalWithDuplicates: Array.from(duplicateAnalysis.values()).filter(d => {
        /* istanbul ignore next */
        cov_2cf4xlcy1w().f[10]++;
        cov_2cf4xlcy1w().s[39]++;
        return d.isDuplicate;
      }).length
    };
  }, [duplicateAnalysis]));
  /* istanbul ignore next */
  cov_2cf4xlcy1w().s[40]++;
  return {
    duplicateAnalysis,
    duplicateStats
  };
}
/**
 * Gets duplicate badge for a feature.
 * @param featureId
 * @param duplicateAnalysis
 */
/**
 * GetDuplicateBadge function.
 * @param featureId
 * @param duplicateAnalysis
 * @returns Function result.
 */
function getDuplicateBadge(featureId, duplicateAnalysis) {
  /* istanbul ignore next */
  cov_2cf4xlcy1w().f[11]++;
  cov_2cf4xlcy1w().s[41]++;
  if (!duplicateAnalysis) {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[8][0]++;
    cov_2cf4xlcy1w().s[42]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2cf4xlcy1w().b[8][1]++;
  }
  const dupInfo =
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().s[43]++, duplicateAnalysis.get(featureId));
  /* istanbul ignore next */
  cov_2cf4xlcy1w().s[44]++;
  if (
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().b[10][0]++, !dupInfo) ||
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().b[10][1]++, !dupInfo.isDuplicate)) {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[9][0]++;
    cov_2cf4xlcy1w().s[45]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2cf4xlcy1w().b[9][1]++;
  }
  cov_2cf4xlcy1w().s[46]++;
  if (dupInfo.similarityType === 'exact') {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[11][0]++;
    cov_2cf4xlcy1w().s[47]++;
    return (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
      className: 'bg-red-100 text-red-800 hover:bg-red-100 ml-2 flex items-center gap-1',
      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
        className: 'h-3 w-3'
      }), "Exact Duplicate (", dupInfo.duplicateCount, ")"]
    });
  } else {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[11][1]++;
    cov_2cf4xlcy1w().s[48]++;
    return (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
      className: 'bg-orange-100 text-orange-800 hover:bg-orange-100 ml-2 flex items-center gap-1',
      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Copy, {
        className: 'h-3 w-3'
      }), "Similar (", dupInfo.duplicateCount, ")"]
    });
  }
}
/**
 * Gets duplicate note text for a feature.
 * @param featureId
 * @param duplicateAnalysis
 */
/**
 * GetDuplicateNote function.
 * @param featureId
 * @param duplicateAnalysis
 * @returns Function result.
 */
function getDuplicateNote(featureId, duplicateAnalysis) {
  /* istanbul ignore next */
  cov_2cf4xlcy1w().f[12]++;
  cov_2cf4xlcy1w().s[49]++;
  if (!duplicateAnalysis) {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[12][0]++;
    cov_2cf4xlcy1w().s[50]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2cf4xlcy1w().b[12][1]++;
  }
  const dupInfo =
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().s[51]++, duplicateAnalysis.get(featureId));
  /* istanbul ignore next */
  cov_2cf4xlcy1w().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().b[14][0]++, !dupInfo) ||
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().b[14][1]++, !dupInfo.isDuplicate)) {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[13][0]++;
    cov_2cf4xlcy1w().s[53]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2cf4xlcy1w().b[13][1]++;
  }
  const duplicateNames =
  /* istanbul ignore next */
  (cov_2cf4xlcy1w().s[54]++, dupInfo.duplicateFeatures.map(f => {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().f[13]++;
    cov_2cf4xlcy1w().s[55]++;
    return f.name;
  }).join(', '));
  /* istanbul ignore next */
  cov_2cf4xlcy1w().s[56]++;
  if (dupInfo.similarityType === 'exact') {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[15][0]++;
    cov_2cf4xlcy1w().s[57]++;
    return `⚠️ This feature has ${dupInfo.duplicateCount} exact ${dupInfo.duplicateCount === 1 ?
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().b[16][0]++, 'duplicate') :
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().b[16][1]++, 'duplicates')}: ${duplicateNames}`;
  } else {
    /* istanbul ignore next */
    cov_2cf4xlcy1w().b[15][1]++;
    cov_2cf4xlcy1w().s[58]++;
    return `📋 This feature is similar to ${dupInfo.duplicateCount} other ${dupInfo.duplicateCount === 1 ?
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().b[17][0]++, 'feature') :
    /* istanbul ignore next */
    (cov_2cf4xlcy1w().b[17][1]++, 'features')}: ${duplicateNames}`;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,