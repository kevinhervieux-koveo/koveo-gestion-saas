{"file":"/home/runner/workspace/client/src/components/InvitationManagement.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/InvitationManagement.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { Button } from '@/components/ui/button';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { NoDataCard } from '@/components/ui/no-data-card';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Trash2, Mail, Clock, Building2, Home } from 'lucide-react';\n\ninterface InvitationWithDetails {\n  id: string;\n  email: string;\n  role: string;\n  status: string;\n  expiresAt: string;\n  createdAt: string;\n  organizationId: string | null;\n  buildingId: string | null;\n  residenceId: string | null;\n  organizationName?: string;\n  buildingName?: string;\n  residenceUnitNumber?: string;\n  invitedByName?: string;\n}\n\nexport function InvitationManagement() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const queryClient = useQueryClient();\n  const [deletingInvitation, setDeletingInvitation] = useState<InvitationWithDetails | null>(null);\n\n  // Fetch pending invitations with role-based filtering\n  const { data: invitations = [], isLoading } = useQuery<InvitationWithDetails[]>({\n    queryKey: ['/api/invitations/pending'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/invitations/pending');\n      return response.json();\n    },\n  });\n\n  // Delete invitation mutation\n  const deleteInvitationMutation = useMutation({\n    mutationFn: async (invitationId: string) => {\n      const response = await apiRequest('DELETE', `/api/invitations/${invitationId}`);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: t('invitationDeletedSuccess'),\n      });\n      setDeletingInvitation(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/invitations/pending'] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'Error',\n        description: t('invitationDeletedError'),\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-CA', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const isExpired = (expiresAt: string) => {\n    return new Date(expiresAt) < new Date();\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'manager':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'tenant':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'resident':\n        return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('pendingInvitations')}</CardTitle>\n          <CardDescription>{t('loadingInvitations')}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Mail className=\"h-5 w-5\" />\n            {t('pendingInvitations')}\n          </CardTitle>\n          <CardDescription>\n            {t('managePendingInvitations')}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {invitations.length === 0 ? (\n            <NoDataCard\n              icon={Mail}\n              titleKey=\"noInvitationsFound\"\n              descriptionKey=\"noInvitationsFound\"\n              testId=\"no-invitations-message\"\n              iconSize={12}\n            />\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{t('email')}</TableHead>\n                    <TableHead>{t('role')}</TableHead>\n                    <TableHead>{t('organization')}</TableHead>\n                    <TableHead>{t('building')}</TableHead>\n                    <TableHead>{t('residence')}</TableHead>\n                    <TableHead>{t('expires')}</TableHead>\n                    <TableHead>{t('status')}</TableHead>\n                    <TableHead className=\"text-right\">{t('actions')}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {invitations.map((invitation) => (\n                    <TableRow key={invitation.id} data-testid={`invitation-row-${invitation.id}`}>\n                      <TableCell className=\"font-medium\">\n                        <div className=\"flex items-center gap-2\">\n                          <Mail className=\"h-4 w-4 text-gray-400\" />\n                          {invitation.email}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge className={getRoleColor(invitation.role)}>\n                          {invitation.role}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        {invitation.organizationName ? (\n                          <div className=\"flex items-center gap-2\">\n                            <Building2 className=\"h-4 w-4 text-gray-400\" />\n                            <span className=\"text-sm\">{invitation.organizationName}</span>\n                          </div>\n                        ) : (\n                          <span className=\"text-gray-400 text-sm\">—</span>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {invitation.buildingName ? (\n                          <div className=\"flex items-center gap-2\">\n                            <Building2 className=\"h-4 w-4 text-gray-400\" />\n                            <span className=\"text-sm\">{invitation.buildingName}</span>\n                          </div>\n                        ) : (\n                          <span className=\"text-gray-400 text-sm\">—</span>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {invitation.residenceUnitNumber ? (\n                          <div className=\"flex items-center gap-2\">\n                            <Home className=\"h-4 w-4 text-gray-400\" />\n                            <span className=\"text-sm\">{t('unit')} {invitation.residenceUnitNumber}</span>\n                          </div>\n                        ) : (\n                          <span className=\"text-gray-400 text-sm\">—</span>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <Clock className=\"h-4 w-4 text-gray-400\" />\n                          <span className={`text-sm ${isExpired(invitation.expiresAt) ? 'text-red-600' : ''}`}>\n                            {formatDate(invitation.expiresAt)}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge \n                          variant={isExpired(invitation.expiresAt) ? 'destructive' : 'default'}\n                        >\n                          {isExpired(invitation.expiresAt) ? t('expired') : t('pending')}\n                        </Badge>\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => setDeletingInvitation(invitation)}\n                          data-testid={`button-delete-invitation-${invitation.id}`}\n                          className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog \n        open={!!deletingInvitation} \n        onOpenChange={(open) => !open && setDeletingInvitation(null)}\n      >\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>{t('deleteInvitation')}</AlertDialogTitle>\n            <AlertDialogDescription>\n              {t('deleteInvitationConfirm').replace('{email}', deletingInvitation?.email || '')}\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel \n              disabled={deleteInvitationMutation.isPending}\n              data-testid=\"button-cancel-delete-invitation\"\n            >\n              {t('cancel')}\n            </AlertDialogCancel>\n            <AlertDialogAction\n              onClick={() => {\n                if (deletingInvitation) {\n                  deleteInvitationMutation.mutate(deletingInvitation.id);\n                }\n              }}\n              disabled={deleteInvitationMutation.isPending}\n              data-testid=\"button-confirm-delete-invitation\"\n              className=\"bg-red-600 hover:bg-red-700\"\n            >\n              {deleteInvitationMutation.isPending ? 'Deleting...' : 'Delete'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}"],"version":3}