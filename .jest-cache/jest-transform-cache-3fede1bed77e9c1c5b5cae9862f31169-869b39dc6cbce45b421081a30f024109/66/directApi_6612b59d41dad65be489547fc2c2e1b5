f0c6759d073cf558c55ad094f496abb0
'use strict';
var setup = require('./setup.js');
function clear(element) {
    return setup.setupDirect().api.clear(element);
}
function click(element, options = {}) {
    return setup.setupDirect(options, element).api.click(element);
}
function copy(options = {}) {
    return setup.setupDirect(options).api.copy();
}
function cut(options = {}) {
    return setup.setupDirect(options).api.cut();
}
function dblClick(element, options = {}) {
    return setup.setupDirect(options).api.dblClick(element);
}
function deselectOptions(select, values, options = {}) {
    return setup.setupDirect(options).api.deselectOptions(select, values);
}
function hover(element, options = {}) {
    return setup.setupDirect(options).api.hover(element);
}
async function keyboard(text, options = {}) {
    const { api, system } = setup.setupDirect(options);
    return api.keyboard(text).then(() => system);
}
async function pointer(input, options = {}) {
    const { api, system } = setup.setupDirect(options);
    return api.pointer(input).then(() => system);
}
function paste(clipboardData, options) {
    return setup.setupDirect(options).api.paste(clipboardData);
}
function selectOptions(select, values, options = {}) {
    return setup.setupDirect(options).api.selectOptions(select, values);
}
function tripleClick(element, options = {}) {
    return setup.setupDirect(options).api.tripleClick(element);
}
function type(element, text, options = {}) {
    return setup.setupDirect(options, element).api.type(element, text, options);
}
function unhover(element, options = {}) {
    const { api, system } = setup.setupDirect(options);
    system.pointer.setMousePosition({
        target: element
    });
    return api.unhover(element);
}
function upload(element, fileOrFiles, options = {}) {
    return setup.setupDirect(options).api.upload(element, fileOrFiles);
}
function tab(options = {}) {
    return setup.setupDirect().api.tab(options);
}
exports.clear = clear;
exports.click = click;
exports.copy = copy;
exports.cut = cut;
exports.dblClick = dblClick;
exports.deselectOptions = deselectOptions;
exports.hover = hover;
exports.keyboard = keyboard;
exports.paste = paste;
exports.pointer = pointer;
exports.selectOptions = selectOptions;
exports.tab = tab;
exports.tripleClick = tripleClick;
exports.type = type;
exports.unhover = unhover;
exports.upload = upload;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQHRlc3RpbmctbGlicmFyeS91c2VyLWV2ZW50L2Rpc3QvY2pzL3NldHVwL2RpcmVjdEFwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFYixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFFbEMsU0FBUyxLQUFLLENBQUMsT0FBTztJQUNsQixPQUFPLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFDRCxTQUFTLEtBQUssQ0FBQyxPQUFPLEVBQUUsT0FBTyxHQUFHLEVBQUU7SUFDaEMsT0FBTyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xFLENBQUM7QUFDRCxTQUFTLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRTtJQUN0QixPQUFPLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ2pELENBQUM7QUFDRCxTQUFTLEdBQUcsQ0FBQyxPQUFPLEdBQUcsRUFBRTtJQUNyQixPQUFPLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ2hELENBQUM7QUFDRCxTQUFTLFFBQVEsQ0FBQyxPQUFPLEVBQUUsT0FBTyxHQUFHLEVBQUU7SUFDbkMsT0FBTyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDNUQsQ0FBQztBQUNELFNBQVMsZUFBZSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxHQUFHLEVBQUU7SUFDakQsT0FBTyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFD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QUN0QixPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN0QixPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztBQUNwQixPQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUNsQixPQUFPLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM1QixPQUFPLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztBQUMxQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN0QixPQUFPLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM1QixPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN0QixPQUFPLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztBQUMxQixPQUFPLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztBQUN0QyxPQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUNsQixPQUFPLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztBQUNsQyxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztBQUNwQixPQUFPLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztBQUMxQixPQUFPLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AdGVzdGluZy1saWJyYXJ5L3VzZXItZXZlbnQvZGlzdC9janMvc2V0dXAvZGlyZWN0QXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHNldHVwID0gcmVxdWlyZSgnLi9zZXR1cC5qcycpO1xuXG5mdW5jdGlvbiBjbGVhcihlbGVtZW50KSB7XG4gICAgcmV0dXJuIHNldHVwLnNldHVwRGlyZWN0KCkuYXBpLmNsZWFyKGVsZW1lbnQpO1xufVxuZnVuY3Rpb24gY2xpY2soZWxlbWVudCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHNldHVwLnNldHVwRGlyZWN0KG9wdGlvbnMsIGVsZW1lbnQpLmFwaS5jbGljayhlbGVtZW50KTtcbn1cbmZ1bmN0aW9uIGNvcHkob3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHNldHVwLnNldHVwRGlyZWN0KG9wdGlvbnMpLmFwaS5jb3B5KCk7XG59XG5mdW5jdGlvbiBjdXQob3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHNldHVwLnNldHVwRGlyZWN0KG9wdGlvbnMpLmFwaS5jdXQoKTtcbn1cbmZ1bmN0aW9uIGRibENsaWNrKGVsZW1lbnQsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKS5hcGkuZGJsQ2xpY2soZWxlbWVudCk7XG59XG5mdW5jdGlvbiBkZXNlbGVjdE9wdGlvbnMoc2VsZWN0LCB2YWx1ZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKS5hcGkuZGVzZWxlY3RPcHRpb25zKHNlbGVjdCwgdmFsdWVzKTtcbn1cbmZ1bmN0aW9uIGhvdmVyKGVsZW1lbnQsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKS5hcGkuaG92ZXIoZWxlbWVudCk7XG59XG5hc3luYyBmdW5jdGlvbiBrZXlib2FyZCh0ZXh0LCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IGFwaSwgc3lzdGVtIH0gPSBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKTtcbiAgICByZXR1cm4gYXBpLmtleWJvYXJkKHRleHQpLnRoZW4oKCk9PnN5c3RlbSk7XG59XG5hc3luYyBmdW5jdGlvbiBwb2ludGVyKGlucHV0LCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IGFwaSwgc3lzdGVtIH0gPSBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKTtcbiAgICByZXR1cm4gYXBpLnBvaW50ZXIoaW5wdXQpLnRoZW4oKCk9PnN5c3RlbSk7XG59XG5mdW5jdGlvbiBwYXN0ZShjbGlwYm9hcmREYXRhLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHNldHVwLnNldHVwRGlyZWN0KG9wdGlvbnMpLmFwaS5wYXN0ZShjbGlwYm9hcmREYXRhKTtcbn1cbmZ1bmN0aW9uIHNlbGVjdE9wdGlvbnMoc2VsZWN0LCB2YWx1ZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKS5hcGkuc2VsZWN0T3B0aW9ucyhzZWxlY3QsIHZhbHVlcyk7XG59XG5mdW5jdGlvbiB0cmlwbGVDbGljayhlbGVtZW50LCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gc2V0dXAuc2V0dXBEaXJlY3Qob3B0aW9ucykuYXBpLnRyaXBsZUNsaWNrKGVsZW1lbnQpO1xufVxuZnVuY3Rpb24gdHlwZShlbGVtZW50LCB0ZXh0LCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gc2V0dXAuc2V0dXBEaXJlY3Qob3B0aW9ucywgZWxlbWVudCkuYXBpLnR5cGUoZWxlbWVudCwgdGV4dCwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiB1bmhvdmVyKGVsZW1lbnQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHsgYXBpLCBzeXN0ZW0gfSA9IHNldHVwLnNldHVwRGlyZWN0KG9wdGlvbnMpO1xuICAgIHN5c3RlbS5wb2ludGVyLnNldE1vdXNlUG9zaXRpb24oe1xuICAgICAgICB0YXJnZXQ6IGVsZW1lbnRcbiAgICB9KTtcbiAgICByZXR1cm4gYXBpLnVuaG92ZXIoZWxlbWVudCk7XG59XG5mdW5jdGlvbiB1cGxvYWQoZWxlbWVudCwgZmlsZU9yRmlsZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBzZXR1cC5zZXR1cERpcmVjdChvcHRpb25zKS5hcGkudXBsb2FkKGVsZW1lbnQsIGZpbGVPckZpbGVzKTtcbn1cbmZ1bmN0aW9uIHRhYihvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gc2V0dXAuc2V0dXBEaXJlY3QoKS5hcGkudGFiKG9wdGlvbnMpO1xufVxuXG5leHBvcnRzLmNsZWFyID0gY2xlYXI7XG5leHBvcnRzLmNsaWNrID0gY2xpY2s7XG5leHBvcnRzLmNvcHkgPSBjb3B5O1xuZXhwb3J0cy5jdXQgPSBjdXQ7XG5leHBvcnRzLmRibENsaWNrID0gZGJsQ2xpY2s7XG5leHBvcnRzLmRlc2VsZWN0T3B0aW9ucyA9IGRlc2VsZWN0T3B0aW9ucztcbmV4cG9ydHMuaG92ZXIgPSBob3ZlcjtcbmV4cG9ydHMua2V5Ym9hcmQgPSBrZXlib2FyZDtcbmV4cG9ydHMucGFzdGUgPSBwYXN0ZTtcbmV4cG9ydHMucG9pbnRlciA9IHBvaW50ZXI7XG5leHBvcnRzLnNlbGVjdE9wdGlvbnMgPSBzZWxlY3RPcHRpb25zO1xuZXhwb3J0cy50YWIgPSB0YWI7XG5leHBvcnRzLnRyaXBsZUNsaWNrID0gdHJpcGxlQ2xpY2s7XG5leHBvcnRzLnR5cGUgPSB0eXBlO1xuZXhwb3J0cy51bmhvdmVyID0gdW5ob3ZlcjtcbmV4cG9ydHMudXBsb2FkID0gdXBsb2FkO1xuIl0sInZlcnNpb24iOjN9