{"version":3,"names":["exports","UserResidencesTab","react_1","cov_1gcd480yg2","s","__importStar","require","button_1","card_1","checkbox_1","select_1","user","residences","onSave","isLoading","b","f","selectedResidences","setSelectedResidences","useState","useEffect","map","residence","residenceId","id","relationshipType","handleResidenceToggle","prev","exists","find","r","filter","handleRelationshipTypeChange","handleSave","assignments","assignment","startDate","Date","toISOString","split","isActive","isResidenceSelected","some","getResidenceRelationshipType","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","CardContent","className","Checkbox","checked","onCheckedChange","htmlFor","unitNumber","bedrooms","bathrooms","squareFootage","Select","value","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","onClick","disabled"],"sources":["/home/runner/workspace/client/src/components/user-tabs/UserResidencesTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { UserWithAssignments, Residence } from '@shared/schema';\n\ninterface UserResidencesTabProps {\n  user: UserWithAssignments | null;\n  residences: Residence[];\n  onSave: (residenceAssignments: any[]) => void;\n  isLoading?: boolean;\n}\n\nexport function UserResidencesTab({ user, residences, onSave, isLoading = false }: UserResidencesTabProps) {\n  const [selectedResidences, setSelectedResidences] = useState<{ \n    residenceId: string; \n    relationshipType: string; \n  }[]>([]);\n\n  useEffect(() => {\n    if (user && user.residences) {\n      setSelectedResidences(\n        user.residences.map((residence: any) => ({\n          residenceId: residence.id,\n          relationshipType: residence.relationshipType || 'tenant'\n        }))\n      );\n    }\n  }, [user]);\n\n  const handleResidenceToggle = (residenceId: string) => {\n    setSelectedResidences(prev => {\n      const exists = prev.find(r => r.residenceId === residenceId);\n      if (exists) {\n        return prev.filter(r => r.residenceId !== residenceId);\n      } else {\n        return [...prev, { residenceId, relationshipType: 'tenant' }];\n      }\n    });\n  };\n\n  const handleRelationshipTypeChange = (residenceId: string, relationshipType: string) => {\n    setSelectedResidences(prev =>\n      prev.map(r => \n        r.residenceId === residenceId \n          ? { ...r, relationshipType }\n          : r\n      )\n    );\n  };\n\n  const handleSave = () => {\n    const assignments = selectedResidences.map(assignment => ({\n      ...assignment,\n      startDate: new Date().toISOString().split('T')[0],\n      isActive: true\n    }));\n    onSave(assignments);\n  };\n\n  if (!user) return null;\n\n  const isResidenceSelected = (residenceId: string) => \n    selectedResidences.some(r => r.residenceId === residenceId);\n\n  const getResidenceRelationshipType = (residenceId: string) => \n    selectedResidences.find(r => r.residenceId === residenceId)?.relationshipType || 'tenant';\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Residence Assignments</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid gap-4 max-h-60 overflow-y-auto\">\n          {residences.map((residence) => (\n            <div key={residence.id} className=\"flex items-center space-x-2 p-2 border rounded\">\n              <Checkbox\n                id={`residence-${residence.id}`}\n                checked={isResidenceSelected(residence.id)}\n                onCheckedChange={() => handleResidenceToggle(residence.id)}\n                data-testid={`checkbox-residence-${residence.id}`}\n              />\n              <div className=\"flex-1\">\n                <label\n                  htmlFor={`residence-${residence.id}`}\n                  className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                >\n                  Unit {residence.unitNumber}\n                </label>\n                <p className=\"text-xs text-gray-500\">\n                  {residence.bedrooms} bed, {residence.bathrooms} bath\n                </p>\n                {residence.squareFootage && (\n                  <p className=\"text-xs text-gray-400\">{residence.squareFootage} sq ft</p>\n                )}\n              </div>\n              {isResidenceSelected(residence.id) && (\n                <Select\n                  value={getResidenceRelationshipType(residence.id)}\n                  onValueChange={(value) => handleRelationshipTypeChange(residence.id, value)}\n                >\n                  <SelectTrigger className=\"w-32\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"tenant\">Tenant</SelectItem>\n                    <SelectItem value=\"resident\">Resident</SelectItem>\n                  </SelectContent>\n                </Select>\n              )}\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"flex justify-end pt-4\">\n          <Button onClick={handleSave} disabled={isLoading} data-testid=\"save-residences\">\n            {isLoading ? 'Saving...' : 'Save Residence Assignments'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"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","ignoreList":[]}