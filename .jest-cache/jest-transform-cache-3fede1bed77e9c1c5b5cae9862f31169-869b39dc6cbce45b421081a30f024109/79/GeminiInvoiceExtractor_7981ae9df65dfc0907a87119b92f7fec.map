{"version":3,"names":["exports","GeminiInvoiceExtractor","react_1","cov_q0xxwkg5","s","require","react_query_1","schema_1","queryClient_1","file","onExtractionComplete","f","extractionMutation","useMutation","mutationFn","invoiceFile","formData","FormData","append","response","apiRequest","method","body","onSuccess","data","console","log","convertAiResponseToFormData","success","confidence","metadata","rawData","onError","error","errorMessage","message","includes","b","useEffect","isPending","name","mutate"],"sources":["/home/runner/workspace/client/src/components/invoices/GeminiInvoiceExtractor.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { AiExtractionResponse, convertAiResponseToFormData } from '@shared/schema';\nimport { apiRequest } from '@/lib/queryClient';\n\ninterface GeminiInvoiceExtractorProps {\n  /** The invoice file to process with AI extraction */\n  file: File | null;\n  /** Callback function to return extracted data to the parent component */\n  onExtractionComplete: (data: {\n    success: boolean;\n    formData?: any;\n    confidence?: number;\n    error?: string;\n    rawData?: AiExtractionResponse;\n  }) => void;\n}\n\n/**\n * GeminiInvoiceExtractor Component\n * \n * A client-side component that manages AI-powered invoice data extraction.\n * This component does not render any UI - it purely handles the API integration\n * for sending uploaded files to the Gemini AI service for structured data extraction.\n * \n * Features:\n * - TanStack Query integration with useMutation\n * - Automatic extraction triggering when file changes\n * - Structured error handling and response formatting\n * - Form data conversion for easy integration with react-hook-form\n * - Confidence scoring and extraction metadata\n */\nexport function GeminiInvoiceExtractor({ file, onExtractionComplete }: GeminiInvoiceExtractorProps) {\n  \n  // Mutation for AI invoice data extraction\n  const extractionMutation = useMutation({\n    mutationFn: async (invoiceFile: File) => {\n      // Create FormData for file upload\n      const formData = new FormData();\n      formData.append('invoiceFile', invoiceFile);\n      \n      // Make API request to extraction endpoint\n      const response = await apiRequest('/api/invoices/extract-data', {\n        method: 'POST',\n        body: formData,\n        // Note: Don't set Content-Type header - let browser set it for FormData\n      });\n      \n      return response;\n    },\n    onSuccess: (data) => {\n      console.log('[GEMINI EXTRACTOR] Extraction successful:', data);\n      \n      // Convert AI response to form data format\n      const formData = convertAiResponseToFormData(data.data);\n      \n      // Call the success callback with structured data\n      onExtractionComplete({\n        success: true,\n        formData,\n        confidence: data.metadata?.confidence,\n        rawData: data.data\n      });\n    },\n    onError: (error: any) => {\n      console.error('[GEMINI EXTRACTOR] Extraction failed:', error);\n      \n      // Handle different error types\n      let errorMessage = 'Failed to extract invoice data';\n      \n      if (error.message?.includes('RATE_LIMIT_EXCEEDED')) {\n        errorMessage = 'Too many extraction requests. Please wait before trying again.';\n      } else if (error.message?.includes('UNSUPPORTED_FILE_TYPE')) {\n        errorMessage = 'Unsupported file type. Please upload a PDF or image file.';\n      } else if (error.message?.includes('FILE_TOO_LARGE')) {\n        errorMessage = 'File is too large. Please upload a file smaller than 25MB.';\n      } else if (error.message?.includes('SERVICE_UNAVAILABLE')) {\n        errorMessage = 'AI extraction service is currently unavailable. Please try again later.';\n      }\n      \n      // Call the error callback\n      onExtractionComplete({\n        success: false,\n        error: errorMessage\n      });\n    }\n  });\n  \n  // Trigger extraction when file changes\n  useEffect(() => {\n    if (file && !extractionMutation.isPending) {\n      console.log('[GEMINI EXTRACTOR] Starting extraction for file:', file.name);\n      extractionMutation.mutate(file);\n    }\n  }, [file, extractionMutation.isPending]);\n  \n  // This component doesn't render anything - it's purely for side effects\n  return null;\n}\n\n// Export the component type for reuse\nexport type { GeminiInvoiceExtractorProps };"],"mappings":"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","ignoreList":[]}