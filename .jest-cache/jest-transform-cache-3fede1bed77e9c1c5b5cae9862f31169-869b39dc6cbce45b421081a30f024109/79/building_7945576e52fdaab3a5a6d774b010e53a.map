{"file":"/home/runner/workspace/client/src/pages/residents/building.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/residents/building.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLocation } from 'wouter';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Label } from '@/components/ui/label';\nimport {\n  Building as BuildingIcon,\n  MapPin,\n  Calendar,\n  FileText,\n  Home,\n  Car,\n  Package,\n  ArrowLeft,\n} from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport { withHierarchicalSelection } from '@/components/hoc/withHierarchicalSelection';\n\ninterface BuildingData {\n  id: string;\n  name: string;\n  address: string;\n  city: string;\n  state?: string;\n  postal_code: string;\n  organization_id: string;\n  province?: string;\n  postalCode?: string;\n  buildingType?: string;\n  yearBuilt?: number;\n  managementCompany?: string;\n  totalFloors?: number;\n  parkingSpaces?: number;\n  storageSpaces?: number;\n  amenities?: string | string[];\n}\n\ninterface MyBuildingProps {\n  buildingId?: string;\n  showBackButton?: boolean;\n  backButtonLabel?: string;\n  onBack?: () => void;\n}\n\nfunction MyBuilding({ buildingId, showBackButton, backButtonLabel, onBack }: MyBuildingProps) {\n  const [, navigate] = useLocation();\n  const { t } = useLanguage();\n\n  // Fetch user's accessible buildings and find the specific one\n  const {\n    data: userBuildings,\n    isLoading: isLoadingBuilding,\n  } = useQuery({\n    queryKey: ['/api/users/me/buildings'],\n    queryFn: async () => {\n      const response = await fetch('/api/users/me/buildings');\n      if (!response.ok) {\n        throw new Error('Failed to fetch buildings');\n      }\n      return response.json();\n    },\n    enabled: !!buildingId,\n  });\n\n  // Find the specific building from user's accessible buildings\n  const buildingData: BuildingData | null = React.useMemo(() => {\n    if (!userBuildings || !buildingId) return null;\n    const building = userBuildings.find((building: any) => building.id === buildingId);\n    if (!building) return null;\n    \n    // Map API response to our interface\n    return {\n      ...building,\n      province: building.state || building.province,\n      postalCode: building.postal_code || building.postalCode,\n    };\n  }, [userBuildings, buildingId]);\n\n  const handleViewDocuments = (targetBuildingId: string) => {\n    navigate(`/residents/building/documents?buildingId=${targetBuildingId}`);\n  };\n\n  if (isLoadingBuilding) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title='My Building' subtitle='View building information and documents' />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <div className='text-center py-8'>\n              <div className='animate-spin w-6 h-6 border-2 border-primary border-t-transparent rounded-full mx-auto'></div>\n              <p className='text-muted-foreground mt-2'>Loading building information...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!buildingData) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title='My Building' subtitle='View building information and documents' />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <BuildingIcon className='w-16 h-16 mx-auto text-gray-400 mb-4' />\n                <h3 className='text-lg font-semibold text-gray-600 mb-2'>\n                  Building Not Found\n                </h3>\n                <p className='text-gray-500'>Unable to load building information.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title='My Building' subtitle='View building information and documents' />\n\n      {showBackButton && onBack && (\n        <div className='border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60'>\n          <div className='flex items-center px-6 py-4'>\n            <Button\n              variant='outline'\n              size='sm'\n              onClick={onBack}\n              className='flex items-center gap-2'\n              data-testid='button-back-to-building'\n            >\n              <ArrowLeft className='w-4 h-4' />\n              {backButtonLabel}\n            </Button>\n          </div>\n        </div>\n      )}\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-4xl mx-auto space-y-6'>\n          {/* Building Details Card */}\n          <Card className='hover:shadow-lg transition-shadow'>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <BuildingIcon className='w-5 h-5' />\n                {buildingData.name}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-6'>\n              {/* Address Section */}\n              <div className='space-y-3'>\n                <div>\n                  <Label className='text-xs font-medium text-gray-500'>{t('address')}</Label>\n                  <div className='flex items-start gap-2 mt-1'>\n                    <MapPin className='w-4 h-4 mt-0.5 text-muted-foreground' />\n                    <div>\n                      <p className='text-sm text-gray-700'>{buildingData.address}</p>\n                      <p className='text-sm text-gray-700'>\n                        {buildingData.city}, {buildingData.province || buildingData.state} {buildingData.postalCode || buildingData.postal_code}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Building Details Grid */}\n              <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>\n                <div className='space-y-3'>\n                  {buildingData.buildingType && (\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>\n                        {t('buildingType')}\n                      </Label>\n                      <p className='text-sm text-gray-700 capitalize'>{buildingData.buildingType}</p>\n                    </div>\n                  )}\n                  \n                  {buildingData.yearBuilt && (\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>\n                        {t('yearBuilt')}\n                      </Label>\n                      <div className='flex items-center gap-2 mt-1'>\n                        <Calendar className='w-4 h-4 text-muted-foreground' />\n                        <span className='text-sm text-gray-700'>{buildingData.yearBuilt}</span>\n                      </div>\n                    </div>\n                  )}\n\n                  {buildingData.managementCompany && (\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>\n                        {t('managementCompany')}\n                      </Label>\n                      <p className='text-sm text-gray-700'>{buildingData.managementCompany}</p>\n                    </div>\n                  )}\n                </div>\n\n                <div className='space-y-3'>\n                  {buildingData.totalFloors && (\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>\n                        {t('totalFloors')}\n                      </Label>\n                      <div className='flex items-center gap-2 mt-1'>\n                        <BuildingIcon className='w-4 h-4 text-muted-foreground' />\n                        <span className='text-sm text-gray-700'>{buildingData.totalFloors}</span>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Parking and Storage */}\n                  {(buildingData.parkingSpaces || buildingData.storageSpaces) && (\n                    <div className='space-y-2'>\n                      {buildingData.parkingSpaces && (\n                        <div>\n                          <Label className='text-xs font-medium text-gray-500'>{t('parking')}</Label>\n                          <div className='flex items-center gap-2 mt-1'>\n                            <Car className='w-4 h-4 text-muted-foreground' />\n                            <span className='text-sm text-gray-700'>\n                              {buildingData.parkingSpaces} {t('spaces')}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                      {buildingData.storageSpaces && (\n                        <div>\n                          <Label className='text-xs font-medium text-gray-500'>{t('storage')}</Label>\n                          <div className='flex items-center gap-2 mt-1'>\n                            <Package className='w-4 h-4 text-muted-foreground' />\n                            <span className='text-sm text-gray-700'>\n                              {buildingData.storageSpaces} {t('units')}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              {/* Amenities */}\n              {buildingData.amenities && (\n                <div>\n                  <Label className='text-xs font-medium text-gray-500'>{t('amenities')}</Label>\n                  <div className='flex flex-wrap gap-2 mt-1'>\n                    {(() => {\n                      try {\n                        const amenities =\n                          typeof buildingData.amenities === 'string'\n                            ? JSON.parse(buildingData.amenities)\n                            : buildingData.amenities;\n                        return Array.isArray(amenities)\n                          ? amenities.map((amenity: string, index: number) => (\n                              <Badge key={index} variant='outline' className='text-xs'>\n                                {amenity}\n                              </Badge>\n                            ))\n                          : null;\n                      } catch (_e) {\n                        return (\n                          <span className='text-xs text-muted-foreground'>\n                            {t('unableToDisplayAmenities')}\n                          </span>\n                        );\n                      }\n                    })()}\n                  </div>\n                </div>\n              )}\n\n              {/* Actions */}\n              <div className='pt-4 border-t'>\n                <Button\n                  onClick={() => handleViewDocuments(buildingData.id)}\n                  className='w-full justify-start'\n                  data-testid='button-view-documents'\n                >\n                  <FileText className='w-4 h-4 mr-2' />\n                  {t('viewDocumentsButton')}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Export the component wrapped with hierarchical selection\nexport default withHierarchicalSelection(MyBuilding, {\n  hierarchy: ['organization', 'building'],\n});"],"version":3}