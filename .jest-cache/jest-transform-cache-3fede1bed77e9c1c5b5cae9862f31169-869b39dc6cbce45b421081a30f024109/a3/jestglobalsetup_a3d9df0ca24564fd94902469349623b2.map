{"file":"/home/runner/workspace/jest.global-setup.js","mappings":"AAAA;;;GAGG;AAEH,MAAM,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE;IAC1B,4DAA4D;IAC5D,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;IAC9B,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,MAAM,CAAC;IACxC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC;IAClC,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,MAAM,CAAC;IAE3C,2CAA2C;IAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,kDAAkD,CAAC;IAChF,CAAC;IAED,qCAAqC;IACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,EAAE,CAAC;IAC5F,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,EAAE,CAAC;IAExD,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC;IACnC,CAAC;SAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;QAChF,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;IAC3D,CAAC;SAAM,CAAC;QACN,uCAAuC;QACvC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC;IACnC,CAAC;IAED,0CAA0C;IAC1C,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE,CAAC;QACvC,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;IAClC,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,oCAAoC,OAAO,CAAC,GAAG,CAAC,SAAS,oBAAoB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AACtH,CAAC,CAAC","names":[],"sources":["/home/runner/workspace/jest.global-setup.js"],"sourcesContent":["/**\n * Jest Global Setup - Fast test environment initialization\n * Optimized for performance with minimal database operations\n */\n\nmodule.exports = async () => {\n  // Set standardized environment variables for test execution\n  process.env.NODE_ENV = 'test';\n  process.env.SKIP_DB_OPERATIONS = 'true';\n  process.env.DISABLE_LOGS = 'true';\n  process.env.DISABLE_NEON_WARNINGS = 'true';\n  \n  // Set test database URL if not already set\n  if (!process.env.DATABASE_URL) {\n    process.env.DATABASE_URL = 'postgresql://test:test@localhost:5432/koveo_test';\n  }\n  \n  // Determine test type from test path\n  const testPath = process.env.npm_config_testPathPattern || process.env.JEST_WORKER_ID || '';\n  const testFile = process.env.npm_lifecycle_script || '';\n  \n  if (testPath.includes('unit') || testFile.includes('unit')) {\n    process.env.TEST_TYPE = 'unit';\n    process.env.USE_MOCK_DB = 'true';\n  } else if (testPath.includes('integration') || testFile.includes('integration')) {\n    process.env.TEST_TYPE = 'integration';\n    process.env.USE_MOCK_DB = 'false';\n    process.env.TEST_DATABASE_URL = process.env.DATABASE_URL;\n  } else {\n    // Default to unit test mode for safety\n    process.env.TEST_TYPE = 'unit';\n    process.env.USE_MOCK_DB = 'true';\n  }\n\n  // Initialize mock database for unit tests\n  if (process.env.USE_MOCK_DB === 'true') {\n    global.mockDatabase = new Map();\n  }\n  \n  console.log(`ðŸš€ Test environment initialized: ${process.env.TEST_TYPE} tests, mock DB: ${process.env.USE_MOCK_DB}`);\n};\n"],"version":3}