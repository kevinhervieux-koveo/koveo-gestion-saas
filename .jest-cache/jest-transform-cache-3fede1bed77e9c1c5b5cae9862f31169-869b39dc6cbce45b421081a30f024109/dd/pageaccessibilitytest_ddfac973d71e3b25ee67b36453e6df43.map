{"file":"/home/runner/workspace/tests/integration/page-accessibility.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/integration/page-accessibility.test.tsx"],"sourcesContent":["/**\n * Comprehensive page accessibility testing suite\n * Tests all pages for accessibility compliance and proper functionality\n */\n\nimport { render, screen, waitFor, fireEvent } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { MemoryRouter } from 'wouter/memory-location';\nimport { AuthProvider } from '@/hooks/use-auth';\nimport { LanguageProvider } from '@/hooks/use-language';\nimport '@testing-library/jest-dom';\n\n// Mock fetch for API calls\nglobal.fetch = jest.fn();\n\n// Test providers wrapper\nconst TestWrapper = ({ \n  children, \n  mockUser = null, \n  initialRoute = '/' \n}: { \n  children: React.ReactNode;\n  mockUser?: any;\n  initialRoute?: string;\n}) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n        gcTime: 0,\n      },\n    },\n  });\n\n  const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n  \n  // Mock auth response\n  if (mockUser) {\n    mockFetch.mockImplementation((url) => {\n      if (url === '/api/auth/user') {\n        return Promise.resolve({\n          ok: true,\n          status: 200,\n          json: () => Promise.resolve(mockUser),\n        } as Response);\n      }\n      \n      // Mock other API endpoints\n      if (url === '/api/buildings') {\n        return Promise.resolve({\n          ok: true,\n          status: 200,\n          json: () => Promise.resolve([\n            { id: '1', name: 'Test Building 1', yearBuilt: 2020 },\n            { id: '2', name: 'Test Building 2', yearBuilt: 2021 }\n          ]),\n        } as Response);\n      }\n\n      if (url?.toString().includes('/api/bills')) {\n        return Promise.resolve({\n          ok: true,\n          status: 200,\n          json: () => Promise.resolve([]),\n        } as Response);\n      }\n\n      return Promise.resolve({\n        ok: true,\n        status: 200,\n        json: () => Promise.resolve([]),\n      } as Response);\n    });\n  } else {\n    mockFetch.mockResolvedValue({\n      ok: false,\n      status: 401,\n      statusText: 'Unauthorized',\n      json: () => Promise.resolve({ error: 'Unauthorized' }),\n    } as Response);\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LanguageProvider>\n        <AuthProvider>\n          <MemoryRouter initialEntries={[initialRoute]}>\n            {children}\n          </MemoryRouter>\n        </AuthProvider>\n      </LanguageProvider>\n    </QueryClientProvider>\n  );\n};\n\n// Test data for different user roles\nconst mockUsers = {\n  admin: { \n    id: '1', \n    email: 'admin@test.com', \n    role: 'admin', \n    firstName: 'Admin', \n    lastName: 'User' \n  },\n  manager: { \n    id: '2', \n    email: 'manager@test.com', \n    role: 'manager', \n    firstName: 'Manager', \n    lastName: 'User' \n  },\n  resident: { \n    id: '3', \n    email: 'resident@test.com', \n    role: 'resident', \n    firstName: 'Resident', \n    lastName: 'User' \n  }\n};\n\n// Pages to test with their required roles\nconst pagesToTest = [\n  // Public pages\n  { path: '/', name: 'Home', role: null },\n  { path: '/features', name: 'Features', role: null },\n  { path: '/login', name: 'Login', role: null },\n  \n  // Protected pages\n  { path: '/dashboard', name: 'Dashboard', role: 'admin' },\n  { path: '/manager/bills', name: 'Manager Bills', role: 'manager' },\n  { path: '/manager/buildings', name: 'Manager Buildings', role: 'manager' },\n  { path: '/admin/organizations', name: 'Admin Organizations', role: 'admin' },\n  { path: '/residents/dashboard', name: 'Residents Dashboard', role: 'resident' },\n];\n\ndescribe('Page Accessibility Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.spyOn(console, 'error').mockImplementation(() => {});\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  describe('Basic Page Accessibility', () => {\n    it.each(pagesToTest)('$name page should have proper semantic structure', async ({ path, name, role }) => {\n      const mockUser = role ? mockUsers[role as keyof typeof mockUsers] : null;\n      \n      let Component;\n      try {\n        let importPath = path;\n        if (path === '/') importPath = '/home';\n        if (path.startsWith('/manager/')) importPath = path.replace('/manager/', '/pages/manager/');\n        if (path.startsWith('/admin/')) importPath = path.replace('/admin/', '/pages/admin/');\n        if (path.startsWith('/residents/')) importPath = path.replace('/residents/', '/pages/residents/');\n        \n        const module = await import(`@${importPath}`);\n        Component = module?.default;\n      } catch (error) {\n        // Skip if component doesn't exist or has import issues\n        console.warn(`Could not import ${name} component:`, error);\n        return;\n      }\n\n      if (!Component) return;\n\n      render(\n        <TestWrapper mockUser={mockUser} initialRoute={path}>\n          <Component />\n        </TestWrapper>\n      );\n\n      await waitFor(() => {\n        // Wait for component to fully render\n        expect(document.body).toBeInTheDocument();\n      }, { timeout: 3000 });\n\n      // Test 1: Page should have proper heading structure\n      const headings = screen.queryAllByRole('heading');\n      if (headings.length > 0) {\n        expect(headings[0]).toBeInTheDocument();\n        \n        // Main heading should be h1 or h2\n        const mainHeading = headings.find(h => \n          h.tagName === 'H1' || h.tagName === 'H2'\n        );\n        expect(mainHeading).toBeTruthy();\n      }\n\n      // Test 2: Interactive elements should be accessible\n      const buttons = screen.queryAllByRole('button');\n      buttons.forEach(button => {\n        // Buttons should have accessible names\n        expect(button).toHaveAttribute('type');\n        expect(button.textContent || button.getAttribute('aria-label')).toBeTruthy();\n      });\n\n      // Test 3: Forms should have proper labels\n      const inputs = screen.queryAllByRole('textbox');\n      inputs.forEach(input => {\n        const label = screen.queryByLabelText(new RegExp(input.getAttribute('name') || '', 'i'));\n        if (!label) {\n          // Input should have aria-label if no associated label\n          expect(input).toHaveAttribute('aria-label');\n        }\n      });\n\n      // Test 4: Links should be accessible\n      const links = screen.queryAllByRole('link');\n      links.forEach(link => {\n        expect(link.textContent || link.getAttribute('aria-label')).toBeTruthy();\n      });\n    });\n  });\n\n  describe('Bills Page Specific Accessibility', () => {\n    it('should render bills page without CATEGORY_LABELS error', async () => {\n      const mockUser = mockUsers.manager;\n      \n      let BillsComponent;\n      try {\n        const module = await import('@/pages/manager/bills');\n        BillsComponent = module?.default;\n      } catch (error) {\n        throw new Error(`Failed to import Bills component: ${error}`);\n      }\n\n      if (!BillsComponent) {\n        throw new Error('Bills component not found');\n      }\n\n      const consoleSpy = jest.spyOn(console, 'error');\n      \n      render(\n        <TestWrapper mockUser={mockUser}>\n          <BillsComponent />\n        </TestWrapper>\n      );\n\n      await waitFor(() => {\n        // Wait for the page to load\n        expect(screen.getByText(/bills/i)).toBeInTheDocument();\n      }, { timeout: 5000 });\n\n      // Should not have CATEGORY_LABELS error\n      expect(consoleSpy).not.toHaveBeenCalledWith(\n        expect.stringMatching(/ReferenceError.*CATEGORY_LABELS is not defined/)\n      );\n\n      // Should have proper form labels\n      const buildingFilter = screen.queryByLabelText(/building/i);\n      if (buildingFilter) {\n        expect(buildingFilter).toBeInTheDocument();\n      }\n\n      const categoryFilter = screen.queryByLabelText(/category/i);\n      if (categoryFilter) {\n        expect(categoryFilter).toBeInTheDocument();\n      }\n    });\n\n    it('should handle keyboard navigation on bills page', async () => {\n      const mockUser = mockUsers.manager;\n      \n      const BillsComponent = (await import('@/pages/manager/bills')).default;\n      \n      render(\n        <TestWrapper mockUser={mockUser}>\n          <BillsComponent />\n        </TestWrapper>\n      );\n\n      await waitFor(() => {\n        expect(screen.getByText(/bills/i)).toBeInTheDocument();\n      }, { timeout: 5000 });\n\n      // Test tab navigation\n      const interactiveElements = screen.queryAllByRole('button')\n        .concat(screen.queryAllByRole('combobox'))\n        .concat(screen.queryAllByRole('textbox'));\n\n      if (interactiveElements.length > 0) {\n        // Focus should be manageable\n        interactiveElements[0].focus();\n        expect(document.activeElement).toBe(interactiveElements[0]);\n\n        // Tab should move focus\n        fireEvent.keyDown(interactiveElements[0], { key: 'Tab' });\n        // Note: jsdom doesn't simulate actual tab behavior, but we can test the element is focusable\n        expect(interactiveElements[0]).toBeInTheDocument();\n      }\n    });\n  });\n\n  describe('Language Support Accessibility', () => {\n    it.each(['en', 'fr'])('should render pages properly in %s language', async (language) => {\n      const mockUser = mockUsers.admin;\n      \n      // Test a few key pages in different languages\n      const pagesToTestLang = [\n        { path: '/dashboard', component: () => import('@/pages/dashboard') },\n        { path: '/manager/bills', component: () => import('@/pages/manager/bills') }\n      ];\n\n      for (const { path, component } of pagesToTestLang) {\n        let Component;\n        try {\n          const module = await component();\n          Component = module?.default;\n        } catch (error) {\n          continue; // Skip if component doesn't exist\n        }\n\n        if (!Component) continue;\n\n        render(\n          <TestWrapper mockUser={mockUser}>\n            <Component />\n          </TestWrapper>\n        );\n\n        await waitFor(() => {\n          expect(document.body).toBeInTheDocument();\n        }, { timeout: 3000 });\n\n        // Check that text content exists (language-agnostic)\n        const textElements = screen.queryAllByText(/\\w+/);\n        expect(textElements.length).toBeGreaterThan(0);\n      }\n    });\n  });\n\n  describe('Error Handling Accessibility', () => {\n    it('should provide accessible error messages', async () => {\n      const mockUser = mockUsers.manager;\n      \n      // Mock API error\n      const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n      mockFetch.mockImplementation((url) => {\n        if (url === '/api/auth/user') {\n          return Promise.resolve({\n            ok: true,\n            status: 200,\n            json: () => Promise.resolve(mockUser),\n          } as Response);\n        }\n        \n        // Simulate API error\n        return Promise.resolve({\n          ok: false,\n          status: 500,\n          statusText: 'Internal Server Error',\n          json: () => Promise.resolve({ error: 'Server error' }),\n        } as Response);\n      });\n\n      const BillsComponent = (await import('@/pages/manager/bills')).default;\n      \n      render(\n        <TestWrapper mockUser={mockUser}>\n          <BillsComponent />\n        </TestWrapper>\n      );\n\n      await waitFor(() => {\n        // Look for error messages or retry buttons\n        const errorElements = screen.queryAllByText(/error|retry|failed/i);\n        if (errorElements.length > 0) {\n          // Error messages should be accessible\n          errorElements.forEach(element => {\n            expect(element).toBeInTheDocument();\n          });\n        }\n      }, { timeout: 5000 });\n    });\n  });\n\n  describe('ARIA and Screen Reader Support', () => {\n    it('should have proper ARIA attributes on interactive elements', async () => {\n      const mockUser = mockUsers.manager;\n      \n      const BillsComponent = (await import('@/pages/manager/bills')).default;\n      \n      render(\n        <TestWrapper mockUser={mockUser}>\n          <BillsComponent />\n        </TestWrapper>\n      );\n\n      await waitFor(() => {\n        expect(screen.getByText(/bills/i)).toBeInTheDocument();\n      }, { timeout: 5000 });\n\n      // Check for proper ARIA attributes\n      const comboboxes = screen.queryAllByRole('combobox');\n      comboboxes.forEach(combobox => {\n        // Comboboxes should have proper ARIA attributes\n        expect(combobox).toHaveAttribute('aria-expanded');\n      });\n\n      // Check for loading states\n      const loadingElements = screen.queryAllByText(/loading|wait/i);\n      loadingElements.forEach(element => {\n        // Loading states should be announced to screen readers\n        expect(element).toBeInTheDocument();\n      });\n    });\n  });\n});"],"version":3}