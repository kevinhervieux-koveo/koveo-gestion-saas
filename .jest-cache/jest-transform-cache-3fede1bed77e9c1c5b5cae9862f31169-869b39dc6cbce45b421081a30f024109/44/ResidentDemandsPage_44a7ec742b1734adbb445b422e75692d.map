{"file":"/home/runner/workspace/client/src/pages/ResidentDemandsPage.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/ResidentDemandsPage.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Plus, Search, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { queryClient } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { toastUtils } from '@/lib/toastUtils';\nimport { Header } from '@/components/layout/header';\nimport DemandDetailsPopup from '@/components/demands/demand-details-popup';\nimport { SearchInput } from '@/components/common/SearchInput';\nimport { FilterDropdown } from '@/components/common/FilterDropdown';\nimport { DemandCard } from '@/components/common/DemandCard';\nimport { DemandFilters } from '@/components/common/DemandFilters';\nimport { SharedUploader } from '@/components/document-management';\nimport type { UploadContext } from '@shared/config/upload-config';\nimport { useLanguage } from '@/hooks/use-language';\nimport { schemas, enumFields } from '@/lib/validations';\n\n// Types\n/**\n *\n */\ninterface Demand {\n  id: string;\n  type: 'maintenance' | 'complaint' | 'information' | 'other';\n  description: string;\n  status:\n    | 'submitted'\n    | 'under_review'\n    | 'approved'\n    | 'rejected'\n    | 'in_progress'\n    | 'completed'\n    | 'cancelled';\n  submitterId: string;\n  buildingId: string;\n  residenceId?: string;\n  assignationBuildingId?: string;\n  assignationResidenceId?: string;\n  createdAt: string;\n  updatedAt: string;\n  reviewNotes?: string;\n  submitter?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  residence?: {\n    id: string;\n    unitNumber: string;\n    buildingId: string;\n  };\n  building?: {\n    id: string;\n    name: string;\n    address: string;\n  };\n}\n\n/**\n *\n */\ninterface Building {\n  id: string;\n  name: string;\n}\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  name: string;\n  buildingId: string;\n}\n\n// Form schemas\nconst demandSchema = schemas.demand;\n\n/**\n *\n */\ntype DemandFormData = z.infer<typeof demandSchema>;\n\nconst statusColors = {\n  submitted: 'bg-blue-100 text-blue-800',\n  under_review: 'bg-yellow-100 text-yellow-800',\n  approved: 'bg-green-100 text-green-800',\n  rejected: 'bg-red-100 text-red-800',\n  in_progress: 'bg-purple-100 text-purple-800',\n  completed: 'bg-emerald-100 text-emerald-800',\n  cancelled: 'bg-gray-100 text-gray-800',\n};\n\nconst typeLabels = {\n  maintenance: 'Maintenance',\n  complaint: 'Complaint',\n  information: 'Information',\n  other: 'Other',\n};\n\n/**\n *\n */\nexport default function /**\n * Resident demands page function.\n */ /**\n * Resident demands page function.\n */\n\nResidentDemandsPage() {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [selectedDemand, setSelectedDemand] = useState<Demand | null>(null);\n  const [isNewDemandOpen, setIsNewDemandOpen] = useState(false);\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [uploadedAttachments, setUploadedAttachments] = useState<string[]>([]);\n  const itemsPerPage = 10;\n\n  // Fetch demands\n  const { data: demands = [], isLoading } = useQuery({\n    queryKey: ['/api/demands'],\n    refetchInterval: 30000, // Refresh every 30 seconds\n  });\n\n  // Fetch buildings\n  const { data: buildings = [] } = useQuery<Building[]>({\n    queryKey: ['/api/manager/buildings'],\n    select: (data: any) => data?.buildings || [],\n  });\n\n  // Fetch residences\n  const { data: residences = [] } = useQuery<Residence[]>({\n    queryKey: ['/api/residences'],\n  });\n\n  // Fetch current user\n  const { data: currentUser } = useQuery({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Provide default user to prevent type errors\n  const defaultUser: {\n    id: string;\n    role: string;\n    email: string;\n    firstName?: string;\n    lastName?: string;\n  } =\n    currentUser &&\n    typeof currentUser === 'object' &&\n    'id' in currentUser &&\n    'role' in currentUser &&\n    'email' in currentUser\n      ? (currentUser as {\n          id: string;\n          role: string;\n          email: string;\n          firstName?: string;\n          lastName?: string;\n        })\n      : { id: '', role: 'tenant', email: '' };\n\n  // Upload context for secure storage (using useMemo to ensure it updates with defaultUser)\n  const uploadContext: UploadContext = useMemo(() => ({\n    type: 'demands',\n    organizationId: 'default',\n    userRole: defaultUser?.role || 'resident',\n    userId: defaultUser?.id\n  }), [defaultUser?.role, defaultUser?.id]);\n\n  // File upload helper function\n  const uploadFiles = async (files: File[]): Promise<string[]> => {\n    if (files.length === 0) return [];\n    \n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append('file', file);\n    });\n    \n    const response = await fetch('/api/upload', {\n      method: 'POST',\n      body: formData,\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to upload files');\n    }\n    \n    const result = await response.json();\n    return result.fileUrls || [];\n  };\n\n  // Create demand mutation\n  const createDemandMutation = useMutation({\n    mutationFn: async (data: DemandFormData) => {\n      // Upload files first if any are selected\n      const attachments = selectedFiles.length > 0 ? await uploadFiles(selectedFiles) : [];\n      \n      const response = await fetch('/api/demands', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...data,\n          attachments,\n          status: 'submitted',\n          // Convert empty strings to undefined for optional UUID fields\n          buildingId: data.buildingId || undefined,\n          residenceId: data.residenceId || undefined,\n          assignationBuildingId: data.assignationBuildingId || undefined,\n          assignationResidenceId: data.assignationResidenceId || undefined,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create demand');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/demands'] });\n      setIsNewDemandOpen(false);\n      newDemandForm.reset();\n      setSelectedFiles([]);\n      setUploadedAttachments([]);\n      toastUtils.createSuccess('Demand');\n    },\n    onError: () => {\n      toastUtils.createError('demand');\n    },\n  });\n\n  // Forms\n  const newDemandForm = useForm<DemandFormData>({\n    resolver: zodResolver(demandSchema),\n    defaultValues: {\n      type: 'maintenance',\n      description: '',\n      buildingId: undefined,\n      residenceId: undefined,\n      assignationBuildingId: undefined,\n      assignationResidenceId: undefined,\n    },\n  });\n\n  // Filter demands\n  const filteredDemands = (demands as Demand[]).filter((demand: Demand) => {\n    const matchesSearch =\n      demand.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      typeLabels[demand.type].toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || demand.status === statusFilter;\n    const matchesType = typeFilter === 'all' || demand.type === typeFilter;\n\n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  // Group demands by status (no draft demands since we removed draft logic)\n  const activeDemands = filteredDemands.filter((d: Demand) =>\n    ['submitted', 'under_review', 'approved', 'in_progress'].includes(d.status)\n  );\n  const completedDemands = filteredDemands.filter((d: Demand) =>\n    ['completed', 'rejected', 'cancelled'].includes(d.status)\n  );\n\n  // Pagination calculations\n  const totalPages = Math.ceil(filteredDemands.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentDemands = filteredDemands.slice(startIndex, endIndex);\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prev) => Math.max(1, prev - 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prev) => Math.min(totalPages, prev + 1));\n  };\n\n  const handlePageClick = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleCreateDemand = (data: DemandFormData) => {\n    // Create demand directly as submitted (no draft logic)\n    createDemandMutation.mutate(data);\n  };\n\n  const handleDemandClick = (demand: Demand) => {\n    setSelectedDemand(demand);\n    setIsDetailsOpen(true);\n  };\n\n  const handleDemandUpdated = () => {\n    queryClient.invalidateQueries({ queryKey: ['/api/demands'] });\n  };\n\n  const DemandCard = ({ demand }: { demand: Demand }) => {\n    const building = buildings.find((b) => b.id === demand.buildingId);\n    const residence = residences.find((r) => r.id === demand.residenceId);\n\n    return (\n      <Card\n        className='cursor-pointer hover:shadow-md transition-shadow'\n        onClick={() => handleDemandClick(demand)}\n      >\n        <CardHeader className='pb-3'>\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center gap-2'>\n              <Badge variant='outline'>{typeLabels[demand.type]}</Badge>\n              <Badge className={statusColors[demand.status]}>\n                {demand.status.replace('_', ' ')}\n              </Badge>\n            </div>\n          </div>\n          <CardTitle className='text-base line-clamp-2'>\n            {demand.description.substring(0, 100)}\n            {demand.description.length > 100 && '...'}\n          </CardTitle>\n        </CardHeader>\n        <CardContent className='pt-0'>\n          <div className='text-sm text-muted-foreground space-y-1'>\n            <p>\n              <strong>Building:</strong> {building?.name || 'Unknown'}\n            </p>\n            {residence && (\n              <p>\n                <strong>Residence:</strong> {residence.name}\n              </p>\n            )}\n            <p>\n              <strong>Created:</strong> {new Date(demand.createdAt).toLocaleDateString()}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }; /**\n   * If function.\n   * @param isLoading - IsLoading parameter.\n   */ /**\n   * If function.\n   * @param isLoading - IsLoading parameter.\n   */\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('myDemands')} subtitle={t('submitAndTrackRequests')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='flex items-center justify-center h-64'>\n            <div className='text-center'>Loading demands...</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('myDemands')} subtitle={t('submitAndTrackRequests')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Header Actions */}\n          <div className='flex items-center justify-end'>\n            <Dialog open={isNewDemandOpen} onOpenChange={setIsNewDemandOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Plus className='h-4 w-4 mr-2' />\n                  {t('newDemand')}\n                </Button>\n              </DialogTrigger>\n\n              <DialogContent className='max-w-lg max-h-[90vh] overflow-y-auto'>\n                <DialogHeader>\n                  <DialogTitle>{t('createNewDemand')}</DialogTitle>\n                  <DialogDescription>Submit a new request or complaint</DialogDescription>\n                </DialogHeader>\n                <Form {...newDemandForm}>\n                  <form onSubmit={newDemandForm.handleSubmit(handleCreateDemand)} className='space-y-4'>\n                    <FormField\n                      control={newDemandForm.control}\n                      name='type'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Type</FormLabel>\n                          <Select onValueChange={field.onChange} value={field.value as string}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder={t('selectType')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value='maintenance'>Maintenance</SelectItem>\n                              <SelectItem value='complaint'>Complaint</SelectItem>\n                              <SelectItem value='information'>Information</SelectItem>\n                              <SelectItem value='other'>Other</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={newDemandForm.control}\n                      name='buildingId'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Building</FormLabel>\n                          <Select onValueChange={field.onChange} value={field.value as string}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder={t('selectBuilding')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              {buildings.map((building) => (\n                                <SelectItem key={building.id} value={building.id}>\n                                  {building.name}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={newDemandForm.control}\n                      name='description'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Description</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              placeholder={t('describeRequestDetail')}\n                              className='min-h-[100px]'\n                              {...field}\n                              value={field.value as string}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <div className='space-y-2'>\n                      <label className='text-sm font-medium'>Attachments (Optional)</label>\n                      <SharedUploader\n                        onDocumentChange={(file, extractedText) => {\n                          if (file) {\n                            setSelectedFiles([file]);\n                          }\n                        }}\n                        formType=\"demands\"\n                        uploadContext={uploadContext}\n                        showAiToggle={false} // No toggle, use config-based AI enablement\n                        allowedFileTypes={['image/*', 'application/pdf', '.doc', '.docx', '.txt']}\n                        maxFileSize={10}\n                      />\n                      <p className='text-xs text-muted-foreground'>\n                        Upload photos, documents, or screenshots. Camera supported for mobile. Max 10MB per file.\n                      </p>\n                    </div>\n                    <DialogFooter>\n                      <Button \n                        type='submit' \n                        disabled={createDemandMutation.isPending}\n                        data-testid=\"button-create-demand\"\n                      >\n                        {createDemandMutation.isPending ? 'Creating...' : 'Create Demand'}\n                      </Button>\n                    </DialogFooter>\n                  </form>\n                </Form>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Filters */}\n          <DemandFilters\n            filters={{\n              searchTerm,\n              statusFilter,\n              typeFilter,\n            }}\n            handlers={{\n              onSearchChange: setSearchTerm,\n              onStatusChange: setStatusFilter,\n              onTypeChange: setTypeFilter,\n            }}\n            userRole='resident'\n          />\n\n          {/* Demands List */}\n          <div className='space-y-6'>\n            {/* Page info */}\n            {filteredDemands.length > 0 && (\n              <div className='text-center text-sm text-muted-foreground'>\n                Showing {startIndex + 1} to {Math.min(endIndex, filteredDemands.length)} of {filteredDemands.length} demands\n              </div>\n            )}\n\n            {/* Current page demands */}\n            {currentDemands.length === 0 ? (\n              <Card>\n                <CardContent className='p-6 text-center'>\n                  <p className='text-muted-foreground'>{t('noDemandsFound')}</p>\n                </CardContent>\n              </Card>\n            ) : (\n              <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                {currentDemands.map((demand: Demand) => (\n                  <DemandCard key={demand.id} demand={demand} />\n                ))}\n              </div>\n            )}\n\n            {/* Pagination - Moved to bottom */}\n            {totalPages > 1 && (\n              <div className='flex items-center justify-center gap-2'>\n                <Button\n                  variant='outline'\n                  size='sm'\n                  onClick={handlePreviousPage}\n                  disabled={currentPage === 1}\n                  data-testid='button-previous-page'\n                >\n                  <ChevronLeft className='h-4 w-4' />\n                  {t('previous')}\n                </Button>\n\n                <div className='flex gap-1'>\n                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                    let pageNum;\n                    if (totalPages <= 5) {\n                      pageNum = i + 1;\n                    } else if (currentPage <= 3) {\n                      pageNum = i + 1;\n                    } else if (currentPage >= totalPages - 2) {\n                      pageNum = totalPages - 4 + i;\n                    } else {\n                      pageNum = currentPage - 2 + i;\n                    }\n\n                    return (\n                      <Button\n                        key={pageNum}\n                        variant={currentPage === pageNum ? 'default' : 'outline'}\n                        size='sm'\n                        onClick={() => handlePageClick(pageNum)}\n                        data-testid={`button-page-${pageNum}`}\n                      >\n                        {pageNum}\n                      </Button>\n                    );\n                  })}\n                </div>\n\n                <Button\n                  variant='outline'\n                  size='sm'\n                  onClick={handleNextPage}\n                  disabled={currentPage === totalPages}\n                  data-testid='button-next-page'\n                >\n                  {t('next')}\n                  <ChevronRight className='h-4 w-4' />\n                </Button>\n              </div>\n            )}\n          </div>\n\n          {/* Demand Details Popup */}\n          <DemandDetailsPopup\n            demand={selectedDemand}\n            isOpen={isDetailsOpen}\n            onClose={() => setIsDetailsOpen(false)}\n            user={defaultUser}\n            onDemandUpdated={handleDemandUpdated}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}