7512af94ee6cda4e8ccaea2962644b97
'use strict';
require('../utils/dataTransfer/Clipboard.js');
var readNextDescriptor = require('../utils/keyDef/readNextDescriptor.js');
function parseKeyDef(pointerMap, keys) {
    const defs = [];
    do {
        const { descriptor, consumedLength, releasePrevious, releaseSelf = true } = readNextDescriptor.readNextDescriptor(keys, 'pointer');
        const keyDef = pointerMap.find((p) => p.name === descriptor);
        if (keyDef) {
            defs.push({
                keyDef,
                releasePrevious,
                releaseSelf
            });
        }
        keys = keys.slice(consumedLength);
    } while (keys);
    return defs;
}
exports.parseKeyDef = parseKeyDef;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQHRlc3RpbmctbGlicmFyeS91c2VyLWV2ZW50L2Rpc3QvY2pzL3BvaW50ZXIvcGFyc2VLZXlEZWYuanMiLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7QUFDOUMsSUFBSSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsdUNBQXVDLENBQUMsQ0FBQztBQUUxRSxTQUFTLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSTtJQUNqQyxNQUFNLElBQUksR0FBRyxFQUFFLENBQUM7SUFDaEIsR0FBRyxDQUFDO1FBQ0EsTUFBTSxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLFdBQVcsR0FBRyxJQUFJLEVBQUUsR0FBRyxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbkksTUFBTSxNQUFNLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQyxFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUMsQ0FBQztRQUMzRCxJQUFJLE1BQU0sRUFBRSxDQUFDO1lBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFDTixNQUFNO2dCQUNOLGVBQWU7Z0JBQ2YsV0FBVzthQUNkLENBQUMsQ0FBQztRQUNQLENBQUM7UUFDRCxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0QyxDQUFDLFFBQU8sSUFBSSxFQUFDO0lBQ2IsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQztBQUVELE9BQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0B0ZXN0aW5nLWxpYnJhcnkvdXNlci1ldmVudC9kaXN0L2Nqcy9wb2ludGVyL3BhcnNlS2V5RGVmLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxucmVxdWlyZSgnLi4vdXRpbHMvZGF0YVRyYW5zZmVyL0NsaXBib2FyZC5qcycpO1xudmFyIHJlYWROZXh0RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL3V0aWxzL2tleURlZi9yZWFkTmV4dERlc2NyaXB0b3IuanMnKTtcblxuZnVuY3Rpb24gcGFyc2VLZXlEZWYocG9pbnRlck1hcCwga2V5cykge1xuICAgIGNvbnN0IGRlZnMgPSBbXTtcbiAgICBkbyB7XG4gICAgICAgIGNvbnN0IHsgZGVzY3JpcHRvciwgY29uc3VtZWRMZW5ndGgsIHJlbGVhc2VQcmV2aW91cywgcmVsZWFzZVNlbGYgPSB0cnVlIH0gPSByZWFkTmV4dERlc2NyaXB0b3IucmVhZE5leHREZXNjcmlwdG9yKGtleXMsICdwb2ludGVyJyk7XG4gICAgICAgIGNvbnN0IGtleURlZiA9IHBvaW50ZXJNYXAuZmluZCgocCk9PnAubmFtZSA9PT0gZGVzY3JpcHRvcik7XG4gICAgICAgIGlmIChrZXlEZWYpIHtcbiAgICAgICAgICAgIGRlZnMucHVzaCh7XG4gICAgICAgICAgICAgICAga2V5RGVmLFxuICAgICAgICAgICAgICAgIHJlbGVhc2VQcmV2aW91cyxcbiAgICAgICAgICAgICAgICByZWxlYXNlU2VsZlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAga2V5cyA9IGtleXMuc2xpY2UoY29uc3VtZWRMZW5ndGgpO1xuICAgIH13aGlsZSAoa2V5cylcbiAgICByZXR1cm4gZGVmcztcbn1cblxuZXhwb3J0cy5wYXJzZUtleURlZiA9IHBhcnNlS2V5RGVmO1xuIl0sInZlcnNpb24iOjN9