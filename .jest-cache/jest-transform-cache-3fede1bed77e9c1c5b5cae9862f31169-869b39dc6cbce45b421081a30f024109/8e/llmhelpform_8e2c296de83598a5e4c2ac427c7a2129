d8f3942af55fac62e6b48132e0d3445c
"use strict";

/* istanbul ignore next */
function cov_1spl0b1voz() {
  var path = "/home/runner/workspace/client/src/components/roadmap/llm-help-form.tsx";
  var hash = "ebc82fe08e41570e4625af970c0b2f97e805f973";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/components/roadmap/llm-help-form.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 128,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateLLMHelpForm",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 28
          }
        },
        loc: {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 11
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/components/roadmap/llm-help-form.tsx",
      mappings: ";;AAOA,kDAsHC;AA7HD;;GAEG;AACH;;;GAGG;AACH,SAAgB,mBAAmB;IACjC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCAoHwB,CAAC;AAClC,CAAC",
      names: [],
      sources: ["/home/runner/workspace/client/src/components/roadmap/llm-help-form.tsx"],
      sourcesContent: ["/**\n * Generates and copies the LLM help form for feature discussions.\n */\n/**\n * GenerateLLMHelpForm function.\n * @returns Function result.\n */\nexport function generateLLMHelpForm(): string {\n  return `# Koveo Gestion Feature Development Discussion Form\n\n## \uD83D\uDCD6 APPLICATION CONTEXT\n**Koveo Gestion** is a comprehensive property management platform for Quebec residential communities.\n\n### Tech Stack:\n- **Frontend**: React 18 with TypeScript, Vite, shadcn/ui components, Tailwind CSS\n- **Backend**: Express.js with TypeScript, RESTful API\n- **Database**: PostgreSQL with Drizzle ORM\n- **Authentication**: Express sessions with PostgreSQL session store\n- **Validation**: Zod schemas for runtime type validation\n- **State Management**: TanStack Query for server state, React Hook Form for forms\n\n### Key Patterns:\n- Monorepo structure with shared types between frontend and backend\n- Type-safe database operations with Drizzle ORM\n- Comprehensive validation with Zod schemas\n- Internationalization supporting French and English\n- Role-based access control (admin, manager, owner, tenant)\n\n### Database Schema includes:\n- Users, Organizations, Buildings, Residences\n- Bills, Maintenance Requests, Budgets\n- Documents, Notifications\n- Features and Actionable Items for roadmap management\n\n### Security Considerations:\n- Quebec Law 25 compliance required\n- Secure authentication with bcrypt password hashing\n- Session management with secure cookies\n- Input validation and sanitization\n\n---\n\n## \uD83C\uDFAF Feature Overview\n**What feature do you want to build?**\n[Describe the feature in one sentence]\n\n**What problem does this solve?**\n[Explain the user problem or business need]\n\n## \uD83D\uDC65 User Context\n**Who will use this feature?**\n[Target users: Property managers, Tenants, Owners, etc.]\n\n**How will they use it?**\n[Describe the user's workflow and interaction]\n\n## \uD83D\uDCCB Requirements\n**What should this feature do? (List 3-5 key capabilities)**\n1. \n2. \n3. \n4. \n5. \n\n**What should this feature NOT do? (Any constraints or boundaries)**\n- \n- \n- \n\n## \uD83D\uDD27 Technical Considerations\n**Does this feature need to:**\n- [ ] Store new data in the database?\n- [ ] Create new API endpoints?\n- [ ] Add new UI components?\n- [ ] Integrate with external services?\n- [ ] Handle file uploads?\n- [ ] Send notifications?\n- [ ] Support Quebec Law 25 compliance?\n- [ ] Work in both French and English?\n\n**Database Changes Needed:**\n[Describe any new tables or columns needed]\n\n**API Endpoints Needed:**\n[List any new routes like GET /api/new-feature]\n\n## \uD83C\uDFA8 User Experience\n**How should this look and feel?**\n[Describe the UI/UX requirements]\n\n**What pages or components are involved?**\n[List the specific parts of the app this affects]\n\n## \uD83D\uDD0D Acceptance Criteria\n**How will we know this feature works correctly?**\n1. \n2. \n3. \n\n**Edge cases to consider:**\n- \n- \n- \n\n## \uD83D\uDCCA Success Metrics\n**How will we measure if this feature is successful?**\n[Describe measurable outcomes]\n\n## \uD83D\uDE80 Implementation Notes\n**Any specific technical requirements or constraints:**\n[Add any additional context or requirements]\n\n---\n\n## \uD83D\uDCA1 Tips for AI Implementation\n- Start with the database schema changes first\n- Create API endpoints before frontend components\n- Use existing patterns from the codebase\n- Test with real data scenarios\n- Ensure proper error handling\n- Consider mobile responsiveness\n- Add proper loading states\n- Include user feedback/toast notifications\n- Follow accessibility guidelines\n- Test role-based access control`;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ebc82fe08e41570e4625af970c0b2f97e805f973"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1spl0b1voz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1spl0b1voz();
cov_1spl0b1voz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1spl0b1voz().s[1]++;
exports.generateLLMHelpForm = generateLLMHelpForm;
/**
 * Generates and copies the LLM help form for feature discussions.
 */
/**
 * GenerateLLMHelpForm function.
 * @returns Function result.
 */
function generateLLMHelpForm() {
  /* istanbul ignore next */
  cov_1spl0b1voz().f[0]++;
  cov_1spl0b1voz().s[2]++;
  return `# Koveo Gestion Feature Development Discussion Form

## üìñ APPLICATION CONTEXT
**Koveo Gestion** is a comprehensive property management platform for Quebec residential communities.

### Tech Stack:
- **Frontend**: React 18 with TypeScript, Vite, shadcn/ui components, Tailwind CSS
- **Backend**: Express.js with TypeScript, RESTful API
- **Database**: PostgreSQL with Drizzle ORM
- **Authentication**: Express sessions with PostgreSQL session store
- **Validation**: Zod schemas for runtime type validation
- **State Management**: TanStack Query for server state, React Hook Form for forms

### Key Patterns:
- Monorepo structure with shared types between frontend and backend
- Type-safe database operations with Drizzle ORM
- Comprehensive validation with Zod schemas
- Internationalization supporting French and English
- Role-based access control (admin, manager, owner, tenant)

### Database Schema includes:
- Users, Organizations, Buildings, Residences
- Bills, Maintenance Requests, Budgets
- Documents, Notifications
- Features and Actionable Items for roadmap management

### Security Considerations:
- Quebec Law 25 compliance required
- Secure authentication with bcrypt password hashing
- Session management with secure cookies
- Input validation and sanitization

---

## üéØ Feature Overview
**What feature do you want to build?**
[Describe the feature in one sentence]

**What problem does this solve?**
[Explain the user problem or business need]

## üë• User Context
**Who will use this feature?**
[Target users: Property managers, Tenants, Owners, etc.]

**How will they use it?**
[Describe the user's workflow and interaction]

## üìã Requirements
**What should this feature do? (List 3-5 key capabilities)**
1. 
2. 
3. 
4. 
5. 

**What should this feature NOT do? (Any constraints or boundaries)**
- 
- 
- 

## üîß Technical Considerations
**Does this feature need to:**
- [ ] Store new data in the database?
- [ ] Create new API endpoints?
- [ ] Add new UI components?
- [ ] Integrate with external services?
- [ ] Handle file uploads?
- [ ] Send notifications?
- [ ] Support Quebec Law 25 compliance?
- [ ] Work in both French and English?

**Database Changes Needed:**
[Describe any new tables or columns needed]

**API Endpoints Needed:**
[List any new routes like GET /api/new-feature]

## üé® User Experience
**How should this look and feel?**
[Describe the UI/UX requirements]

**What pages or components are involved?**
[List the specific parts of the app this affects]

## üîç Acceptance Criteria
**How will we know this feature works correctly?**
1. 
2. 
3. 

**Edge cases to consider:**
- 
- 
- 

## üìä Success Metrics
**How will we measure if this feature is successful?**
[Describe measurable outcomes]

## üöÄ Implementation Notes
**Any specific technical requirements or constraints:**
[Add any additional context or requirements]

---

## üí° Tips for AI Implementation
- Start with the database schema changes first
- Create API endpoints before frontend components
- Use existing patterns from the codebase
- Test with real data scenarios
- Ensure proper error handling
- Consider mobile responsiveness
- Add proper loading states
- Include user feedback/toast notifications
- Follow accessibility guidelines
- Test role-based access control`;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiZ2VuZXJhdGVMTE1IZWxwRm9ybSIsImNvdl8xc3BsMGIxdm96IiwiZiIsInMiXSwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2NsaWVudC9zcmMvY29tcG9uZW50cy9yb2FkbWFwL2xsbS1oZWxwLWZvcm0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVzIGFuZCBjb3BpZXMgdGhlIExMTSBoZWxwIGZvcm0gZm9yIGZlYXR1cmUgZGlzY3Vzc2lvbnMuXG4gKi9cbi8qKlxuICogR2VuZXJhdGVMTE1IZWxwRm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIEZ1bmN0aW9uIHJlc3VsdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlTExNSGVscEZvcm0oKTogc3RyaW5nIHtcbiAgcmV0dXJuIGAjIEtvdmVvIEdlc3Rpb24gRmVhdHVyZSBEZXZlbG9wbWVudCBEaXNjdXNzaW9uIEZvcm1cblxuIyMg8J+TliBBUFBMSUNBVElPTiBDT05URVhUXG4qKktvdmVvIEdlc3Rpb24qKiBpcyBhIGNvbXByZWhlbnNpdmUgcHJvcGVydHkgbWFuYWdlbWVudCBwbGF0Zm9ybSBmb3IgUXVlYmVjIHJlc2lkZW50aWFsIGNvbW11bml0aWVzLlxuXG4jIyMgVGVjaCBTdGFjazpcbi0gKipGcm9udGVuZCoqOiBSZWFjdCAxOCB3aXRoIFR5cGVTY3JpcHQsIFZpdGUsIHNoYWRjbi91aSBjb21wb25lbnRzLCBUYWlsd2luZCBDU1Ncbi0gKipCYWNrZW5kKio6IEV4cHJlc3MuanMgd2l0aCBUeXBlU2NyaXB0LCBSRVNUZnVsIEFQSVxuLSAqKkRhdGFiYXNlKio6IFBvc3RncmVTUUwgd2l0aCBEcml6emxlIE9STVxuLSAqKkF1dGhlbnRpY2F0aW9uKio6IEV4cHJlc3Mgc2Vzc2lvbnMgd2l0aCBQb3N0Z3JlU1FMIHNlc3Npb24gc3RvcmVcbi0gKipWYWxpZGF0aW9uKio6IFpvZCBzY2hlbWFzIGZvciBydW50aW1lIHR5cGUgdmFsaWRhdGlvblxuLSAqKlN0YXRlIE1hbmFnZW1lbnQqKjogVGFuU3RhY2sgUXVlcnkgZm9yIHNlcnZlciBzdGF0ZSwgUmVhY3QgSG9vayBGb3JtIGZvciBmb3Jtc1xuXG4jIyMgS2V5IFBhdHRlcm5zOlxuLSBNb25vcmVwbyBzdHJ1Y3R1cmUgd2l0aCBzaGFyZWQgdHlwZXMgYmV0d2VlbiBmcm9udGVuZCBhbmQgYmFja2VuZFxuLSBUeXBlLXNhZmUgZGF0YWJhc2Ugb3BlcmF0aW9ucyB3aXRoIERyaXp6bGUgT1JNXG4tIENvbXByZWhlbnNpdmUgdmFsaWRhdGlvbiB3aXRoIFpvZCBzY2hlbWFzXG4tIEludGVybmF0aW9uYWxpemF0aW9uIHN1cHBvcnRpbmcgRnJlbmNoIGFuZCBFbmdsaXNoXG4tIFJvbGUtYmFzZWQgYWNjZXNzIGNvbnRyb2wgKGFkbWluLCBtYW5hZ2VyLCBvd25lciwgdGVuYW50KVxuXG4jIyMgRGF0YWJhc2UgU2NoZW1hIGluY2x1ZGVzOlxuLSBVc2VycywgT3JnYW5pemF0aW9ucywgQnVpbGRpbmdzLCBSZXNpZGVuY2VzXG4tIEJpbGxzLCBNYWludGVuYW5jZSBSZXF1ZXN0cywgQnVkZ2V0c1xuLSBEb2N1bWVudHMsIE5vdGlmaWNhdGlvbnNcbi0gRmVhdHVyZXMgYW5kIEFjdGlvbmFibGUgSXRlbXMgZm9yIHJvYWRtYXAgbWFuYWdlbWVudFxuXG4jIyMgU2VjdXJpdHkgQ29uc2lkZXJhdGlvbnM6XG4tIFF1ZWJlYyBMYXcgMjUgY29tcGxpYW5jZSByZXF1aXJlZFxuLSBTZWN1cmUgYXV0aGVudGljYXRpb24gd2l0aCBiY3J5cHQgcGFzc3dvcmQgaGFzaGluZ1xuLSBTZXNzaW9uIG1hbmFnZW1lbnQgd2l0aCBzZWN1cmUgY29va2llc1xuLSBJbnB1dCB2YWxpZGF0aW9uIGFuZCBzYW5pdGl6YXRpb25cblxuLS0tXG5cbiMjIPCfjq8gRmVhdHVyZSBPdmVydmlld1xuKipXaGF0IGZlYXR1cmUgZG8geW91IHdhbnQgdG8gYnVpbGQ/KipcbltEZXNjcmliZSB0aGUgZmVhdHVyZSBpbiBvbmUgc2VudGVuY2VdXG5cbioqV2hhdCBwcm9ibGVtIGRvZXMgdGhpcyBzb2x2ZT8qKlxuW0V4cGxhaW4gdGhlIHVzZXIgcHJvYmxlbSBvciBidXNpbmVzcyBuZWVkXVxuXG4jIyDwn5GlIFVzZXIgQ29udGV4dFxuKipXaG8gd2lsbCB1c2UgdGhpcyBmZWF0dXJlPyoqXG5bVGFyZ2V0IHVzZXJzOiBQcm9wZXJ0eSBtYW5hZ2VycywgVGVuYW50cywgT3duZXJzLCBldGMuXVxuXG4qKkhvdyB3aWxsIHRoZXkgdXNlIGl0PyoqXG5bRGVzY3JpYmUgdGhlIHVzZXIncyB3b3JrZmxvdyBhbmQgaW50ZXJhY3Rpb25dXG5cbiMjIPCfk4sgUmVxdWlyZW1lbnRzXG4qKldoYXQgc2hvdWxkIHRoaXMgZmVhdHVyZSBkbz8gKExpc3QgMy01IGtleSBjYXBhYmlsaXRpZXMpKipcbjEuIFxuMi4gXG4zLiBcbjQuIFxuNS4gXG5cbioqV2hhdCBzaG91bGQgdGhpcyBmZWF0dXJlIE5PVCBkbz8gKEFueSBjb25zdHJhaW50cyBvciBib3VuZGFyaWVzKSoqXG4tIFxuLSBcbi0gXG5cbiMjIPCflKcgVGVjaG5pY2FsIENvbnNpZGVyYXRpb25zXG4qKkRvZXMgdGhpcyBmZWF0dXJlIG5lZWQgdG86Kipcbi0gWyBdIFN0b3JlIG5ldyBkYXRhIGluIHRoZSBkYXRhYmFzZT9cbi0gWyBdIENyZWF0ZSBuZXcgQVBJIGVuZHBvaW50cz9cbi0gWyBdIEFkZCBuZXcgVUkgY29tcG9uZW50cz9cbi0gWyBdIEludGVncmF0ZSB3aXRoIGV4dGVybmFsIHNlcnZpY2VzP1xuLSBbIF0gSGFuZGxlIGZpbGUgdXBsb2Fkcz9cbi0gWyBdIFNlbmQgbm90aWZpY2F0aW9ucz9cbi0gWyBdIFN1cHBvcnQgUXVlYmVjIExhdyAyNSBjb21wbGlhbmNlP1xuLSBbIF0gV29yayBpbiBib3RoIEZyZW5jaCBhbmQgRW5nbGlzaD9cblxuKipEYXRhYmFzZSBDaGFuZ2VzIE5lZWRlZDoqKlxuW0Rlc2NyaWJlIGFueSBuZXcgdGFibGVzIG9yIGNvbHVtbnMgbmVlZGVkXVxuXG4qKkFQSSBFbmRwb2ludHMgTmVlZGVkOioqXG5bTGlzdCBhbnkgbmV3IHJvdXRlcyBsaWtlIEdFVCAvYXBpL25ldy1mZWF0dXJlXVxuXG4jIyDwn46oIFVzZXIgRXhwZXJpZW5jZVxuKipIb3cgc2hvdWxkIHRoaXMgbG9vayBhbmQgZmVlbD8qKlxuW0Rlc2NyaWJlIHRoZSBVSS9VWCByZXF1aXJlbWVudHNdXG5cbioqV2hhdCBwYWdlcyBvciBjb21wb25lbnRzIGFyZSBpbnZvbHZlZD8qKlxuW0xpc3QgdGhlIHNwZWNpZmljIHBhcnRzIG9mIHRoZSBhcHAgdGhpcyBhZmZlY3RzXVxuXG4jIyDwn5SNIEFjY2VwdGFuY2UgQ3JpdGVyaWFcbioqSG93IHdpbGwgd2Uga25vdyB0aGlzIGZlYXR1cmUgd29ya3MgY29ycmVjdGx5PyoqXG4xLiBcbjIuIFxuMy4gXG5cbioqRWRnZSBjYXNlcyB0byBjb25zaWRlcjoqKlxuLSBcbi0gXG4tIFxuXG4jIyDwn5OKIFN1Y2Nlc3MgTWV0cmljc1xuKipIb3cgd2lsbCB3ZSBtZWFzdXJlIGlmIHRoaXMgZmVhdHVyZSBpcyBzdWNjZXNzZnVsPyoqXG5bRGVzY3JpYmUgbWVhc3VyYWJsZSBvdXRjb21lc11cblxuIyMg8J+agCBJbXBsZW1lbnRhdGlvbiBOb3Rlc1xuKipBbnkgc3BlY2lmaWMgdGVjaG5pY2FsIHJlcXVpcmVtZW50cyBvciBjb25zdHJhaW50czoqKlxuW0FkZCBhbnkgYWRkaXRpb25hbCBjb250ZXh0IG9yIHJlcXVpcmVtZW50c11cblxuLS0tXG5cbiMjIPCfkqEgVGlwcyBmb3IgQUkgSW1wbGVtZW50YXRpb25cbi0gU3RhcnQgd2l0aCB0aGUgZGF0YWJhc2Ugc2NoZW1hIGNoYW5nZXMgZmlyc3Rcbi0gQ3JlYXRlIEFQSSBlbmRwb2ludHMgYmVmb3JlIGZyb250ZW5kIGNvbXBvbmVudHNcbi0gVXNlIGV4aXN0aW5nIHBhdHRlcm5zIGZyb20gdGhlIGNvZGViYXNlXG4tIFRlc3Qgd2l0aCByZWFsIGRhdGEgc2NlbmFyaW9zXG4tIEVuc3VyZSBwcm9wZXIgZXJyb3IgaGFuZGxpbmdcbi0gQ29uc2lkZXIgbW9iaWxlIHJlc3BvbnNpdmVuZXNzXG4tIEFkZCBwcm9wZXIgbG9hZGluZyBzdGF0ZXNcbi0gSW5jbHVkZSB1c2VyIGZlZWRiYWNrL3RvYXN0IG5vdGlmaWNhdGlvbnNcbi0gRm9sbG93IGFjY2Vzc2liaWxpdHkgZ3VpZGVsaW5lc1xuLSBUZXN0IHJvbGUtYmFzZWQgYWNjZXNzIGNvbnRyb2xgO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT0FBLE9BQUEsQ0FBQUMsbUJBQUEsR0FBQUEsbUJBQUE7QUFQQTs7O0FBR0E7Ozs7QUFJQSxTQUFnQkEsbUJBQW1CQSxDQUFBO0VBQUE7RUFBQUMsY0FBQSxHQUFBQyxDQUFBO0VBQUFELGNBQUEsR0FBQUUsQ0FBQTtFQUNqQyxPQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQ0FvSHdCO0FBQ2pDIiwiaWdub3JlTGlzdCI6W119