67cc8c849d9005226750b027255647e2
"use strict";

/* istanbul ignore next */
function cov_1q3cdw5gtw() {
  var path = "/home/runner/workspace/client/src/components/forms/organization-form.tsx";
  var hash = "41ee765657b085cef1f54d00d0fcb87f9b47fabb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/components/forms/organization-form.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 5,
          column: 52
        }
      },
      "4": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "6": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "7": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "8": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "9": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "10": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "11": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "12": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "13": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "14": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "15": {
        start: {
          line: 18,
          column: 31
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "17": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 80
        }
      },
      "19": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 59,
          column: 55
        }
      },
      "20": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 60,
          column: 49
        }
      },
      "21": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 59
        }
      },
      "22": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "23": {
        start: {
          line: 77,
          column: 39
        },
        end: {
          line: 98,
          column: 6
        }
      },
      "24": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 79,
          column: 101
        }
      },
      "25": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 35
        }
      },
      "26": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "27": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 80
        }
      },
      "28": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "29": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 32
        }
      },
      "30": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "31": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "32": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "33": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 53
        }
      },
      "34": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 114,
          column: 1952
        }
      },
      "35": {
        start: {
          line: 110,
          column: 738
        },
        end: {
          line: 110,
          column: 1100
        }
      },
      "36": {
        start: {
          line: 110,
          column: 1210
        },
        end: {
          line: 110,
          column: 2260
        }
      },
      "37": {
        start: {
          line: 110,
          column: 2384
        },
        end: {
          line: 110,
          column: 2730
        }
      },
      "38": {
        start: {
          line: 110,
          column: 2843
        },
        end: {
          line: 110,
          column: 3186
        }
      },
      "39": {
        start: {
          line: 110,
          column: 3296
        },
        end: {
          line: 110,
          column: 3598
        }
      },
      "40": {
        start: {
          line: 110,
          column: 3712
        },
        end: {
          line: 110,
          column: 5446
        }
      },
      "41": {
        start: {
          line: 110,
          column: 5562
        },
        end: {
          line: 114,
          column: 115
        }
      },
      "42": {
        start: {
          line: 112,
          column: 74
        },
        end: {
          line: 112,
          column: 102
        }
      },
      "43": {
        start: {
          line: 113,
          column: 60
        },
        end: {
          line: 113,
          column: 82
        }
      },
      "44": {
        start: {
          line: 114,
          column: 226
        },
        end: {
          line: 114,
          column: 537
        }
      },
      "45": {
        start: {
          line: 114,
          column: 648
        },
        end: {
          line: 114,
          column: 984
        }
      },
      "46": {
        start: {
          line: 114,
          column: 1097
        },
        end: {
          line: 114,
          column: 1452
        }
      },
      "47": {
        start: {
          line: 114,
          column: 1645
        },
        end: {
          line: 114,
          column: 1664
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 34,
            column: 47
          }
        },
        loc: {
          start: {
            line: 34,
            column: 55
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 34
      },
      "1": {
        name: "OrganizationForm",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 25
          }
        },
        loc: {
          start: {
            line: 58,
            column: 50
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 58
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 78,
            column: 21
          }
        },
        loc: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 78
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 82,
            column: 20
          }
        },
        loc: {
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 91,
            column: 18
          }
        },
        loc: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 21
          },
          end: {
            line: 99,
            column: 22
          }
        },
        loc: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 110,
            column: 722
          },
          end: {
            line: 110,
            column: 723
          }
        },
        loc: {
          start: {
            line: 110,
            column: 738
          },
          end: {
            line: 110,
            column: 1100
          }
        },
        line: 110
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 110,
            column: 1194
          },
          end: {
            line: 110,
            column: 1195
          }
        },
        loc: {
          start: {
            line: 110,
            column: 1210
          },
          end: {
            line: 110,
            column: 2260
          }
        },
        line: 110
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 110,
            column: 2368
          },
          end: {
            line: 110,
            column: 2369
          }
        },
        loc: {
          start: {
            line: 110,
            column: 2384
          },
          end: {
            line: 110,
            column: 2730
          }
        },
        line: 110
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 110,
            column: 2827
          },
          end: {
            line: 110,
            column: 2828
          }
        },
        loc: {
          start: {
            line: 110,
            column: 2843
          },
          end: {
            line: 110,
            column: 3186
          }
        },
        line: 110
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 110,
            column: 3280
          },
          end: {
            line: 110,
            column: 3281
          }
        },
        loc: {
          start: {
            line: 110,
            column: 3296
          },
          end: {
            line: 110,
            column: 3598
          }
        },
        line: 110
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 110,
            column: 3696
          },
          end: {
            line: 110,
            column: 3697
          }
        },
        loc: {
          start: {
            line: 110,
            column: 3712
          },
          end: {
            line: 110,
            column: 5446
          }
        },
        line: 110
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 110,
            column: 5546
          },
          end: {
            line: 110,
            column: 5547
          }
        },
        loc: {
          start: {
            line: 110,
            column: 5562
          },
          end: {
            line: 114,
            column: 115
          }
        },
        line: 110
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 110,
            column: 5828
          },
          end: {
            line: 110,
            column: 5829
          }
        },
        loc: {
          start: {
            line: 110,
            column: 5835
          },
          end: {
            line: 114,
            column: 57
          }
        },
        line: 110
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 114,
            column: 210
          },
          end: {
            line: 114,
            column: 211
          }
        },
        loc: {
          start: {
            line: 114,
            column: 226
          },
          end: {
            line: 114,
            column: 537
          }
        },
        line: 114
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 114,
            column: 632
          },
          end: {
            line: 114,
            column: 633
          }
        },
        loc: {
          start: {
            line: 114,
            column: 648
          },
          end: {
            line: 114,
            column: 984
          }
        },
        line: 114
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 114,
            column: 1081
          },
          end: {
            line: 114,
            column: 1082
          }
        },
        loc: {
          start: {
            line: 114,
            column: 1097
          },
          end: {
            line: 114,
            column: 1452
          }
        },
        line: 114
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 114,
            column: 1639
          },
          end: {
            line: 114,
            column: 1640
          }
        },
        loc: {
          start: {
            line: 114,
            column: 1645
          },
          end: {
            line: 114,
            column: 1664
          }
        },
        line: 114
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 36,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 36,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 94,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 94,
            column: 44
          }
        }, {
          start: {
            line: 94,
            column: 48
          },
          end: {
            line: 94,
            column: 79
          }
        }],
        line: 94
      },
      "2": {
        loc: {
          start: {
            line: 103,
            column: 19
          },
          end: {
            line: 103,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 19
          },
          end: {
            line: 103,
            column: 30
          }
        }, {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 103,
            column: 43
          }
        }],
        line: 103
      },
      "3": {
        loc: {
          start: {
            line: 104,
            column: 19
          },
          end: {
            line: 104,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 19
          },
          end: {
            line: 104,
            column: 30
          }
        }, {
          start: {
            line: 104,
            column: 34
          },
          end: {
            line: 104,
            column: 43
          }
        }],
        line: 104
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 34
          }
        }, {
          start: {
            line: 105,
            column: 38
          },
          end: {
            line: 105,
            column: 47
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 106,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 106,
            column: 56
          }
        }, {
          start: {
            line: 106,
            column: 60
          },
          end: {
            line: 106,
            column: 69
          }
        }],
        line: 106
      },
      "6": {
        loc: {
          start: {
            line: 114,
            column: 1853
          },
          end: {
            line: 114,
            column: 1929
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 1892
          },
          end: {
            line: 114,
            column: 1905
          }
        }, {
          start: {
            line: 114,
            column: 1908
          },
          end: {
            line: 114,
            column: 1929
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/components/forms/organization-form.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/components/forms/organization-form.tsx"],
      sourcesContent: ["import { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/hooks/use-language';\n\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { type InsertOrganization } from '@shared/schema';\n\n/**\n * Props for the OrganizationForm component.\n */\ninterface OrganizationFormProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\n// Define the form schema with Quebec-specific validation\nconst organizationFormSchema = z.object({\n  name: z\n    .string()\n    .min(1, 'Organization name is required (example: Maple Property Management)')\n    .max(200, 'Organization name must be less than 200 characters'),\n  type: z.string().min(1, 'Please select an organization type from the dropdown'),\n  address: z\n    .string()\n    .min(1, 'Street address is required (example: 123 Rue Saint-Denis)')\n    .max(300, 'Address must be less than 300 characters'),\n  city: z.string().min(1, 'City name is required (example: Montr\xE9al)').max(100, 'City name must be less than 100 characters').regex(/^[a-zA-Z\xC0-\xFF\\s'-]+$/, 'City name can only contain letters, spaces, apostrophes and hyphens'),\n  province: z.string().min(1, 'Province is required').default('QC'),\n  postalCode: z\n    .string()\n    .min(1, 'Postal code is required')\n    .regex(\n      /^[A-Z]\\d[A-Z]\\s?\\d[A-Z]\\d$|^[A-Z]\\d[A-Z]\\d[A-Z]\\d$/,\n      'Postal code must follow Canadian format (example: H1A 1B1)'\n    ),\n  phone: z.string().optional().refine((val) => {\n    if (!val) return true;\n    return /^(\\+1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/.test(val);\n  }, 'Phone number must be a valid North American format (example: (514) 123-4567)'),\n  email: z.string().email('Please enter a valid email address (example: contact@organization.com)').optional().or(z.literal('')),\n  website: z.string().url('Website must be a valid URL (example: https://www.organization.com)').optional().or(z.literal('')),\n  registrationNumber: z.string().max(50, 'Registration number must be less than 50 characters').optional(),\n});\n\n/**\n *\n */\ntype OrganizationFormData = z.infer<typeof organizationFormSchema>;\n\n/**\n * Form for creating new organizations in the Quebec property management system.\n * Includes all required fields with Quebec-specific defaults and validation.\n * @param root0 - Component props.\n * @param root0.open - Dialog open state.\n * @param root0.onOpenChange - Callback to handle dialog open state changes.\n * @returns Organization form dialog component.\n */\n/**\n * OrganizationForm function.\n * @param root0\n * @param root0.open\n * @param root0.onOpenChange\n * @returns Function result.\n */\nexport function OrganizationForm({ open, onOpenChange }: OrganizationFormProps) {\n  const { t: _t } = useLanguage();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm({\n    resolver: zodResolver(organizationFormSchema),\n    defaultValues: {\n      name: '',\n      type: '',\n      address: '',\n      city: '',\n      province: 'QC', // Default to Quebec\n      postalCode: '',\n      phone: '',\n      email: '',\n      website: '',\n      registrationNumber: '',\n    },\n  });\n\n  const createOrganizationMutation = useMutation({\n    mutationFn: async (_data: InsertOrganization) => {\n      const response = await apiRequest('POST', '/api/organizations', _data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: 'Organization created successfully',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/organizations'] });\n      form.reset();\n      onOpenChange(false);\n    },\n    onError: (_error: unknown) => {\n      toast({\n        title: 'Error',\n        description: (_error as Error)?.message || 'Failed to create organization',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onSubmit = (_data: OrganizationFormData) => {\n    // Convert empty strings to undefined for optional fields\n    const cleanData: InsertOrganization = {\n      ..._data,\n      phone: _data.phone || undefined,\n      email: _data.email || undefined,\n      website: _data.website || undefined,\n      registrationNumber: _data.registrationNumber || undefined,\n    };\n\n    createOrganizationMutation.mutate(cleanData);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className='sm:max-w-[600px] max-h-[90vh] overflow-y-auto'>\n        <DialogHeader>\n          <DialogTitle>Create New Organization</DialogTitle>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-4'>\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n              <FormField\n                control={form.control}\n                name='name'\n                render={({ field }) => (\n                  <FormItem className='md:col-span-2'>\n                    <FormLabel>Organization Name *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter organization name' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='type'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Type *</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder='Select organization type' />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value='management_company'>Management Company</SelectItem>\n                        <SelectItem value='syndicate'>Syndicate</SelectItem>\n                        <SelectItem value='cooperative'>Cooperative</SelectItem>\n                        <SelectItem value='condo_association'>Condo Association</SelectItem>\n                        <SelectItem value='Demo'>Demo</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='registrationNumber'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Quebec Registration Number</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Business registration number' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='address'\n                render={({ field }) => (\n                  <FormItem className='md:col-span-2'>\n                    <FormLabel>Address *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Street address' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='city'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>City *</FormLabel>\n                    <FormControl>\n                      <Input placeholder='City' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='province'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Province</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value='QC'>Quebec (QC)</SelectItem>\n                        <SelectItem value='ON'>Ontario (ON)</SelectItem>\n                        <SelectItem value='BC'>British Columbia (BC)</SelectItem>\n                        <SelectItem value='AB'>Alberta (AB)</SelectItem>\n                        <SelectItem value='SK'>Saskatchewan (SK)</SelectItem>\n                        <SelectItem value='MB'>Manitoba (MB)</SelectItem>\n                        <SelectItem value='NB'>New Brunswick (NB)</SelectItem>\n                        <SelectItem value='NS'>Nova Scotia (NS)</SelectItem>\n                        <SelectItem value='PE'>Prince Edward Island (PE)</SelectItem>\n                        <SelectItem value='NL'>Newfoundland and Labrador (NL)</SelectItem>\n                        <SelectItem value='NT'>Northwest Territories (NT)</SelectItem>\n                        <SelectItem value='NU'>Nunavut (NU)</SelectItem>\n                        <SelectItem value='YT'>Yukon (YT)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='postalCode'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Postal Code *</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder='A1A 1A1'\n                        {...field}\n                        onChange={(e) => {\n                          // Auto-format postal code to uppercase\n                          const value = e.target.value.toUpperCase();\n                          field.onChange(value);\n                        }}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='phone'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Phone</FormLabel>\n                    <FormControl>\n                      <Input placeholder='(514) 123-4567' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='email'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl>\n                      <Input placeholder='contact@organization.com' type='email' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='website'\n                render={({ field }) => (\n                  <FormItem className='md:col-span-2'>\n                    <FormLabel>Website</FormLabel>\n                    <FormControl>\n                      <Input placeholder='https://www.organization.com' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className='flex justify-end space-x-2 pt-4'>\n              <Button\n                type='button'\n                variant='outline'\n                onClick={() => onOpenChange(false)}\n                disabled={createOrganizationMutation.isPending}\n              >\n                Cancel\n              </Button>\n              <Button type='submit' disabled={createOrganizationMutation.isPending}>\n                {createOrganizationMutation.isPending ? 'Creating...' : 'Create Organization'}\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "41ee765657b085cef1f54d00d0fcb87f9b47fabb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q3cdw5gtw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q3cdw5gtw();
cov_1q3cdw5gtw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1q3cdw5gtw().s[1]++;
exports.OrganizationForm = OrganizationForm;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[2]++, require("react/jsx-runtime"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[3]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[4]++, require("@hookform/resolvers/zod"));
const react_query_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[5]++, require("@tanstack/react-query"));
const zod_2 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[6]++, require("zod"));
const queryClient_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[7]++, require("@/lib/queryClient"));
const use_toast_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[8]++, require("@/hooks/use-toast"));
const use_language_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[9]++, require("@/hooks/use-language"));
const dialog_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[10]++, require("@/components/ui/dialog"));
const form_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[11]++, require("@/components/ui/form"));
const select_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[12]++, require("@/components/ui/select"));
const input_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[13]++, require("@/components/ui/input"));
const button_1 =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[14]++, require("@/components/ui/button"));
// Define the form schema with Quebec-specific validation
const organizationFormSchema =
/* istanbul ignore next */
(cov_1q3cdw5gtw().s[15]++, zod_2.z.object({
  name: zod_2.z.string().min(1, 'Organization name is required (example: Maple Property Management)').max(200, 'Organization name must be less than 200 characters'),
  type: zod_2.z.string().min(1, 'Please select an organization type from the dropdown'),
  address: zod_2.z.string().min(1, 'Street address is required (example: 123 Rue Saint-Denis)').max(300, 'Address must be less than 300 characters'),
  city: zod_2.z.string().min(1, 'City name is required (example: Montréal)').max(100, 'City name must be less than 100 characters').regex(/^[a-zA-ZÀ-ÿ\s'-]+$/, 'City name can only contain letters, spaces, apostrophes and hyphens'),
  province: zod_2.z.string().min(1, 'Province is required').default('QC'),
  postalCode: zod_2.z.string().min(1, 'Postal code is required').regex(/^[A-Z]\d[A-Z]\s?\d[A-Z]\d$|^[A-Z]\d[A-Z]\d[A-Z]\d$/, 'Postal code must follow Canadian format (example: H1A 1B1)'),
  phone: zod_2.z.string().optional().refine(val => {
    /* istanbul ignore next */
    cov_1q3cdw5gtw().f[0]++;
    cov_1q3cdw5gtw().s[16]++;
    if (!val) {
      /* istanbul ignore next */
      cov_1q3cdw5gtw().b[0][0]++;
      cov_1q3cdw5gtw().s[17]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1q3cdw5gtw().b[0][1]++;
    }
    cov_1q3cdw5gtw().s[18]++;
    return /^(\+1\s?)?(\(\d{3}\)|\d{3})[\s.-]?\d{3}[\s.-]?\d{4}$/.test(val);
  }, 'Phone number must be a valid North American format (example: (514) 123-4567)'),
  email: zod_2.z.string().email('Please enter a valid email address (example: contact@organization.com)').optional().or(zod_2.z.literal('')),
  website: zod_2.z.string().url('Website must be a valid URL (example: https://www.organization.com)').optional().or(zod_2.z.literal('')),
  registrationNumber: zod_2.z.string().max(50, 'Registration number must be less than 50 characters').optional()
}));
/**
 * Form for creating new organizations in the Quebec property management system.
 * Includes all required fields with Quebec-specific defaults and validation.
 * @param root0 - Component props.
 * @param root0.open - Dialog open state.
 * @param root0.onOpenChange - Callback to handle dialog open state changes.
 * @returns Organization form dialog component.
 */
/**
 * OrganizationForm function.
 * @param root0
 * @param root0.open
 * @param root0.onOpenChange
 * @returns Function result.
 */
function OrganizationForm({
  open,
  onOpenChange
}) {
  /* istanbul ignore next */
  cov_1q3cdw5gtw().f[1]++;
  const {
    t: _t
  } =
  /* istanbul ignore next */
  (cov_1q3cdw5gtw().s[19]++, (0, use_language_1.useLanguage)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1q3cdw5gtw().s[20]++, (0, use_toast_1.useToast)());
  const queryClient =
  /* istanbul ignore next */
  (cov_1q3cdw5gtw().s[21]++, (0, react_query_1.useQueryClient)());
  const form =
  /* istanbul ignore next */
  (cov_1q3cdw5gtw().s[22]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(organizationFormSchema),
    defaultValues: {
      name: '',
      type: '',
      address: '',
      city: '',
      province: 'QC',
      // Default to Quebec
      postalCode: '',
      phone: '',
      email: '',
      website: '',
      registrationNumber: ''
    }
  }));
  const createOrganizationMutation =
  /* istanbul ignore next */
  (cov_1q3cdw5gtw().s[23]++, (0, react_query_1.useMutation)({
    mutationFn: async _data => {
      /* istanbul ignore next */
      cov_1q3cdw5gtw().f[2]++;
      const response =
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().s[24]++, await (0, queryClient_1.apiRequest)('POST', '/api/organizations', _data));
      /* istanbul ignore next */
      cov_1q3cdw5gtw().s[25]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1q3cdw5gtw().f[3]++;
      cov_1q3cdw5gtw().s[26]++;
      toast({
        title: 'Success',
        description: 'Organization created successfully'
      });
      /* istanbul ignore next */
      cov_1q3cdw5gtw().s[27]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/organizations']
      });
      /* istanbul ignore next */
      cov_1q3cdw5gtw().s[28]++;
      form.reset();
      /* istanbul ignore next */
      cov_1q3cdw5gtw().s[29]++;
      onOpenChange(false);
    },
    onError: _error => {
      /* istanbul ignore next */
      cov_1q3cdw5gtw().f[4]++;
      cov_1q3cdw5gtw().s[30]++;
      toast({
        title: 'Error',
        description:
        /* istanbul ignore next */
        (cov_1q3cdw5gtw().b[1][0]++, _error?.message) ||
        /* istanbul ignore next */
        (cov_1q3cdw5gtw().b[1][1]++, 'Failed to create organization'),
        variant: 'destructive'
      });
    }
  }));
  /* istanbul ignore next */
  cov_1q3cdw5gtw().s[31]++;
  const onSubmit = _data => {
    /* istanbul ignore next */
    cov_1q3cdw5gtw().f[5]++;
    // Convert empty strings to undefined for optional fields
    const cleanData =
    /* istanbul ignore next */
    (cov_1q3cdw5gtw().s[32]++, {
      ..._data,
      phone:
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[2][0]++, _data.phone) ||
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[2][1]++, undefined),
      email:
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[3][0]++, _data.email) ||
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[3][1]++, undefined),
      website:
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[4][0]++, _data.website) ||
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[4][1]++, undefined),
      registrationNumber:
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[5][0]++, _data.registrationNumber) ||
      /* istanbul ignore next */
      (cov_1q3cdw5gtw().b[5][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_1q3cdw5gtw().s[33]++;
    createOrganizationMutation.mutate(cleanData);
  };
  /* istanbul ignore next */
  cov_1q3cdw5gtw().s[34]++;
  return (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
    open: open,
    onOpenChange: onOpenChange,
    children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
      className: 'sm:max-w-[600px] max-h-[90vh] overflow-y-auto',
      children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, {
        children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
          children: "Create New Organization"
        })
      }), (0, jsx_runtime_1.jsx)(form_1.Form, {
        ...form,
        children: (0, jsx_runtime_1.jsxs)("form", {
          onSubmit: form.handleSubmit(onSubmit),
          className: 'space-y-4',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'grid grid-cols-1 md:grid-cols-2 gap-4',
            children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'name',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[6]++;
                cov_1q3cdw5gtw().s[35]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  className: 'md:col-span-2',
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Organization Name *"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'Enter organization name',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'type',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[7]++;
                cov_1q3cdw5gtw().s[36]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Type *"
                  }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    onValueChange: field.onChange,
                    defaultValue: field.value,
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                        children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                          placeholder: 'Select organization type'
                        })
                      })
                    }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                      children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'management_company',
                        children: "Management Company"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'syndicate',
                        children: "Syndicate"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'cooperative',
                        children: "Cooperative"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'condo_association',
                        children: "Condo Association"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'Demo',
                        children: "Demo"
                      })]
                    })]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'registrationNumber',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[8]++;
                cov_1q3cdw5gtw().s[37]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Quebec Registration Number"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'Business registration number',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'address',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[9]++;
                cov_1q3cdw5gtw().s[38]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  className: 'md:col-span-2',
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Address *"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'Street address',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'city',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[10]++;
                cov_1q3cdw5gtw().s[39]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "City *"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'City',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'province',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[11]++;
                cov_1q3cdw5gtw().s[40]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Province"
                  }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    onValueChange: field.onChange,
                    defaultValue: field.value,
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                        children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {})
                      })
                    }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                      children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'QC',
                        children: "Quebec (QC)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'ON',
                        children: "Ontario (ON)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'BC',
                        children: "British Columbia (BC)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'AB',
                        children: "Alberta (AB)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'SK',
                        children: "Saskatchewan (SK)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'MB',
                        children: "Manitoba (MB)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NB',
                        children: "New Brunswick (NB)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NS',
                        children: "Nova Scotia (NS)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'PE',
                        children: "Prince Edward Island (PE)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NL',
                        children: "Newfoundland and Labrador (NL)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NT',
                        children: "Northwest Territories (NT)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NU',
                        children: "Nunavut (NU)"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'YT',
                        children: "Yukon (YT)"
                      })]
                    })]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'postalCode',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[12]++;
                cov_1q3cdw5gtw().s[41]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Postal Code *"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'A1A 1A1',
                      ...field,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1q3cdw5gtw().f[13]++;
                        // Auto-format postal code to uppercase
                        const value =
                        /* istanbul ignore next */
                        (cov_1q3cdw5gtw().s[42]++, e.target.value.toUpperCase());
                        /* istanbul ignore next */
                        cov_1q3cdw5gtw().s[43]++;
                        field.onChange(value);
                      }
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'phone',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[14]++;
                cov_1q3cdw5gtw().s[44]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Phone"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: '(514) 123-4567',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'email',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[15]++;
                cov_1q3cdw5gtw().s[45]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Email"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'contact@organization.com',
                      type: 'email',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'website',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[16]++;
                cov_1q3cdw5gtw().s[46]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  className: 'md:col-span-2',
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: "Website"
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: 'https://www.organization.com',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex justify-end space-x-2 pt-4',
            children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
              type: 'button',
              variant: 'outline',
              onClick: () => {
                /* istanbul ignore next */
                cov_1q3cdw5gtw().f[17]++;
                cov_1q3cdw5gtw().s[47]++;
                return onOpenChange(false);
              },
              disabled: createOrganizationMutation.isPending,
              children: "Cancel"
            }), (0, jsx_runtime_1.jsx)(button_1.Button, {
              type: 'submit',
              disabled: createOrganizationMutation.isPending,
              children: createOrganizationMutation.isPending ?
              /* istanbul ignore next */
              (cov_1q3cdw5gtw().b[6][0]++, 'Creating...') :
              /* istanbul ignore next */
              (cov_1q3cdw5gtw().b[6][1]++, 'Create Organization')
            })]
          })]
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,