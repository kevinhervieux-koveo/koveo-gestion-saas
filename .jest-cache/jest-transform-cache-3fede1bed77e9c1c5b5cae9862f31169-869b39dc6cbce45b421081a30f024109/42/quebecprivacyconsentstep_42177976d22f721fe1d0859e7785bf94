018dc8209a466f07717ef29ad354a569
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuebecPrivacyConsentStep = QuebecPrivacyConsentStep;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const card_1 = require("@/components/ui/card");
const checkbox_1 = require("@/components/ui/checkbox");
const label_1 = require("@/components/ui/label");
const alert_1 = require("@/components/ui/alert");
const lucide_react_1 = require("lucide-react");
const use_language_1 = require("@/hooks/use-language");
/**
 * Quebec Privacy Consent Step Component.
 *
 * Collects explicit consent for data processing activities
 * in compliance with Quebec's Law 25 (Bill 64) privacy requirements.
 * @param root0 - The wizard step props.
 * @param root0.data - Current step data.
 * @param root0.onDataChange - Callback when step data changes.
 * @param root0.onValidationChange - Callback when validation status changes.
 * @returns JSX element for the Quebec privacy consent step.
 */
/**
 * QuebecPrivacyConsentStep function.
 * @param root0
 * @param root0.data
 * @param root0.onDataChange
 * @param root0.onValidationChange
 * @param root0._data
 * @returns Function result.
 */
function QuebecPrivacyConsentStep({ _data, onDataChange, onValidationChange, }) {
    const { t: _t } = (0, use_language_1.useLanguage)();
    const [formData, setFormData] = (0, react_1.useState)({
        dataCollectionConsent: false,
        marketingConsent: false,
        analyticsConsent: false,
        thirdPartyConsent: false,
        acknowledgedRights: false,
        isValid: false,
        consentDate: new Date().toISOString(),
        ..._data,
    });
    const [isDataCollectionExpanded, setIsDataCollectionExpanded] = (0, react_1.useState)(false);
    // Validate form whenever consent data changes
    (0, react_1.useEffect)(() => {
        const isValid = formData.dataCollectionConsent && formData.acknowledgedRights;
        // Only update if validation state actually changed
        if (formData.isValid !== isValid) {
            const updatedData = { ...formData, isValid };
            onDataChange(updatedData);
            onValidationChange(isValid);
        }
    }, [formData.dataCollectionConsent, formData.acknowledgedRights, formData.isValid]);
    const _validateForm = () => {
        // Required consents: data collection and rights acknowledgment
        return formData.dataCollectionConsent && formData.acknowledgedRights;
    };
    const handleConsentChange = (field, _value) => {
        setFormData((prev) => ({
            ...prev,
            [field]: _value,
            consentDate: new Date().toISOString(), // Update consent timestamp
        }));
    };
    const handleMasterDataCollectionChange = (_value) => {
        setFormData((prev) => ({
            ...prev,
            dataCollectionConsent: _value, // Essential consent (required)
            marketingConsent: _value, // Optional consent
            analyticsConsent: _value, // Optional consent
            thirdPartyConsent: _value, // Optional consent
            consentDate: new Date().toISOString(),
        }));
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: 'space-y-6 max-w-3xl mx-auto', children: [(0, jsx_runtime_1.jsxs)(alert_1.Alert, { className: 'border-blue-200 bg-blue-50', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Shield, { className: 'h-4 w-4 text-blue-600' }), (0, jsx_runtime_1.jsxs)(alert_1.AlertDescription, { className: 'text-blue-800', children: [(0, jsx_runtime_1.jsx)("strong", { children: "Protection des renseignements personnels (Loi 25 - Qu\u00E9bec):" }), " Votre consentement est requis pour la collecte et l'utilisation de vos donn\u00E9es personnelles."] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-6', children: [(0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsx)(card_1.CardContent, { className: 'pt-6', children: (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-4', children: [(0, jsx_runtime_1.jsx)("div", { className: 'bg-green-50 border border-green-200 p-4 rounded-lg', children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-3 flex-1', children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: 'masterDataCollectionConsent', checked: formData.dataCollectionConsent &&
                                                                formData.marketingConsent &&
                                                                formData.analyticsConsent &&
                                                                formData.thirdPartyConsent, onCheckedChange: (checked) => handleMasterDataCollectionChange(checked), className: 'mt-1' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: 'h-5 w-5 text-blue-600' }), (0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: 'masterDataCollectionConsent', className: 'text-lg font-medium text-green-900 cursor-pointer', children: "Collecte et traitement des donn\u00E9es" })] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-green-800 mt-1', children: "J'accepte tous les types de collecte et traitement de donn\u00E9es (essentielles et optionnelles)." })] })] }), (0, jsx_runtime_1.jsx)("button", { type: 'button', onClick: () => setIsDataCollectionExpanded(!isDataCollectionExpanded), className: 'ml-2 p-1 hover:bg-green-100 rounded-md transition-colors', children: isDataCollectionExpanded ? ((0, jsx_runtime_1.jsx)(lucide_react_1.ChevronUp, { className: 'h-4 w-4 text-green-700' })) : ((0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, { className: 'h-4 w-4 text-green-700' })) })] }) }), isDataCollectionExpanded && ((0, jsx_runtime_1.jsxs)("div", { className: 'space-y-3 ml-8', children: [(0, jsx_runtime_1.jsx)("div", { className: 'bg-blue-50 border border-blue-200 p-3 rounded-lg', children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-3', children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: 'dataCollectionConsent', checked: formData.dataCollectionConsent, onCheckedChange: (checked) => handleConsentChange('dataCollectionConsent', checked), className: 'mt-1' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: 'dataCollectionConsent', className: 'text-sm font-medium text-blue-900 cursor-pointer', children: "Collecte des donn\u00E9es essentielles (Requis) *" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-blue-800 mt-1', children: "Authentification, communication, gestion de compte, services de gestion immobili\u00E8re." })] })] }) }), (0, jsx_runtime_1.jsx)("div", { className: 'bg-gray-50 border border-gray-200 p-3 rounded-lg', children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-3', children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: 'marketingConsent', checked: formData.marketingConsent, onCheckedChange: (checked) => handleConsentChange('marketingConsent', checked), className: 'mt-1' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: 'marketingConsent', className: 'text-sm font-medium text-gray-900 cursor-pointer', children: "Communications marketing (Optionnel)" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-gray-600 mt-1', children: "Communications promotionnelles, nouvelles fonctionnalit\u00E9s, offres sp\u00E9ciales." })] })] }) }), (0, jsx_runtime_1.jsx)("div", { className: 'bg-gray-50 border border-gray-200 p-3 rounded-lg', children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-3', children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: 'analyticsConsent', checked: formData.analyticsConsent, onCheckedChange: (checked) => handleConsentChange('analyticsConsent', checked), className: 'mt-1' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: 'analyticsConsent', className: 'text-sm font-medium text-gray-900 cursor-pointer', children: "Analyse et am\u00E9lioration (Optionnel)" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-gray-600 mt-1', children: "Donn\u00E9es d'utilisation anonymis\u00E9es pour am\u00E9liorer les services." })] })] }) }), (0, jsx_runtime_1.jsx)("div", { className: 'bg-gray-50 border border-gray-200 p-3 rounded-lg', children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-3', children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: 'thirdPartyConsent', checked: formData.thirdPartyConsent, onCheckedChange: (checked) => handleConsentChange('thirdPartyConsent', checked), className: 'mt-1' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: 'thirdPartyConsent', className: 'text-sm font-medium text-gray-900 cursor-pointer', children: "Services tiers int\u00E9gr\u00E9s (Optionnel)" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-gray-600 mt-1', children: "Cartographie, notifications, stockage pour am\u00E9liorer l'exp\u00E9rience." })] })] }) })] }))] }) }) }), (0, jsx_runtime_1.jsx)(card_1.Card, { children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: 'pt-6', children: [(0, jsx_runtime_1.jsxs)("h3", { className: 'text-lg font-medium text-gray-900 flex items-center mb-4', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Eye, { className: 'h-5 w-5 mr-2 text-blue-600' }), "Droits et contr\u00F4le"] }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-4', children: [(0, jsx_runtime_1.jsx)("div", { className: `p-4 rounded-lg border-2 ${!formData.acknowledgedRights ? 'bg-yellow-50 border-yellow-300' : 'bg-blue-50 border-blue-200'}`, children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-3', children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: 'acknowledgedRights', checked: formData.acknowledgedRights, onCheckedChange: (checked) => handleConsentChange('acknowledgedRights', checked), className: 'mt-1' }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex-1', children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: 'acknowledgedRights', className: `text-sm font-medium cursor-pointer ${!formData.acknowledgedRights ? 'text-yellow-900' : 'text-blue-900'}`, children: "Reconnaissance de mes droits (Requis) *" }), (0, jsx_runtime_1.jsx)("p", { className: `text-xs mt-1 ${!formData.acknowledgedRights ? 'text-yellow-800' : 'text-blue-800'}`, children: "J'ai \u00E9t\u00E9 inform\u00E9(e) de mes droits concernant mes renseignements personnels et je comprends que je peux exercer ces droits \u00E0 tout moment." }), !formData.acknowledgedRights && ((0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-yellow-700 font-medium mt-2', children: "\u26A0\uFE0F Cette case doit \u00EAtre coch\u00E9e pour continuer." }))] })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: 'bg-white border border-gray-200 p-4 rounded-lg', children: [(0, jsx_runtime_1.jsx)("h4", { className: 'text-sm font-medium text-gray-900 mb-3', children: "\uD83D\uDCCB Vos droits selon la Loi 25 du Qu\u00E9bec" }), (0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-1 md:grid-cols-2 gap-3 text-xs text-gray-600', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Eye, { className: 'h-4 w-4 text-blue-500 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Droit d'acc\u00E8s:" }), " Consulter vos donn\u00E9es personnelles"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, { className: 'h-4 w-4 text-green-500 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Droit de rectification:" }), " Corriger des informations inexactes"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Lock, { className: 'h-4 w-4 text-red-500 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Droit de suppression:" }), " Demander l'effacement de vos donn\u00E9es"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Download, { className: 'h-4 w-4 text-purple-500 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Droit de portabilit\u00E9:" }), " R\u00E9cup\u00E9rer vos donn\u00E9es dans un format lisible"] })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'bg-gray-50 border border-gray-200 p-4 rounded-lg', children: [(0, jsx_runtime_1.jsx)("h4", { className: 'text-sm font-medium text-gray-900 mb-2', children: "\uD83D\uDCDE Contact pour vos droits" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-gray-600', children: "Pour exercer vos droits ou pour toute question concernant vos donn\u00E9es personnelles, contactez notre responsable de la protection des donn\u00E9es:" }), (0, jsx_runtime_1.jsxs)("div", { className: 'mt-2 space-y-1 text-xs text-gray-700', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Mail, { className: 'h-3 w-3' }), (0, jsx_runtime_1.jsx)("span", { children: "info@koveo-gestion.com" })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Phone, { className: 'h-3 w-3' }), (0, jsx_runtime_1.jsx)("span", { children: "514-712-8441" })] })] })] })] })] }) }), (0, jsx_runtime_1.jsx)(card_1.Card, { className: 'border-green-200 bg-green-50', children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: 'pt-6', children: [(0, jsx_runtime_1.jsxs)("h3", { className: 'text-lg font-medium text-green-900 flex items-center mb-4', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Lock, { className: 'h-5 w-5 mr-2' }), "S\u00E9curit\u00E9 et conservation"] }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-3 text-sm text-green-800', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Shield, { className: 'h-4 w-4 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "S\u00E9curit\u00E9:" }), " Vos donn\u00E9es sont chiffr\u00E9es et stock\u00E9es sur des serveurs s\u00E9curis\u00E9s au Canada"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: 'h-4 w-4 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Conservation:" }), " Vos donn\u00E9es sont conserv\u00E9es selon les exigences l\u00E9gales qu\u00E9b\u00E9coises"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, { className: 'h-4 w-4 mt-0.5 flex-shrink-0' }), (0, jsx_runtime_1.jsxs)("span", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Transparence:" }), " Consultez notre politique de confidentialit\u00E9 compl\u00E8te \u00E0 tout moment"] })] })] })] }) })] })] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,