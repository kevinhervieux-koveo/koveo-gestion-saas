db62cc35c2eedd99011f9908d712824d
"use strict";

/* istanbul ignore next */
function cov_21u2iugoft() {
  var path = "/home/runner/workspace/client/src/pages/manager/demands.tsx";
  var hash = "584889b350428c5f651217d53ba2f05072c0df2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/pages/manager/demands.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "39": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "40": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "41": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 42,
          column: 54
        }
      },
      "42": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "43": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "44": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "45": {
        start: {
          line: 46,
          column: 15
        },
        end: {
          line: 46,
          column: 46
        }
      },
      "46": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 48
        }
      },
      "47": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 46
        }
      },
      "48": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 49,
          column: 50
        }
      },
      "49": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "50": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 54
        }
      },
      "51": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 52,
          column: 52
        }
      },
      "52": {
        start: {
          line: 53,
          column: 14
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "53": {
        start: {
          line: 54,
          column: 14
        },
        end: {
          line: 54,
          column: 28
        }
      },
      "54": {
        start: {
          line: 55,
          column: 15
        },
        end: {
          line: 55,
          column: 46
        }
      },
      "55": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 56,
          column: 50
        }
      },
      "56": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "57": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 54
        }
      },
      "58": {
        start: {
          line: 59,
          column: 31
        },
        end: {
          line: 59,
          column: 100
        }
      },
      "59": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "60": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 69,
          column: 2
        }
      },
      "61": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "62": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "63": {
        start: {
          line: 86,
          column: 18
        },
        end: {
          line: 86,
          column: 51
        }
      },
      "64": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "65": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "66": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "67": {
        start: {
          line: 91,
          column: 30
        },
        end: {
          line: 91,
          column: 56
        }
      },
      "68": {
        start: {
          line: 92,
          column: 32
        },
        end: {
          line: 92,
          column: 60
        }
      },
      "69": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "70": {
        start: {
          line: 94,
          column: 21
        },
        end: {
          line: 94,
          column: 33
        }
      },
      "71": {
        start: {
          line: 97,
          column: 40
        },
        end: {
          line: 97,
          column: 65
        }
      },
      "72": {
        start: {
          line: 98,
          column: 44
        },
        end: {
          line: 98,
          column: 72
        }
      },
      "73": {
        start: {
          line: 99,
          column: 40
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "74": {
        start: {
          line: 100,
          column: 48
        },
        end: {
          line: 100,
          column: 75
        }
      },
      "75": {
        start: {
          line: 101,
          column: 50
        },
        end: {
          line: 101,
          column: 78
        }
      },
      "76": {
        start: {
          line: 102,
          column: 46
        },
        end: {
          line: 102,
          column: 74
        }
      },
      "77": {
        start: {
          line: 104,
          column: 54
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "78": {
        start: {
          line: 109,
          column: 37
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "79": {
        start: {
          line: 113,
          column: 38
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "80": {
        start: {
          line: 117,
          column: 34
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "81": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "82": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 163,
          column: 6
        }
      },
      "83": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 140,
          column: 14
        }
      },
      "84": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "85": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 59
        }
      },
      "86": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 35
        }
      },
      "87": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 88
        }
      },
      "88": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 38
        }
      },
      "89": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 34
        }
      },
      "90": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 153,
          column: 15
        }
      },
      "91": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "92": {
        start: {
          line: 165,
          column: 26
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "93": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 62
        }
      },
      "94": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "95": {
        start: {
          line: 179,
          column: 30
        },
        end: {
          line: 183,
          column: 83
        }
      },
      "96": {
        start: {
          line: 184,
          column: 30
        },
        end: {
          line: 184,
          column: 86
        }
      },
      "97": {
        start: {
          line: 185,
          column: 28
        },
        end: {
          line: 185,
          column: 78
        }
      },
      "98": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 61
        }
      },
      "99": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 106
        }
      },
      "100": {
        start: {
          line: 189,
          column: 57
        },
        end: {
          line: 189,
          column: 105
        }
      },
      "101": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 103
        }
      },
      "102": {
        start: {
          line: 190,
          column: 56
        },
        end: {
          line: 190,
          column: 102
        }
      },
      "103": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 191,
          column: 117
        }
      },
      "104": {
        start: {
          line: 191,
          column: 59
        },
        end: {
          line: 191,
          column: 116
        }
      },
      "105": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "106": {
        start: {
          line: 193,
          column: 31
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "107": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 42
        }
      },
      "108": {
        start: {
          line: 196,
          column: 30
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "109": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 34
        }
      },
      "110": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "111": {
        start: {
          line: 200,
          column: 32
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "112": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 84
        }
      },
      "113": {
        start: {
          line: 203,
          column: 23
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "114": {
        start: {
          line: 204,
          column: 25
        },
        end: {
          line: 204,
          column: 74
        }
      },
      "115": {
        start: {
          line: 204,
          column: 47
        },
        end: {
          line: 204,
          column: 73
        }
      },
      "116": {
        start: {
          line: 205,
          column: 26
        },
        end: {
          line: 205,
          column: 77
        }
      },
      "117": {
        start: {
          line: 205,
          column: 49
        },
        end: {
          line: 205,
          column: 76
        }
      },
      "118": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 1679
        }
      },
      "119": {
        start: {
          line: 206,
          column: 133
        },
        end: {
          line: 206,
          column: 158
        }
      },
      "120": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "121": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 496
        }
      },
      "122": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 10262
        }
      },
      "123": {
        start: {
          line: 217,
          column: 1686
        },
        end: {
          line: 217,
          column: 2634
        }
      },
      "124": {
        start: {
          line: 217,
          column: 2759
        },
        end: {
          line: 217,
          column: 3454
        }
      },
      "125": {
        start: {
          line: 217,
          column: 3288
        },
        end: {
          line: 217,
          column: 3393
        }
      },
      "126": {
        start: {
          line: 217,
          column: 3580
        },
        end: {
          line: 217,
          column: 3943
        }
      },
      "127": {
        start: {
          line: 217,
          column: 4595
        },
        end: {
          line: 217,
          column: 4624
        }
      },
      "128": {
        start: {
          line: 217,
          column: 7812
        },
        end: {
          line: 217,
          column: 7877
        }
      },
      "129": {
        start: {
          line: 217,
          column: 8385
        },
        end: {
          line: 217,
          column: 8450
        }
      },
      "130": {
        start: {
          line: 217,
          column: 8970
        },
        end: {
          line: 217,
          column: 9035
        }
      },
      "131": {
        start: {
          line: 217,
          column: 9967
        },
        end: {
          line: 217,
          column: 10032
        }
      },
      "132": {
        start: {
          line: 217,
          column: 10166
        },
        end: {
          line: 217,
          column: 10189
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "ManagerDemandsPage",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 27
          }
        },
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 26
          }
        },
        loc: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 133,
            column: 20
          },
          end: {
            line: 133,
            column: 21
          }
        },
        loc: {
          start: {
            line: 133,
            column: 36
          },
          end: {
            line: 145,
            column: 9
          }
        },
        line: 133
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 146,
            column: 20
          }
        },
        loc: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 154,
            column: 9
          }
        },
        line: 146
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 17
          },
          end: {
            line: 155,
            column: 18
          }
        },
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 162,
            column: 9
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 178,
            column: 48
          },
          end: {
            line: 178,
            column: 49
          }
        },
        loc: {
          start: {
            line: 178,
            column: 60
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 178
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 189,
            column: 50
          },
          end: {
            line: 189,
            column: 51
          }
        },
        loc: {
          start: {
            line: 189,
            column: 57
          },
          end: {
            line: 189,
            column: 105
          }
        },
        line: 189
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 190,
            column: 49
          },
          end: {
            line: 190,
            column: 50
          }
        },
        loc: {
          start: {
            line: 190,
            column: 56
          },
          end: {
            line: 190,
            column: 102
          }
        },
        line: 190
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 191,
            column: 52
          },
          end: {
            line: 191,
            column: 53
          }
        },
        loc: {
          start: {
            line: 191,
            column: 59
          },
          end: {
            line: 191,
            column: 116
          }
        },
        line: 191
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 193,
            column: 32
          }
        },
        loc: {
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 196,
            column: 30
          },
          end: {
            line: 196,
            column: 31
          }
        },
        loc: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 196
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 200,
            column: 32
          },
          end: {
            line: 200,
            column: 33
          }
        },
        loc: {
          start: {
            line: 200,
            column: 38
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 200
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 203,
            column: 23
          },
          end: {
            line: 203,
            column: 24
          }
        },
        loc: {
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 203
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 204,
            column: 40
          },
          end: {
            line: 204,
            column: 41
          }
        },
        loc: {
          start: {
            line: 204,
            column: 47
          },
          end: {
            line: 204,
            column: 73
          }
        },
        line: 204
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 205,
            column: 42
          },
          end: {
            line: 205,
            column: 43
          }
        },
        loc: {
          start: {
            line: 205,
            column: 49
          },
          end: {
            line: 205,
            column: 76
          }
        },
        line: 205
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 206,
            column: 127
          },
          end: {
            line: 206,
            column: 128
          }
        },
        loc: {
          start: {
            line: 206,
            column: 133
          },
          end: {
            line: 206,
            column: 158
          }
        },
        line: 206
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 217,
            column: 1670
          },
          end: {
            line: 217,
            column: 1671
          }
        },
        loc: {
          start: {
            line: 217,
            column: 1686
          },
          end: {
            line: 217,
            column: 2634
          }
        },
        line: 217
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 217,
            column: 2743
          },
          end: {
            line: 217,
            column: 2744
          }
        },
        loc: {
          start: {
            line: 217,
            column: 2759
          },
          end: {
            line: 217,
            column: 3454
          }
        },
        line: 217
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 217,
            column: 3273
          },
          end: {
            line: 217,
            column: 3274
          }
        },
        loc: {
          start: {
            line: 217,
            column: 3288
          },
          end: {
            line: 217,
            column: 3393
          }
        },
        line: 217
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 217,
            column: 3564
          },
          end: {
            line: 217,
            column: 3565
          }
        },
        loc: {
          start: {
            line: 217,
            column: 3580
          },
          end: {
            line: 217,
            column: 3943
          }
        },
        line: 217
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 217,
            column: 4588
          },
          end: {
            line: 217,
            column: 4589
          }
        },
        loc: {
          start: {
            line: 217,
            column: 4595
          },
          end: {
            line: 217,
            column: 4624
          }
        },
        line: 217
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 217,
            column: 7799
          },
          end: {
            line: 217,
            column: 7800
          }
        },
        loc: {
          start: {
            line: 217,
            column: 7812
          },
          end: {
            line: 217,
            column: 7877
          }
        },
        line: 217
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 217,
            column: 8372
          },
          end: {
            line: 217,
            column: 8373
          }
        },
        loc: {
          start: {
            line: 217,
            column: 8385
          },
          end: {
            line: 217,
            column: 8450
          }
        },
        line: 217
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 217,
            column: 8957
          },
          end: {
            line: 217,
            column: 8958
          }
        },
        loc: {
          start: {
            line: 217,
            column: 8970
          },
          end: {
            line: 217,
            column: 9035
          }
        },
        line: 217
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 217,
            column: 9954
          },
          end: {
            line: 217,
            column: 9955
          }
        },
        loc: {
          start: {
            line: 217,
            column: 9967
          },
          end: {
            line: 217,
            column: 10032
          }
        },
        line: 217
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 217,
            column: 10160
          },
          end: {
            line: 217,
            column: 10161
          }
        },
        loc: {
          start: {
            line: 217,
            column: 10166
          },
          end: {
            line: 217,
            column: 10189
          }
        },
        line: 217
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 60
          }
        }, {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 56
          }
        }, {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 60
          }
        }, {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 48
          }
        }, {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 33
          }
        }],
        line: 89
      },
      "21": {
        loc: {
          start: {
            line: 104,
            column: 18
          },
          end: {
            line: 104,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 104,
            column: 30
          }
        }],
        line: 104
      },
      "22": {
        loc: {
          start: {
            line: 109,
            column: 18
          },
          end: {
            line: 109,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 109,
            column: 30
          },
          end: {
            line: 109,
            column: 32
          }
        }],
        line: 109
      },
      "23": {
        loc: {
          start: {
            line: 113,
            column: 18
          },
          end: {
            line: 113,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 113,
            column: 33
          }
        }],
        line: 113
      },
      "24": {
        loc: {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 35
          }
        }, {
          start: {
            line: 121,
            column: 39
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 121
      },
      "25": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "26": {
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 177,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 50
          },
          end: {
            line: 177,
            column: 57
          }
        }, {
          start: {
            line: 177,
            column: 60
          },
          end: {
            line: 177,
            column: 62
          }
        }],
        line: 177
      },
      "27": {
        loc: {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 183,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 98
          }
        }, {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 180,
            column: 87
          }
        }, {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 89
          }
        }, {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 182,
            column: 88
          }
        }, {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 83
          }
        }],
        line: 179
      },
      "28": {
        loc: {
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 52
          }
        }, {
          start: {
            line: 184,
            column: 56
          },
          end: {
            line: 184,
            column: 86
          }
        }],
        line: 184
      },
      "29": {
        loc: {
          start: {
            line: 185,
            column: 28
          },
          end: {
            line: 185,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 28
          },
          end: {
            line: 185,
            column: 48
          }
        }, {
          start: {
            line: 185,
            column: 52
          },
          end: {
            line: 185,
            column: 78
          }
        }],
        line: 185
      },
      "30": {
        loc: {
          start: {
            line: 186,
            column: 15
          },
          end: {
            line: 186,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 15
          },
          end: {
            line: 186,
            column: 28
          }
        }, {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 186,
            column: 45
          }
        }, {
          start: {
            line: 186,
            column: 49
          },
          end: {
            line: 186,
            column: 60
          }
        }],
        line: 186
      },
      "31": {
        loc: {
          start: {
            line: 206,
            column: 781
          },
          end: {
            line: 206,
            column: 821
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 781
          },
          end: {
            line: 206,
            column: 812
          }
        }, {
          start: {
            line: 206,
            column: 816
          },
          end: {
            line: 206,
            column: 821
          }
        }],
        line: 206
      },
      "32": {
        loc: {
          start: {
            line: 206,
            column: 1308
          },
          end: {
            line: 206,
            column: 1338
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 1308
          },
          end: {
            line: 206,
            column: 1322
          }
        }, {
          start: {
            line: 206,
            column: 1326
          },
          end: {
            line: 206,
            column: 1338
          }
        }],
        line: 206
      },
      "33": {
        loc: {
          start: {
            line: 206,
            column: 1344
          },
          end: {
            line: 206,
            column: 1496
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 1344
          },
          end: {
            line: 206,
            column: 1353
          }
        }, {
          start: {
            line: 206,
            column: 1358
          },
          end: {
            line: 206,
            column: 1495
          }
        }],
        line: 206
      },
      "34": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "35": {
        loc: {
          start: {
            line: 217,
            column: 4117
          },
          end: {
            line: 217,
            column: 4177
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 4150
          },
          end: {
            line: 217,
            column: 4163
          }
        }, {
          start: {
            line: 217,
            column: 4166
          },
          end: {
            line: 217,
            column: 4177
          }
        }],
        line: 217
      },
      "36": {
        loc: {
          start: {
            line: 217,
            column: 7408
          },
          end: {
            line: 217,
            column: 7883
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 7439
          },
          end: {
            line: 217,
            column: 7678
          }
        }, {
          start: {
            line: 217,
            column: 7683
          },
          end: {
            line: 217,
            column: 7882
          }
        }],
        line: 217
      },
      "37": {
        loc: {
          start: {
            line: 217,
            column: 7984
          },
          end: {
            line: 217,
            column: 8456
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 8014
          },
          end: {
            line: 217,
            column: 8252
          }
        }, {
          start: {
            line: 217,
            column: 8257
          },
          end: {
            line: 217,
            column: 8455
          }
        }],
        line: 217
      },
      "38": {
        loc: {
          start: {
            line: 217,
            column: 8560
          },
          end: {
            line: 217,
            column: 9041
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 8593
          },
          end: {
            line: 217,
            column: 8834
          }
        }, {
          start: {
            line: 217,
            column: 8839
          },
          end: {
            line: 217,
            column: 9040
          }
        }],
        line: 217
      },
      "39": {
        loc: {
          start: {
            line: 217,
            column: 9139
          },
          end: {
            line: 217,
            column: 10038
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 9152
          },
          end: {
            line: 217,
            column: 9389
          }
        }, {
          start: {
            line: 217,
            column: 9393
          },
          end: {
            line: 217,
            column: 10038
          }
        }],
        line: 217
      },
      "40": {
        loc: {
          start: {
            line: 217,
            column: 9393
          },
          end: {
            line: 217,
            column: 10038
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 9420
          },
          end: {
            line: 217,
            column: 9837
          }
        }, {
          start: {
            line: 217,
            column: 9842
          },
          end: {
            line: 217,
            column: 10037
          }
        }],
        line: 217
      },
      "41": {
        loc: {
          start: {
            line: 217,
            column: 9655
          },
          end: {
            line: 217,
            column: 9830
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 9655
          },
          end: {
            line: 217,
            column: 9678
          }
        }, {
          start: {
            line: 217,
            column: 9683
          },
          end: {
            line: 217,
            column: 9829
          }
        }],
        line: 217
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/pages/manager/demands.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/pages/manager/demands.tsx"],
      sourcesContent: ["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Plus, Search } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { queryClient } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/hooks/use-language';\nimport DemandDetailsPopup from '@/components/demands/demand-details-popup';\nimport { Header } from '@/components/layout/header';\nimport type { Demand as DemandType } from '@/../../shared/schema';\n\n// Types - extending the base Demand type with populated relations\ninterface Demand extends Omit<DemandType, 'createdAt' | 'updatedAt'> {\n  createdAt: string;\n  updatedAt: string;\n  submitter?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  residence?: {\n    id: string;\n    unitNumber: string;\n    buildingId: string;\n  };\n  building?: {\n    id: string;\n    name: string;\n    address: string;\n  };\n}\n\n/**\n *\n */\ninterface Building {\n  id: string;\n  name: string;\n}\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  name: string;\n  buildingId: string;\n}\n\n// Form schemas\nconst demandSchema = z.object({\n  type: z.enum(['maintenance', 'complaint', 'information', 'other']),\n  description: z.string().min(10, 'Description must be at least 10 characters'),\n  buildingId: z.string().min(1, 'Building is required'),\n  residenceId: z.string().optional(),\n  assignationBuildingId: z.string().optional(),\n  assignationResidenceId: z.string().optional(),\n});\n\n/**\n *\n */\ntype DemandFormData = z.infer<typeof demandSchema>;\n\nconst statusColors = {\n  draft: 'bg-gray-100 text-gray-800',\n  submitted: 'bg-blue-100 text-blue-800',\n  under_review: 'bg-yellow-100 text-yellow-800',\n  approved: 'bg-green-100 text-green-800',\n  rejected: 'bg-red-100 text-red-800',\n  in_progress: 'bg-purple-100 text-purple-800',\n  completed: 'bg-emerald-100 text-emerald-800',\n  cancelled: 'bg-gray-100 text-gray-800',\n};\n\n// Type labels will use translation function instead of static object\n\n/**\n *\n */\nexport default function ManagerDemandsPage() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n\n  // Function to get translated type labels\n  const getTypeLabel = (type: string) => {\n    switch (type) {\n      case 'maintenance': return t('maintenanceType');\n      case 'complaint': return t('complaintType');\n      case 'information': return t('informationType');\n      case 'other': return t('otherType');\n      default: return type;\n    }\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [selectedDemand, setSelectedDemand] = useState<Demand | null>(null);\n  const [isNewDemandOpen, setIsNewDemandOpen] = useState(false);\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n\n  // Fetch demands\n  const {\n    data: demands = [],\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: ['/api/demands'],\n    refetchInterval: 30000, // Refresh every 30 seconds\n  });\n\n  // Fetch buildings\n  const { data: buildings = [] } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n  });\n\n  // Fetch residences\n  const { data: residences = [] } = useQuery<Residence[]>({\n    queryKey: ['/api/residences'],\n  });\n\n  // Fetch current user\n  const { data: currentUser } = useQuery({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Provide default user to prevent type errors\n  const defaultUser = currentUser || {\n    id: '',\n    role: 'tenant' as const,\n    email: '',\n    firstName: '',\n    lastName: '',\n    isActive: true,\n    createdAt: '',\n    updatedAt: '',\n  };\n\n  // Create demand mutation\n  const createDemandMutation = useMutation({\n    mutationFn: async (data: DemandFormData) => {\n      const response = await fetch('/api/demands', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create demand');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/demands'] });\n      setIsNewDemandOpen(false);\n      newDemandForm.reset();\n      toast({\n        title: t('success'),\n        description: t('demandCreatedSuccess'),\n      });\n    },\n    onError: (error: any) => {\n      // Error creating demand\n      toast({\n        title: t('error'),\n        description: t('failedCreateDemand'),\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Forms\n  const newDemandForm = useForm<DemandFormData>({\n    resolver: zodResolver(demandSchema),\n    defaultValues: {\n      type: 'maintenance',\n      description: '',\n      buildingId: '',\n      residenceId: '',\n      assignationBuildingId: '',\n      assignationResidenceId: '',\n    },\n  });\n\n  // Filter demands - ensure demands is an array\n  const demandsArray = Array.isArray(demands) ? demands : [];\n  const filteredDemands = demandsArray.filter((demand: Demand) => {\n    const matchesSearch =\n      demand.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      getTypeLabel(demand.type)?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      demand.submitter?.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      demand.submitter?.lastName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      demand.building?.name?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || demand.status === statusFilter;\n    const matchesType = typeFilter === 'all' || demand.type === typeFilter;\n\n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  // Group demands by status for manager view\n  const pendingDemands = filteredDemands.filter((d: Demand) =>\n    ['submitted', 'under_review'].includes(d.status)\n  );\n  const activeDemands = filteredDemands.filter((d: Demand) =>\n    ['approved', 'in_progress'].includes(d.status)\n  );\n  const completedDemands = filteredDemands.filter((d: Demand) =>\n    ['completed', 'rejected', 'cancelled'].includes(d.status)\n  );\n  const allDemands = filteredDemands;\n\n  const handleCreateDemand = (data: DemandFormData) => {\n    createDemandMutation.mutate(data);\n  };\n\n  const handleDemandClick = (demand: Demand) => {\n    setSelectedDemand(demand);\n    setIsDetailsOpen(true);\n  };\n\n  const handleDemandUpdated = () => {\n    queryClient.invalidateQueries({ queryKey: ['/api/demands'] });\n  };\n\n  const DemandCard = ({ demand }: { demand: Demand }) => {\n    const building = buildings.find((b) => b.id === demand.buildingId);\n    const residence = residences.find((r) => r.id === demand.residenceId);\n\n    return (\n      <Card\n        className='cursor-pointer hover:shadow-md transition-shadow'\n        onClick={() => handleDemandClick(demand)}\n      >\n        <CardHeader className='pb-3'>\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center gap-2'>\n              <Badge variant='outline'>{getTypeLabel(demand.type)}</Badge>\n              <Badge className={statusColors[demand.status]}>\n                {demand.status.replace('_', ' ')}\n              </Badge>\n            </div>\n          </div>\n          <CardTitle className='text-base line-clamp-2'>\n            {demand.description.substring(0, 100)}\n            {demand.description.length > 100 && '...'}\n          </CardTitle>\n        </CardHeader>\n        <CardContent className='pt-0'>\n          <div className='text-sm text-muted-foreground space-y-1'>\n            <p>\n              <strong>{t('submittedBy')}:</strong> {demand.submitter?.firstName}{' '}\n              {demand.submitter?.lastName}\n            </p>\n            <p>\n              <strong>{t('building')}:</strong> {building?.name || t('unknown')}\n            </p>\n            {residence && (\n              <p>\n                <strong>{t('residence')}:</strong> {residence.name}\n              </p>\n            )}\n            <p>\n              <strong>{t('created')}:</strong> {new Date(demand.createdAt).toLocaleDateString()}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }; /**\n   * If function.\n   * @param isLoading - IsLoading parameter.\n   */ /**\n   * If function.\n   * @param isLoading - IsLoading parameter.\n   */\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('demandsManagement')} subtitle={t('demandsSubtitle')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='flex items-center justify-center h-64'>\n            <div className='text-center'>{t('loadingDemands')}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('demandsManagement')} subtitle={t('demandsSubtitle')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Header Actions */}\n          <div className='flex items-center justify-between'>\n            <div>\n              <h2 className='text-2xl font-bold'>{t('allDemands')}</h2>\n              <p className='text-muted-foreground'>{t('reviewManageDemands')}</p>\n            </div>\n            <Dialog open={isNewDemandOpen} onOpenChange={setIsNewDemandOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Plus className='h-4 w-4 mr-2' />\n                  {t('newDemand')}\n                </Button>\n              </DialogTrigger>\n              <DialogContent className='max-w-md'>\n                <DialogHeader>\n                  <DialogTitle>{t('createNewDemand')}</DialogTitle>\n                  <DialogDescription>{t('createDemandBehalf')}</DialogDescription>\n                </DialogHeader>\n                <Form {...newDemandForm}>\n                  <form\n                    onSubmit={newDemandForm.handleSubmit(handleCreateDemand)}\n                    className='space-y-4'\n                  >\n                    <FormField\n                      control={newDemandForm.control}\n                      name='type'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('type')}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder={t('selectType')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value='maintenance'>{t('maintenanceType')}</SelectItem>\n                              <SelectItem value='complaint'>{t('complaintType')}</SelectItem>\n                              <SelectItem value='information'>{t('informationType')}</SelectItem>\n                              <SelectItem value='other'>{t('otherType')}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={newDemandForm.control}\n                      name='buildingId'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('building')}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder={t('selectBuilding')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              {buildings.map((building) => (\n                                <SelectItem key={building.id} value={building.id}>\n                                  {building.name}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={newDemandForm.control}\n                      name='description'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('description')}</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              placeholder={t('describeDemandDetail')}\n                              className='min-h-[100px]'\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <DialogFooter>\n                      <Button type='submit' disabled={createDemandMutation.isPending}>\n                        {createDemandMutation.isPending ? t('creating') : t('create')}\n                      </Button>\n                    </DialogFooter>\n                  </form>\n                </Form>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Filters */}\n          <div className='flex items-center gap-4'>\n            <div className='relative flex-1 max-w-sm'>\n              <Search className='absolute left-3 top-3 h-4 w-4 text-muted-foreground' />\n              <Input\n                placeholder={t('searchDemands')}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className='pl-10'\n              />\n            </div>\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className='w-40'>\n                <SelectValue placeholder={t('status')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='all'>{t('allStatus')}</SelectItem>\n                <SelectItem value='draft'>{t('draft')}</SelectItem>\n                <SelectItem value='submitted'>{t('submitted')}</SelectItem>\n                <SelectItem value='under_review'>{t('underReview')}</SelectItem>\n                <SelectItem value='approved'>{t('approved')}</SelectItem>\n                <SelectItem value='in_progress'>{t('inProgress')}</SelectItem>\n                <SelectItem value='completed'>{t('completed')}</SelectItem>\n                <SelectItem value='rejected'>{t('rejected')}</SelectItem>\n                <SelectItem value='cancelled'>{t('cancelled')}</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={typeFilter} onValueChange={setTypeFilter}>\n              <SelectTrigger className='w-40'>\n                <SelectValue placeholder={t('type')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='all'>{t('allTypes')}</SelectItem>\n                <SelectItem value='maintenance'>{t('maintenanceType')}</SelectItem>\n                <SelectItem value='complaint'>{t('complaintType')}</SelectItem>\n                <SelectItem value='information'>{t('informationType')}</SelectItem>\n                <SelectItem value='other'>{t('otherType')}</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Demands List */}\n          <Tabs defaultValue='pending' className='w-full'>\n            <TabsList>\n              <TabsTrigger value='pending'>{t('pendingReview')} ({pendingDemands.length})</TabsTrigger>\n              <TabsTrigger value='active'>{t('activeTab')} ({activeDemands.length})</TabsTrigger>\n              <TabsTrigger value='completed'>{t('completedTab')} ({completedDemands.length})</TabsTrigger>\n              <TabsTrigger value='all'>{t('all')} ({allDemands.length})</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value='pending' className='space-y-4'>\n              {pendingDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noDemandsPending')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {pendingDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value='active' className='space-y-4'>\n              {activeDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noActiveDemands')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {activeDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value='completed' className='space-y-4'>\n              {completedDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noCompletedDemands')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {completedDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value='all' className='space-y-4'>\n              {isLoading ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('loadingDemands')}</p>\n                  </CardContent>\n                </Card>\n              ) : allDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noDemandsFound')}</p>\n                    {demandsArray.length > 0 && (\n                      <p className='text-sm text-gray-400 mt-2'>\n                        ({demandsArray.length} {t('totalDemandsLoaded')})\n                      </p>\n                    )}\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {allDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n          </Tabs>\n\n          {/* Demand Details Popup */}\n          <DemandDetailsPopup\n            demand={selectedDemand as any}\n            isOpen={isDetailsOpen}\n            onClose={() => setIsDetailsOpen(false)}\n            user={currentUser as any}\n            onDemandUpdated={handleDemandUpdated}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "584889b350428c5f651217d53ba2f05072c0df2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21u2iugoft = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21u2iugoft();
var __createBinding =
/* istanbul ignore next */
(cov_21u2iugoft().s[0]++,
/* istanbul ignore next */
(cov_21u2iugoft().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_21u2iugoft().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_21u2iugoft().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_21u2iugoft().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_21u2iugoft().f[0]++;
  cov_21u2iugoft().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_21u2iugoft().b[2][0]++;
    cov_21u2iugoft().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_21u2iugoft().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_21u2iugoft().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_21u2iugoft().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_21u2iugoft().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_21u2iugoft().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_21u2iugoft().b[5][1]++,
  /* istanbul ignore next */
  (cov_21u2iugoft().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_21u2iugoft().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_21u2iugoft().b[3][0]++;
    cov_21u2iugoft().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_21u2iugoft().f[1]++;
        cov_21u2iugoft().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_21u2iugoft().b[3][1]++;
  }
  cov_21u2iugoft().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_21u2iugoft().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_21u2iugoft().f[2]++;
  cov_21u2iugoft().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_21u2iugoft().b[7][0]++;
    cov_21u2iugoft().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_21u2iugoft().b[7][1]++;
  }
  cov_21u2iugoft().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_21u2iugoft().s[11]++,
/* istanbul ignore next */
(cov_21u2iugoft().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_21u2iugoft().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_21u2iugoft().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_21u2iugoft().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_21u2iugoft().f[3]++;
  cov_21u2iugoft().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_21u2iugoft().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_21u2iugoft().f[4]++;
  cov_21u2iugoft().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_21u2iugoft().s[14]++,
/* istanbul ignore next */
(cov_21u2iugoft().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_21u2iugoft().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_21u2iugoft().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_21u2iugoft().f[5]++;
  cov_21u2iugoft().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_21u2iugoft().f[6]++;
    cov_21u2iugoft().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_21u2iugoft().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_21u2iugoft().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_21u2iugoft().s[17]++, []);
      /* istanbul ignore next */
      cov_21u2iugoft().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_21u2iugoft().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_21u2iugoft().b[12][0]++;
          cov_21u2iugoft().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_21u2iugoft().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_21u2iugoft().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_21u2iugoft().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_21u2iugoft().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_21u2iugoft().f[8]++;
    cov_21u2iugoft().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_21u2iugoft().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_21u2iugoft().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_21u2iugoft().b[13][0]++;
      cov_21u2iugoft().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_21u2iugoft().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_21u2iugoft().s[26]++, {});
    /* istanbul ignore next */
    cov_21u2iugoft().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_21u2iugoft().b[15][0]++;
      cov_21u2iugoft().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_21u2iugoft().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_21u2iugoft().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_21u2iugoft().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_21u2iugoft().b[16][0]++;
          cov_21u2iugoft().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_21u2iugoft().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_21u2iugoft().b[15][1]++;
    }
    cov_21u2iugoft().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_21u2iugoft().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_21u2iugoft().s[35]++,
/* istanbul ignore next */
(cov_21u2iugoft().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_21u2iugoft().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_21u2iugoft().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_21u2iugoft().f[9]++;
  cov_21u2iugoft().s[36]++;
  return /* istanbul ignore next */(cov_21u2iugoft().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_21u2iugoft().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_21u2iugoft().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_21u2iugoft().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_21u2iugoft().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_21u2iugoft().s[38]++;
exports.default = ManagerDemandsPage;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[39]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[40]++, __importStar(require("react")));
const react_query_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[41]++, require("@tanstack/react-query"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[42]++, require("lucide-react"));
const button_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[43]++, require("@/components/ui/button"));
const input_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[44]++, require("@/components/ui/input"));
const card_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[45]++, require("@/components/ui/card"));
const badge_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[46]++, require("@/components/ui/badge"));
const tabs_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[47]++, require("@/components/ui/tabs"));
const select_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[48]++, require("@/components/ui/select"));
const dialog_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[49]++, require("@/components/ui/dialog"));
const textarea_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[50]++, require("@/components/ui/textarea"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[51]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[52]++, require("@hookform/resolvers/zod"));
const zod_2 =
/* istanbul ignore next */
(cov_21u2iugoft().s[53]++, require("zod"));
const form_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[54]++, require("@/components/ui/form"));
const queryClient_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[55]++, require("@/lib/queryClient"));
const use_toast_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[56]++, require("@/hooks/use-toast"));
const use_language_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[57]++, require("@/hooks/use-language"));
const demand_details_popup_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[58]++, __importDefault(require("@/components/demands/demand-details-popup")));
const header_1 =
/* istanbul ignore next */
(cov_21u2iugoft().s[59]++, require("@/components/layout/header"));
// Form schemas
const demandSchema =
/* istanbul ignore next */
(cov_21u2iugoft().s[60]++, zod_2.z.object({
  type: zod_2.z.enum(['maintenance', 'complaint', 'information', 'other']),
  description: zod_2.z.string().min(10, 'Description must be at least 10 characters'),
  buildingId: zod_2.z.string().min(1, 'Building is required'),
  residenceId: zod_2.z.string().optional(),
  assignationBuildingId: zod_2.z.string().optional(),
  assignationResidenceId: zod_2.z.string().optional()
}));
const statusColors =
/* istanbul ignore next */
(cov_21u2iugoft().s[61]++, {
  draft: 'bg-gray-100 text-gray-800',
  submitted: 'bg-blue-100 text-blue-800',
  under_review: 'bg-yellow-100 text-yellow-800',
  approved: 'bg-green-100 text-green-800',
  rejected: 'bg-red-100 text-red-800',
  in_progress: 'bg-purple-100 text-purple-800',
  completed: 'bg-emerald-100 text-emerald-800',
  cancelled: 'bg-gray-100 text-gray-800'
});
// Type labels will use translation function instead of static object
/**
 *
 */
function ManagerDemandsPage() {
  /* istanbul ignore next */
  cov_21u2iugoft().f[10]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[62]++, (0, use_toast_1.useToast)());
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[63]++, (0, use_language_1.useLanguage)());
  // Function to get translated type labels
  /* istanbul ignore next */
  cov_21u2iugoft().s[64]++;
  const getTypeLabel = type => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[11]++;
    cov_21u2iugoft().s[65]++;
    switch (type) {
      case 'maintenance':
        /* istanbul ignore next */
        cov_21u2iugoft().b[20][0]++;
        cov_21u2iugoft().s[66]++;
        return t('maintenanceType');
      case 'complaint':
        /* istanbul ignore next */
        cov_21u2iugoft().b[20][1]++;
        cov_21u2iugoft().s[67]++;
        return t('complaintType');
      case 'information':
        /* istanbul ignore next */
        cov_21u2iugoft().b[20][2]++;
        cov_21u2iugoft().s[68]++;
        return t('informationType');
      case 'other':
        /* istanbul ignore next */
        cov_21u2iugoft().b[20][3]++;
        cov_21u2iugoft().s[69]++;
        return t('otherType');
      default:
        /* istanbul ignore next */
        cov_21u2iugoft().b[20][4]++;
        cov_21u2iugoft().s[70]++;
        return type;
    }
  };
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[71]++, (0, react_1.useState)(''));
  const [statusFilter, setStatusFilter] =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[72]++, (0, react_1.useState)('all'));
  const [typeFilter, setTypeFilter] =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[73]++, (0, react_1.useState)('all'));
  const [selectedDemand, setSelectedDemand] =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[74]++, (0, react_1.useState)(null));
  const [isNewDemandOpen, setIsNewDemandOpen] =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[75]++, (0, react_1.useState)(false));
  const [isDetailsOpen, setIsDetailsOpen] =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[76]++, (0, react_1.useState)(false));
  // Fetch demands
  const {
    data: demands =
    /* istanbul ignore next */
    (cov_21u2iugoft().b[21][0]++, []),
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[77]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/demands'],
    refetchInterval: 30000 // Refresh every 30 seconds
  }));
  // Fetch buildings
  const {
    data: buildings =
    /* istanbul ignore next */
    (cov_21u2iugoft().b[22][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[78]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/buildings']
  }));
  // Fetch residences
  const {
    data: residences =
    /* istanbul ignore next */
    (cov_21u2iugoft().b[23][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[79]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/residences']
  }));
  // Fetch current user
  const {
    data: currentUser
  } =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[80]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/auth/user']
  }));
  // Provide default user to prevent type errors
  const defaultUser =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[81]++,
  /* istanbul ignore next */
  (cov_21u2iugoft().b[24][0]++, currentUser) ||
  /* istanbul ignore next */
  (cov_21u2iugoft().b[24][1]++, {
    id: '',
    role: 'tenant',
    email: '',
    firstName: '',
    lastName: '',
    isActive: true,
    createdAt: '',
    updatedAt: ''
  }));
  // Create demand mutation
  const createDemandMutation =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[82]++, (0, react_query_1.useMutation)({
    mutationFn: async data => {
      /* istanbul ignore next */
      cov_21u2iugoft().f[12]++;
      const response =
      /* istanbul ignore next */
      (cov_21u2iugoft().s[83]++, await fetch('/api/demands', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_21u2iugoft().s[84]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_21u2iugoft().b[25][0]++;
        cov_21u2iugoft().s[85]++;
        throw new Error('Failed to create demand');
      } else
      /* istanbul ignore next */
      {
        cov_21u2iugoft().b[25][1]++;
      }
      cov_21u2iugoft().s[86]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_21u2iugoft().f[13]++;
      cov_21u2iugoft().s[87]++;
      queryClient_1.queryClient.invalidateQueries({
        queryKey: ['/api/demands']
      });
      /* istanbul ignore next */
      cov_21u2iugoft().s[88]++;
      setIsNewDemandOpen(false);
      /* istanbul ignore next */
      cov_21u2iugoft().s[89]++;
      newDemandForm.reset();
      /* istanbul ignore next */
      cov_21u2iugoft().s[90]++;
      toast({
        title: t('success'),
        description: t('demandCreatedSuccess')
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_21u2iugoft().f[14]++;
      cov_21u2iugoft().s[91]++;
      // Error creating demand
      toast({
        title: t('error'),
        description: t('failedCreateDemand'),
        variant: 'destructive'
      });
    }
  }));
  // Forms
  const newDemandForm =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[92]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(demandSchema),
    defaultValues: {
      type: 'maintenance',
      description: '',
      buildingId: '',
      residenceId: '',
      assignationBuildingId: '',
      assignationResidenceId: ''
    }
  }));
  // Filter demands - ensure demands is an array
  const demandsArray =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[93]++, Array.isArray(demands) ?
  /* istanbul ignore next */
  (cov_21u2iugoft().b[26][0]++, demands) :
  /* istanbul ignore next */
  (cov_21u2iugoft().b[26][1]++, []));
  const filteredDemands =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[94]++, demandsArray.filter(demand => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[15]++;
    const matchesSearch =
    /* istanbul ignore next */
    (cov_21u2iugoft().s[95]++,
    /* istanbul ignore next */
    (cov_21u2iugoft().b[27][0]++, demand.description?.toLowerCase().includes(searchTerm.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[27][1]++, getTypeLabel(demand.type)?.toLowerCase().includes(searchTerm.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[27][2]++, demand.submitter?.firstName?.toLowerCase().includes(searchTerm.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[27][3]++, demand.submitter?.lastName?.toLowerCase().includes(searchTerm.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[27][4]++, demand.building?.name?.toLowerCase().includes(searchTerm.toLowerCase())));
    const matchesStatus =
    /* istanbul ignore next */
    (cov_21u2iugoft().s[96]++,
    /* istanbul ignore next */
    (cov_21u2iugoft().b[28][0]++, statusFilter === 'all') ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[28][1]++, demand.status === statusFilter));
    const matchesType =
    /* istanbul ignore next */
    (cov_21u2iugoft().s[97]++,
    /* istanbul ignore next */
    (cov_21u2iugoft().b[29][0]++, typeFilter === 'all') ||
    /* istanbul ignore next */
    (cov_21u2iugoft().b[29][1]++, demand.type === typeFilter));
    /* istanbul ignore next */
    cov_21u2iugoft().s[98]++;
    return /* istanbul ignore next */(cov_21u2iugoft().b[30][0]++, matchesSearch) &&
    /* istanbul ignore next */
    (cov_21u2iugoft().b[30][1]++, matchesStatus) &&
    /* istanbul ignore next */
    (cov_21u2iugoft().b[30][2]++, matchesType);
  }));
  // Group demands by status for manager view
  const pendingDemands =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[99]++, filteredDemands.filter(d => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[16]++;
    cov_21u2iugoft().s[100]++;
    return ['submitted', 'under_review'].includes(d.status);
  }));
  const activeDemands =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[101]++, filteredDemands.filter(d => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[17]++;
    cov_21u2iugoft().s[102]++;
    return ['approved', 'in_progress'].includes(d.status);
  }));
  const completedDemands =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[103]++, filteredDemands.filter(d => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[18]++;
    cov_21u2iugoft().s[104]++;
    return ['completed', 'rejected', 'cancelled'].includes(d.status);
  }));
  const allDemands =
  /* istanbul ignore next */
  (cov_21u2iugoft().s[105]++, filteredDemands);
  /* istanbul ignore next */
  cov_21u2iugoft().s[106]++;
  const handleCreateDemand = data => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[19]++;
    cov_21u2iugoft().s[107]++;
    createDemandMutation.mutate(data);
  };
  /* istanbul ignore next */
  cov_21u2iugoft().s[108]++;
  const handleDemandClick = demand => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[20]++;
    cov_21u2iugoft().s[109]++;
    setSelectedDemand(demand);
    /* istanbul ignore next */
    cov_21u2iugoft().s[110]++;
    setIsDetailsOpen(true);
  };
  /* istanbul ignore next */
  cov_21u2iugoft().s[111]++;
  const handleDemandUpdated = () => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[21]++;
    cov_21u2iugoft().s[112]++;
    queryClient_1.queryClient.invalidateQueries({
      queryKey: ['/api/demands']
    });
  };
  /* istanbul ignore next */
  cov_21u2iugoft().s[113]++;
  const DemandCard = ({
    demand
  }) => {
    /* istanbul ignore next */
    cov_21u2iugoft().f[22]++;
    const building =
    /* istanbul ignore next */
    (cov_21u2iugoft().s[114]++, buildings.find(b => {
      /* istanbul ignore next */
      cov_21u2iugoft().f[23]++;
      cov_21u2iugoft().s[115]++;
      return b.id === demand.buildingId;
    }));
    const residence =
    /* istanbul ignore next */
    (cov_21u2iugoft().s[116]++, residences.find(r => {
      /* istanbul ignore next */
      cov_21u2iugoft().f[24]++;
      cov_21u2iugoft().s[117]++;
      return r.id === demand.residenceId;
    }));
    /* istanbul ignore next */
    cov_21u2iugoft().s[118]++;
    return (0, jsx_runtime_1.jsxs)(card_1.Card, {
      className: 'cursor-pointer hover:shadow-md transition-shadow',
      onClick: () => {
        /* istanbul ignore next */
        cov_21u2iugoft().f[25]++;
        cov_21u2iugoft().s[119]++;
        return handleDemandClick(demand);
      },
      children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
        className: 'pb-3',
        children: [(0, jsx_runtime_1.jsx)("div", {
          className: 'flex items-center justify-between',
          children: (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center gap-2',
            children: [(0, jsx_runtime_1.jsx)(badge_1.Badge, {
              variant: 'outline',
              children: getTypeLabel(demand.type)
            }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
              className: statusColors[demand.status],
              children: demand.status.replace('_', ' ')
            })]
          })
        }), (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
          className: 'text-base line-clamp-2',
          children: [demand.description.substring(0, 100),
          /* istanbul ignore next */
          (cov_21u2iugoft().b[31][0]++, demand.description.length > 100) &&
          /* istanbul ignore next */
          (cov_21u2iugoft().b[31][1]++, '...')]
        })]
      }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
        className: 'pt-0',
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: 'text-sm text-muted-foreground space-y-1',
          children: [(0, jsx_runtime_1.jsxs)("p", {
            children: [(0, jsx_runtime_1.jsxs)("strong", {
              children: [t('submittedBy'), ":"]
            }), " ", demand.submitter?.firstName, ' ', demand.submitter?.lastName]
          }), (0, jsx_runtime_1.jsxs)("p", {
            children: [(0, jsx_runtime_1.jsxs)("strong", {
              children: [t('building'), ":"]
            }), " ",
            /* istanbul ignore next */
            (cov_21u2iugoft().b[32][0]++, building?.name) ||
            /* istanbul ignore next */
            (cov_21u2iugoft().b[32][1]++, t('unknown'))]
          }),
          /* istanbul ignore next */
          (cov_21u2iugoft().b[33][0]++, residence) &&
          /* istanbul ignore next */
          (cov_21u2iugoft().b[33][1]++, (0, jsx_runtime_1.jsxs)("p", {
            children: [(0, jsx_runtime_1.jsxs)("strong", {
              children: [t('residence'), ":"]
            }), " ", residence.name]
          })), (0, jsx_runtime_1.jsxs)("p", {
            children: [(0, jsx_runtime_1.jsxs)("strong", {
              children: [t('created'), ":"]
            }), " ", new Date(demand.createdAt).toLocaleDateString()]
          })]
        })
      })]
    });
  }; /**
     * If function.
     * @param isLoading - IsLoading parameter.
     */ /**
        * If function.
        * @param isLoading - IsLoading parameter.
        */
  /* istanbul ignore next */
  cov_21u2iugoft().s[120]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_21u2iugoft().b[34][0]++;
    cov_21u2iugoft().s[121]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: t('demandsManagement'),
        subtitle: t('demandsSubtitle')
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 overflow-auto p-6',
        children: (0, jsx_runtime_1.jsx)("div", {
          className: 'flex items-center justify-center h-64',
          children: (0, jsx_runtime_1.jsx)("div", {
            className: 'text-center',
            children: t('loadingDemands')
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_21u2iugoft().b[34][1]++;
  }
  cov_21u2iugoft().s[122]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: 'flex-1 flex flex-col overflow-hidden',
    children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
      title: t('demandsManagement'),
      subtitle: t('demandsSubtitle')
    }), (0, jsx_runtime_1.jsx)("div", {
      className: 'flex-1 overflow-auto p-6',
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'max-w-7xl mx-auto space-y-6',
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center justify-between',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            children: [(0, jsx_runtime_1.jsx)("h2", {
              className: 'text-2xl font-bold',
              children: t('allDemands')
            }), (0, jsx_runtime_1.jsx)("p", {
              className: 'text-muted-foreground',
              children: t('reviewManageDemands')
            })]
          }), (0, jsx_runtime_1.jsxs)(dialog_1.Dialog, {
            open: isNewDemandOpen,
            onOpenChange: setIsNewDemandOpen,
            children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTrigger, {
              asChild: true,
              children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
                  className: 'h-4 w-4 mr-2'
                }), t('newDemand')]
              })
            }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
              className: 'max-w-md',
              children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
                children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
                  children: t('createNewDemand')
                }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, {
                  children: t('createDemandBehalf')
                })]
              }), (0, jsx_runtime_1.jsx)(form_1.Form, {
                ...newDemandForm,
                children: (0, jsx_runtime_1.jsxs)("form", {
                  onSubmit: newDemandForm.handleSubmit(handleCreateDemand),
                  className: 'space-y-4',
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
                    control: newDemandForm.control,
                    name: 'type',
                    render: ({
                      field
                    }) => {
                      /* istanbul ignore next */
                      cov_21u2iugoft().f[26]++;
                      cov_21u2iugoft().s[123]++;
                      return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                        children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                          children: t('type')
                        }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                          onValueChange: field.onChange,
                          defaultValue: field.value,
                          children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                            children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                              children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                                placeholder: t('selectType')
                              })
                            })
                          }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                            children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                              value: 'maintenance',
                              children: t('maintenanceType')
                            }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                              value: 'complaint',
                              children: t('complaintType')
                            }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                              value: 'information',
                              children: t('informationType')
                            }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                              value: 'other',
                              children: t('otherType')
                            })]
                          })]
                        }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                      });
                    }
                  }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                    control: newDemandForm.control,
                    name: 'buildingId',
                    render: ({
                      field
                    }) => {
                      /* istanbul ignore next */
                      cov_21u2iugoft().f[27]++;
                      cov_21u2iugoft().s[124]++;
                      return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                        children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                          children: t('building')
                        }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                          onValueChange: field.onChange,
                          defaultValue: field.value,
                          children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                            children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                              children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                                placeholder: t('selectBuilding')
                              })
                            })
                          }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                            children: buildings.map(building => {
                              /* istanbul ignore next */
                              cov_21u2iugoft().f[28]++;
                              cov_21u2iugoft().s[125]++;
                              return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                                value: building.id,
                                children: building.name
                              }, building.id);
                            })
                          })]
                        }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                      });
                    }
                  }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                    control: newDemandForm.control,
                    name: 'description',
                    render: ({
                      field
                    }) => {
                      /* istanbul ignore next */
                      cov_21u2iugoft().f[29]++;
                      cov_21u2iugoft().s[126]++;
                      return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                        children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                          children: t('description')
                        }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                          children: (0, jsx_runtime_1.jsx)(textarea_1.Textarea, {
                            placeholder: t('describeDemandDetail'),
                            className: 'min-h-[100px]',
                            ...field
                          })
                        }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                      });
                    }
                  }), (0, jsx_runtime_1.jsx)(dialog_1.DialogFooter, {
                    children: (0, jsx_runtime_1.jsx)(button_1.Button, {
                      type: 'submit',
                      disabled: createDemandMutation.isPending,
                      children: createDemandMutation.isPending ?
                      /* istanbul ignore next */
                      (cov_21u2iugoft().b[35][0]++, t('creating')) :
                      /* istanbul ignore next */
                      (cov_21u2iugoft().b[35][1]++, t('create'))
                    })
                  })]
                })
              })]
            })]
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center gap-4',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'relative flex-1 max-w-sm',
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Search, {
              className: 'absolute left-3 top-3 h-4 w-4 text-muted-foreground'
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              placeholder: t('searchDemands'),
              value: searchTerm,
              onChange: e => {
                /* istanbul ignore next */
                cov_21u2iugoft().f[30]++;
                cov_21u2iugoft().s[127]++;
                return setSearchTerm(e.target.value);
              },
              className: 'pl-10'
            })]
          }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
            value: statusFilter,
            onValueChange: setStatusFilter,
            children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
              className: 'w-40',
              children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                placeholder: t('status')
              })
            }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
              children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'all',
                children: t('allStatus')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'draft',
                children: t('draft')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'submitted',
                children: t('submitted')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'under_review',
                children: t('underReview')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'approved',
                children: t('approved')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'in_progress',
                children: t('inProgress')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'completed',
                children: t('completed')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'rejected',
                children: t('rejected')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'cancelled',
                children: t('cancelled')
              })]
            })]
          }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
            value: typeFilter,
            onValueChange: setTypeFilter,
            children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
              className: 'w-40',
              children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                placeholder: t('type')
              })
            }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
              children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'all',
                children: t('allTypes')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'maintenance',
                children: t('maintenanceType')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'complaint',
                children: t('complaintType')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'information',
                children: t('informationType')
              }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                value: 'other',
                children: t('otherType')
              })]
            })]
          })]
        }), (0, jsx_runtime_1.jsxs)(tabs_1.Tabs, {
          defaultValue: 'pending',
          className: 'w-full',
          children: [(0, jsx_runtime_1.jsxs)(tabs_1.TabsList, {
            children: [(0, jsx_runtime_1.jsxs)(tabs_1.TabsTrigger, {
              value: 'pending',
              children: [t('pendingReview'), " (", pendingDemands.length, ")"]
            }), (0, jsx_runtime_1.jsxs)(tabs_1.TabsTrigger, {
              value: 'active',
              children: [t('activeTab'), " (", activeDemands.length, ")"]
            }), (0, jsx_runtime_1.jsxs)(tabs_1.TabsTrigger, {
              value: 'completed',
              children: [t('completedTab'), " (", completedDemands.length, ")"]
            }), (0, jsx_runtime_1.jsxs)(tabs_1.TabsTrigger, {
              value: 'all',
              children: [t('all'), " (", allDemands.length, ")"]
            })]
          }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
            value: 'pending',
            className: 'space-y-4',
            children: pendingDemands.length === 0 ?
            /* istanbul ignore next */
            (cov_21u2iugoft().b[36][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
                className: 'p-6 text-center',
                children: (0, jsx_runtime_1.jsx)("p", {
                  className: 'text-muted-foreground',
                  children: t('noDemandsPending')
                })
              })
            })) :
            /* istanbul ignore next */
            (cov_21u2iugoft().b[36][1]++, (0, jsx_runtime_1.jsx)("div", {
              className: 'grid gap-4 md:grid-cols-2 lg:grid-cols-3',
              children: pendingDemands.map(demand => {
                /* istanbul ignore next */
                cov_21u2iugoft().f[31]++;
                cov_21u2iugoft().s[128]++;
                return (0, jsx_runtime_1.jsx)(DemandCard, {
                  demand: demand
                }, demand.id);
              })
            }))
          }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
            value: 'active',
            className: 'space-y-4',
            children: activeDemands.length === 0 ?
            /* istanbul ignore next */
            (cov_21u2iugoft().b[37][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
                className: 'p-6 text-center',
                children: (0, jsx_runtime_1.jsx)("p", {
                  className: 'text-muted-foreground',
                  children: t('noActiveDemands')
                })
              })
            })) :
            /* istanbul ignore next */
            (cov_21u2iugoft().b[37][1]++, (0, jsx_runtime_1.jsx)("div", {
              className: 'grid gap-4 md:grid-cols-2 lg:grid-cols-3',
              children: activeDemands.map(demand => {
                /* istanbul ignore next */
                cov_21u2iugoft().f[32]++;
                cov_21u2iugoft().s[129]++;
                return (0, jsx_runtime_1.jsx)(DemandCard, {
                  demand: demand
                }, demand.id);
              })
            }))
          }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
            value: 'completed',
            className: 'space-y-4',
            children: completedDemands.length === 0 ?
            /* istanbul ignore next */
            (cov_21u2iugoft().b[38][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
                className: 'p-6 text-center',
                children: (0, jsx_runtime_1.jsx)("p", {
                  className: 'text-muted-foreground',
                  children: t('noCompletedDemands')
                })
              })
            })) :
            /* istanbul ignore next */
            (cov_21u2iugoft().b[38][1]++, (0, jsx_runtime_1.jsx)("div", {
              className: 'grid gap-4 md:grid-cols-2 lg:grid-cols-3',
              children: completedDemands.map(demand => {
                /* istanbul ignore next */
                cov_21u2iugoft().f[33]++;
                cov_21u2iugoft().s[130]++;
                return (0, jsx_runtime_1.jsx)(DemandCard, {
                  demand: demand
                }, demand.id);
              })
            }))
          }), (0, jsx_runtime_1.jsx)(tabs_1.TabsContent, {
            value: 'all',
            className: 'space-y-4',
            children: isLoading ?
            /* istanbul ignore next */
            (cov_21u2iugoft().b[39][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
                className: 'p-6 text-center',
                children: (0, jsx_runtime_1.jsx)("p", {
                  className: 'text-muted-foreground',
                  children: t('loadingDemands')
                })
              })
            })) :
            /* istanbul ignore next */
            (cov_21u2iugoft().b[39][1]++, allDemands.length === 0 ?
            /* istanbul ignore next */
            (cov_21u2iugoft().b[40][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
              children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
                className: 'p-6 text-center',
                children: [(0, jsx_runtime_1.jsx)("p", {
                  className: 'text-muted-foreground',
                  children: t('noDemandsFound')
                }),
                /* istanbul ignore next */
                (cov_21u2iugoft().b[41][0]++, demandsArray.length > 0) &&
                /* istanbul ignore next */
                (cov_21u2iugoft().b[41][1]++, (0, jsx_runtime_1.jsxs)("p", {
                  className: 'text-sm text-gray-400 mt-2',
                  children: ["(", demandsArray.length, " ", t('totalDemandsLoaded'), ")"]
                }))]
              })
            })) :
            /* istanbul ignore next */
            (cov_21u2iugoft().b[40][1]++, (0, jsx_runtime_1.jsx)("div", {
              className: 'grid gap-4 md:grid-cols-2 lg:grid-cols-3',
              children: allDemands.map(demand => {
                /* istanbul ignore next */
                cov_21u2iugoft().f[34]++;
                cov_21u2iugoft().s[131]++;
                return (0, jsx_runtime_1.jsx)(DemandCard, {
                  demand: demand
                }, demand.id);
              })
            })))
          })]
        }), (0, jsx_runtime_1.jsx)(demand_details_popup_1.default, {
          demand: selectedDemand,
          isOpen: isDetailsOpen,
          onClose: () => {
            /* istanbul ignore next */
            cov_21u2iugoft().f[35]++;
            cov_21u2iugoft().s[132]++;
            return setIsDetailsOpen(false);
          },
          user: currentUser,
          onDemandUpdated: handleDemandUpdated
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,