{"version":3,"names":["exports","default","ModularDocumentPageWrapper","react_1","cov_25s5cgv4xc","s","__importStar","require","react_query_1","wouter_1","lucide_react_1","button_1","input_1","card_1","badge_1","select_1","dialog_1","label_1","collapsible_1","header_1","queryClient_1","use_language_1","document_management_1","DocumentCreateForm_1","lucide_react_2","DocumentViewDialog","documentId","isOpen","onClose","onEdit","canEdit","f","data","document","isLoading","useQuery","queryKey","queryFn","response","apiRequest","json","enabled","b","handleDownload","console","log","fetch","method","credentials","ok","Error","status","statusText","contentDisposition","headers","get","fileName","name","fileNameMatch","match","blob","url","window","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","error","alert","message","handleView","filePath","newTab","open","close","location","setTimeout","jsx_runtime_1","jsx","Dialog","onOpenChange","children","jsxs","DialogContent","className","DialogHeader","DialogTitle","Label","category","documentType","Date","createdAt","toLocaleDateString","isVisibleToTenants","description","FileText","Button","variant","size","onClick","Eye","Download","DocumentEditDialog","onSuccess","handleSuccess","handleDelete","DocumentEditForm","onCancel","onDelete","DOCUMENT_CATEGORIES","value","label","type","userRole","backPath","backLabel","entityIdParam","navigate","useLocation","params","useParams","t","useLanguage","isCreateDialogOpen","setIsCreateDialogOpen","useState","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","viewMode","setViewMode","expandedCategories","setExpandedCategories","Set","map","cat","filter","val","toggleCategory","newExpanded","has","delete","add","urlParams","URLSearchParams","search","entityId","user","entityApiPath","entity","isError","entityError","retry","documentResponse","documentsError","param","staleTime","cacheTime","documents","Array","isArray","isUserTenant","role","isManager","userPermissions","canView","canDownload","canDelete","canCreate","filteredDocuments","doc","matchesSearch","toLowerCase","includes","matchesCategory","groupedDocuments","reduce","groups","push","getCategoryDisplayName","categoryLabels","bylaw","financial","maintenance","legal","meeting_minutes","insurance","contracts","permits","inspection","other","replace","l","toUpperCase","entityName","unitNumber","unit_number","defaultBackLabel","selectedDocumentId","setSelectedDocumentId","isViewDialogOpen","setIsViewDialogOpen","isEditDialogOpen","setIsEditDialogOpen","handleDocumentView","handleDocumentEdit","handleCreateDocument","handleDocumentSuccess","clearFilters","ArrowLeft","Header","title","subtitle","Card","CardHeader","CardTitle","Filter","CardContent","Search","Input","placeholder","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Grid","List","Plus","length","Badge","Object","entries","categoryDocuments","isExpanded","Collapsible","CollapsibleTrigger","ChevronDown","ChevronRight","CollapsibleContent","DocumentCard","id","onViewClick","compact","DocumentCreateForm","entityType","queryClient","invalidateQueries"],"sources":["/home/runner/workspace/client/src/components/common/ModularDocumentPageWrapper.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLocation, useParams } from 'wouter';\nimport { Grid, List, ArrowLeft, Plus, Search, Filter, Building, Home, ChevronDown, ChevronRight, Eye } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport { Header } from '@/components/layout/header';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { useLanguage } from '@/hooks/use-language';\nimport {\n  SharedUploader,\n  DocumentCard,\n  DocumentEditForm\n} from '@/components/document-management';\nimport { DocumentCreateForm } from '@/components/document-management/DocumentCreateForm';\nimport { FileText, Download } from 'lucide-react';\nimport type { DocumentWithMetadata, DocumentPermissions } from '@shared/schemas/documents';\n\n// Document View Dialog Component\ninterface DocumentViewDialogProps {\n  documentId: string;\n  isOpen: boolean;\n  onClose: () => void;\n  onEdit: () => void;\n  canEdit: boolean;\n}\n\nfunction DocumentViewDialog({ documentId, isOpen, onClose, onEdit, canEdit }: DocumentViewDialogProps) {\n  const { data: document, isLoading } = useQuery({\n    queryKey: ['/api/documents', documentId],\n    queryFn: async () => {\n      const response = await apiRequest('GET', `/api/documents/${documentId}`);\n      return response.json();\n    },\n    enabled: isOpen && !!documentId,\n  });\n\n  const handleDownload = async () => {\n    console.log('[DOWNLOAD] Starting download for document:', documentId);\n    try {\n      // Use fetch with credentials to ensure authentication\n      const response = await fetch(`/api/documents/${documentId}/file?download=true`, {\n        method: 'GET',\n        credentials: 'include', // Include authentication cookies\n      });\n\n      if (!response.ok) {\n        throw new Error(`Download failed: ${response.status} ${response.statusText}`);\n      }\n\n      // Get the filename from Content-Disposition header or use document name\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let fileName = document?.name || 'document';\n      \n      if (contentDisposition) {\n        const fileNameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (fileNameMatch) {\n          fileName = fileNameMatch[1];\n        }\n      }\n\n      // Convert response to blob and create download\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      \n      const link = window.document.createElement('a');\n      link.href = url;\n      link.download = fileName;\n      window.document.body.appendChild(link);\n      link.click();\n      \n      // Clean up\n      window.document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n      console.log('[DOWNLOAD] Download completed successfully');\n    } catch (error) {\n      console.error('[DOWNLOAD] Download failed:', error);\n      alert(`Download failed: ${error.message || 'Unknown error'}`);\n    }\n  };\n\n  const handleView = async () => {\n    if (document?.filePath) {\n      try {\n        console.log('[VIEW] Starting view for document:', documentId);\n        \n        // Open a new tab immediately to avoid popup blocking\n        const newTab = window.open('about:blank', '_blank');\n        if (!newTab) {\n          throw new Error('Popup blocked - please allow popups for this site');\n        }\n        \n        // Use fetch with credentials to ensure authentication\n        const response = await fetch(`/api/documents/${documentId}/file`, {\n          method: 'GET',\n          credentials: 'include', // Include authentication cookies\n        });\n\n        if (!response.ok) {\n          newTab.close();\n          throw new Error(`View failed: ${response.status} ${response.statusText}`);\n        }\n\n        // Convert response to blob and set it as the new tab's location\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        \n        // Set the blob URL to the opened tab\n        newTab.location.href = url;\n        \n        // Clean up the URL after a delay to allow the tab to load\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n        }, 3000);\n        \n        console.log('[VIEW] View completed successfully');\n        \n      } catch (error) {\n        console.error('[VIEW] View failed:', error);\n        // Show error notification if available\n        alert(`Failed to open document: ${error.message}`);\n      }\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[95vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Document Details</DialogTitle>\n        </DialogHeader>\n        \n        {isLoading ? (\n          <div className=\"p-8 text-center\">\n            <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n            <p className=\"text-gray-500\">Loading document...</p>\n          </div>\n        ) : document ? (\n          <div className=\"space-y-6\">\n            {/* Document Information */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label className=\"text-sm font-medium\">Document Name</Label>\n                <p className=\"text-sm text-gray-600\">{document.name}</p>\n              </div>\n              <div>\n                <Label className=\"text-sm font-medium\">Category</Label>\n                <p className=\"text-sm text-gray-600 capitalize\">{document.category || document.documentType || 'Other'}</p>\n              </div>\n              <div>\n                <Label className=\"text-sm font-medium\">Upload Date</Label>\n                <p className=\"text-sm text-gray-600\">{new Date(document.createdAt).toLocaleDateString()}</p>\n              </div>\n              <div>\n                <Label className=\"text-sm font-medium\">Visible to Tenants</Label>\n                <p className=\"text-sm text-gray-600\">{document.isVisibleToTenants ? 'Yes' : 'No'}</p>\n              </div>\n            </div>\n\n            {/* Description */}\n            {document.description && (\n              <div>\n                <Label className=\"text-sm font-medium\">Description</Label>\n                <p className=\"text-sm text-gray-600\">{document.description}</p>\n              </div>\n            )}\n\n            {/* Document Actions */}\n            {document.filePath && (\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <FileText className=\"w-5 h-5 text-gray-500\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">{document.fileName || document.name}</p>\n                      <p className=\"text-xs text-gray-500\">Document attachment</p>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={handleView}\n                      className=\"flex items-center gap-1\"\n                      data-testid=\"button-view-document-file\"\n                    >\n                      <Eye className=\"w-3 h-3\" />\n                      View\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={handleDownload}\n                      className=\"flex items-center gap-1\"\n                      data-testid=\"button-download-document-file\"\n                    >\n                      <Download className=\"w-3 h-3\" />\n                      Download\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-2 justify-end pt-4 border-t\">\n              {canEdit && (\n                <Button variant=\"outline\" onClick={onEdit}>\n                  Edit Document\n                </Button>\n              )}\n              <Button variant=\"default\" onClick={onClose}>\n                Close\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"p-8 text-center\">\n            <p className=\"text-gray-500\">Document not found</p>\n            <Button variant=\"outline\" onClick={onClose} className=\"mt-4\">\n              Close\n            </Button>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n// Document Edit Dialog Component  \ninterface DocumentEditDialogProps {\n  documentId: string;\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => void;\n}\n\nfunction DocumentEditDialog({ documentId, isOpen, onClose, onSuccess }: DocumentEditDialogProps) {\n  const { data: document, isLoading } = useQuery({\n    queryKey: ['/api/documents', documentId],\n    queryFn: async () => {\n      const response = await apiRequest('GET', `/api/documents/${documentId}`);\n      return response.json();\n    },\n    enabled: isOpen && !!documentId,\n  });\n\n  const handleSuccess = () => {\n    onSuccess();\n    onClose();\n  };\n\n  const handleDelete = () => {\n    onSuccess(); // Refresh the document list\n    onClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[95vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Edit Document</DialogTitle>\n        </DialogHeader>\n        \n        {isLoading ? (\n          <div className=\"p-8 text-center\">\n            <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n            <p className=\"text-gray-500\">Loading document...</p>\n          </div>\n        ) : document ? (\n          <div className=\"p-6\">\n            <DocumentEditForm\n              document={document}\n              onSuccess={handleSuccess}\n              onCancel={onClose}\n              onDelete={handleDelete}\n            />\n          </div>\n        ) : (\n          <div className=\"p-8 text-center\">\n            <p className=\"text-gray-500\">Document not found</p>\n            <Button variant=\"outline\" onClick={onClose} className=\"mt-4\">\n              Close\n            </Button>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n// Document categories for filtering\nconst DOCUMENT_CATEGORIES = [\n  { value: 'all', label: 'All Categories' },\n  { value: 'bylaw', label: 'Bylaws' },\n  { value: 'financial', label: 'Financial' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'legal', label: 'Legal' },\n  { value: 'meeting_minutes', label: 'Meeting Minutes' },\n  { value: 'insurance', label: 'Insurance' },\n  { value: 'contracts', label: 'Contracts' },\n  { value: 'permits', label: 'Permits' },\n  { value: 'inspection', label: 'Inspection' },\n  { value: 'other', label: 'Other' },\n] as const;\n\ninterface ModularDocumentPageWrapperProps {\n  type: 'building' | 'residence';\n  userRole: 'manager' | 'resident';\n  backPath: string;\n  backLabel?: string;\n  entityIdParam: string;\n}\n\nexport default function ModularDocumentPageWrapper({\n  type,\n  userRole,\n  backPath,\n  backLabel,\n  entityIdParam,\n}: ModularDocumentPageWrapperProps) {\n  const [, navigate] = useLocation();\n  const params = useParams();\n  const { t } = useLanguage();\n\n  // State for document interactions\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  \n  // State for filtering and search\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  \n  // State for collapsible categories (start with all categories expanded)\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(() => {\n    // Initialize with all possible categories expanded\n    return new Set(DOCUMENT_CATEGORIES.map(cat => cat.value).filter(val => val !== 'all'));\n  });\n\n  // Toggle category expansion\n  const toggleCategory = (category: string) => {\n    const newExpanded = new Set(expandedCategories);\n    if (newExpanded.has(category)) {\n      newExpanded.delete(category);\n    } else {\n      newExpanded.add(category);\n    }\n    setExpandedCategories(newExpanded);\n  };\n\n  // Get entityId from URL (both path param and query param)\n  const urlParams = new URLSearchParams(window.location.search);\n  const entityId = (params as any)[entityIdParam] || urlParams.get(entityIdParam);\n\n  // Get current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // Get entity info based on type\n  const entityApiPath = type === 'building' ? '/api/manager/buildings' : '/api/residences';\n  const { data: entity, isError: entityError, error } = useQuery({\n    queryKey: [entityApiPath, entityId],\n    queryFn: async () => {\n      if (type === 'residence') {\n        const response = await fetch(`/api/residences/${entityId}`, {\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new Error('ENTITY_NOT_FOUND');\n          }\n          throw new Error(`Failed to fetch ${type}`);\n        }\n        return response.json();\n      } else {\n        return apiRequest('GET', `${entityApiPath}/${entityId}`) as Promise<any>;\n      }\n    },\n    enabled: !!entityId,\n    retry: false, // Don't retry on 404s\n  });\n\n  // Fetch documents for this entity\n  const { data: documentResponse, isLoading, error: documentsError } = useQuery({\n    queryKey: ['/api/documents', type, entityId],\n    queryFn: async () => {\n      const param = type === 'building' ? 'buildingId' : 'residenceId';\n      const response = await apiRequest('GET', `/api/documents?${param}=${entityId}`);\n      return response.json();\n    },\n    enabled: !!entityId,\n    staleTime: 0, // Always refetch\n    cacheTime: 0, // Don't cache\n  });\n\n  // Extract documents array from API response\n  const documents = Array.isArray(documentResponse?.documents) ? documentResponse.documents : [];\n\n  // Determine permissions based on user role and type\n  const isUserTenant = user?.role === 'tenant';\n  const isManager = user?.role === 'manager' || user?.role === 'admin';\n  \n  const userPermissions: DocumentPermissions = userRole === 'manager' \n    ? {\n        canView: true,\n        canDownload: true,\n        canEdit: isManager,\n        canDelete: isManager,\n        canCreate: isManager,\n      }\n    : {\n        canView: true,\n        canDownload: !isUserTenant,\n        canEdit: !isUserTenant,\n        canDelete: !isUserTenant,\n        canCreate: !isUserTenant,\n      };\n\n  // Filter and search documents\n  const filteredDocuments = Array.isArray(documents) ? documents.filter(doc => {\n    const matchesSearch = doc.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         doc.description?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory = selectedCategory === 'all' || doc.category === selectedCategory || doc.documentType === selectedCategory;\n\n    return matchesSearch && matchesCategory;\n  }) : [];\n\n  // Group documents by category\n  const groupedDocuments = filteredDocuments.reduce((groups, doc) => {\n    const category = doc.category || doc.documentType || 'other';\n    if (!groups[category]) {\n      groups[category] = [];\n    }\n    groups[category].push(doc);\n    return groups;\n  }, {} as Record<string, typeof filteredDocuments>);\n\n  // Get category display name\n  const getCategoryDisplayName = (category: string) => {\n    const categoryLabels: Record<string, string> = {\n      bylaw: 'Bylaws',\n      financial: 'Financial Documents',\n      maintenance: 'Maintenance Records',\n      legal: 'Legal Documents',\n      meeting_minutes: 'Meeting Minutes',\n      insurance: 'Insurance Documents',\n      contracts: 'Contracts',\n      permits: 'Permits',\n      inspection: 'Inspection Reports',\n      other: 'Other Documents',\n    };\n    return categoryLabels[category] || category.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n  };\n\n\n  // Generate entity name based on type\n  const entityName = type === 'residence' \n    ? (entity?.unitNumber || entity?.unit_number ? `Unit ${entity.unitNumber || entity.unit_number}` : 'Residence')\n    : entity?.name;\n\n  const defaultBackLabel = backLabel || (type === 'building' ? 'Back to Buildings' : t('backToResidences'));\n\n  // State for document view and edit dialogs\n  const [selectedDocumentId, setSelectedDocumentId] = useState<string | null>(null);\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n\n  // Handle document interactions\n  const handleDocumentView = (documentId: string) => {\n    setSelectedDocumentId(documentId);\n    setIsViewDialogOpen(true);\n  };\n\n  const handleDocumentEdit = (documentId: string) => {\n    setSelectedDocumentId(documentId);\n    setIsEditDialogOpen(true);\n  };\n\n  const handleCreateDocument = () => {\n    setIsCreateDialogOpen(true);\n  };\n\n  const handleDocumentSuccess = (documentId: string) => {\n    console.log(`Document created:`, documentId);\n    // Refresh documents list will be handled by the DocumentCreateForm's cache invalidation\n  };\n\n  const clearFilters = () => {\n    setSearchTerm('');\n    setSelectedCategory('all');\n  };\n\n  if (!entityId) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <p className=\"text-gray-500 mb-4\">{type} ID is required</p>\n            <Button\n              variant=\"outline\"\n              onClick={() => navigate(backPath)}\n              data-testid=\"button-back-to-list\"\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              {defaultBackLabel}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Handle entity not found (specific to residence pages that had this logic)\n  if (entityError && error?.message === 'ENTITY_NOT_FOUND' && type === 'residence') {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center max-w-md\">\n            <h2 className=\"text-xl font-semibold mb-4\">Residence Not Found</h2>\n            <p className=\"text-gray-500 mb-4\">\n              The residence ID \"{entityId}\" doesn't exist in the development database.\n            </p>\n            <p className=\"text-sm text-gray-400 mb-6\">\n              This might be a production database ID. Please use a valid development residence ID.\n            </p>\n            <div className=\"space-y-2\">\n              <Button\n                variant=\"default\"\n                onClick={() => navigate(backPath)}\n                data-testid=\"button-back-to-list\"\n                className=\"w-full\"\n              >\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                {backLabel || 'Back to Residences'}\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={() =>\n                  navigate('/residents/residences/e27ac924-8120-4904-a791-d1e9db544d58/documents')\n                }\n                data-testid=\"button-go-to-valid-residence\"\n                className=\"w-full\"\n              >\n                Go to Unit 101 (Test Residence)\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      <Header \n        title={entityName}\n        subtitle={type === 'building' ? 'Building Documents' : 'Residence Documents'}\n      />\n\n      <div className=\"flex-1 overflow-auto p-6\">\n        <div className=\"max-w-7xl mx-auto space-y-6\">\n          {/* Back Button */}\n          <div className=\"flex items-center justify-between\">\n            <Button\n              variant=\"outline\"\n              onClick={() => navigate(backPath)}\n              data-testid=\"button-back\"\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              {defaultBackLabel}\n            </Button>\n            <div></div>\n          </div>\n\n          {/* Filters and Search Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Filter className=\"w-5 h-5\" />\n                Search & Filters\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {/* Search */}\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Search</label>\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\n                    <Input\n                      placeholder=\"Search documents...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"pl-10\"\n                      data-testid=\"input-search-documents\"\n                    />\n                  </div>\n                </div>\n\n                {/* Category Filter */}\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Category</label>\n                  <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                    <SelectTrigger data-testid=\"select-category-filter\">\n                      <SelectValue placeholder=\"All Categories\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {DOCUMENT_CATEGORIES.map((category) => (\n                        <SelectItem key={category.value} value={category.value}>\n                          {category.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {/* View Mode & Actions */}\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">View & Actions</label>\n                  <div className=\"flex gap-2\">\n                    <div className=\"flex gap-1\">\n                      <Button\n                        variant={viewMode === 'grid' ? 'default' : 'outline'}\n                        size=\"sm\"\n                        onClick={() => setViewMode('grid')}\n                        data-testid=\"button-grid-view\"\n                      >\n                        <Grid className=\"w-4 h-4\" />\n                      </Button>\n                      <Button\n                        variant={viewMode === 'list' ? 'default' : 'outline'}\n                        size=\"sm\"\n                        onClick={() => setViewMode('list')}\n                        data-testid=\"button-list-view\"\n                      >\n                        <List className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                    {userPermissions.canCreate && (\n                      <Button \n                        onClick={handleCreateDocument} \n                        size=\"sm\"\n                        data-testid=\"button-create-document\"\n                      >\n                        <Plus className=\"w-4 h-4 mr-2\" />\n                        Create\n                      </Button>\n                    )}\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      onClick={clearFilters}\n                      data-testid=\"button-clear-filters\"\n                    >\n                      Clear\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Documents Display */}\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">\n                {filteredDocuments.length} document{filteredDocuments.length !== 1 ? 's' : ''} found\n              </span>\n              {(searchTerm || selectedCategory !== 'all') && (\n                <Badge variant=\"secondary\">Filtered</Badge>\n              )}\n            </div>\n          </div>\n\n          {/* Documents Content */}\n          {isLoading ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p className=\"text-gray-500\">Loading documents...</p>\n              </CardContent>\n            </Card>\n          ) : filteredDocuments.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-muted rounded-full flex items-center justify-center\">\n                    <Search className=\"w-8 h-8 text-muted-foreground\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-600 mb-2\">No Documents Found</h3>\n                  <p className=\"text-gray-500 mb-4\">\n                    {searchTerm || selectedCategory !== 'all'\n                      ? \"No documents match your current filters. Try adjusting your search criteria.\"\n                      : `No documents have been uploaded for this ${type} yet. Create your first document to get started.`\n                    }\n                  </p>\n                  <div className=\"flex gap-2 justify-center\">\n                    {(searchTerm || selectedCategory !== 'all') && (\n                      <Button variant=\"outline\" onClick={clearFilters}>\n                        Clear Filters\n                      </Button>\n                    )}\n                    {userPermissions.canCreate && (\n                      <Button onClick={handleCreateDocument}>\n                        <Plus className=\"w-4 h-4 mr-2\" />\n                        Create Document\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"space-y-6\">\n              {Object.entries(groupedDocuments).map(([category, categoryDocuments]) => {\n                const isExpanded = expandedCategories.has(category);\n                \n                return (\n                  <div key={category} className=\"space-y-3\">\n                    <Collapsible open={isExpanded} onOpenChange={() => toggleCategory(category)}>\n                      <CollapsibleTrigger className=\"flex items-center gap-2 p-2 w-full text-left hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors\">\n                        {isExpanded ? (\n                          <ChevronDown className=\"h-4 w-4\" />\n                        ) : (\n                          <ChevronRight className=\"h-4 w-4\" />\n                        )}\n                        <span className=\"text-lg font-semibold\">\n                          {getCategoryDisplayName(category)}\n                        </span>\n                        <Badge variant=\"secondary\" className=\"ml-2\">\n                          {categoryDocuments.length}\n                        </Badge>\n                      </CollapsibleTrigger>\n                      \n                      <CollapsibleContent className=\"space-y-3\">\n                        <Card>\n                          <CardContent className=\"pt-6\">\n                            <div className={`grid gap-4 ${\n                              viewMode === 'grid' \n                                ? 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4' \n                                : 'grid-cols-1'\n                            }`}>\n                              {categoryDocuments.map((document) => (\n                                <DocumentCard\n                                  key={document.id}\n                                  documentId={document.id}\n                                  title={document.name}\n                                  documentType={document.category || document.documentType}\n                                  createdAt={document.createdAt}\n                                  onViewClick={handleDocumentView}\n                                  compact={viewMode === 'list'}\n                                />\n                              ))}\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </CollapsibleContent>\n                    </Collapsible>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n\n          {/* Document Creation Dialog */}\n          <DocumentCreateForm\n            isOpen={isCreateDialogOpen}\n            onClose={() => setIsCreateDialogOpen(false)}\n            onSuccess={handleDocumentSuccess}\n            entityType={type}\n            entityId={entityId}\n            entityName={entityName}\n          />\n\n          {/* Document View Dialog */}\n          {selectedDocumentId && (\n            <DocumentViewDialog\n              documentId={selectedDocumentId}\n              isOpen={isViewDialogOpen}\n              onClose={() => {\n                setIsViewDialogOpen(false);\n                setSelectedDocumentId(null);\n              }}\n              onEdit={() => {\n                setIsViewDialogOpen(false);\n                setIsEditDialogOpen(true);\n              }}\n              canEdit={userPermissions.canEdit}\n            />\n          )}\n\n          {/* Document Edit Dialog */}\n          {selectedDocumentId && (\n            <DocumentEditDialog\n              documentId={selectedDocumentId}\n              isOpen={isEditDialogOpen}\n              onClose={() => {\n                setIsEditDialogOpen(false);\n                setSelectedDocumentId(null);\n              }}\n              onSuccess={() => {\n                setIsEditDialogOpen(false);\n                setSelectedDocumentId(null);\n                // Refresh documents list\n                queryClient.invalidateQueries({\n                  queryKey: ['/api/documents', type, entityId],\n                });\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}