{"file":"/home/runner/workspace/tests/unit/undefined-variable-detection.test.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/undefined-variable-detection.test.ts"],"sourcesContent":["/**\n * Test suite to detect undefined variable patterns in React components\n * Specifically focused on translation function 't' and other common undefined variables\n */\n\nimport { describe, it, expect } from '@jest/globals';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { glob } from 'glob';\n\ndescribe('Undefined Variable Detection', () => {\n  let reactFiles: string[] = [];\n\n  beforeAll(async () => {\n    // Find all React component files\n    reactFiles = await glob('client/src/**/*.{tsx,ts}', {\n      ignore: ['**/*.test.{ts,tsx}', '**/*.spec.{ts,tsx}', '**/node_modules/**']\n    });\n  });\n\n  describe('Translation Function Errors', () => {\n    it('should detect components using t() function without accessing useLanguage hook', () => {\n      const issuesFound: Array<{ file: string; issues: string[] }> = [];\n\n      reactFiles.forEach(filePath => {\n        const content = fs.readFileSync(filePath, 'utf-8');\n        const issues: string[] = [];\n\n        // Check if file uses t() function calls\n        const tFunctionUsage = content.match(/\\bt\\(['\"`][^'\"`]*['\"`]\\)/g);\n        \n        if (tFunctionUsage && tFunctionUsage.length > 0) {\n          // Check if the file imports or uses useLanguage hook\n          const hasUseLanguageHook = content.includes('useLanguage');\n          const hasTranslationImport = content.includes('const { t }');\n          \n          // Check if this is a sub-component that should receive t as prop\n          const isSubComponent = content.includes('interface') && content.includes('Props');\n          const hasTasProp = content.includes('t:') && content.includes('string');\n          \n          if (!hasUseLanguageHook && !hasTranslationImport && !hasTasProp) {\n            issues.push(`Uses t() function but doesn't import useLanguage hook or receive t as prop`);\n            issues.push(`Found ${tFunctionUsage.length} t() calls: ${tFunctionUsage.slice(0, 3).join(', ')}${tFunctionUsage.length > 3 ? '...' : ''}`);\n          }\n        }\n\n        if (issues.length > 0) {\n          issuesFound.push({ file: filePath, issues });\n        }\n      });\n\n      // Report findings but don't fail the test - use as detection\n      if (issuesFound.length > 0) {\n        console.log('\\n🚨 Translation Function Issues Found:');\n        issuesFound.forEach(({ file, issues }) => {\n          console.log(`\\n📄 ${file}:`);\n          issues.forEach(issue => console.log(`   ❌ ${issue}`));\n        });\n        \n        // Create a detailed report\n        const report = issuesFound.map(({ file, issues }) => ({\n          file: file.replace('client/src/', ''),\n          issues\n        }));\n        \n        expect(report.length).toBe(0); // This will fail and show the issues\n      }\n    });\n\n    it('should verify components that pass t function correctly to sub-components', () => {\n      const wellImplementedFiles: string[] = [];\n      const issuesFound: Array<{ file: string; issues: string[] }> = [];\n\n      reactFiles.forEach(filePath => {\n        const content = fs.readFileSync(filePath, 'utf-8');\n        const issues: string[] = [];\n\n        // Check if file has components that accept t as prop\n        const hasTProp = content.includes('t:') && (content.includes('string') || content.includes('Function'));\n        const usesUseLanguage = content.includes('useLanguage');\n        const passesTToProp = content.includes('t={t}');\n\n        if (hasTProp) {\n          // This file has components that expect t as prop - good pattern\n          wellImplementedFiles.push(filePath);\n          \n          // Check if the parent component properly passes t\n          if (usesUseLanguage && !passesTToProp) {\n            issues.push('Component interface expects t as prop but parent may not be passing it');\n          }\n        }\n\n        if (issues.length > 0) {\n          issuesFound.push({ file: filePath, issues });\n        }\n      });\n\n      console.log(`\\n✅ Found ${wellImplementedFiles.length} files with proper t prop implementation`);\n      \n      if (issuesFound.length > 0) {\n        console.log('\\n⚠️  Potential t prop implementation issues:');\n        issuesFound.forEach(({ file, issues }) => {\n          console.log(`\\n📄 ${file}:`);\n          issues.forEach(issue => console.log(`   ⚠️  ${issue}`));\n        });\n      }\n    });\n  });\n\n  describe('General Undefined Variable Patterns', () => {\n    it('should detect common undefined variable patterns', () => {\n      const issuesFound: Array<{ file: string; issues: string[] }> = [];\n\n      reactFiles.forEach(filePath => {\n        const content = fs.readFileSync(filePath, 'utf-8');\n        const issues: string[] = [];\n\n        // Check for common undefined variable patterns\n        const lines = content.split('\\n');\n        \n        lines.forEach((line, index) => {\n          const lineNumber = index + 1;\n          \n          // Check for undefined variables in JSX\n          const undefinedPatterns = [\n            { pattern: /\\{[^}]*\\b(?!props\\.|this\\.|window\\.|document\\.|console\\.)([a-zA-Z_$][a-zA-Z0-9_$]*)\\b[^}]*\\}/g, type: 'potential undefined variable in JSX' },\n            { pattern: /\\b(?!import|export|const|let|var|function|if|else|for|while|return|true|false|null|undefined)([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*\\(/g, type: 'potential undefined function call' }\n          ];\n\n          undefinedPatterns.forEach(({ pattern, type }) => {\n            const matches = line.match(pattern);\n            if (matches) {\n              // Filter out known safe patterns\n              const safePatterns = /\\b(React|useState|useEffect|useCallback|useMemo|import|export|console|window|document|Array|Object|String|Number|Boolean|Date|Math|JSON|Promise|setTimeout|setInterval|require)\\b/;\n              \n              matches.forEach(match => {\n                if (!safePatterns.test(match)) {\n                  issues.push(`Line ${lineNumber}: ${type} - \"${match.trim()}\"`);\n                }\n              });\n            }\n          });\n        });\n\n        if (issues.length > 0) {\n          issuesFound.push({ file: filePath, issues: issues.slice(0, 5) }); // Limit to first 5 issues per file\n        }\n      });\n\n      if (issuesFound.length > 0) {\n        console.log('\\n🔍 Potential Undefined Variable Patterns Found:');\n        issuesFound.slice(0, 10).forEach(({ file, issues }) => { // Limit to first 10 files\n          console.log(`\\n📄 ${file}:`);\n          issues.forEach(issue => console.log(`   🔍 ${issue}`));\n        });\n      }\n\n      // This is a detection test, not a strict failure\n      expect(true).toBe(true);\n    });\n  });\n\n  describe('Component Interface Validation', () => {\n    it('should validate that all component interfaces are properly typed', () => {\n      const interfaceIssues: Array<{ file: string; issues: string[] }> = [];\n\n      reactFiles.forEach(filePath => {\n        const content = fs.readFileSync(filePath, 'utf-8');\n        const issues: string[] = [];\n\n        // Check for interface definitions\n        const interfaceMatches = content.match(/interface\\s+(\\w+Props)\\s*{[^}]*}/gs);\n        \n        if (interfaceMatches) {\n          interfaceMatches.forEach(interfaceBlock => {\n            // Check if translation function is properly typed\n            if (interfaceBlock.includes('t:') && !interfaceBlock.includes('(key: string)')) {\n              issues.push('Translation function t should be typed as (key: string) => string');\n            }\n            \n            // Check for any: any type usage (potential issue)\n            if (interfaceBlock.includes(': any')) {\n              issues.push('Interface contains \"any\" type - consider proper typing');\n            }\n          });\n        }\n\n        if (issues.length > 0) {\n          interfaceIssues.push({ file: filePath, issues });\n        }\n      });\n\n      if (interfaceIssues.length > 0) {\n        console.log('\\n📋 Component Interface Issues:');\n        interfaceIssues.forEach(({ file, issues }) => {\n          console.log(`\\n📄 ${file}:`);\n          issues.forEach(issue => console.log(`   📋 ${issue}`));\n        });\n      }\n\n      expect(interfaceIssues.length).toBeLessThan(10); // Allow some flexibility\n    });\n  });\n});"],"version":3}