{"version":3,"names":["cov_3f8gyuz4k","actualCoverage","s","exports","default","CommonSpacesPage","react_1","require","react_query_1","date_fns_1","locale_1","react_hook_form_1","zod_1","zod_2","header_1","card_1","badge_1","button_1","dialog_1","form_1","tooltip_1","lucide_react_1","use_toast_1","use_auth_1","use_language_1","queryClient_1","common_space_calendar_1","bookingFormSchema","z","object","date","message","startTime","string","min","regex","endTime","refine","data","f","start","parse","Date","end","path","BookingCalendar","selected","onSelect","space","bookings","language","testId","currentDate","setCurrentDate","useState","b","monthDays","useMemo","startOfMonth","endOfMonth","eachDayOfInterval","getBookingsForDay","day","filter","booking","isSameDay","parseISO","status","isDayAvailable","today","setHours","checkDay","unavailablePeriods","Array","isArray","period","startDate","endDate","openingHours","dayName","toLocaleDateString","weekday","toLowerCase","todayHours","find","h","isOpen","goToPrevMonth","prev","newDate","setMonth","getMonth","goToNextMonth","jsx_runtime_1","jsx","TooltipProvider","children","jsxs","className","Button","variant","size","onClick","ChevronLeft","format","locale","fr","undefined","ChevronRight","map","index","dayBookings","isCurrentDay","isToday","isSelected","isAvailable","Tooltip","TooltipTrigger","asChild","length","TooltipContent","slice","idx","generateICS","allSpaces","now","icsHeader","join","icsEvents","formatICSDate","toISOString","replace","title","id","icsFooter","user","useAuth","useLanguage","toast","useToast","queryClient","useQueryClient","selectedSpace","setSelectedSpace","selectedDate","setSelectedDate","isBookingDialogOpen","setIsBookingDialogOpen","expandedSpaceId","setExpandedSpaceId","preSelectedDate","setPreSelectedDate","form","useForm","resolver","zodResolver","defaultValues","commonSpaces","isLoading","spacesLoading","useQuery","queryKey","enabled","bookingsLoading","userBookings","createBookingMutation","useMutation","mutationFn","Error","baseDate","startDateTime","getFullYear","getDate","startHour","startMinute","split","Number","endDateTime","endHour","endMinute","apiRequest","start_time","end_time","onSuccess","invalidateQueries","description","reset","onError","error","bookingsForDate","bookingDate","timeSlots","slots","hour","push","toString","padStart","isTimeSlotAvailable","time","duration","minute","slotStart","slotEnd","setMinutes","getMinutes","openTime","open","closeTime","close","isWithinInterval","breaks","breakPeriod","breakStart","breakEnd","some","bookingStart","bookingEnd","exportMyBookings","icsContent","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","exportAllBookings","name","onSubmit","mutate","handleSpaceClick","handleDateClick","setValue","handleNewBooking","Header","subtitle","window","Link","Download","_","i","Card","CardHeader","CardTitle","Building2","ChevronUp","ChevronDown","isReservable","Badge","CardContent","capacity","Users","Clock","hours","bookingRules","FileText","Fragment","CommonSpaceCalendar","onExport","onNewBooking","Dialog","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogDescription","Form","handleSubmit","watch","hasBooking","timeSlot","currentStartTime","currentEndTime","disabled","getTime","Math","floor","FormField","control","render","field","FormItem","FormControl","value","readOnly","FormMessage","DialogFooter","isPending"],"sources":["/home/runner/workspace/client/src/pages/residents/common-spaces.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport {\n  format,\n  addDays,\n  isSameDay,\n  parseISO,\n  isWithinInterval,\n  parse,\n  startOfMonth,\n  endOfMonth,\n  eachDayOfInterval,\n  isToday,\n} from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport {\n  Building2,\n  Clock,\n  Users,\n  MapPin,\n  Download,\n  Link,\n  Calendar as CalendarIcon,\n  Plus,\n  X,\n  FileText,\n  User,\n  CalendarDays,\n  ChevronDown,\n  ChevronUp,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useLanguage } from '@/hooks/use-language';\nimport { apiRequest } from '@/lib/queryClient';\nimport { CalendarView } from '@/components/common-spaces/calendar-view';\nimport { CommonSpaceCalendar } from '@/components/common-spaces/common-space-calendar';\n\n/**\n * Common Space interface.\n */\ninterface CommonSpace {\n  id: string;\n  name: string;\n  description?: string;\n  buildingId: string;\n  isReservable: boolean;\n  capacity?: number;\n  contactPersonId?: string;\n  openingHours?: Array<{\n    day: string;\n    open: string;\n    close: string;\n    isOpen?: boolean;\n    breaks?: Array<{\n      start: string;\n      end: string;\n      reason?: string;\n    }>;\n  }>;\n  unavailablePeriods?: Array<{\n    startDate: string;\n    endDate: string;\n    reason?: string;\n    recurrence?: 'none' | 'weekly' | 'monthly' | 'yearly';\n  }>;\n  bookingRules?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n/**\n * Booking interface.\n */\ninterface Booking {\n  id: string;\n  commonSpaceId: string;\n  userId: string;\n  startTime: string;\n  endTime: string;\n  status: 'confirmed' | 'cancelled';\n  createdAt: string;\n  updatedAt: string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n}\n\n/**\n * Booking form schema.\n */\nconst bookingFormSchema = z\n  .object({\n    date: z.date({\n      message: 'Please select a booking date from the calendar',\n    }),\n    startTime: z.string().min(1, 'Start time is required (example: 09:00)').regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Start time must be in HH:MM format (example: 09:00)'),\n    endTime: z.string().min(1, 'End time is required (example: 11:00)').regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'End time must be in HH:MM format (example: 11:00)'),\n  })\n  .refine(\n    (data) => {\n      const start = parse(data.startTime, 'HH:mm', new Date());\n      const end = parse(data.endTime, 'HH:mm', new Date());\n      return end > start;\n    },\n    {\n      message: 'End time must be after start time (example: start at 09:00, end at 11:00)',\n      path: ['endTime'],\n    }\n  );\n\n/**\n *\n */\ntype BookingFormData = z.infer<typeof bookingFormSchema>;\n\n/**\n * Compact Booking Calendar Component.\n */\ninterface BookingCalendarProps {\n  selected: Date;\n  onSelect: (date: Date) => void;\n  space: CommonSpace;\n  bookings: Booking[];\n  language: string;\n  'data-testid'?: string;\n}\n\n/**\n *\n * @param root0\n * @param root0.selected\n * @param root0.onSelect\n * @param root0.space\n * @param root0.bookings\n * @param root0.language\n * @param root0.'data-testid'\n */\nfunction BookingCalendar({\n  selected,\n  onSelect,\n  space,\n  bookings,\n  language,\n  'data-testid': testId,\n}: BookingCalendarProps) {\n  const [currentDate, setCurrentDate] = useState(selected || new Date());\n\n  const monthDays = useMemo(() => {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    return eachDayOfInterval({ start, end });\n  }, [currentDate]);\n\n  const getBookingsForDay = (day: Date) => {\n    return bookings.filter(\n      (booking) => isSameDay(parseISO(booking.startTime), day) && booking.status === 'confirmed'\n    );\n  };\n\n  const isDayAvailable = (day: Date) => {\n    // Past dates are not available\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const checkDay = new Date(day);\n    checkDay.setHours(0, 0, 0, 0);\n    \n    if (checkDay < today) {\n      return false;\n    }\n\n    // Check if day falls within any unavailable periods\n    if (space.unavailablePeriods && Array.isArray(space.unavailablePeriods)) {\n      for (const period of space.unavailablePeriods) {\n        const startDate = new Date(period.startDate);\n        const endDate = new Date(period.endDate);\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n        \n        if (checkDay >= startDate && checkDay <= endDate) {\n          return false;\n        }\n      }\n    }\n\n    // Check opening hours if available\n    if (space.openingHours && Array.isArray(space.openingHours)) {\n      const dayName = day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const todayHours = space.openingHours.find((h) => h.day.toLowerCase() === dayName);\n      \n      // If no hours defined for this day, it's unavailable\n      if (!todayHours) {\n        return false;\n      }\n      \n      // If explicitly marked as closed\n      if (todayHours.isOpen === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const goToPrevMonth = () => {\n    setCurrentDate((prev) => {\n      const newDate = new Date(prev);\n      newDate.setMonth(prev.getMonth() - 1);\n      return newDate;\n    });\n  };\n\n  const goToNextMonth = () => {\n    setCurrentDate((prev) => {\n      const newDate = new Date(prev);\n      newDate.setMonth(prev.getMonth() + 1);\n      return newDate;\n    });\n  };\n\n  return (\n    <TooltipProvider>\n      <div className='border rounded-md bg-white' data-testid={testId}>\n        {/* Calendar Header */}\n        <div className='flex items-center justify-between p-3 border-b'>\n          <Button variant='outline' size='sm' onClick={goToPrevMonth} className='h-8 w-8 p-0'>\n            <ChevronLeft className='h-4 w-4' />\n          </Button>\n\n          <h3 className='text-sm font-semibold'>\n            {format(currentDate, 'MMMM yyyy', { locale: language === 'fr' ? fr : undefined })}\n          </h3>\n\n          <Button variant='outline' size='sm' onClick={goToNextMonth} className='h-8 w-8 p-0'>\n            <ChevronRight className='h-4 w-4' />\n          </Button>\n        </div>\n\n        {/* Calendar Grid */}\n        <div className='p-2'>\n          <div className='grid grid-cols-7 gap-1 mb-2'>\n            {/* Week day headers */}\n            {[\n              language === 'fr' ? 'L' : 'M',\n              language === 'fr' ? 'M' : 'T',\n              language === 'fr' ? 'M' : 'W',\n              language === 'fr' ? 'J' : 'T',\n              language === 'fr' ? 'V' : 'F',\n              language === 'fr' ? 'S' : 'S',\n              language === 'fr' ? 'D' : 'S',\n            ].map((day, index) => (\n              <div key={index} className='p-1 text-center text-xs font-medium text-gray-500'>\n                {day}\n              </div>\n            ))}\n          </div>\n\n          <div className='grid grid-cols-7 gap-1'>\n            {monthDays.map((day, index) => {\n              const dayBookings = getBookingsForDay(day);\n              const isCurrentDay = isToday(day);\n              const isSelected = selected && isSameDay(day, selected);\n              const isAvailable = isDayAvailable(day);\n\n              return (\n                <Tooltip key={index}>\n                  <TooltipTrigger asChild>\n                    <div\n                      className={`\n                        h-8 p-1 text-xs rounded cursor-pointer transition-colors flex items-center justify-center\n                        ${\n                          !isAvailable\n                            ? 'bg-red-100 text-red-600 cursor-not-allowed border border-red-200'\n                            : isSelected\n                              ? 'bg-blue-600 text-white'\n                              : isCurrentDay\n                                ? 'bg-blue-100 text-blue-900 hover:bg-blue-200'\n                                : dayBookings.length > 0\n                                  ? 'bg-orange-100 text-orange-900 hover:bg-orange-200'\n                                  : 'hover:bg-gray-100'\n                        }\n                      `}\n                      onClick={() => isAvailable && onSelect(day)}\n                    >\n                      <span className='font-medium'>{format(day, 'd')}</span>\n                      {dayBookings.length > 0 && (\n                        <div className='absolute -mt-3 -mr-1'>\n                          <div className='w-1.5 h-1.5 bg-orange-500 rounded-full'></div>\n                        </div>\n                      )}\n                    </div>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    <div className='space-y-1'>\n                      <p className='font-medium'>\n                        {format(day, 'EEEE, d MMMM yyyy', {\n                          locale: language === 'fr' ? fr : undefined,\n                        })}\n                      </p>\n                      {!isAvailable && (\n                        <p className='text-xs text-red-500'>\n                          {language === 'fr' ? 'Non disponible' : 'Not available'}\n                        </p>\n                      )}\n                      {dayBookings.length > 0 && (\n                        <div className='text-xs'>\n                          <p className='text-orange-600'>\n                            {dayBookings.length}{' '}\n                            {language === 'fr' ? 'réservation(s)' : 'booking(s)'}\n                          </p>\n                          {dayBookings.slice(0, 2).map((booking, idx) => (\n                            <p key={idx} className='text-gray-600'>\n                              {format(parseISO(booking.startTime), 'HH:mm')} -{' '}\n                              {format(parseISO(booking.endTime), 'HH:mm')}\n                            </p>\n                          ))}\n                          {dayBookings.length > 2 && (\n                            <p className='text-gray-500'>\n                              +{dayBookings.length - 2} {language === 'fr' ? 'autres' : 'more'}\n                            </p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </TooltipContent>\n                </Tooltip>\n              );\n            })}\n          </div>\n\n          {/* Legend */}\n          <div className='flex items-center justify-center gap-4 mt-3 pt-2 border-t text-xs'>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-blue-600 rounded'></div>\n              <span className='text-gray-600'>\n                {language === 'fr' ? 'Sélectionné' : 'Selected'}\n              </span>\n            </div>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-orange-500 rounded'></div>\n              <span className='text-gray-600'>{language === 'fr' ? 'Réservé' : 'Booked'}</span>\n            </div>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-red-500 rounded'></div>\n              <span className='text-gray-600'>{language === 'fr' ? 'Non disponible' : 'Unavailable'}</span>\n            </div>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-blue-200 rounded'></div>\n              <span className='text-gray-600'>{language === 'fr' ? \"Aujourd'hui\" : 'Today'}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </TooltipProvider>\n  );\n}\n\n/**\n * Utility function to generate .ics calendar content.\n * @param bookings\n * @param allSpaces\n */\nfunction generateICS(bookings: Booking[], allSpaces?: boolean): string {\n  const now = new Date();\n  const icsHeader = [\n    'BEGIN:VCALENDAR',\n    'VERSION:2.0',\n    'PRODID:-//Koveo Gestion//Common Spaces//FR',\n    'CALSCALE:GREGORIAN',\n    'METHOD:PUBLISH',\n  ].join('\\r\\n');\n\n  const icsEvents = bookings.map((booking) => {\n    const startDate = new Date(booking.startTime);\n    const endDate = new Date(booking.endTime);\n\n    // Format dates for ICS (YYYYMMDDTHHMMSSZ)\n    const formatICSDate = (date: Date) => {\n      return date\n        .toISOString()\n        .replace(/[-:]/g, '')\n        .replace(/\\.\\d{3}/, '');\n    };\n\n    const title = allSpaces ? `Réservation d'espace commun` : `Espace commun réservé`;\n\n    return [\n      'BEGIN:VEVENT',\n      `UID:${booking.id}@koveogestion.com`,\n      `DTSTAMP:${formatICSDate(now)}`,\n      `DTSTART:${formatICSDate(startDate)}`,\n      `DTEND:${formatICSDate(endDate)}`,\n      `SUMMARY:${title}`,\n      `DESCRIPTION:Réservation confirmée pour un espace commun`,\n      'STATUS:CONFIRMED',\n      'END:VEVENT',\n    ].join('\\r\\n');\n  });\n\n  const icsFooter = 'END:VCALENDAR';\n\n  return [icsHeader, ...icsEvents, icsFooter].join('\\r\\n');\n}\n\n/**\n * Common Spaces page component for residents.\n */\nexport default function CommonSpacesPage() {\n  const { user } = useAuth();\n  const { language } = useLanguage();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [selectedSpace, setSelectedSpace] = useState<CommonSpace | null>(null);\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [isBookingDialogOpen, setIsBookingDialogOpen] = useState(false);\n  const [expandedSpaceId, setExpandedSpaceId] = useState<string | null>(null);\n  const [preSelectedDate, setPreSelectedDate] = useState<Date | null>(null);\n\n  // Form for booking creation\n  const form = useForm<BookingFormData>({\n    resolver: zodResolver(bookingFormSchema),\n    defaultValues: {\n      date: new Date(),\n      startTime: '09:00',\n      endTime: '10:00',\n    },\n  });\n\n  // Fetch common spaces in user's buildings\n  const { data: commonSpaces = [], isLoading: spacesLoading } = useQuery<CommonSpace[]>({\n    queryKey: ['/api/common-spaces'],\n    enabled: !!user,\n  });\n\n  // Fetch bookings for selected space\n  const { data: bookings = [], isLoading: bookingsLoading } = useQuery<Booking[]>({\n    queryKey: ['/api/common-spaces', selectedSpace?.id, 'bookings'],\n    enabled: !!selectedSpace,\n  });\n\n  // Fetch all user's bookings for export\n  const { data: userBookings = [] } = useQuery<Booking[]>({\n    queryKey: ['/api/common-spaces/my-bookings'],\n    enabled: !!user,\n  });\n\n  // Create booking mutation\n  const createBookingMutation = useMutation({\n    mutationFn: async (data: BookingFormData) => {\n      if (!selectedSpace) {\n        throw new Error('No space selected');\n      }\n\n      // More robust date handling to avoid timezone issues\n      const baseDate = data.date instanceof Date ? data.date : new Date(data.date);\n\n      // Create start time by setting the time on a date object in local timezone\n      const startDateTime = new Date(\n        baseDate.getFullYear(),\n        baseDate.getMonth(),\n        baseDate.getDate()\n      );\n      const [startHour, startMinute] = data.startTime.split(':').map(Number);\n      startDateTime.setHours(startHour, startMinute, 0, 0);\n\n      // Create end time similarly\n      const endDateTime = new Date(baseDate.getFullYear(), baseDate.getMonth(), baseDate.getDate());\n      const [endHour, endMinute] = data.endTime.split(':').map(Number);\n      endDateTime.setHours(endHour, endMinute, 0, 0);\n\n      // Booking creation handling\n\n      return apiRequest('POST', `/api/common-spaces/${selectedSpace.id}/bookings`, {\n        start_time: startDateTime.toISOString(),\n        end_time: endDateTime.toISOString(),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/common-spaces'] });\n      toast({\n        title: 'Réservation confirmée',\n        description: 'Votre réservation a été créée avec succès.',\n      });\n      setIsBookingDialogOpen(false);\n      form.reset();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Erreur de réservation',\n        description:\n          error.message || 'Une erreur est survenue lors de la création de la réservation.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Get bookings for selected date\n  const bookingsForDate = useMemo(() => {\n    if (!bookings || !selectedDate) {\n      return [];\n    }\n\n    return bookings.filter((booking: Booking) => {\n      const bookingDate = parseISO(booking.startTime);\n      return isSameDay(bookingDate, selectedDate);\n    });\n  }, [bookings, selectedDate]);\n\n  // Get time slots availability\n  const timeSlots = useMemo(() => {\n    const slots = [];\n    for (let hour = 6; hour <= 22; hour++) {\n      slots.push(`${hour.toString().padStart(2, '0')}:00`);\n      slots.push(`${hour.toString().padStart(2, '0')}:30`);\n    }\n    return slots;\n  }, []);\n\n  // Helper function to check if a day is available (moved from BookingCalendar)\n  const isDayAvailable = (day: Date) => {\n    if (!selectedSpace) {\n      return false;\n    }\n\n    // Past dates are not available\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const checkDay = new Date(day);\n    checkDay.setHours(0, 0, 0, 0);\n    \n    if (checkDay < today) {\n      return false;\n    }\n\n    // Check if day falls within any unavailable periods\n    if (selectedSpace.unavailablePeriods && Array.isArray(selectedSpace.unavailablePeriods)) {\n      for (const period of selectedSpace.unavailablePeriods) {\n        const startDate = new Date(period.startDate);\n        const endDate = new Date(period.endDate);\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n        \n        if (checkDay >= startDate && checkDay <= endDate) {\n          return false;\n        }\n      }\n    }\n\n    // Check opening hours if available\n    if (selectedSpace.openingHours && Array.isArray(selectedSpace.openingHours)) {\n      const dayName = day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const todayHours = selectedSpace.openingHours.find((h) => h.day.toLowerCase() === dayName);\n      \n      // If no hours defined for this day, it's unavailable\n      if (!todayHours) {\n        return false;\n      }\n      \n      // If explicitly marked as closed\n      if (todayHours.isOpen === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  // Check if time slot is available\n  const isTimeSlotAvailable = (time: string, duration: number = 60) => {\n    if (!selectedSpace || !selectedDate) {\n      return false;\n    }\n\n    const [hour, minute] = time.split(':').map(Number);\n    const slotStart = new Date(selectedDate);\n    slotStart.setHours(hour, minute, 0, 0);\n\n    const slotEnd = new Date(slotStart);\n    slotEnd.setMinutes(slotEnd.getMinutes() + duration);\n\n    // Check if day is available first (uses our enhanced availability logic)\n    if (!isDayAvailable(selectedDate)) {\n      return false;\n    }\n\n    // Check opening hours\n    if (selectedSpace.openingHours && Array.isArray(selectedSpace.openingHours)) {\n      const dayName = selectedDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const todayHours = selectedSpace.openingHours.find((h) => h.day.toLowerCase() === dayName);\n\n      if (!todayHours || todayHours.isOpen === false) {\n        return false;\n      }\n\n      const openTime = parse(todayHours.open, 'HH:mm', selectedDate);\n      const closeTime = parse(todayHours.close, 'HH:mm', selectedDate);\n\n      // Check if slot is within opening hours\n      if (\n        !isWithinInterval(slotStart, { start: openTime, end: closeTime }) ||\n        !isWithinInterval(slotEnd, { start: openTime, end: closeTime })\n      ) {\n        return false;\n      }\n\n      // Check if slot conflicts with any breaks\n      if (todayHours.breaks && Array.isArray(todayHours.breaks)) {\n        for (const breakPeriod of todayHours.breaks) {\n          const breakStart = parse(breakPeriod.start, 'HH:mm', selectedDate);\n          const breakEnd = parse(breakPeriod.end, 'HH:mm', selectedDate);\n\n          // Check if slot overlaps with break period\n          if (\n            (slotStart >= breakStart && slotStart < breakEnd) ||\n            (slotEnd > breakStart && slotEnd <= breakEnd) ||\n            (slotStart <= breakStart && slotEnd >= breakEnd)\n          ) {\n            return false;\n          }\n        }\n      }\n    }\n\n    // Check conflicts with existing bookings\n    return !bookingsForDate.some((booking: Booking) => {\n      const bookingStart = parseISO(booking.startTime);\n      const bookingEnd = parseISO(booking.endTime);\n\n      return (\n        (slotStart >= bookingStart && slotStart < bookingEnd) ||\n        (slotEnd > bookingStart && slotEnd <= bookingEnd) ||\n        (slotStart <= bookingStart && slotEnd >= bookingEnd)\n      );\n    });\n  };\n\n  // Export functions\n  const exportMyBookings = () => {\n    const icsContent = generateICS(userBookings, false);\n    const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `mes-reservations-${format(new Date(), 'yyyy-MM-dd')}.ics`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const exportAllBookings = () => {\n    if (!selectedSpace) {\n      return;\n    }\n\n    const icsContent = generateICS(bookings, true);\n    const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `agenda-${selectedSpace.name.toLowerCase().replace(/\\s+/g, '-')}-${format(new Date(), 'yyyy-MM-dd')}.ics`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const onSubmit = (data: BookingFormData) => {\n    createBookingMutation.mutate(data);\n  };\n\n  const handleSpaceClick = (space: CommonSpace) => {\n    setSelectedSpace(space);\n    setExpandedSpaceId(expandedSpaceId === space.id ? null : space.id);\n  };\n\n  const handleDateClick = (date: Date) => {\n    setPreSelectedDate(date);\n    form.setValue('date', date);\n    setIsBookingDialogOpen(true);\n  };\n\n  const handleNewBooking = (space: CommonSpace, date?: Date) => {\n    setSelectedSpace(space);\n    if (date) {\n      setPreSelectedDate(date);\n      form.setValue('date', date);\n    }\n    setIsBookingDialogOpen(true);\n  };\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden' data-testid='common-spaces-page'>\n      <Header\n        title={language === 'fr' ? 'Espaces Communs' : 'Common Spaces'}\n        subtitle={language === 'fr' ? 'Réservez vos espaces communs' : 'Book your common spaces'}\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n        <div className='space-y-6'>\n          <div className='flex items-center justify-between'>\n            <h2 className='text-2xl font-bold text-gray-900' data-testid='spaces-list-title'>\n              {language === 'fr' ? 'Espaces Disponibles' : 'Available Spaces'}\n            </h2>\n            <div className='flex items-center gap-2'>\n              <Button\n                onClick={() =>\n                  window.open(\n                    'https://calendar.google.com/calendar/u/0/r/settings/addbyurl',\n                    '_blank'\n                  )\n                }\n                variant='outline'\n                size='sm'\n                className='flex items-center gap-2'\n                data-testid='button-link-calendar'\n              >\n                <Link className='w-4 h-4' />\n                {language === 'fr' ? 'Lier calendrier' : 'Link calendar'}\n              </Button>\n              <Button\n                onClick={exportMyBookings}\n                variant='outline'\n                size='sm'\n                className='flex items-center gap-2'\n                data-testid='button-export-my-bookings'\n              >\n                <Download className='w-4 h-4' />\n                {language === 'fr'\n                  ? 'Exporter mes réservations (.ics)'\n                  : 'Export my bookings (.ics)'}\n              </Button>\n            </div>\n          </div>\n\n          {spacesLoading ? (\n            <div className='space-y-4'>\n              {[...Array(3)].map((_, i) => (\n                <div key={i} className='h-32 bg-gray-200 rounded-lg animate-pulse' />\n              ))}\n            </div>\n          ) : (\n            <div className='space-y-4' data-testid='spaces-list'>\n              {(commonSpaces as CommonSpace[]).map((space: CommonSpace) => (\n                <div key={space.id}>\n                  <Card\n                    className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n                      expandedSpaceId === space.id ? 'ring-2 ring-koveo-navy bg-koveo-light/10' : ''\n                    }`}\n                    onClick={() => handleSpaceClick(space)}\n                    data-testid={`space-card-${space.id}`}\n                  >\n                    <CardHeader className='pb-3'>\n                      <div className='flex items-start justify-between'>\n                        <CardTitle className='flex items-center gap-2 text-lg'>\n                          <Building2 className='w-5 h-5 text-koveo-navy' />\n                          {space.name}\n                          {expandedSpaceId === space.id ? (\n                            <ChevronUp className='w-4 h-4 text-gray-500' />\n                          ) : (\n                            <ChevronDown className='w-4 h-4 text-gray-500' />\n                          )}\n                        </CardTitle>\n                        <div className='flex items-center gap-2'>\n                          {space.isReservable ? (\n                            <Badge variant='secondary' className='bg-green-100 text-green-800'>\n                              {language === 'fr' ? 'Réservable' : 'Bookable'}\n                            </Badge>\n                          ) : (\n                            <Badge variant='secondary' className='bg-gray-100 text-gray-600'>\n                              {language === 'fr' ? 'Non Réservable' : 'Non Bookable'}\n                            </Badge>\n                          )}\n                        </div>\n                      </div>\n                    </CardHeader>\n\n                    <CardContent className='space-y-3'>\n                      {space.description && (\n                        <p\n                          className='text-gray-600 text-sm'\n                          data-testid={`space-description-${space.id}`}\n                        >\n                          {space.description}\n                        </p>\n                      )}\n\n                      <div className='flex items-center gap-4 text-sm text-gray-500'>\n                        {space.capacity && (\n                          <div className='flex items-center gap-1'>\n                            <Users className='w-4 h-4' />\n                            <span data-testid={`space-capacity-${space.id}`}>\n                              {space.capacity} {language === 'fr' ? 'personnes max' : 'people max'}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n\n                      {space.openingHours && space.openingHours.length > 0 && (\n                        <div className='mt-3'>\n                          <h4 className='font-medium text-sm text-gray-700 mb-2 flex items-center gap-1'>\n                            <Clock className='w-4 h-4' />\n                            {language === 'fr' ? \"Heures d'ouverture\" : 'Opening Hours'}\n                          </h4>\n                          <div\n                            className='grid grid-cols-1 gap-1 text-xs text-gray-600'\n                            data-testid={`space-hours-${space.id}`}\n                          >\n                            {space.openingHours.map((hours, idx) => (\n                              <div key={idx} className='flex justify-between'>\n                                <span className='capitalize'>{hours.day}</span>\n                                <span>\n                                  {hours.open} - {hours.close}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {space.bookingRules && (\n                        <div className='mt-3'>\n                          <h4 className='font-medium text-sm text-gray-700 mb-1 flex items-center gap-1'>\n                            <FileText className='w-4 h-4' />\n                            {language === 'fr' ? 'Règles de réservation' : 'Booking Rules'}\n                          </h4>\n                          <p\n                            className='text-xs text-gray-600'\n                            data-testid={`space-rules-${space.id}`}\n                          >\n                            {space.bookingRules}\n                          </p>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n\n                  {/* Inline Calendar */}\n                  {expandedSpaceId === space.id && (\n                    <>\n                      <CommonSpaceCalendar\n                        space={space}\n                        onExport={exportAllBookings}\n                        onNewBooking={(date) => handleNewBooking(space, date)}\n                        className='mt-4'\n                      />\n\n                      {/* Booking Dialog */}\n                      {space.isReservable && (\n                        <Dialog open={isBookingDialogOpen} onOpenChange={setIsBookingDialogOpen}>\n                          <DialogContent\n                            className='max-w-lg max-h-[90vh] overflow-y-auto'\n                            data-testid='booking-dialog'\n                          >\n                            <DialogHeader>\n                              <DialogTitle>\n                                {language === 'fr' ? 'Nouvelle réservation' : 'New Booking'}\n                              </DialogTitle>\n                              <DialogDescription>\n                                {language === 'fr'\n                                  ? `Réserver ${space.name}`\n                                  : `Book ${space.name}`}\n                              </DialogDescription>\n                            </DialogHeader>\n\n                            <Form {...form}>\n                              <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n                                {/* Selected Date Display */}\n                                <div className='p-4 bg-blue-50 border border-blue-200 rounded-lg'>\n                                  <div className='text-sm font-medium text-blue-900 mb-1'>\n                                    {language === 'fr' ? 'Date sélectionnée' : 'Selected Date'}\n                                  </div>\n                                  <div className='text-lg font-semibold text-blue-800'>\n                                    {format(form.watch('date'), 'EEEE, d MMMM yyyy', {\n                                      locale: language === 'fr' ? fr : undefined,\n                                    })}\n                                  </div>\n                                </div>\n\n                                {/* Opening Hours Display */}\n                                {selectedSpace?.openingHours && Array.isArray(selectedSpace.openingHours) && (\n                                  <div className='p-3 bg-green-50 border border-green-200 rounded-lg'>\n                                    <div className='text-sm font-medium text-green-900 mb-2'>\n                                      {language === 'fr' ? 'Heures d\\'ouverture' : 'Opening Hours'}\n                                    </div>\n                                    {selectedSpace.openingHours.map((hours, index) => {\n                                      const dayName = form.watch('date').toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n                                      if (hours.day.toLowerCase() === dayName) {\n                                        return (\n                                          <div key={index} className='text-sm text-green-800'>\n                                            {hours.open} - {hours.close}\n                                          </div>\n                                        );\n                                      }\n                                      return null;\n                                    })}\n                                  </div>\n                                )}\n\n                                {/* Time Slots Grid */}\n                                <div className='space-y-4'>\n                                  <div className='text-sm font-medium text-gray-900'>\n                                    {language === 'fr' ? 'Créneaux horaires disponibles' : 'Available Time Slots'}\n                                  </div>\n                                  \n                                  <div className='grid grid-cols-4 gap-2 max-h-60 overflow-y-auto p-2 border rounded-lg bg-gray-50'>\n                                    {timeSlots.map((time) => {\n                                      const isAvailable = isTimeSlotAvailable(time);\n                                      const hasBooking = bookingsForDate.some((booking: Booking) => {\n                                        const bookingStart = parseISO(booking.startTime);\n                                        const bookingEnd = parseISO(booking.endTime);\n                                        const timeSlot = parse(time, 'HH:mm', form.watch('date'));\n                                        return timeSlot >= bookingStart && timeSlot < bookingEnd;\n                                      });\n                                      \n                                      const currentStartTime = form.watch('startTime');\n                                      const currentEndTime = form.watch('endTime');\n                                      const isSelected = time === currentStartTime || time === currentEndTime;\n                                      \n                                      return (\n                                        <button\n                                          key={time}\n                                          type='button'\n                                          disabled={!isAvailable || hasBooking}\n                                          onClick={() => {\n                                            if (!currentStartTime || (currentStartTime && currentEndTime)) {\n                                              // Set start time\n                                              form.setValue('startTime', time);\n                                              form.setValue('endTime', '');\n                                            } else {\n                                              // Set end time if start time is already set\n                                              if (time > currentStartTime) {\n                                                form.setValue('endTime', time);\n                                              } else {\n                                                // If selected time is before start time, make it the new start time\n                                                form.setValue('startTime', time);\n                                                form.setValue('endTime', '');\n                                              }\n                                            }\n                                          }}\n                                          className={`\n                                            p-2 text-xs rounded-md border transition-colors relative\n                                            ${\n                                              !isAvailable\n                                                ? 'bg-red-100 border-red-200 text-red-600 cursor-not-allowed'\n                                                : hasBooking\n                                                  ? 'bg-orange-100 border-orange-200 text-orange-700 cursor-not-allowed'\n                                                  : isSelected\n                                                    ? 'bg-blue-500 border-blue-600 text-white font-semibold'\n                                                    : 'bg-white border-gray-200 text-gray-700 hover:bg-gray-100 hover:border-gray-300'\n                                            }\n                                          `}\n                                        >\n                                          <div className='font-medium'>{time}</div>\n                                          {hasBooking && (\n                                            <div className='text-[10px] mt-1 text-orange-600'>\n                                              {language === 'fr' ? 'Réservé' : 'Booked'}\n                                            </div>\n                                          )}\n                                          {!isAvailable && !hasBooking && (\n                                            <div className='text-[10px] mt-1 text-red-600'>\n                                              {language === 'fr' ? 'Fermé' : 'Closed'}\n                                            </div>\n                                          )}\n                                          {isSelected && (\n                                            <div className='text-[10px] mt-1 text-white'>\n                                              {time === currentStartTime \n                                                ? (language === 'fr' ? 'Début' : 'Start')\n                                                : (language === 'fr' ? 'Fin' : 'End')\n                                              }\n                                            </div>\n                                          )}\n                                        </button>\n                                      );\n                                    })}\n                                  </div>\n\n                                  {/* Legend */}\n                                  <div className='grid grid-cols-2 gap-4 text-xs'>\n                                    <div className='space-y-2'>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-white border border-gray-200 rounded'></div>\n                                        <span>{language === 'fr' ? 'Disponible' : 'Available'}</span>\n                                      </div>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-blue-500 rounded'></div>\n                                        <span>{language === 'fr' ? 'Sélectionné' : 'Selected'}</span>\n                                      </div>\n                                    </div>\n                                    <div className='space-y-2'>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-orange-100 border border-orange-200 rounded'></div>\n                                        <span>{language === 'fr' ? 'Réservé' : 'Booked'}</span>\n                                      </div>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-red-100 border border-red-200 rounded'></div>\n                                        <span>{language === 'fr' ? 'Fermé' : 'Closed'}</span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                {/* Selected Time Summary */}\n                                {form.watch('startTime') && (\n                                  <div className='p-3 bg-gray-50 border border-gray-200 rounded-lg'>\n                                    <div className='text-sm font-medium text-gray-900 mb-1'>\n                                      {language === 'fr' ? 'Réservation sélectionnée' : 'Selected Booking'}\n                                    </div>\n                                    <div className='text-sm text-gray-700'>\n                                      <span className='font-medium'>\n                                        {language === 'fr' ? 'Début:' : 'Start:'}\n                                      </span> {form.watch('startTime')}\n                                      {form.watch('endTime') && (\n                                        <span className='ml-4'>\n                                          <span className='font-medium'>\n                                            {language === 'fr' ? 'Fin:' : 'End:'}\n                                          </span> {form.watch('endTime')}\n                                        </span>\n                                      )}\n                                    </div>\n                                    {form.watch('endTime') && (\n                                      <div className='text-xs text-gray-500 mt-1'>\n                                        {language === 'fr' ? 'Durée:' : 'Duration:'} \n                                        {(() => {\n                                          const start = parse(form.watch('startTime'), 'HH:mm', new Date());\n                                          const end = parse(form.watch('endTime'), 'HH:mm', new Date());\n                                          const duration = (end.getTime() - start.getTime()) / (1000 * 60);\n                                          return `${Math.floor(duration / 60)}h ${duration % 60 > 0 ? `${duration % 60}min` : ''}`;\n                                        })()} \n                                      </div>\n                                    )}\n                                  </div>\n                                )}\n\n                                {/* Validation Messages */}\n                                {!form.watch('startTime') && (\n                                  <div className='text-sm text-amber-600 bg-amber-50 border border-amber-200 rounded-lg p-3'>\n                                    {language === 'fr' \n                                      ? 'Veuillez sélectionner une heure de début'\n                                      : 'Please select a start time'}\n                                  </div>\n                                )}\n                                {form.watch('startTime') && !form.watch('endTime') && (\n                                  <div className='text-sm text-amber-600 bg-amber-50 border border-amber-200 rounded-lg p-3'>\n                                    {language === 'fr' \n                                      ? 'Veuillez sélectionner une heure de fin'\n                                      : 'Please select an end time'}\n                                  </div>\n                                )}\n\n                                {/* Hidden form fields to maintain form validation */}\n                                <div className='hidden'>\n                                  <FormField\n                                    control={form.control}\n                                    name='date'\n                                    render={({ field }) => (\n                                      <FormItem>\n                                        <FormControl>\n                                          <input {...field} value={field.value?.toISOString() || ''} readOnly />\n                                        </FormControl>\n                                        <FormMessage />\n                                      </FormItem>\n                                    )}\n                                  />\n                                  <FormField\n                                    control={form.control}\n                                    name='startTime'\n                                    render={({ field }) => (\n                                      <FormItem>\n                                        <FormControl>\n                                          <input {...field} readOnly />\n                                        </FormControl>\n                                        <FormMessage />\n                                      </FormItem>\n                                    )}\n                                  />\n                                  <FormField\n                                    control={form.control}\n                                    name='endTime'\n                                    render={({ field }) => (\n                                      <FormItem>\n                                        <FormControl>\n                                          <input {...field} readOnly />\n                                        </FormControl>\n                                        <FormMessage />\n                                      </FormItem>\n                                    )}\n                                  />\n                                </div>\n\n                                <DialogFooter>\n                                  <Button\n                                    type='button'\n                                    variant='outline'\n                                    onClick={() => {\n                                      setIsBookingDialogOpen(false);\n                                      form.reset();\n                                    }}\n                                    data-testid='button-cancel-booking'\n                                  >\n                                    {language === 'fr' ? 'Annuler' : 'Cancel'}\n                                  </Button>\n                                  <Button\n                                    type='submit'\n                                    disabled={\n                                      createBookingMutation.isPending || \n                                      !form.watch('startTime') || \n                                      !form.watch('endTime')\n                                    }\n                                    data-testid='button-confirm-booking'\n                                  >\n                                    {createBookingMutation.isPending\n                                      ? language === 'fr'\n                                        ? 'Réservation...'\n                                        : 'Booking...'\n                                      : language === 'fr'\n                                        ? 'Confirmer la réservation'\n                                        : 'Confirm Booking'}\n                                  </Button>\n                                </DialogFooter>\n                              </form>\n                            </Form>\n                          </DialogContent>\n                        </Dialog>\n                      )}\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}