{"version":3,"names":["cov_206agllcxe","actualCoverage","s","exports","default","ResetPasswordPage","react_1","require","wouter_1","react_hook_form_1","zod_1","zod_2","button_1","input_1","form_1","card_1","use_toast_1","queryClient_1","lucide_react_1","resetPasswordSchema","z","object","password","string","min","max","regex","confirmPassword","refine","_data","f","message","path","isSubmitting","setIsSubmitting","useState","resetComplete","setResetComplete","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","token","setToken","navigate","useLocation","toast","useToast","form","useForm","resolver","zodResolver","defaultValues","useEffect","urlParams","URLSearchParams","window","location","search","tokenParam","get","b","title","description","variant","onSubmit","apiRequest","_error","errorMessage","code","jsx_runtime_1","jsx","className","children","jsxs","Card","CardHeader","CheckCircle","CardTitle","CardDescription","CardContent","Button","asChild","Link","href","ArrowLeft","Form","handleSubmit","FormField","control","name","render","field","FormItem","FormLabel","FormControl","Input","type","placeholder","size","onClick","EyeOff","Eye","FormMessage","disabled"],"sources":["/home/runner/workspace/client/src/pages/auth/reset-password.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\nimport { Eye, EyeOff, CheckCircle, ArrowLeft } from 'lucide-react';\n\nconst resetPasswordSchema = z\n  .object({\n    password: z\n      .string()\n      .min(1, 'Le nouveau mot de passe est requis')\n      .min(8, 'Le mot de passe doit contenir au moins 8 caractères (exemple: MonMotDePasse123!)')\n      .max(100, 'Le mot de passe ne peut pas dépasser 100 caractères')\n      .regex(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n        'Le mot de passe doit contenir au moins une minuscule, une majuscule et un chiffre (exemple: MonMotDePasse123!)'\n      ),\n    confirmPassword: z.string().min(1, 'La confirmation du mot de passe est requise'),\n  })\n  .refine((_data) => _data.password === _data.confirmPassword, {\n    message: 'Les mots de passe ne correspondent pas - veuillez saisir le même mot de passe dans les deux champs',\n    path: ['confirmPassword'],\n  });\n\n/**\n *\n */\ntype ResetPasswordForm = z.infer<typeof resetPasswordSchema>;\n\n/**\n *\n */\nexport default function /**\n * Reset password page function.\n */ /**\n * Reset password page function.\n */\n\nResetPasswordPage() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [resetComplete, setResetComplete] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [token, setToken] = useState<string | null>(null);\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n\n  const form = useForm<ResetPasswordForm>({\n    resolver: zodResolver(resetPasswordSchema),\n    defaultValues: {\n      password: '',\n      confirmPassword: '',\n    },\n  });\n\n  // Extract token from URL parameters\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const tokenParam = urlParams.get('token'); /**\n     * If function.\n     * @param !tokenParam - !tokenParam parameter.\n     */ /**\n     * If function.\n     * @param !tokenParam - !tokenParam parameter.\n     */\n\n    if (!tokenParam) {\n      toast({\n        title: 'Token manquant',\n        description: 'Le lien de réinitialisation est invalide ou manquant.',\n        variant: 'destructive',\n      });\n      navigate('/login');\n      return;\n    }\n\n    setToken(tokenParam);\n  }, [navigate, toast]);\n\n  const onSubmit = async (_data: ResetPasswordForm) => {\n    /**\n     * If function.\n     * @param !token - !token parameter.\n     */ /**\n     * If function.\n     * @param !token - !token parameter.\n     */\n\n    if (!token) {\n      toast({\n        title: 'Erreur',\n        description: 'Token de réinitialisation manquant.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      await apiRequest('POST', '/api/auth/reset-password', {\n        token,\n        password: _data.password,\n      });\n\n      setResetComplete(true);\n      toast({\n        title: 'Mot de passe réinitialisé',\n        description: 'Votre mot de passe a été mis à jour avec succès.',\n      });\n    } catch (_error: unknown) {\n      /**\n       * Catch function.\n       * @param error - Error object.\n       */ /**\n       * Catch function.\n       * @param error - Error object.\n       */\n\n      let errorMessage = 'Une erreur est survenue lors de la réinitialisation du mot de passe.'; /**\n       * If function.\n       * @param error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' - error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' parameter.\n       */ /**\n       * If function.\n       * @param error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' - error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' parameter.\n       */\n\n      if ((_error as any).code === 'INVALID_TOKEN' || (_error as any).code === 'TOKEN_EXPIRED') {\n        errorMessage =\n          'Le lien de réinitialisation est invalide ou expiré. Veuillez demander un nouveau lien.';\n      } else if ((_error as any).code === 'TOKEN_ALREADY_USED') {\n        /**\n         * If function.\n         * @param error.code === 'TOKEN_ALREADY_USED' - error.code === 'TOKEN_ALREADY_USED' parameter.\n         */ /**\n         * If function.\n         * @param error.code === 'TOKEN_ALREADY_USED' - error.code === 'TOKEN_ALREADY_USED' parameter.\n         */\n\n        errorMessage = 'Ce lien de réinitialisation a déjà été utilisé.';\n      } else if ((_error as any).code === 'PASSWORD_TOO_SHORT') {\n        /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_SHORT' - error.code === 'PASSWORD_TOO_SHORT' parameter.\n         */ /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_SHORT' - error.code === 'PASSWORD_TOO_SHORT' parameter.\n         */\n\n        errorMessage = 'Le mot de passe doit contenir au moins 8 caractères.';\n      } else if ((_error as any).code === 'PASSWORD_TOO_WEAK') {\n        /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_WEAK' - error.code === 'PASSWORD_TOO_WEAK' parameter.\n         */ /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_WEAK' - error.code === 'PASSWORD_TOO_WEAK' parameter.\n         */\n\n        errorMessage =\n          'Le mot de passe doit contenir au moins une majuscule, une minuscule et un chiffre.';\n      }\n\n      toast({\n        title: 'Erreur',\n        description: errorMessage,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }; /**\n   * If function.\n   * @param resetComplete - ResetComplete parameter.\n   */ /**\n   * If function.\n   * @param resetComplete - ResetComplete parameter.\n   */\n\n  if (resetComplete) {\n    return (\n      <div className='min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800'>\n        <Card className='w-full max-w-md'>\n          <CardHeader className='text-center'>\n            <div className='mx-auto w-12 h-12 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mb-4'>\n              <CheckCircle className='w-6 h-6 text-green-600 dark:text-green-400' />\n            </div>\n            <CardTitle className='text-2xl font-bold'>Mot de passe réinitialisé</CardTitle>\n            <CardDescription>\n              Votre mot de passe a été mis à jour avec succès. Vous pouvez maintenant vous connecter\n              avec votre nouveau mot de passe.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Button asChild className='w-full'>\n              <Link href='/login'>Se connecter</Link>\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } /**\n   * If function.\n   * @param !token - !token parameter.\n   */ /**\n   * If function.\n   * @param !token - !token parameter.\n   */\n\n  if (!token) {\n    return (\n      <div className='min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800'>\n        <Card className='w-full max-w-md'>\n          <CardHeader className='text-center'>\n            <CardTitle className='text-2xl font-bold'>Lien invalide</CardTitle>\n            <CardDescription>Le lien de réinitialisation est invalide ou manquant.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className='space-y-4'>\n              <Button asChild className='w-full'>\n                <Link href='/forgot-password'>Demander un nouveau lien</Link>\n              </Button>\n              <Button variant='ghost' asChild className='w-full'>\n                <Link href='/login'>\n                  <ArrowLeft className='w-4 h-4 mr-2' />\n                  Retour à la connexion\n                </Link>\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className='min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800'>\n      <Card className='w-full max-w-md'>\n        <CardHeader className='text-center'>\n          <CardTitle className='text-2xl font-bold'>Réinitialiser le mot de passe</CardTitle>\n          <CardDescription>Entrez votre nouveau mot de passe</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n              <FormField\n                control={form.control}\n                name='password'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Nouveau mot de passe</FormLabel>\n                    <FormControl>\n                      <div className='relative'>\n                        <Input\n                          type={showPassword ? 'text' : 'password'}\n                          placeholder='Entrez votre nouveau mot de passe'\n                          className='pr-10'\n                          data-testid='input-password'\n                          {...field}\n                        />\n                        <Button\n                          type='button'\n                          variant='ghost'\n                          size='sm'\n                          className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                          onClick={() => setShowPassword(!showPassword)}\n                          data-testid='button-toggle-password'\n                        >\n                          {showPassword ? (\n                            <EyeOff className='h-4 w-4 text-gray-400' />\n                          ) : (\n                            <Eye className='h-4 w-4 text-gray-400' />\n                          )}\n                          <span className='sr-only'>\n                            {showPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n                          </span>\n                        </Button>\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='confirmPassword'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Confirmer le mot de passe</FormLabel>\n                    <FormControl>\n                      <div className='relative'>\n                        <Input\n                          type={showConfirmPassword ? 'text' : 'password'}\n                          placeholder='Confirmez votre nouveau mot de passe'\n                          className='pr-10'\n                          data-testid='input-confirm-password'\n                          {...field}\n                        />\n                        <Button\n                          type='button'\n                          variant='ghost'\n                          size='sm'\n                          className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                          data-testid='button-toggle-confirm-password'\n                        >\n                          {showConfirmPassword ? (\n                            <EyeOff className='h-4 w-4 text-gray-400' />\n                          ) : (\n                            <Eye className='h-4 w-4 text-gray-400' />\n                          )}\n                          <span className='sr-only'>\n                            {showConfirmPassword\n                              ? 'Masquer le mot de passe'\n                              : 'Afficher le mot de passe'}\n                          </span>\n                        </Button>\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <Button type='submit' className='w-full' disabled={isSubmitting}>\n                {isSubmitting ? 'Réinitialisation...' : 'Réinitialiser le mot de passe'}\n              </Button>\n\n              <div className='text-center'>\n                <Button variant='ghost' asChild>\n                  <Link href='/login'>\n                    <ArrowLeft className='w-4 h-4 mr-2' />\n                    Retour à la connexion\n                  </Link>\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}