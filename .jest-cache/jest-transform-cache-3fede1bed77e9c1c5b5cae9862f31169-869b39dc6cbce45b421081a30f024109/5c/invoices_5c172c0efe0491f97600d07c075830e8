bbc5d273c5246b6df3c0ced5ed668788
"use strict";

/* istanbul ignore next */
function cov_t8lm8wb04() {
  var path = "/home/runner/workspace/client/src/pages/manager/invoices.tsx";
  var hash = "a3ef06baddce6011f5fbdb6c7b87c5f2b5526c42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/pages/manager/invoices.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 27
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "6": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "7": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "8": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "9": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "10": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "11": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "12": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "13": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "14": {
        start: {
          line: 16,
          column: 32
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "15": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 54
        }
      },
      "16": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 50
        }
      },
      "17": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "18": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 71
        }
      },
      "19": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "20": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 42,
          column: 6
        }
      },
      "21": {
        start: {
          line: 43,
          column: 52
        },
        end: {
          line: 43,
          column: 80
        }
      },
      "22": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "23": {
        start: {
          line: 46,
          column: 90
        },
        end: {
          line: 52,
          column: 6
        }
      },
      "24": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 49,
          column: 89
        }
      },
      "25": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "26": {
        start: {
          line: 54,
          column: 90
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "27": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "28": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "29": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 61
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "31": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 63
        }
      },
      "32": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "33": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 49
        }
      },
      "34": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "35": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 63
        }
      },
      "36": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 90
        }
      },
      "37": {
        start: {
          line: 71,
          column: 29
        },
        end: {
          line: 71,
          column: 73
        }
      },
      "38": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "39": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 84
        }
      },
      "40": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 35
        }
      },
      "41": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "42": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "43": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "44": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "45": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 27
        }
      },
      "46": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 32
        }
      },
      "47": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "48": {
        start: {
          line: 88,
          column: 31
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "49": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "50": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 89,
          column: 55
        }
      },
      "51": {
        start: {
          line: 91,
          column: 30
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "52": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 97,
          column: 12
        }
      },
      "53": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "54": {
        start: {
          line: 95,
          column: 44
        },
        end: {
          line: 95,
          column: 60
        }
      },
      "55": {
        start: {
          line: 99,
          column: 34
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "56": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 100,
          column: 57
        }
      },
      "57": {
        start: {
          line: 100,
          column: 49
        },
        end: {
          line: 100,
          column: 56
        }
      },
      "58": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 12
        }
      },
      "59": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "60": {
        start: {
          line: 106,
          column: 33
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "61": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "62": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 32
        }
      },
      "63": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "64": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 32
        }
      },
      "65": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "66": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 114,
          column: 75
        }
      },
      "67": {
        start: {
          line: 114,
          column: 45
        },
        end: {
          line: 114,
          column: 74
        }
      },
      "68": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 48
        }
      },
      "69": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 49
        }
      },
      "70": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 48
        }
      },
      "71": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "72": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 41
        }
      },
      "73": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 39
        }
      },
      "74": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 50
        }
      },
      "75": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 75
        }
      },
      "76": {
        start: {
          line: 124,
          column: 60
        },
        end: {
          line: 124,
          column: 73
        }
      },
      "77": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "78": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 645
        }
      },
      "79": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "80": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 701
        }
      },
      "81": {
        start: {
          line: 132,
          column: 569
        },
        end: {
          line: 132,
          column: 593
        }
      },
      "82": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 138,
          column: 3607
        }
      },
      "83": {
        start: {
          line: 134,
          column: 1225
        },
        end: {
          line: 134,
          column: 1264
        }
      },
      "84": {
        start: {
          line: 135,
          column: 97
        },
        end: {
          line: 135,
          column: 202
        }
      },
      "85": {
        start: {
          line: 135,
          column: 598
        },
        end: {
          line: 135,
          column: 638
        }
      },
      "86": {
        start: {
          line: 135,
          column: 1561
        },
        end: {
          line: 135,
          column: 1594
        }
      },
      "87": {
        start: {
          line: 135,
          column: 1910
        },
        end: {
          line: 135,
          column: 2132
        }
      },
      "88": {
        start: {
          line: 135,
          column: 3605
        },
        end: {
          line: 135,
          column: 4077
        }
      },
      "89": {
        start: {
          line: 135,
          column: 3835
        },
        end: {
          line: 135,
          column: 3865
        }
      },
      "90": {
        start: {
          line: 136,
          column: 76
        },
        end: {
          line: 136,
          column: 103
        }
      },
      "91": {
        start: {
          line: 137,
          column: 76
        },
        end: {
          line: 137,
          column: 139
        }
      },
      "92": {
        start: {
          line: 138,
          column: 91
        },
        end: {
          line: 138,
          column: 117
        }
      },
      "93": {
        start: {
          line: 138,
          column: 328
        },
        end: {
          line: 138,
          column: 372
        }
      },
      "94": {
        start: {
          line: 138,
          column: 1385
        },
        end: {
          line: 138,
          column: 1410
        }
      },
      "95": {
        start: {
          line: 138,
          column: 2435
        },
        end: {
          line: 138,
          column: 2605
        }
      },
      "96": {
        start: {
          line: 138,
          column: 2528
        },
        end: {
          line: 138,
          column: 2590
        }
      },
      "97": {
        start: {
          line: 138,
          column: 3406
        },
        end: {
          line: 138,
          column: 3576
        }
      },
      "98": {
        start: {
          line: 138,
          column: 3499
        },
        end: {
          line: 138,
          column: 3561
        }
      }
    },
    fnMap: {
      "0": {
        name: "Invoices",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 17
          }
        },
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 36
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 18
          }
        },
        loc: {
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 56,
            column: 18
          }
        },
        loc: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 43
          },
          end: {
            line: 80,
            column: 44
          }
        },
        loc: {
          start: {
            line: 80,
            column: 61
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 88,
            column: 32
          }
        },
        loc: {
          start: {
            line: 88,
            column: 47
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 20
          }
        },
        loc: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 55
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 91,
            column: 31
          }
        },
        loc: {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 92,
            column: 19
          },
          end: {
            line: 92,
            column: 20
          }
        },
        loc: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 92
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 95,
            column: 37
          },
          end: {
            line: 95,
            column: 38
          }
        },
        loc: {
          start: {
            line: 95,
            column: 44
          },
          end: {
            line: 95,
            column: 60
          }
        },
        line: 95
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 99,
            column: 34
          },
          end: {
            line: 99,
            column: 35
          }
        },
        loc: {
          start: {
            line: 99,
            column: 40
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 99
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 42
          },
          end: {
            line: 100,
            column: 43
          }
        },
        loc: {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 56
          }
        },
        line: 100
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 101,
            column: 20
          }
        },
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 106,
            column: 34
          }
        },
        loc: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 106
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 39
          }
        },
        loc: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 114,
            column: 74
          }
        },
        line: 114
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 120,
            column: 28
          }
        },
        loc: {
          start: {
            line: 120,
            column: 33
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 120
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 124,
            column: 50
          },
          end: {
            line: 124,
            column: 51
          }
        },
        loc: {
          start: {
            line: 124,
            column: 60
          },
          end: {
            line: 124,
            column: 73
          }
        },
        line: 124
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 132,
            column: 563
          },
          end: {
            line: 132,
            column: 564
          }
        },
        loc: {
          start: {
            line: 132,
            column: 569
          },
          end: {
            line: 132,
            column: 593
          }
        },
        line: 132
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 134,
            column: 1214
          },
          end: {
            line: 134,
            column: 1215
          }
        },
        loc: {
          start: {
            line: 134,
            column: 1225
          },
          end: {
            line: 134,
            column: 1264
          }
        },
        line: 134
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 135,
            column: 82
          },
          end: {
            line: 135,
            column: 83
          }
        },
        loc: {
          start: {
            line: 135,
            column: 97
          },
          end: {
            line: 135,
            column: 202
          }
        },
        line: 135
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 135,
            column: 587
          },
          end: {
            line: 135,
            column: 588
          }
        },
        loc: {
          start: {
            line: 135,
            column: 598
          },
          end: {
            line: 135,
            column: 638
          }
        },
        line: 135
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 135,
            column: 1550
          },
          end: {
            line: 135,
            column: 1551
          }
        },
        loc: {
          start: {
            line: 135,
            column: 1561
          },
          end: {
            line: 135,
            column: 1594
          }
        },
        line: 135
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 135,
            column: 1899
          },
          end: {
            line: 135,
            column: 1900
          }
        },
        loc: {
          start: {
            line: 135,
            column: 1910
          },
          end: {
            line: 135,
            column: 2132
          }
        },
        line: 135
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 135,
            column: 3593
          },
          end: {
            line: 135,
            column: 3594
          }
        },
        loc: {
          start: {
            line: 135,
            column: 3605
          },
          end: {
            line: 135,
            column: 4077
          }
        },
        line: 135
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 135,
            column: 3829
          },
          end: {
            line: 135,
            column: 3830
          }
        },
        loc: {
          start: {
            line: 135,
            column: 3835
          },
          end: {
            line: 135,
            column: 3865
          }
        },
        line: 135
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 135,
            column: 5061
          },
          end: {
            line: 135,
            column: 5062
          }
        },
        loc: {
          start: {
            line: 135,
            column: 5067
          },
          end: {
            line: 138,
            column: 73
          }
        },
        line: 135
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 138,
            column: 85
          },
          end: {
            line: 138,
            column: 86
          }
        },
        loc: {
          start: {
            line: 138,
            column: 91
          },
          end: {
            line: 138,
            column: 117
          }
        },
        line: 138
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 138,
            column: 312
          },
          end: {
            line: 138,
            column: 313
          }
        },
        loc: {
          start: {
            line: 138,
            column: 328
          },
          end: {
            line: 138,
            column: 372
          }
        },
        line: 138
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 138,
            column: 1379
          },
          end: {
            line: 138,
            column: 1380
          }
        },
        loc: {
          start: {
            line: 138,
            column: 1385
          },
          end: {
            line: 138,
            column: 1410
          }
        },
        line: 138
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 138,
            column: 2421
          },
          end: {
            line: 138,
            column: 2422
          }
        },
        loc: {
          start: {
            line: 138,
            column: 2435
          },
          end: {
            line: 138,
            column: 2605
          }
        },
        line: 138
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 138,
            column: 2522
          },
          end: {
            line: 138,
            column: 2523
          }
        },
        loc: {
          start: {
            line: 138,
            column: 2528
          },
          end: {
            line: 138,
            column: 2590
          }
        },
        line: 138
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 138,
            column: 3392
          },
          end: {
            line: 138,
            column: 3393
          }
        },
        loc: {
          start: {
            line: 138,
            column: 3406
          },
          end: {
            line: 138,
            column: 3576
          }
        },
        line: 138
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 138,
            column: 3493
          },
          end: {
            line: 138,
            column: 3494
          }
        },
        loc: {
          start: {
            line: 138,
            column: 3499
          },
          end: {
            line: 138,
            column: 3561
          }
        },
        line: 138
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 46,
            column: 32
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 74
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 35
          }
        }, {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 61,
            column: 68
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 60
          },
          end: {
            line: 70,
            column: 83
          }
        }, {
          start: {
            line: 70,
            column: 86
          },
          end: {
            line: 70,
            column: 88
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 21
          },
          end: {
            line: 78,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 21
          },
          end: {
            line: 78,
            column: 42
          }
        }, {
          start: {
            line: 78,
            column: 46
          },
          end: {
            line: 78,
            column: 48
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 81,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 81,
            column: 40
          }
        }, {
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 81,
            column: 54
          }
        }],
        line: 81
      },
      "11": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 96,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 18
          },
          end: {
            line: 95,
            column: 61
          }
        }, {
          start: {
            line: 96,
            column: 18
          },
          end: {
            line: 96,
            column: 46
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 67
          },
          end: {
            line: 103,
            column: 69
          }
        }, {
          start: {
            line: 103,
            column: 72
          },
          end: {
            line: 103,
            column: 86
          }
        }],
        line: 103
      },
      "14": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "17": {
        loc: {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 31
          }
        }, {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 47
          }
        }],
        line: 115
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "19": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "20": {
        loc: {
          start: {
            line: 134,
            column: 1544
          },
          end: {
            line: 135,
            column: 204
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 1544
          },
          end: {
            line: 134,
            column: 1568
          }
        }, {
          start: {
            line: 135,
            column: 68
          },
          end: {
            line: 135,
            column: 204
          }
        }],
        line: 134
      },
      "21": {
        loc: {
          start: {
            line: 135,
            column: 1998
          },
          end: {
            line: 135,
            column: 2122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 1998
          },
          end: {
            line: 135,
            column: 2018
          }
        }, {
          start: {
            line: 135,
            column: 2023
          },
          end: {
            line: 135,
            column: 2121
          }
        }],
        line: 135
      },
      "22": {
        loc: {
          start: {
            line: 135,
            column: 2642
          },
          end: {
            line: 135,
            column: 2696
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 2642
          },
          end: {
            line: 135,
            column: 2669
          }
        }, {
          start: {
            line: 135,
            column: 2673
          },
          end: {
            line: 135,
            column: 2696
          }
        }],
        line: 135
      },
      "23": {
        loc: {
          start: {
            line: 138,
            column: 145
          },
          end: {
            line: 138,
            column: 3594
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 168
          },
          end: {
            line: 138,
            column: 375
          }
        }, {
          start: {
            line: 138,
            column: 379
          },
          end: {
            line: 138,
            column: 3594
          }
        }],
        line: 138
      },
      "24": {
        loc: {
          start: {
            line: 138,
            column: 251
          },
          end: {
            line: 138,
            column: 292
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 278
          },
          end: {
            line: 138,
            column: 287
          }
        }, {
          start: {
            line: 138,
            column: 290
          },
          end: {
            line: 138,
            column: 292
          }
        }],
        line: 138
      },
      "25": {
        loc: {
          start: {
            line: 138,
            column: 379
          },
          end: {
            line: 138,
            column: 3594
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 392
          },
          end: {
            line: 138,
            column: 767
          }
        }, {
          start: {
            line: 138,
            column: 771
          },
          end: {
            line: 138,
            column: 3594
          }
        }],
        line: 138
      },
      "26": {
        loc: {
          start: {
            line: 138,
            column: 771
          },
          end: {
            line: 138,
            column: 3594
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 796
          },
          end: {
            line: 138,
            column: 1578
          }
        }, {
          start: {
            line: 138,
            column: 1583
          },
          end: {
            line: 138,
            column: 3593
          }
        }],
        line: 138
      },
      "27": {
        loc: {
          start: {
            line: 138,
            column: 1651
          },
          end: {
            line: 138,
            column: 2618
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 1651
          },
          end: {
            line: 138,
            column: 1677
          }
        }, {
          start: {
            line: 138,
            column: 1681
          },
          end: {
            line: 138,
            column: 1718
          }
        }, {
          start: {
            line: 138,
            column: 1723
          },
          end: {
            line: 138,
            column: 2617
          }
        }],
        line: 138
      },
      "28": {
        loc: {
          start: {
            line: 138,
            column: 2620
          },
          end: {
            line: 138,
            column: 3589
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 2620
          },
          end: {
            line: 138,
            column: 2647
          }
        }, {
          start: {
            line: 138,
            column: 2651
          },
          end: {
            line: 138,
            column: 2689
          }
        }, {
          start: {
            line: 138,
            column: 2694
          },
          end: {
            line: 138,
            column: 3588
          }
        }],
        line: 138
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/pages/manager/invoices.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/pages/manager/invoices.tsx"],
      sourcesContent: ["import { useState } from 'react';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport {\n  FileText,\n  Plus,\n  Filter,\n  Calendar,\n  Building as BuildingIcon,\n  ChevronDown,\n  Receipt,\n} from 'lucide-react';\nimport { BuildingSelectionGrid } from '@/components/BuildingSelectionGrid';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { cn } from '@/lib/utils';\nimport type { Building } from '@shared/schema';\nimport type { Invoice } from '@shared/schemas/invoices';\n\n// Import new modern components\nimport { InvoiceForm, InvoiceCard } from '@/components/invoice-management';\n\ninterface InvoiceFilters {\n  buildingId: string;\n  paymentType: string;\n  year: string;\n  months: string[];\n}\n\nconst MONTHS = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\n\nexport default function Invoices() {\n  const [filters, setFilters] = useState<InvoiceFilters>({\n    buildingId: '',\n    paymentType: '',\n    year: new Date().getFullYear().toString(),\n    months: [],\n  });\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\n  const queryClient = useQueryClient();\n\n  // Fetch buildings for filter dropdown\n  const {\n    data: buildings = [],\n    isLoading: buildingsLoading,\n    error: buildingsError,\n  } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/buildings');\n      return await response.json();\n    },\n  });\n\n  // Fetch invoices based on filters\n  const { data: invoicesResponse = { success: true, data: [], count: 0 }, isLoading } = useQuery<{\n    success: boolean;\n    data: Invoice[];\n    count: number;\n  }>({\n    queryKey: ['/api/invoices', filters],\n    queryFn: async () => {\n      const params = new URLSearchParams();\n      \n      if (filters.buildingId) {\n        params.set('buildingId', filters.buildingId);\n      }\n      if (filters.paymentType && filters.paymentType !== 'all') {\n        params.set('paymentType', filters.paymentType);\n      }\n      if (filters.year) {\n        params.set('year', filters.year);\n      }\n      if (filters.months.length > 0) {\n        params.set('months', filters.months.join(','));\n      }\n\n      const url = `/api/invoices${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await fetch(url, { credentials: 'include' });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch invoices: ${response.statusText}`);\n      }\n\n      return response.json();\n    },\n  });\n\n  const invoices = invoicesResponse.data || [];\n\n  // Group invoices by payment type\n  const invoicesByType = invoices.reduce((acc: Record<string, Invoice[]>, invoice: Invoice) => {\n    const type = invoice.paymentType || 'one-time';\n    if (!acc[type]) {\n      acc[type] = [];\n    }\n    acc[type].push(invoice);\n    return acc;\n  }, {});\n\n  const handleFilterChange = (key: keyof InvoiceFilters, value: string | string[]) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleMonthToggle = (monthValue: string) => {\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.includes(monthValue)\n        ? prev.months.filter((m) => m !== monthValue)\n        : [...prev.months, monthValue],\n    }));\n  };\n\n  const handleAllMonthsToggle = () => {\n    const allMonthValues = MONTHS.map((m) => m.value);\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.length === allMonthValues.length ? [] : allMonthValues,\n    }));\n  };\n\n  const getMonthsDisplayText = () => {\n    if (filters.months.length === 0) {\n      return 'All months';\n    }\n    if (filters.months.length === MONTHS.length) {\n      return 'All months';\n    }\n    if (filters.months.length === 1) {\n      const month = MONTHS.find((m) => m.value === filters.months[0]);\n      return month?.label || 'All months';\n    }\n    return `${filters.months.length} months`;\n  };\n\n  const currentYear = new Date().getFullYear();\n  const getYearOptions = () => {\n    const startYear = currentYear - 3;\n    const endYear = currentYear + 3;\n    const totalYears = endYear - startYear + 1;\n    return Array.from({ length: totalYears }, (_, i) => startYear + i);\n  };\n\n  // Show loading state while buildings are loading\n  if (buildingsLoading) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header title=\"Invoice Management\" subtitle=\"Modern AI-powered invoice processing and management\" />\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-500\">Loading buildings...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state if buildings failed to load\n  if (buildingsError) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header title=\"Invoice Management\" subtitle=\"Modern AI-powered invoice processing and management\" />\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <p className=\"text-red-500 mb-4\">Failed to load buildings</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      <Header title=\"Invoice Management\" subtitle=\"Modern AI-powered invoice processing and management\" />\n\n      <div className=\"flex-1 overflow-auto p-6\">\n        <div className=\"max-w-7xl mx-auto space-y-6\">\n          {/* Filters Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Filter className=\"w-5 h-5\" />\n                Filters\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"building-filter\" className=\"flex items-center gap-2\">\n                    <BuildingIcon className=\"w-4 h-4\" />\n                    Building\n                  </Label>\n                  <Select\n                    value={filters.buildingId}\n                    onValueChange={(value) => handleFilterChange('buildingId', value)}\n                  >\n                    <SelectTrigger id=\"building-filter\" data-testid=\"select-building-filter\">\n                      <SelectValue placeholder=\"Select building\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Array.isArray(buildings) &&\n                        buildings.map((building: Building) => (\n                          <SelectItem key={building.id} value={building.id}>\n                            {building.name}\n                          </SelectItem>\n                        ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"payment-type-filter\" className=\"flex items-center gap-2\">\n                    <Receipt className=\"w-4 h-4\" />\n                    Payment Type\n                  </Label>\n                  <Select\n                    value={filters.paymentType}\n                    onValueChange={(value) => handleFilterChange('paymentType', value)}\n                  >\n                    <SelectTrigger id=\"payment-type-filter\" data-testid=\"select-payment-type-filter\">\n                      <SelectValue placeholder=\"All types\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All types</SelectItem>\n                      <SelectItem value=\"one-time\">One-time</SelectItem>\n                      <SelectItem value=\"recurring\">Recurring</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"year-filter\" className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4\" />\n                    Year\n                  </Label>\n                  <Select\n                    value={filters.year}\n                    onValueChange={(value) => handleFilterChange('year', value)}\n                  >\n                    <SelectTrigger id=\"year-filter\" data-testid=\"select-year-filter\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent className=\"max-h-[300px] overflow-y-auto\">\n                      {getYearOptions().map((year) => (\n                        <SelectItem key={year} value={year.toString()}>\n                          {year}\n                          {year === currentYear && (\n                            <span className=\"ml-2 text-xs text-blue-500\">(Current)</span>\n                          )}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4\" />\n                    Months\n                  </Label>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          'w-full justify-between',\n                          filters.months.length === 0 && 'text-muted-foreground'\n                        )}\n                        data-testid=\"select-months-filter\"\n                      >\n                        {getMonthsDisplayText()}\n                        <ChevronDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-64 p-0\" align=\"start\">\n                      <div className=\"border-b p-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox\n                            id=\"all-months\"\n                            checked={filters.months.length === MONTHS.length}\n                            onCheckedChange={handleAllMonthsToggle}\n                          />\n                          <Label\n                            htmlFor=\"all-months\"\n                            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                          >\n                            All Months\n                          </Label>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-2 p-3\">\n                        {MONTHS.map((month) => (\n                          <div key={month.value} className=\"flex items-center space-x-2\">\n                            <Checkbox\n                              id={`month-${month.value}`}\n                              checked={filters.months.includes(month.value)}\n                              onCheckedChange={() => handleMonthToggle(month.value)}\n                            />\n                            <Label\n                              htmlFor={`month-${month.value}`}\n                              className=\"text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                            >\n                              {month.label}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label className=\"invisible\">Actions</Label>\n                  <Dialog open={showCreateDialog} onOpenChange={setShowCreateDialog}>\n                    <DialogTrigger asChild>\n                      <Button \n                        className=\"w-full\" \n                        disabled={!filters.buildingId}\n                        data-testid=\"button-create-invoice\"\n                      >\n                        <Plus className=\"w-4 h-4 mr-2\" />\n                        Create Invoice\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n                      <DialogHeader>\n                        <DialogTitle>Create New Invoice</DialogTitle>\n                      </DialogHeader>\n                      <InvoiceForm\n                        mode=\"create\"\n                        buildingId={filters.buildingId}\n                        onSuccess={() => {\n                          setShowCreateDialog(false);\n                          queryClient.invalidateQueries({ queryKey: ['/api/invoices'] });\n                        }}\n                        onCancel={() => setShowCreateDialog(false)}\n                      />\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Invoices Display */}\n          {!filters.buildingId ? (\n            <BuildingSelectionGrid\n              buildings={Array.isArray(buildings) ? buildings : []}\n              onBuildingSelect={(buildingId) => handleFilterChange('buildingId', buildingId)}\n            />\n          ) : isLoading ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p className=\"text-gray-500\">Loading invoices...</p>\n              </CardContent>\n            </Card>\n          ) : invoices.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Receipt className=\"w-16 h-16 mx-auto mb-4 text-muted-foreground\" />\n                <h3 className=\"text-lg font-semibold text-gray-600 mb-2\">No Invoices Found</h3>\n                <p className=\"text-gray-500 mb-4\">\n                  No invoices found for the selected filters. Create your first invoice to get started.\n                </p>\n                <Button onClick={() => setShowCreateDialog(true)} data-testid=\"button-create-first-invoice\">\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Create First Invoice\n                </Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"space-y-6\">\n              {/* One-time Invoices */}\n              {invoicesByType['one-time'] && invoicesByType['one-time'].length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <FileText className=\"w-5 h-5\" />\n                        One-time Invoices\n                        <Badge variant=\"secondary\">{invoicesByType['one-time'].length}</Badge>\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {invoicesByType['one-time'].map((invoice) => (\n                        <InvoiceCard \n                          key={invoice.id} \n                          invoice={invoice} \n                          onUpdate={() => queryClient.invalidateQueries({ queryKey: ['/api/invoices'] })}\n                        />\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Recurring Invoices */}\n              {invoicesByType['recurring'] && invoicesByType['recurring'].length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <Receipt className=\"w-5 h-5\" />\n                        Recurring Invoices\n                        <Badge variant=\"default\">{invoicesByType['recurring'].length}</Badge>\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {invoicesByType['recurring'].map((invoice) => (\n                        <InvoiceCard \n                          key={invoice.id} \n                          invoice={invoice} \n                          onUpdate={() => queryClient.invalidateQueries({ queryKey: ['/api/invoices'] })}\n                        />\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3ef06baddce6011f5fbdb6c7b87c5f2b5526c42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t8lm8wb04 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t8lm8wb04();
cov_t8lm8wb04().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_t8lm8wb04().s[1]++;
exports.default = Invoices;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[2]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[3]++, require("react"));
const header_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[4]++, require("@/components/layout/header"));
const card_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[5]++, require("@/components/ui/card"));
const badge_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[6]++, require("@/components/ui/badge"));
const button_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[7]++, require("@/components/ui/button"));
const select_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[8]++, require("@/components/ui/select"));
const label_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[9]++, require("@/components/ui/label"));
const dialog_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[10]++, require("@/components/ui/dialog"));
const checkbox_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[11]++, require("@/components/ui/checkbox"));
const popover_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[12]++, require("@/components/ui/popover"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[13]++, require("lucide-react"));
const BuildingSelectionGrid_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[14]++, require("@/components/BuildingSelectionGrid"));
const react_query_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[15]++, require("@tanstack/react-query"));
const queryClient_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[16]++, require("@/lib/queryClient"));
const utils_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[17]++, require("@/lib/utils"));
// Import new modern components
const invoice_management_1 =
/* istanbul ignore next */
(cov_t8lm8wb04().s[18]++, require("@/components/invoice-management"));
const MONTHS =
/* istanbul ignore next */
(cov_t8lm8wb04().s[19]++, [{
  value: '1',
  label: 'January'
}, {
  value: '2',
  label: 'February'
}, {
  value: '3',
  label: 'March'
}, {
  value: '4',
  label: 'April'
}, {
  value: '5',
  label: 'May'
}, {
  value: '6',
  label: 'June'
}, {
  value: '7',
  label: 'July'
}, {
  value: '8',
  label: 'August'
}, {
  value: '9',
  label: 'September'
}, {
  value: '10',
  label: 'October'
}, {
  value: '11',
  label: 'November'
}, {
  value: '12',
  label: 'December'
}]);
function Invoices() {
  /* istanbul ignore next */
  cov_t8lm8wb04().f[0]++;
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[20]++, (0, react_1.useState)({
    buildingId: '',
    paymentType: '',
    year: new Date().getFullYear().toString(),
    months: []
  }));
  const [showCreateDialog, setShowCreateDialog] =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[21]++, (0, react_1.useState)(false));
  const queryClient =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[22]++, (0, react_query_1.useQueryClient)());
  // Fetch buildings for filter dropdown
  const {
    data: buildings =
    /* istanbul ignore next */
    (cov_t8lm8wb04().b[0][0]++, []),
    isLoading: buildingsLoading,
    error: buildingsError
  } =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[23]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/buildings'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[1]++;
      const response =
      /* istanbul ignore next */
      (cov_t8lm8wb04().s[24]++, await (0, queryClient_1.apiRequest)('GET', '/api/buildings'));
      /* istanbul ignore next */
      cov_t8lm8wb04().s[25]++;
      return await response.json();
    }
  }));
  // Fetch invoices based on filters
  const {
    data: invoicesResponse =
    /* istanbul ignore next */
    (cov_t8lm8wb04().b[1][0]++, {
      success: true,
      data: [],
      count: 0
    }),
    isLoading
  } =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[26]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/invoices', filters],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[2]++;
      const params =
      /* istanbul ignore next */
      (cov_t8lm8wb04().s[27]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_t8lm8wb04().s[28]++;
      if (filters.buildingId) {
        /* istanbul ignore next */
        cov_t8lm8wb04().b[2][0]++;
        cov_t8lm8wb04().s[29]++;
        params.set('buildingId', filters.buildingId);
      } else
      /* istanbul ignore next */
      {
        cov_t8lm8wb04().b[2][1]++;
      }
      cov_t8lm8wb04().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_t8lm8wb04().b[4][0]++, filters.paymentType) &&
      /* istanbul ignore next */
      (cov_t8lm8wb04().b[4][1]++, filters.paymentType !== 'all')) {
        /* istanbul ignore next */
        cov_t8lm8wb04().b[3][0]++;
        cov_t8lm8wb04().s[31]++;
        params.set('paymentType', filters.paymentType);
      } else
      /* istanbul ignore next */
      {
        cov_t8lm8wb04().b[3][1]++;
      }
      cov_t8lm8wb04().s[32]++;
      if (filters.year) {
        /* istanbul ignore next */
        cov_t8lm8wb04().b[5][0]++;
        cov_t8lm8wb04().s[33]++;
        params.set('year', filters.year);
      } else
      /* istanbul ignore next */
      {
        cov_t8lm8wb04().b[5][1]++;
      }
      cov_t8lm8wb04().s[34]++;
      if (filters.months.length > 0) {
        /* istanbul ignore next */
        cov_t8lm8wb04().b[6][0]++;
        cov_t8lm8wb04().s[35]++;
        params.set('months', filters.months.join(','));
      } else
      /* istanbul ignore next */
      {
        cov_t8lm8wb04().b[6][1]++;
      }
      const url =
      /* istanbul ignore next */
      (cov_t8lm8wb04().s[36]++, `/api/invoices${params.toString() ?
      /* istanbul ignore next */
      (cov_t8lm8wb04().b[7][0]++, '?' + params.toString()) :
      /* istanbul ignore next */
      (cov_t8lm8wb04().b[7][1]++, '')}`);
      const response =
      /* istanbul ignore next */
      (cov_t8lm8wb04().s[37]++, await fetch(url, {
        credentials: 'include'
      }));
      /* istanbul ignore next */
      cov_t8lm8wb04().s[38]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_t8lm8wb04().b[8][0]++;
        cov_t8lm8wb04().s[39]++;
        throw new Error(`Failed to fetch invoices: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_t8lm8wb04().b[8][1]++;
      }
      cov_t8lm8wb04().s[40]++;
      return response.json();
    }
  }));
  const invoices =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[41]++,
  /* istanbul ignore next */
  (cov_t8lm8wb04().b[9][0]++, invoicesResponse.data) ||
  /* istanbul ignore next */
  (cov_t8lm8wb04().b[9][1]++, []));
  // Group invoices by payment type
  const invoicesByType =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[42]++, invoices.reduce((acc, invoice) => {
    /* istanbul ignore next */
    cov_t8lm8wb04().f[3]++;
    const type =
    /* istanbul ignore next */
    (cov_t8lm8wb04().s[43]++,
    /* istanbul ignore next */
    (cov_t8lm8wb04().b[10][0]++, invoice.paymentType) ||
    /* istanbul ignore next */
    (cov_t8lm8wb04().b[10][1]++, 'one-time'));
    /* istanbul ignore next */
    cov_t8lm8wb04().s[44]++;
    if (!acc[type]) {
      /* istanbul ignore next */
      cov_t8lm8wb04().b[11][0]++;
      cov_t8lm8wb04().s[45]++;
      acc[type] = [];
    } else
    /* istanbul ignore next */
    {
      cov_t8lm8wb04().b[11][1]++;
    }
    cov_t8lm8wb04().s[46]++;
    acc[type].push(invoice);
    /* istanbul ignore next */
    cov_t8lm8wb04().s[47]++;
    return acc;
  }, {}));
  /* istanbul ignore next */
  cov_t8lm8wb04().s[48]++;
  const handleFilterChange = (key, value) => {
    /* istanbul ignore next */
    cov_t8lm8wb04().f[4]++;
    cov_t8lm8wb04().s[49]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[5]++;
      cov_t8lm8wb04().s[50]++;
      return {
        ...prev,
        [key]: value
      };
    });
  };
  /* istanbul ignore next */
  cov_t8lm8wb04().s[51]++;
  const handleMonthToggle = monthValue => {
    /* istanbul ignore next */
    cov_t8lm8wb04().f[6]++;
    cov_t8lm8wb04().s[52]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[7]++;
      cov_t8lm8wb04().s[53]++;
      return {
        ...prev,
        months: prev.months.includes(monthValue) ?
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[12][0]++, prev.months.filter(m => {
          /* istanbul ignore next */
          cov_t8lm8wb04().f[8]++;
          cov_t8lm8wb04().s[54]++;
          return m !== monthValue;
        })) :
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[12][1]++, [...prev.months, monthValue])
      };
    });
  };
  /* istanbul ignore next */
  cov_t8lm8wb04().s[55]++;
  const handleAllMonthsToggle = () => {
    /* istanbul ignore next */
    cov_t8lm8wb04().f[9]++;
    const allMonthValues =
    /* istanbul ignore next */
    (cov_t8lm8wb04().s[56]++, MONTHS.map(m => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[10]++;
      cov_t8lm8wb04().s[57]++;
      return m.value;
    }));
    /* istanbul ignore next */
    cov_t8lm8wb04().s[58]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[11]++;
      cov_t8lm8wb04().s[59]++;
      return {
        ...prev,
        months: prev.months.length === allMonthValues.length ?
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[13][0]++, []) :
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[13][1]++, allMonthValues)
      };
    });
  };
  /* istanbul ignore next */
  cov_t8lm8wb04().s[60]++;
  const getMonthsDisplayText = () => {
    /* istanbul ignore next */
    cov_t8lm8wb04().f[12]++;
    cov_t8lm8wb04().s[61]++;
    if (filters.months.length === 0) {
      /* istanbul ignore next */
      cov_t8lm8wb04().b[14][0]++;
      cov_t8lm8wb04().s[62]++;
      return 'All months';
    } else
    /* istanbul ignore next */
    {
      cov_t8lm8wb04().b[14][1]++;
    }
    cov_t8lm8wb04().s[63]++;
    if (filters.months.length === MONTHS.length) {
      /* istanbul ignore next */
      cov_t8lm8wb04().b[15][0]++;
      cov_t8lm8wb04().s[64]++;
      return 'All months';
    } else
    /* istanbul ignore next */
    {
      cov_t8lm8wb04().b[15][1]++;
    }
    cov_t8lm8wb04().s[65]++;
    if (filters.months.length === 1) {
      /* istanbul ignore next */
      cov_t8lm8wb04().b[16][0]++;
      const month =
      /* istanbul ignore next */
      (cov_t8lm8wb04().s[66]++, MONTHS.find(m => {
        /* istanbul ignore next */
        cov_t8lm8wb04().f[13]++;
        cov_t8lm8wb04().s[67]++;
        return m.value === filters.months[0];
      }));
      /* istanbul ignore next */
      cov_t8lm8wb04().s[68]++;
      return /* istanbul ignore next */(cov_t8lm8wb04().b[17][0]++, month?.label) ||
      /* istanbul ignore next */
      (cov_t8lm8wb04().b[17][1]++, 'All months');
    } else
    /* istanbul ignore next */
    {
      cov_t8lm8wb04().b[16][1]++;
    }
    cov_t8lm8wb04().s[69]++;
    return `${filters.months.length} months`;
  };
  const currentYear =
  /* istanbul ignore next */
  (cov_t8lm8wb04().s[70]++, new Date().getFullYear());
  /* istanbul ignore next */
  cov_t8lm8wb04().s[71]++;
  const getYearOptions = () => {
    /* istanbul ignore next */
    cov_t8lm8wb04().f[14]++;
    const startYear =
    /* istanbul ignore next */
    (cov_t8lm8wb04().s[72]++, currentYear - 3);
    const endYear =
    /* istanbul ignore next */
    (cov_t8lm8wb04().s[73]++, currentYear + 3);
    const totalYears =
    /* istanbul ignore next */
    (cov_t8lm8wb04().s[74]++, endYear - startYear + 1);
    /* istanbul ignore next */
    cov_t8lm8wb04().s[75]++;
    return Array.from({
      length: totalYears
    }, (_, i) => {
      /* istanbul ignore next */
      cov_t8lm8wb04().f[15]++;
      cov_t8lm8wb04().s[76]++;
      return startYear + i;
    });
  };
  // Show loading state while buildings are loading
  /* istanbul ignore next */
  cov_t8lm8wb04().s[77]++;
  if (buildingsLoading) {
    /* istanbul ignore next */
    cov_t8lm8wb04().b[18][0]++;
    cov_t8lm8wb04().s[78]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: "flex-1 flex flex-col overflow-hidden",
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: "Invoice Management",
        subtitle: "Modern AI-powered invoice processing and management"
      }), (0, jsx_runtime_1.jsx)("div", {
        className: "flex-1 flex items-center justify-center",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "text-center",
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"
          }), (0, jsx_runtime_1.jsx)("p", {
            className: "text-gray-500",
            children: "Loading buildings..."
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_t8lm8wb04().b[18][1]++;
  }
  // Show error state if buildings failed to load
  cov_t8lm8wb04().s[79]++;
  if (buildingsError) {
    /* istanbul ignore next */
    cov_t8lm8wb04().b[19][0]++;
    cov_t8lm8wb04().s[80]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: "flex-1 flex flex-col overflow-hidden",
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: "Invoice Management",
        subtitle: "Modern AI-powered invoice processing and management"
      }), (0, jsx_runtime_1.jsx)("div", {
        className: "flex-1 flex items-center justify-center",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "text-center",
          children: [(0, jsx_runtime_1.jsx)("p", {
            className: "text-red-500 mb-4",
            children: "Failed to load buildings"
          }), (0, jsx_runtime_1.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_t8lm8wb04().f[16]++;
              cov_t8lm8wb04().s[81]++;
              return window.location.reload();
            },
            className: "px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700",
            children: "Retry"
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_t8lm8wb04().b[19][1]++;
  }
  cov_t8lm8wb04().s[82]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: "flex-1 flex flex-col overflow-hidden",
    children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
      title: "Invoice Management",
      subtitle: "Modern AI-powered invoice processing and management"
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "flex-1 overflow-auto p-6",
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: "max-w-7xl mx-auto space-y-6",
        children: [(0, jsx_runtime_1.jsxs)(card_1.Card, {
          children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
            children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
              className: "flex items-center gap-2",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Filter, {
                className: "w-5 h-5"
              }), "Filters"]
            })
          }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
            children: (0, jsx_runtime_1.jsxs)("div", {
              className: "grid grid-cols-1 md:grid-cols-5 gap-4",
              children: [(0, jsx_runtime_1.jsxs)("div", {
                className: "space-y-2",
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  htmlFor: "building-filter",
                  className: "flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, {
                    className: "w-4 h-4"
                  }), "Building"]
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: filters.buildingId,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_t8lm8wb04().f[17]++;
                    cov_t8lm8wb04().s[83]++;
                    return handleFilterChange('buildingId', value);
                  },
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    id: "building-filter",
                    "data-testid": "select-building-filter",
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                      placeholder: "Select building"
                    })
                  }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                    children:
                    /* istanbul ignore next */
                    (cov_t8lm8wb04().b[20][0]++, Array.isArray(buildings)) &&
                    /* istanbul ignore next */
                    (cov_t8lm8wb04().b[20][1]++, buildings.map(building => {
                      /* istanbul ignore next */
                      cov_t8lm8wb04().f[18]++;
                      cov_t8lm8wb04().s[84]++;
                      return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: building.id,
                        children: building.name
                      }, building.id);
                    }))
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "space-y-2",
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  htmlFor: "payment-type-filter",
                  className: "flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Receipt, {
                    className: "w-4 h-4"
                  }), "Payment Type"]
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: filters.paymentType,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_t8lm8wb04().f[19]++;
                    cov_t8lm8wb04().s[85]++;
                    return handleFilterChange('paymentType', value);
                  },
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    id: "payment-type-filter",
                    "data-testid": "select-payment-type-filter",
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                      placeholder: "All types"
                    })
                  }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                    children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                      value: "all",
                      children: "All types"
                    }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                      value: "one-time",
                      children: "One-time"
                    }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                      value: "recurring",
                      children: "Recurring"
                    })]
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "space-y-2",
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  htmlFor: "year-filter",
                  className: "flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Calendar, {
                    className: "w-4 h-4"
                  }), "Year"]
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: filters.year,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_t8lm8wb04().f[20]++;
                    cov_t8lm8wb04().s[86]++;
                    return handleFilterChange('year', value);
                  },
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    id: "year-filter",
                    "data-testid": "select-year-filter",
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {})
                  }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                    className: "max-h-[300px] overflow-y-auto",
                    children: getYearOptions().map(year => {
                      /* istanbul ignore next */
                      cov_t8lm8wb04().f[21]++;
                      cov_t8lm8wb04().s[87]++;
                      return (0, jsx_runtime_1.jsxs)(select_1.SelectItem, {
                        value: year.toString(),
                        children: [year,
                        /* istanbul ignore next */
                        (cov_t8lm8wb04().b[21][0]++, year === currentYear) &&
                        /* istanbul ignore next */
                        (cov_t8lm8wb04().b[21][1]++, (0, jsx_runtime_1.jsx)("span", {
                          className: "ml-2 text-xs text-blue-500",
                          children: "(Current)"
                        }))]
                      }, year);
                    })
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "space-y-2",
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  className: "flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Calendar, {
                    className: "w-4 h-4"
                  }), "Months"]
                }), (0, jsx_runtime_1.jsxs)(popover_1.Popover, {
                  children: [(0, jsx_runtime_1.jsx)(popover_1.PopoverTrigger, {
                    asChild: true,
                    children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                      variant: "outline",
                      className: (0, utils_1.cn)('w-full justify-between',
                      /* istanbul ignore next */
                      (cov_t8lm8wb04().b[22][0]++, filters.months.length === 0) &&
                      /* istanbul ignore next */
                      (cov_t8lm8wb04().b[22][1]++, 'text-muted-foreground')),
                      "data-testid": "select-months-filter",
                      children: [getMonthsDisplayText(), (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, {
                        className: "ml-2 h-4 w-4 shrink-0 opacity-50"
                      })]
                    })
                  }), (0, jsx_runtime_1.jsxs)(popover_1.PopoverContent, {
                    className: "w-64 p-0",
                    align: "start",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "border-b p-3",
                      children: (0, jsx_runtime_1.jsxs)("div", {
                        className: "flex items-center space-x-2",
                        children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, {
                          id: "all-months",
                          checked: filters.months.length === MONTHS.length,
                          onCheckedChange: handleAllMonthsToggle
                        }), (0, jsx_runtime_1.jsx)(label_1.Label, {
                          htmlFor: "all-months",
                          className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                          children: "All Months"
                        })]
                      })
                    }), (0, jsx_runtime_1.jsx)("div", {
                      className: "grid grid-cols-2 gap-2 p-3",
                      children: MONTHS.map(month => {
                        /* istanbul ignore next */
                        cov_t8lm8wb04().f[22]++;
                        cov_t8lm8wb04().s[88]++;
                        return (0, jsx_runtime_1.jsxs)("div", {
                          className: "flex items-center space-x-2",
                          children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, {
                            id: `month-${month.value}`,
                            checked: filters.months.includes(month.value),
                            onCheckedChange: () => {
                              /* istanbul ignore next */
                              cov_t8lm8wb04().f[23]++;
                              cov_t8lm8wb04().s[89]++;
                              return handleMonthToggle(month.value);
                            }
                          }), (0, jsx_runtime_1.jsx)(label_1.Label, {
                            htmlFor: `month-${month.value}`,
                            className: "text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                            children: month.label
                          })]
                        }, month.value);
                      })
                    })]
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "space-y-2",
                children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                  className: "invisible",
                  children: "Actions"
                }), (0, jsx_runtime_1.jsxs)(dialog_1.Dialog, {
                  open: showCreateDialog,
                  onOpenChange: setShowCreateDialog,
                  children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTrigger, {
                    asChild: true,
                    children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                      className: "w-full",
                      disabled: !filters.buildingId,
                      "data-testid": "button-create-invoice",
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
                        className: "w-4 h-4 mr-2"
                      }), "Create Invoice"]
                    })
                  }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
                    className: "max-w-4xl max-h-[90vh] overflow-y-auto",
                    children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, {
                      children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
                        children: "Create New Invoice"
                      })
                    }), (0, jsx_runtime_1.jsx)(invoice_management_1.InvoiceForm, {
                      mode: "create",
                      buildingId: filters.buildingId,
                      onSuccess: () => {
                        /* istanbul ignore next */
                        cov_t8lm8wb04().f[24]++;
                        cov_t8lm8wb04().s[90]++;
                        setShowCreateDialog(false);
                        /* istanbul ignore next */
                        cov_t8lm8wb04().s[91]++;
                        queryClient.invalidateQueries({
                          queryKey: ['/api/invoices']
                        });
                      },
                      onCancel: () => {
                        /* istanbul ignore next */
                        cov_t8lm8wb04().f[25]++;
                        cov_t8lm8wb04().s[92]++;
                        return setShowCreateDialog(false);
                      }
                    })]
                  })]
                })]
              })]
            })
          })]
        }), !filters.buildingId ?
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[23][0]++, (0, jsx_runtime_1.jsx)(BuildingSelectionGrid_1.BuildingSelectionGrid, {
          buildings: Array.isArray(buildings) ?
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[24][0]++, buildings) :
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[24][1]++, []),
          onBuildingSelect: buildingId => {
            /* istanbul ignore next */
            cov_t8lm8wb04().f[26]++;
            cov_t8lm8wb04().s[93]++;
            return handleFilterChange('buildingId', buildingId);
          }
        })) :
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[23][1]++, isLoading ?
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[25][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
          children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
            className: "p-8 text-center",
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: "animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4"
            }), (0, jsx_runtime_1.jsx)("p", {
              className: "text-gray-500",
              children: "Loading invoices..."
            })]
          })
        })) :
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[25][1]++, invoices.length === 0 ?
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[26][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
          children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
            className: "p-8 text-center",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Receipt, {
              className: "w-16 h-16 mx-auto mb-4 text-muted-foreground"
            }), (0, jsx_runtime_1.jsx)("h3", {
              className: "text-lg font-semibold text-gray-600 mb-2",
              children: "No Invoices Found"
            }), (0, jsx_runtime_1.jsx)("p", {
              className: "text-gray-500 mb-4",
              children: "No invoices found for the selected filters. Create your first invoice to get started."
            }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
              onClick: () => {
                /* istanbul ignore next */
                cov_t8lm8wb04().f[27]++;
                cov_t8lm8wb04().s[94]++;
                return setShowCreateDialog(true);
              },
              "data-testid": "button-create-first-invoice",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
                className: "w-4 h-4 mr-2"
              }), "Create First Invoice"]
            })]
          })
        })) :
        /* istanbul ignore next */
        (cov_t8lm8wb04().b[26][1]++, (0, jsx_runtime_1.jsxs)("div", {
          className: "space-y-6",
          children: [
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[27][0]++, invoicesByType['one-time']) &&
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[27][1]++, invoicesByType['one-time'].length > 0) &&
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[27][2]++, (0, jsx_runtime_1.jsxs)(card_1.Card, {
            children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
                className: "flex items-center justify-between",
                children: (0, jsx_runtime_1.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                    className: "w-5 h-5"
                  }), "One-time Invoices", (0, jsx_runtime_1.jsx)(badge_1.Badge, {
                    variant: "secondary",
                    children: invoicesByType['one-time'].length
                  })]
                })
              })
            }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
              children: (0, jsx_runtime_1.jsx)("div", {
                className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",
                children: invoicesByType['one-time'].map(invoice => {
                  /* istanbul ignore next */
                  cov_t8lm8wb04().f[28]++;
                  cov_t8lm8wb04().s[95]++;
                  return (0, jsx_runtime_1.jsx)(invoice_management_1.InvoiceCard, {
                    invoice: invoice,
                    onUpdate: () => {
                      /* istanbul ignore next */
                      cov_t8lm8wb04().f[29]++;
                      cov_t8lm8wb04().s[96]++;
                      return queryClient.invalidateQueries({
                        queryKey: ['/api/invoices']
                      });
                    }
                  }, invoice.id);
                })
              })
            })]
          })),
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[28][0]++, invoicesByType['recurring']) &&
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[28][1]++, invoicesByType['recurring'].length > 0) &&
          /* istanbul ignore next */
          (cov_t8lm8wb04().b[28][2]++, (0, jsx_runtime_1.jsxs)(card_1.Card, {
            children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
              children: (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
                className: "flex items-center justify-between",
                children: (0, jsx_runtime_1.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Receipt, {
                    className: "w-5 h-5"
                  }), "Recurring Invoices", (0, jsx_runtime_1.jsx)(badge_1.Badge, {
                    variant: "default",
                    children: invoicesByType['recurring'].length
                  })]
                })
              })
            }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
              children: (0, jsx_runtime_1.jsx)("div", {
                className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",
                children: invoicesByType['recurring'].map(invoice => {
                  /* istanbul ignore next */
                  cov_t8lm8wb04().f[30]++;
                  cov_t8lm8wb04().s[97]++;
                  return (0, jsx_runtime_1.jsx)(invoice_management_1.InvoiceCard, {
                    invoice: invoice,
                    onUpdate: () => {
                      /* istanbul ignore next */
                      cov_t8lm8wb04().f[31]++;
                      cov_t8lm8wb04().s[98]++;
                      return queryClient.invalidateQueries({
                        queryKey: ['/api/invoices']
                      });
                    }
                  }, invoice.id);
                })
              })
            })]
          }))]
        }))))]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,