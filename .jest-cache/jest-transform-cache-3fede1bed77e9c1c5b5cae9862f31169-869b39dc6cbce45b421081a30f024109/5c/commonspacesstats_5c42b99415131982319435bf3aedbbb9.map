{"version":3,"names":["cov_1gzsj7g4za","actualCoverage","s","react_1","require","react_query_1","use_auth_1","use_language_1","header_1","card_1","button_1","badge_1","no_data_card_1","select_1","table_1","dialog_1","input_1","label_1","textarea_1","checkbox_1","tabs_1","lucide_react_1","use_toast_1","queryClient_1","recharts_1","calendar_view_1","common_space_calendar_1","withManagerAccess","Component","f","ManagerAccessComponent","props","user","useAuth","language","useLanguage","b","includes","role","jsx_runtime_1","jsxs","className","children","jsx","Header","title","subtitle","Card","CardContent","Ban","CommonSpacesStatsPage","toast","useToast","queryClient","useQueryClient","selectedBuildingId","setSelectedBuildingId","useState","selectedSpaceId","setSelectedSpaceId","restrictionDialogOpen","setRestrictionDialogOpen","selectedUser","setSelectedUser","createDialogOpen","setCreateDialogOpen","isEditMode","setIsEditMode","createFormData","setCreateFormData","name","description","building_id","is_reservable","capacity","hours_mode","opening_hours","start","end","weekly_hours","monday","tuesday","wednesday","thursday","friday","saturday","sunday","available_days","timeLimitDialogOpen","setTimeLimitDialogOpen","timeLimitFormData","setTimeLimitFormData","limit_type","limit_hours","common_space_id","data","buildingsResponse","isLoading","buildingsLoading","useQuery","queryKey","enabled","buildings","commonSpaces","spacesLoading","queryFn","fetch","then","res","json","spaceStats","statsLoading","toggleUserRestrictionMutation","useMutation","mutationFn","userId","isBlocked","reason","apiRequest","is_blocked","onSuccess","_","variables","invalidateQueries","onError","error","message","variant","createSpaceMutation","spaceData","handleCreateSpace","trim","undefined","parseInt","Object","entries","filter","isAvailable","map","day","mutate","setTimeLimitMutation","limitData","user_id","handleSetTimeLimit","useEffect","chartData","useMemo","userStats","slice","userName","hours","Math","round","totalHours","bookings","totalBookings","handleToggleRestriction","CardHeader","CardTitle","Building2","Dialog","open","onOpenChange","DialogTrigger","asChild","Button","size","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","htmlFor","Input","id","type","placeholder","value","onChange","e","target","Textarea","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","building","SelectItem","address","Checkbox","checked","onCheckedChange","dayLabels","disabled","DialogFooter","onClick","isPending","space","isReservable","Badge","Tabs","defaultValue","TabsList","TabsTrigger","BarChart3","CalendarDays","selectedSpace","find","toString","Edit","TabsContent","Fragment","Calendar","summary","Clock","Users","uniqueUsers","length","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","angle","textAnchor","YAxis","Tooltip","formatter","Legend","Bar","fill","period","spaceName","Table","TableHeader","TableRow","TableHead","TableBody","userStat","TableCell","User","userEmail","CheckCircle","Timer","NoDataCard","icon","TrendingUp","titleKey","descriptionKey","testId","iconSize","min","max","Eye","CommonSpaceCalendar","CalendarView","mode","buildingId","showControls","onEventClick","event","exports","default"],"sources":["/home/runner/workspace/client/src/pages/manager/common-spaces-stats.tsx"],"sourcesContent":["import { useState, useMemo, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { NoDataCard } from '@/components/ui/no-data-card';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Building2,\n  Users,\n  Clock,\n  BarChart3,\n  Ban,\n  CheckCircle,\n  User,\n  TrendingUp,\n  Calendar,\n  Plus,\n  Timer,\n  CalendarDays,\n  Eye,\n  Edit,\n} from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { CalendarView } from '@/components/common-spaces/calendar-view';\nimport { CommonSpaceCalendar } from '@/components/common-spaces/common-space-calendar';\n\n/**\n * Building interface.\n */\ninterface Building {\n  id: string;\n  name: string;\n  address: string;\n  city: string;\n  organizationId: string;\n}\n\n/**\n * Common Space interface.\n */\ninterface CommonSpace {\n  id: string;\n  name: string;\n  description?: string;\n  buildingId: string;\n  isReservable: boolean;\n  capacity?: number;\n}\n\n/**\n * User stats interface.\n */\ninterface UserStats {\n  userId: string;\n  userName: string;\n  userEmail: string;\n  totalHours: number;\n  totalBookings: number;\n}\n\n/**\n * Summary stats interface.\n */\ninterface SummaryStats {\n  totalBookings: number;\n  totalHours: number;\n  uniqueUsers: number;\n}\n\n/**\n * Space stats response interface.\n */\ninterface SpaceStatsResponse {\n  spaceName: string;\n  period: string;\n  summary: SummaryStats;\n  userStats: UserStats[];\n}\n\n/**\n * User restriction interface.\n */\ninterface UserRestriction {\n  userId: string;\n  commonSpaceId: string;\n  isBlocked: boolean;\n  reason?: string;\n}\n\n/**\n * Role checking HOC component.\n * @param Component\n */\nfunction withManagerAccess<P extends object>(Component: React.ComponentType<P>) {\n  return function ManagerAccessComponent(props: P) {\n    const { user } = useAuth();\n    const { language } = useLanguage();\n\n    if (!user || !['manager', 'admin', 'demo_manager'].includes(user.role)) {\n      return (\n        <div className='flex-1 flex flex-col overflow-hidden'>\n          <Header \n            title={language === 'fr' ? 'Gestion Espaces Communs' : 'Manage Common Spaces'}\n            subtitle={language === 'fr' ? 'Accès refusé' : 'Access Denied'}\n          />\n          <div className='flex-1 overflow-auto p-6 flex items-center justify-center'>\n            <Card className='max-w-md w-full'>\n              <CardContent className='text-center py-12'>\n                <Ban className='w-16 h-16 mx-auto mb-4 text-red-500' />\n                <h2 className='text-xl font-semibold text-gray-900 mb-2'>\n                  {language === 'fr' ? 'Accès refusé' : 'Access Denied'}\n                </h2>\n                <p className='text-gray-600'>\n                  {language === 'fr'\n                    ? 'Vous devez être gestionnaire ou administrateur pour accéder à cette page.'\n                    : 'You must be a manager or administrator to access this page.'}\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      );\n    }\n\n    return <Component {...props} />;\n  };\n}\n\n/**\n * Manager Common Spaces Statistics Page.\n */\nfunction CommonSpacesStatsPage() {\n  const { user } = useAuth();\n  const { language } = useLanguage();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [selectedBuildingId, setSelectedBuildingId] = useState<string>('');\n  const [selectedSpaceId, setSelectedSpaceId] = useState<string>('');\n  const [restrictionDialogOpen, setRestrictionDialogOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<UserStats | null>(null);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [createFormData, setCreateFormData] = useState({\n    name: '',\n    description: '',\n    building_id: '',\n    is_reservable: true,\n    capacity: '',\n    hours_mode: 'same' as 'same' | 'custom',\n    opening_hours: {\n      start: '08:00',\n      end: '22:00',\n    },\n    weekly_hours: {\n      monday: { start: '08:00', end: '22:00' },\n      tuesday: { start: '08:00', end: '22:00' },\n      wednesday: { start: '08:00', end: '22:00' },\n      thursday: { start: '08:00', end: '22:00' },\n      friday: { start: '08:00', end: '22:00' },\n      saturday: { start: '09:00', end: '21:00' },\n      sunday: { start: '09:00', end: '21:00' },\n    },\n    available_days: {\n      monday: true,\n      tuesday: true,\n      wednesday: true,\n      thursday: true,\n      friday: true,\n      saturday: true,\n      sunday: true,\n    },\n  });\n  const [timeLimitDialogOpen, setTimeLimitDialogOpen] = useState(false);\n  const [timeLimitFormData, setTimeLimitFormData] = useState({\n    limit_type: 'monthly' as 'monthly' | 'yearly',\n    limit_hours: '10',\n    common_space_id: '',\n  });\n\n  // Fetch buildings accessible to the manager\n  const { data: buildingsResponse, isLoading: buildingsLoading } = useQuery<{\n    buildings: Building[];\n  }>({\n    queryKey: ['/api/manager/buildings'],\n    enabled: !!user,\n  });\n\n  const buildings = buildingsResponse?.buildings || [];\n\n  // Fetch common spaces for selected building\n  const { data: commonSpaces = [], isLoading: spacesLoading } = useQuery<CommonSpace[]>({\n    queryKey: ['/api/common-spaces', selectedBuildingId],\n    queryFn: () =>\n      fetch(`/api/common-spaces?building_id=${selectedBuildingId}`).then((res) => res.json()),\n    enabled: !!selectedBuildingId,\n  });\n\n  // Fetch statistics for selected space\n  const { data: spaceStats, isLoading: statsLoading } = useQuery<SpaceStatsResponse>({\n    queryKey: ['/api/common-spaces', selectedSpaceId, 'stats'],\n    queryFn: () => fetch(`/api/common-spaces/${selectedSpaceId}/stats`).then((res) => res.json()),\n    enabled: !!selectedSpaceId,\n  });\n\n  // Block/Unblock user mutation\n  const toggleUserRestrictionMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      isBlocked,\n      reason,\n    }: {\n      userId: string;\n      isBlocked: boolean;\n      reason?: string;\n    }) => {\n      return apiRequest('POST', `/api/common-spaces/users/${userId}/restrictions`, {\n        common_space_id: selectedSpaceId,\n        is_blocked: isBlocked,\n        reason: reason || '',\n      });\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/common-spaces', selectedSpaceId, 'stats'] });\n      toast({\n        title: language === 'fr' ? 'Restriction mise à jour' : 'Restriction Updated',\n        description: variables.isBlocked\n          ? language === 'fr'\n            ? 'Utilisateur bloqué avec succès'\n            : 'User blocked successfully'\n          : language === 'fr'\n            ? 'Utilisateur débloqué avec succès'\n            : 'User unblocked successfully',\n      });\n      setRestrictionDialogOpen(false);\n      setSelectedUser(null);\n    },\n    onError: (error: any) => {\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description: error.message || 'Une erreur est survenue',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Mutation to create or update a common space\n  const createSpaceMutation = useMutation({\n    mutationFn: async (spaceData: {\n      name: string;\n      description?: string;\n      building_id: string;\n      is_reservable: boolean;\n      capacity?: number;\n      opening_hours?: { start: string; end: string };\n      weekly_hours?: any;\n      available_days?: string[];\n    }) => {\n      if (isEditMode && selectedSpaceId) {\n        return apiRequest('PUT', `/api/common-spaces/${selectedSpaceId}`, spaceData);\n      } else {\n        return apiRequest('POST', '/api/common-spaces', spaceData);\n      }\n    },\n    onSuccess: () => {\n      try {\n        queryClient.invalidateQueries({ queryKey: ['/api/common-spaces'] });\n        toast({\n        title: language === 'fr' ? 'Succès' : 'Success',\n        description: isEditMode\n          ? language === 'fr'\n            ? \"L'espace commun a été modifié avec succès.\"\n            : 'Common space updated successfully.'\n          : language === 'fr'\n            ? \"L'espace commun a été créé avec succès.\"\n            : 'Common space created successfully.',\n      });\n      setCreateDialogOpen(false);\n      setIsEditMode(false);\n      setCreateFormData({\n        name: '',\n        description: '',\n        building_id: '',\n        is_reservable: true,\n        capacity: '',\n        hours_mode: 'same',\n        opening_hours: {\n          start: '08:00',\n          end: '22:00',\n        },\n        weekly_hours: {\n          monday: { start: '08:00', end: '22:00' },\n          tuesday: { start: '08:00', end: '22:00' },\n          wednesday: { start: '08:00', end: '22:00' },\n          thursday: { start: '08:00', end: '22:00' },\n          friday: { start: '08:00', end: '22:00' },\n          saturday: { start: '09:00', end: '21:00' },\n          sunday: { start: '09:00', end: '21:00' },\n        },\n        available_days: {\n          monday: true,\n          tuesday: true,\n          wednesday: true,\n          thursday: true,\n          friday: true,\n          saturday: true,\n          sunday: true,\n        },\n      });\n    } catch (error) {\n      // Error creating/updating space\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description: isEditMode\n          ? language === 'fr'\n            ? \"Impossible de modifier l'espace commun.\"\n            : 'Failed to update common space.'\n          : language === 'fr'\n            ? \"Impossible de créer l'espace commun.\"\n            : 'Failed to create common space.',\n        variant: 'destructive',\n      });\n    }\n    },\n    onError: (error: any) => {\n      // Error processing request\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description: 'An error occurred while processing the request.',\n        variant: 'destructive',\n      });\n    }\n  });\n\n  const handleCreateSpace = () => {\n    if (!createFormData.name.trim() || !createFormData.building_id) {\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description:\n          language === 'fr'\n            ? 'Veuillez remplir tous les champs obligatoires.'\n            : 'Please fill in all required fields.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const spaceData = {\n      name: createFormData.name.trim(),\n      description: createFormData.description.trim() || undefined,\n      building_id: createFormData.building_id,\n      is_reservable: createFormData.is_reservable,\n      capacity: createFormData.capacity ? parseInt(createFormData.capacity) : undefined,\n      opening_hours:\n        createFormData.hours_mode === 'same'\n          ? createFormData.opening_hours.start && createFormData.opening_hours.end\n            ? createFormData.opening_hours\n            : undefined\n          : undefined,\n      weekly_hours:\n        createFormData.hours_mode === 'custom' ? createFormData.weekly_hours : undefined,\n      available_days: Object.entries(createFormData.available_days)\n        .filter(([_, isAvailable]) => isAvailable)\n        .map(([day, _]) => day),\n    };\n\n    createSpaceMutation.mutate(spaceData);\n  };\n\n  // Mutation to set user time limits\n  const setTimeLimitMutation = useMutation({\n    mutationFn: async (limitData: {\n      user_id: string;\n      limit_type: 'monthly' | 'yearly';\n      limit_hours: number;\n      common_space_id?: string;\n    }) => {\n      return apiRequest('POST', `/api/common-spaces/users/${limitData.user_id}/time-limits`, {\n        user_id: limitData.user_id,\n        limit_type: limitData.limit_type,\n        limit_hours: limitData.limit_hours,\n        common_space_id: limitData.common_space_id,\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/common-spaces', selectedSpaceId, 'stats'] });\n      toast({\n        title: language === 'fr' ? 'Succès' : 'Success',\n        description:\n          language === 'fr'\n            ? 'Limite de temps définie avec succès.'\n            : 'Time limit set successfully.',\n      });\n      setTimeLimitDialogOpen(false);\n    },\n    onError: (error: any) => {\n      // Error setting time limit\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description:\n          language === 'fr'\n            ? 'Impossible de définir la limite de temps.'\n            : 'Failed to set time limit.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleSetTimeLimit = () => {\n    if (!selectedUser || !timeLimitFormData.limit_hours) {\n      return;\n    }\n\n    const limitData = {\n      user_id: selectedUser.userId,\n      limit_type: timeLimitFormData.limit_type,\n      limit_hours: parseInt(timeLimitFormData.limit_hours),\n      common_space_id: timeLimitFormData.common_space_id || undefined,\n    };\n\n    setTimeLimitMutation.mutate(limitData);\n  };\n\n  // Reset space selection when building changes\n  useEffect(() => {\n    setSelectedSpaceId('');\n  }, [selectedBuildingId]);\n\n  // Prepare chart data\n  const chartData = useMemo(() => {\n    if (!spaceStats?.userStats) {\n      return [];\n    }\n\n    return spaceStats.userStats.slice(0, 10).map((user) => ({\n      name: user.userName,\n      hours: Math.round(user.totalHours * 10) / 10,\n      bookings: user.totalBookings,\n    }));\n  }, [spaceStats]);\n\n  const handleToggleRestriction = (user: UserStats, isBlocked: boolean) => {\n    setSelectedUser(user);\n    setRestrictionDialogOpen(true);\n\n    const reason = isBlocked ? 'Accès restreint par le gestionnaire' : '';\n\n    toggleUserRestrictionMutation.mutate({\n      userId: user.userId,\n      isBlocked,\n      reason,\n    });\n  };\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden' data-testid='common-spaces-stats-page'>\n      <Header\n        title={language === 'fr' ? 'Gestion Espaces Communs' : 'Manage Common Spaces'}\n        subtitle={\n          language === 'fr'\n            ? 'Statistiques et gestion des utilisateurs'\n            : 'Statistics and user management'\n        }\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n        {/* Filters Section */}\n        <Card className='mb-8'>\n          <CardHeader>\n            <CardTitle className='flex items-center justify-between'>\n              <div className='flex items-center gap-2'>\n                <Building2 className='w-5 h-5' />\n                {language === 'fr' ? 'Sélection' : 'Selection'}\n              </div>\n              <Dialog open={createDialogOpen} onOpenChange={setCreateDialogOpen}>\n                <DialogTrigger asChild>\n                  <Button\n                    variant='default'\n                    size='sm'\n                    className='flex items-center gap-2'\n                    data-testid='button-create-space'\n                  >\n                    <Plus className='w-4 h-4' />\n                    {language === 'fr' ? 'Créer un espace' : 'Create Space'}\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className='max-w-lg max-h-[90vh] overflow-hidden flex flex-col'>\n                  <DialogHeader className='flex-shrink-0'>\n                    <DialogTitle>\n                      {isEditMode\n                        ? language === 'fr'\n                          ? \"Modifier l'espace commun\"\n                          : 'Edit Common Space'\n                        : language === 'fr'\n                          ? 'Créer un nouvel espace commun'\n                          : 'Create New Common Space'}\n                    </DialogTitle>\n                    <DialogDescription>\n                      {isEditMode\n                        ? language === 'fr'\n                          ? 'Modifiez les détails de cet espace partagé.'\n                          : 'Edit the details of this shared space.'\n                        : language === 'fr'\n                          ? 'Ajoutez un nouvel espace partagé pour les résidents de ce bâtiment.'\n                          : 'Add a new shared space for residents in this building.'}\n                    </DialogDescription>\n                  </DialogHeader>\n\n                  <div className='flex-1 overflow-y-auto px-1'>\n                    <div className='space-y-4 py-4'>\n                      <div className='space-y-2'>\n                        <Label htmlFor='space-name'>\n                          {language === 'fr' ? \"Nom de l'espace\" : 'Space Name'} *\n                        </Label>\n                        <Input\n                          id='space-name'\n                          type='text'\n                          placeholder={\n                            language === 'fr' ? 'ex: Salle de réunion' : 'e.g. Meeting Room'\n                          }\n                          value={createFormData.name}\n                          onChange={(e) =>\n                            setCreateFormData({ ...createFormData, name: e.target.value })\n                          }\n                          data-testid='input-space-name'\n                        />\n                      </div>\n\n                      <div className='space-y-2'>\n                        <Label htmlFor='space-description'>\n                          {language === 'fr' ? 'Description' : 'Description'}\n                        </Label>\n                        <Textarea\n                          id='space-description'\n                          placeholder={\n                            language === 'fr'\n                              ? \"Description optionnelle de l'espace\"\n                              : 'Optional description of the space'\n                          }\n                          value={createFormData.description}\n                          onChange={(e) =>\n                            setCreateFormData({ ...createFormData, description: e.target.value })\n                          }\n                          data-testid='textarea-space-description'\n                        />\n                      </div>\n\n                      <div className='space-y-2'>\n                        <Label htmlFor='space-building'>\n                          {language === 'fr' ? 'Bâtiment' : 'Building'} *\n                        </Label>\n                        <Select\n                          value={createFormData.building_id}\n                          onValueChange={(value) =>\n                            setCreateFormData({ ...createFormData, building_id: value })\n                          }\n                        >\n                          <SelectTrigger data-testid='select-space-building'>\n                            <SelectValue\n                              placeholder={\n                                language === 'fr' ? 'Sélectionnez un bâtiment' : 'Select a building'\n                              }\n                            />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {buildings.map((building) => (\n                              <SelectItem key={building.id} value={building.id}>\n                                {building.name} - {building.address}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className='grid grid-cols-2 gap-4'>\n                        <div className='space-y-2'>\n                          <Label htmlFor='space-capacity'>\n                            {language === 'fr' ? 'Capacité' : 'Capacity'}\n                          </Label>\n                          <Input\n                            id='space-capacity'\n                            type='number'\n                            placeholder='20'\n                            value={createFormData.capacity}\n                            onChange={(e) =>\n                              setCreateFormData({ ...createFormData, capacity: e.target.value })\n                            }\n                            data-testid='input-space-capacity'\n                          />\n                        </div>\n\n                        <div className='space-y-2 flex items-end'>\n                          <div className='flex items-center space-x-2'>\n                            <Checkbox\n                              id='space-reservable'\n                              checked={createFormData.is_reservable}\n                              onCheckedChange={(checked) =>\n                                setCreateFormData({\n                                  ...createFormData,\n                                  is_reservable: checked === true,\n                                })\n                              }\n                              data-testid='checkbox-space-reservable'\n                            />\n                            <Label htmlFor='space-reservable' className='text-sm'>\n                              {language === 'fr' ? 'Réservable' : 'Bookable'}\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='space-y-4'>\n                        <Label>{language === 'fr' ? \"Heures d'ouverture\" : 'Opening Hours'}</Label>\n\n                        {/* Hours Mode Selection */}\n                        <div className='space-y-3'>\n                          <div className='flex items-center space-x-4'>\n                            <div className='flex items-center space-x-2'>\n                              <input\n                                type='radio'\n                                id='hours-same'\n                                name='hours-mode'\n                                value='same'\n                                checked={createFormData.hours_mode === 'same'}\n                                onChange={(e) =>\n                                  setCreateFormData({ ...createFormData, hours_mode: 'same' })\n                                }\n                                className='w-4 h-4 text-blue-600'\n                                data-testid='radio-hours-same'\n                              />\n                              <Label htmlFor='hours-same' className='text-sm'>\n                                {language === 'fr'\n                                  ? 'Mêmes heures tous les jours'\n                                  : 'Same hours every day'}\n                              </Label>\n                            </div>\n                            <div className='flex items-center space-x-2'>\n                              <input\n                                type='radio'\n                                id='hours-custom'\n                                name='hours-mode'\n                                value='custom'\n                                checked={createFormData.hours_mode === 'custom'}\n                                onChange={(e) =>\n                                  setCreateFormData({ ...createFormData, hours_mode: 'custom' })\n                                }\n                                className='w-4 h-4 text-blue-600'\n                                data-testid='radio-hours-custom'\n                              />\n                              <Label htmlFor='hours-custom' className='text-sm'>\n                                {language === 'fr'\n                                  ? 'Heures personnalisées par jour'\n                                  : 'Custom hours per day'}\n                              </Label>\n                            </div>\n                          </div>\n\n                          {createFormData.hours_mode === 'same' ? (\n                            // Same hours for all days\n                            <div className='grid grid-cols-2 gap-4'>\n                              <div className='space-y-1'>\n                                <Label htmlFor='opening-start' className='text-xs text-gray-500'>\n                                  {language === 'fr' ? 'Ouverture' : 'Start'}\n                                </Label>\n                                <Input\n                                  id='opening-start'\n                                  type='time'\n                                  value={createFormData.opening_hours.start}\n                                  onChange={(e) =>\n                                    setCreateFormData({\n                                      ...createFormData,\n                                      opening_hours: {\n                                        ...createFormData.opening_hours,\n                                        start: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  data-testid='input-opening-start'\n                                />\n                              </div>\n                              <div className='space-y-1'>\n                                <Label htmlFor='opening-end' className='text-xs text-gray-500'>\n                                  {language === 'fr' ? 'Fermeture' : 'End'}\n                                </Label>\n                                <Input\n                                  id='opening-end'\n                                  type='time'\n                                  value={createFormData.opening_hours.end}\n                                  onChange={(e) =>\n                                    setCreateFormData({\n                                      ...createFormData,\n                                      opening_hours: {\n                                        ...createFormData.opening_hours,\n                                        end: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  data-testid='input-opening-end'\n                                />\n                              </div>\n                            </div>\n                          ) : (\n                            // Custom hours per day\n                            <div className='space-y-3 max-h-64 overflow-y-auto'>\n                              {Object.entries(createFormData.weekly_hours).map(([day, hours]) => {\n                                const dayLabels = {\n                                  monday: language === 'fr' ? 'Lundi' : 'Monday',\n                                  tuesday: language === 'fr' ? 'Mardi' : 'Tuesday',\n                                  wednesday: language === 'fr' ? 'Mercredi' : 'Wednesday',\n                                  thursday: language === 'fr' ? 'Jeudi' : 'Thursday',\n                                  friday: language === 'fr' ? 'Vendredi' : 'Friday',\n                                  saturday: language === 'fr' ? 'Samedi' : 'Saturday',\n                                  sunday: language === 'fr' ? 'Dimanche' : 'Sunday',\n                                };\n\n                                return (\n                                  <div key={day} className='grid grid-cols-4 gap-3 items-center'>\n                                    <div className='flex items-center space-x-2'>\n                                      <Checkbox\n                                        id={`available-${day}`}\n                                        checked={createFormData.available_days[day as keyof typeof createFormData.available_days]}\n                                        onCheckedChange={(checked) =>\n                                          setCreateFormData({\n                                            ...createFormData,\n                                            available_days: {\n                                              ...createFormData.available_days,\n                                              [day]: checked === true,\n                                            },\n                                          })\n                                        }\n                                        data-testid={`checkbox-${day}-available`}\n                                      />\n                                      <Label htmlFor={`available-${day}`} className='text-sm font-medium w-20'>\n                                        {dayLabels[day as keyof typeof dayLabels]}\n                                      </Label>\n                                    </div>\n                                    <Input\n                                      type='time'\n                                      value={hours.start}\n                                      disabled={!createFormData.available_days[day as keyof typeof createFormData.available_days]}\n                                      onChange={(e) =>\n                                        setCreateFormData({\n                                          ...createFormData,\n                                          weekly_hours: {\n                                            ...createFormData.weekly_hours,\n                                            [day]: { ...hours, start: e.target.value },\n                                          },\n                                        })\n                                      }\n                                      data-testid={`input-${day}-start`}\n                                    />\n                                    <Input\n                                      type='time'\n                                      value={hours.end}\n                                      disabled={!createFormData.available_days[day as keyof typeof createFormData.available_days]}\n                                      onChange={(e) =>\n                                        setCreateFormData({\n                                          ...createFormData,\n                                          weekly_hours: {\n                                            ...createFormData.weekly_hours,\n                                            [day]: { ...hours, end: e.target.value },\n                                          },\n                                        })\n                                      }\n                                      data-testid={`input-${day}-end`}\n                                    />\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <DialogFooter className='flex-shrink-0 mt-4'>\n                    <Button\n                      variant='outline'\n                      onClick={() => {\n                        setCreateDialogOpen(false);\n                        setIsEditMode(false);\n                      }}\n                      data-testid='button-cancel-create'\n                    >\n                      {language === 'fr' ? 'Annuler' : 'Cancel'}\n                    </Button>\n                    <Button\n                      onClick={handleCreateSpace}\n                      disabled={\n                        createSpaceMutation.isPending ||\n                        !createFormData.name.trim() ||\n                        !createFormData.building_id\n                      }\n                      data-testid='button-confirm-create'\n                    >\n                      {createSpaceMutation.isPending\n                        ? isEditMode\n                          ? language === 'fr'\n                            ? 'Modification...'\n                            : 'Updating...'\n                          : language === 'fr'\n                            ? 'Création...'\n                            : 'Creating...'\n                        : isEditMode\n                          ? language === 'fr'\n                            ? \"Modifier l'espace\"\n                            : 'Update Space'\n                          : language === 'fr'\n                            ? \"Créer l'espace\"\n                            : 'Create Space'}\n                    </Button>\n                  </DialogFooter>\n                </DialogContent>\n              </Dialog>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n              <div className='space-y-2'>\n                <label className='text-sm font-medium' data-testid='building-select-label'>\n                  {language === 'fr' ? 'Bâtiment' : 'Building'}\n                </label>\n                <Select value={selectedBuildingId} onValueChange={setSelectedBuildingId}>\n                  <SelectTrigger data-testid='building-select'>\n                    <SelectValue\n                      placeholder={\n                        language === 'fr' ? 'Sélectionnez un bâtiment' : 'Select a building'\n                      }\n                    />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {buildings.map((building) => (\n                      <SelectItem key={building.id} value={building.id}>\n                        {building.name} - {building.address}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className='space-y-2'>\n                <label className='text-sm font-medium' data-testid='space-select-label'>\n                  {language === 'fr' ? 'Espace commun' : 'Common Space'}\n                </label>\n                <Select\n                  value={selectedSpaceId}\n                  onValueChange={setSelectedSpaceId}\n                  disabled={!selectedBuildingId || spacesLoading}\n                >\n                  <SelectTrigger data-testid='space-select'>\n                    <SelectValue\n                      placeholder={language === 'fr' ? 'Sélectionnez un espace' : 'Select a space'}\n                    />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {commonSpaces.map((space) => (\n                      <SelectItem key={space.id} value={space.id}>\n                        {space.name}\n                        {!space.isReservable && (\n                          <Badge variant='secondary' className='ml-2'>\n                            {language === 'fr' ? 'Non réservable' : 'Not bookable'}\n                          </Badge>\n                        )}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Tabs defaultValue='stats' className='space-y-6'>\n          <div className='flex items-center justify-between'>\n            <TabsList className='grid grid-cols-2 max-w-md'>\n              <TabsTrigger\n                value='stats'\n                className='flex items-center gap-2'\n                data-testid='tab-stats'\n              >\n                <BarChart3 className='h-4 w-4' />\n                {language === 'fr' ? 'Statistiques' : 'Statistics'}\n              </TabsTrigger>\n              <TabsTrigger\n                value='calendar'\n                className='flex items-center gap-2'\n                data-testid='tab-calendar'\n              >\n                <CalendarDays className='h-4 w-4' />\n                {language === 'fr' ? 'Calendrier' : 'Calendar'}\n              </TabsTrigger>\n            </TabsList>\n\n            <Button\n              variant='outline'\n              size='sm'\n              className='flex items-center gap-2'\n              disabled={!selectedSpaceId}\n              onClick={() => {\n                if (selectedSpaceId) {\n                  // Find the selected space details\n                  const selectedSpace = commonSpaces.find((s) => s.id === selectedSpaceId);\n                  if (selectedSpace) {\n                    setCreateFormData({\n                      name: selectedSpace.name,\n                      description: selectedSpace.description || '',\n                      building_id: selectedBuildingId,\n                      is_reservable: selectedSpace.isReservable,\n                      capacity: selectedSpace.capacity?.toString() || '',\n                      hours_mode: 'same',\n                      opening_hours: {\n                        start: '08:00',\n                        end: '22:00',\n                      },\n                      weekly_hours: {\n                        monday: { start: '08:00', end: '22:00' },\n                        tuesday: { start: '08:00', end: '22:00' },\n                        wednesday: { start: '08:00', end: '22:00' },\n                        thursday: { start: '08:00', end: '22:00' },\n                        friday: { start: '08:00', end: '22:00' },\n                        saturday: { start: '09:00', end: '21:00' },\n                        sunday: { start: '09:00', end: '21:00' },\n                      },\n                      available_days: {\n                        monday: true,\n                        tuesday: true,\n                        wednesday: true,\n                        thursday: true,\n                        friday: true,\n                        saturday: true,\n                        sunday: true,\n                      },\n                    });\n                    setIsEditMode(true);\n                    setCreateDialogOpen(true);\n                  }\n                }\n              }}\n              data-testid='button-edit-space'\n            >\n              <Edit className='h-4 w-4' />\n              {language === 'fr' ? 'Modifier' : 'Edit'}\n            </Button>\n          </div>\n\n          <TabsContent value='stats' className='space-y-6'>\n            {spaceStats && (\n              <>\n                {/* Summary Statistics */}\n                <div className='grid grid-cols-1 md:grid-cols-3 gap-6'>\n                  <Card>\n                    <CardContent className='pt-6'>\n                      <div className='flex items-center'>\n                        <Calendar className='h-4 w-4 text-blue-600' />\n                        <div className='ml-4'>\n                          <p\n                            className='text-sm font-medium text-gray-600'\n                            data-testid='total-bookings-label'\n                          >\n                            {language === 'fr' ? 'Réservations totales' : 'Total Bookings'}\n                          </p>\n                          <p\n                            className='text-2xl font-bold text-gray-900'\n                            data-testid='total-bookings-value'\n                          >\n                            {spaceStats.summary.totalBookings}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardContent className='pt-6'>\n                      <div className='flex items-center'>\n                        <Clock className='h-4 w-4 text-green-600' />\n                        <div className='ml-4'>\n                          <p\n                            className='text-sm font-medium text-gray-600'\n                            data-testid='total-hours-label'\n                          >\n                            {language === 'fr' ? 'Heures totales' : 'Total Hours'}\n                          </p>\n                          <p\n                            className='text-2xl font-bold text-gray-900'\n                            data-testid='total-hours-value'\n                          >\n                            {Math.round(spaceStats.summary.totalHours * 10) / 10}h\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardContent className='pt-6'>\n                      <div className='flex items-center'>\n                        <Users className='h-4 w-4 text-purple-600' />\n                        <div className='ml-4'>\n                          <p\n                            className='text-sm font-medium text-gray-600'\n                            data-testid='unique-users-label'\n                          >\n                            {language === 'fr' ? 'Utilisateurs uniques' : 'Unique Users'}\n                          </p>\n                          <p\n                            className='text-2xl font-bold text-gray-900'\n                            data-testid='unique-users-value'\n                          >\n                            {spaceStats.summary.uniqueUsers}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Usage Chart */}\n                {chartData.length > 0 && (\n                  <Card className='mb-8'>\n                    <CardHeader>\n                      <CardTitle className='flex items-center gap-2'>\n                        <BarChart3 className='w-5 h-5' />\n                        {language === 'fr'\n                          ? 'Top 10 utilisateurs par heures'\n                          : 'Top 10 Users by Hours'}\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className='h-80' data-testid='usage-chart'>\n                        <ResponsiveContainer width='100%' height='100%'>\n                          <BarChart data={chartData}>\n                            <CartesianGrid strokeDasharray='3 3' />\n                            <XAxis dataKey='name' angle={-45} textAnchor='end' height={100} />\n                            <YAxis />\n                            <Tooltip\n                              formatter={(value, name) => [\n                                value,\n                                name === 'hours'\n                                  ? language === 'fr'\n                                    ? 'Heures'\n                                    : 'Hours'\n                                  : language === 'fr'\n                                    ? 'Réservations'\n                                    : 'Bookings',\n                              ]}\n                            />\n                            <Legend\n                              formatter={(value) =>\n                                value === 'hours'\n                                  ? language === 'fr'\n                                    ? 'Heures'\n                                    : 'Hours'\n                                  : language === 'fr'\n                                    ? 'Réservations'\n                                    : 'Bookings'\n                              }\n                            />\n                            <Bar dataKey='hours' fill='#3b82f6' name='hours' />\n                            <Bar dataKey='bookings' fill='#10b981' name='bookings' />\n                          </BarChart>\n                        </ResponsiveContainer>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Users Table */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className='flex items-center gap-2'>\n                      <Users className='w-5 h-5' />\n                      {language === 'fr' ? 'Statistiques des utilisateurs' : 'User Statistics'}\n                    </CardTitle>\n                    <p className='text-sm text-gray-600'>\n                      {spaceStats.period} - {spaceStats.spaceName}\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    {spaceStats.userStats.length > 0 ? (\n                      <Table data-testid='users-stats-table'>\n                        <TableHeader>\n                          <TableRow>\n                            <TableHead>{language === 'fr' ? 'Utilisateur' : 'User'}</TableHead>\n                            <TableHead>{language === 'fr' ? 'Email' : 'Email'}</TableHead>\n                            <TableHead className='text-right'>\n                              {language === 'fr' ? 'Heures totales' : 'Total Hours'}\n                            </TableHead>\n                            <TableHead className='text-right'>\n                              {language === 'fr' ? 'Réservations' : 'Bookings'}\n                            </TableHead>\n                            <TableHead className='text-center'>\n                              {language === 'fr' ? 'Actions' : 'Actions'}\n                            </TableHead>\n                          </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                          {spaceStats.userStats.map((userStat) => (\n                            <TableRow\n                              key={userStat.userId}\n                              data-testid={`user-row-${userStat.userId}`}\n                            >\n                              <TableCell className='flex items-center gap-2'>\n                                <User className='w-4 h-4 text-gray-500' />\n                                <span className='font-medium'>{userStat.userName}</span>\n                              </TableCell>\n                              <TableCell className='text-gray-600'>{userStat.userEmail}</TableCell>\n                              <TableCell className='text-right font-mono'>\n                                {Math.round(userStat.totalHours * 10) / 10}h\n                              </TableCell>\n                              <TableCell className='text-right font-mono'>\n                                {userStat.totalBookings}\n                              </TableCell>\n                              <TableCell className='text-center'>\n                                <div className='flex gap-2 justify-center'>\n                                  <Button\n                                    variant='destructive'\n                                    size='sm'\n                                    onClick={() => handleToggleRestriction(userStat, true)}\n                                    disabled={toggleUserRestrictionMutation.isPending}\n                                    data-testid={`button-block-${userStat.userId}`}\n                                  >\n                                    <Ban className='w-4 h-4 mr-1' />\n                                    {language === 'fr' ? 'Bloquer' : 'Block'}\n                                  </Button>\n                                  <Button\n                                    variant='outline'\n                                    size='sm'\n                                    onClick={() => handleToggleRestriction(userStat, false)}\n                                    disabled={toggleUserRestrictionMutation.isPending}\n                                    data-testid={`button-unblock-${userStat.userId}`}\n                                  >\n                                    <CheckCircle className='w-4 h-4 mr-1' />\n                                    {language === 'fr' ? 'Débloquer' : 'Unblock'}\n                                  </Button>\n                                  <Button\n                                    variant='secondary'\n                                    size='sm'\n                                    onClick={() => {\n                                      setSelectedUser(userStat);\n                                      setTimeLimitFormData({\n                                        limit_type: 'monthly',\n                                        limit_hours: '10',\n                                        common_space_id: selectedSpaceId,\n                                      });\n                                      setTimeLimitDialogOpen(true);\n                                    }}\n                                    data-testid={`button-time-limit-${userStat.userId}`}\n                                  >\n                                    <Timer className='w-4 h-4 mr-1' />\n                                    {language === 'fr' ? 'Limite' : 'Limit'}\n                                  </Button>\n                                </div>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    ) : (\n                      <div className='py-4'>\n                        <NoDataCard\n                          icon={TrendingUp}\n                          titleKey=\"noDataAvailable\"\n                          descriptionKey=\"noBookingsFoundMessage\"\n                          testId=\"no-stats-message\"\n                          iconSize={12}\n                        />\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </>\n            )}\n\n            {!selectedSpaceId && (\n              <NoDataCard\n                icon={Building2}\n                titleKey=\"selectCommonSpace\"\n                descriptionKey=\"selectCommonSpaceMessage\"\n                testId=\"select-common-space-message\"\n                iconSize={12}\n              />\n            )}\n\n            {/* Time Limit Dialog */}\n            <Dialog open={timeLimitDialogOpen} onOpenChange={setTimeLimitDialogOpen}>\n              <DialogContent className='max-w-md'>\n                <DialogHeader>\n                  <DialogTitle>\n                    {language === 'fr' ? 'Définir la limite de temps' : 'Set Time Limit'}\n                  </DialogTitle>\n                  <DialogDescription>\n                    {language === 'fr'\n                      ? `Définir une limite de réservation pour ${selectedUser?.userName}`\n                      : `Set booking time limit for ${selectedUser?.userName}`}\n                  </DialogDescription>\n                </DialogHeader>\n\n                <div className='space-y-4 py-4'>\n                  <div className='space-y-2'>\n                    <Label htmlFor='limit-type'>\n                      {language === 'fr' ? 'Type de limite' : 'Limit Type'}\n                    </Label>\n                    <Select\n                      value={timeLimitFormData.limit_type}\n                      onValueChange={(value: 'monthly' | 'yearly') =>\n                        setTimeLimitFormData({ ...timeLimitFormData, limit_type: value })\n                      }\n                    >\n                      <SelectTrigger data-testid='select-limit-type'>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value='monthly'>\n                          {language === 'fr' ? 'Mensuelle' : 'Monthly'}\n                        </SelectItem>\n                        <SelectItem value='yearly'>\n                          {language === 'fr' ? 'Annuelle' : 'Yearly'}\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className='space-y-2'>\n                    <Label htmlFor='limit-hours'>\n                      {language === 'fr' ? 'Limite en heures' : 'Hour Limit'}\n                    </Label>\n                    <Input\n                      id='limit-hours'\n                      type='number'\n                      min='1'\n                      max='8760'\n                      placeholder='10'\n                      value={timeLimitFormData.limit_hours}\n                      onChange={(e) =>\n                        setTimeLimitFormData({\n                          ...timeLimitFormData,\n                          limit_hours: e.target.value,\n                        })\n                      }\n                      data-testid='input-limit-hours'\n                    />\n                    <p className='text-xs text-gray-500'>\n                      {language === 'fr'\n                        ? `Limite ${timeLimitFormData.limit_type === 'monthly' ? 'mensuelle' : 'annuelle'} en heures`\n                        : `${timeLimitFormData.limit_type === 'monthly' ? 'Monthly' : 'Yearly'} limit in hours`}\n                    </p>\n                  </div>\n\n                  <div className='space-y-2'>\n                    <Label htmlFor='limit-scope'>{language === 'fr' ? 'Portée' : 'Scope'}</Label>\n                    <Select\n                      value={timeLimitFormData.common_space_id}\n                      onValueChange={(value) =>\n                        setTimeLimitFormData({ ...timeLimitFormData, common_space_id: value })\n                      }\n                    >\n                      <SelectTrigger data-testid='select-limit-scope'>\n                        <SelectValue\n                          placeholder={\n                            language === 'fr' ? 'Sélectionnez la portée' : 'Select scope'\n                          }\n                        />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=''>\n                          {language === 'fr' ? 'Tous les espaces' : 'All spaces'}\n                        </SelectItem>\n                        <SelectItem value={selectedSpaceId}>\n                          {language === 'fr' ? 'Cet espace uniquement' : 'This space only'}\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <DialogFooter>\n                  <Button\n                    variant='outline'\n                    onClick={() => setTimeLimitDialogOpen(false)}\n                    data-testid='button-cancel-time-limit'\n                  >\n                    {language === 'fr' ? 'Annuler' : 'Cancel'}\n                  </Button>\n                  <Button\n                    onClick={handleSetTimeLimit}\n                    disabled={setTimeLimitMutation.isPending || !timeLimitFormData.limit_hours}\n                    data-testid='button-confirm-time-limit'\n                  >\n                    {setTimeLimitMutation.isPending\n                      ? language === 'fr'\n                        ? 'Application...'\n                        : 'Setting...'\n                      : language === 'fr'\n                        ? 'Appliquer la limite'\n                        : 'Set Limit'}\n                  </Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n          </TabsContent>\n\n          <TabsContent value='calendar' className='space-y-6'>\n            <Card>\n              <CardHeader>\n                <CardTitle className='flex items-center gap-2'>\n                  <Eye className='h-5 w-5' />\n                  {language === 'fr' ? 'Vue Calendrier Manager' : 'Manager Calendar View'}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {selectedSpaceId ? (\n                  <div className='p-0'>\n                    <CommonSpaceCalendar\n                      space={{\n                        id: selectedSpaceId,\n                        name:\n                          commonSpaces.find((s) => s.id === selectedSpaceId)?.name ||\n                          'Espace sélectionné',\n                        isReservable: false,\n                      }}\n                      className='border-0 shadow-none bg-transparent p-0'\n                    />\n                  </div>\n                ) : selectedBuildingId ? (\n                  <CalendarView\n                    mode='building'\n                    buildingId={selectedBuildingId}\n                    showControls={true}\n                    onEventClick={(event) => {\n                      // Manager viewing building event\n                    }}\n                    data-testid='manager-building-calendar-view'\n                  />\n                ) : (\n                  <div className='text-center py-12 text-muted-foreground'>\n                    <CalendarDays className='h-16 w-16 mx-auto mb-4 opacity-20' />\n                    <h3 className='text-lg font-medium mb-2'>\n                      {language === 'fr'\n                        ? 'Sélectionnez un espace ou un bâtiment'\n                        : 'Select a space or building'}\n                    </h3>\n                    <p>\n                      {language === 'fr'\n                        ? 'Choisissez un bâtiment ou un espace spécifique pour voir son calendrier de réservations avec les détails complets'\n                        : 'Choose a building or specific space to view its booking calendar with full details'}\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Export the component wrapped with access control\nexport default withManagerAccess(CommonSpacesStatsPage);\n"],"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","ignoreList":[]}