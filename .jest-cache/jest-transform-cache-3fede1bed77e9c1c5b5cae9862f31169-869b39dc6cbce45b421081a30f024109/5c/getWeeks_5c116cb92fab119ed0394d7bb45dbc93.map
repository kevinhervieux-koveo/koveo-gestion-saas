{"file":"/home/runner/workspace/node_modules/react-day-picker/dist/cjs/helpers/getWeeks.js","mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B;;;;;GAKG;AACH,SAAS,QAAQ,CAAC,MAAM;IACpB,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAClC,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7C,CAAC,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;AAC7B,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/react-day-picker/dist/cjs/helpers/getWeeks.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWeeks = getWeeks;\n/**\n * Returns an array of calendar weeks from an array of calendar months.\n *\n * @param months The array of calendar months.\n * @returns An array of calendar weeks.\n */\nfunction getWeeks(months) {\n    const initialWeeks = [];\n    return months.reduce((weeks, month) => {\n        return weeks.concat(month.weeks.slice());\n    }, initialWeeks.slice());\n}\n"],"version":3}