{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/selection/modifySelectionPerMouse.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,EAAE,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACzC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACjD,IAAI,oBAAoB,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAEhE,SAAS,2BAA2B,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACnF,MAAM,cAAc,GAAG,oBAAoB,CAAC,oBAAoB,CAAC;QAC7D,MAAM;QACN,IAAI;QACJ,MAAM;KACT,CAAC,CAAC;IACH,IAAI,MAAM,IAAI,cAAc,EAAE,CAAC;QAC3B,0DAA0D;QAC1D,iEAAiE;QACjE,iCAAiC;QACjC,uDAAuD;QACvD,0BAA0B,CAAC,IAAI,cAAc,CAAC,IAAI,KAAK,cAAc,CAAC,IAAI,EAAE,CAAC;YACzE,MAAM,YAAY,GAAG,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC;YAC9G,MAAM,WAAW,GAAG,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,GAAG,IAAI,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC;YAC5J,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE;gBACnC,YAAY;gBACZ,WAAW;aACd,CAAC,CAAC;QACP,CAAC;IACL,CAAC;SAAM,CAAC;QACJ,MAAM,KAAK,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC;QAC1C,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QAC3E,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;YACV,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QAC/D,CAAC;aAAM,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;YACjB,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC;QACD,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1C,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QACxF,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;IACvG,CAAC;AACL,CAAC;AAED,OAAO,CAAC,2BAA2B,GAAG,2BAA2B,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/selection/modifySelectionPerMouse.js"],"sourcesContent":["'use strict';\n\nvar UI = require('../../document/UI.js');\nrequire('../../utils/dataTransfer/Clipboard.js');\nvar resolveCaretPosition = require('./resolveCaretPosition.js');\n\nfunction modifySelectionPerMouseMove(selectionRange, { document, target, node, offset }) {\n    const selectionFocus = resolveCaretPosition.resolveCaretPosition({\n        target,\n        node,\n        offset\n    });\n    if ('node' in selectionRange) {\n        // When the mouse is dragged outside of an input/textarea,\n        // the selection is extended to the beginning or end of the input\n        // depending on pointer position.\n        // TODO: extend selection according to pointer position\n        /* istanbul ignore else */ if (selectionFocus.node === selectionRange.node) {\n            const anchorOffset = selectionFocus.offset < selectionRange.start ? selectionRange.end : selectionRange.start;\n            const focusOffset = selectionFocus.offset > selectionRange.end || selectionFocus.offset < selectionRange.start ? selectionFocus.offset : selectionRange.end;\n            UI.setUISelection(selectionRange.node, {\n                anchorOffset,\n                focusOffset\n            });\n        }\n    } else {\n        const range = selectionRange.cloneRange();\n        const cmp = range.comparePoint(selectionFocus.node, selectionFocus.offset);\n        if (cmp < 0) {\n            range.setStart(selectionFocus.node, selectionFocus.offset);\n        } else if (cmp > 0) {\n            range.setEnd(selectionFocus.node, selectionFocus.offset);\n        }\n        const selection = document.getSelection();\n        selection === null || selection === undefined ? undefined : selection.removeAllRanges();\n        selection === null || selection === undefined ? undefined : selection.addRange(range.cloneRange());\n    }\n}\n\nexports.modifySelectionPerMouseMove = modifySelectionPerMouseMove;\n"],"version":3}