36de9d61e8a8a47c0c99d15702e3fadb
"use strict";

/* istanbul ignore next */
function cov_2nj767hy26() {
  var path = "/home/runner/workspace/client/src/lib/utils.ts";
  var hash = "1543aa0ea48e08b0ed0f9862edc32e450aa15fc4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/lib/utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 16
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 30
        }
      },
      "3": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "cn",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 11
          }
        },
        loc: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 28
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/lib/utils.ts",
      mappings: ";;AAyBA,gBAUC;AAnCD,+BAA6C;AAC7C,mDAAyC;AAEzC;;;;;;;;;;;GAWG;AACH;;;;GAIG;AACH;;;;GAIG;AACH,SAQA,EAAE,CAAC,GAAG,MAAoB;IACxB,OAAO,IAAA,wBAAO,EAAC,IAAA,WAAI,EAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,CAAC",
      names: [],
      sources: ["/home/runner/workspace/client/src/lib/utils.ts"],
      sourcesContent: ["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Combines class names using clsx and merges conflicting Tailwind classes with tailwind-merge.\n * This utility ensures proper Tailwind CSS class precedence and removes duplicate classes.\n *\n * @param {...ClassValue} inputs - Class names to combine (strings, objects, arrays, etc.).\n * @returns {string} Merged and optimized class name string.\n * @example\n * ```typescript\n * cn('px-4', 'px-2') // Returns 'px-2' (tailwind-merge removes conflicting px-4)\n * cn('text-red-500', { 'font-bold': true }) // Returns 'text-red-500 font-bold'\n * ```\n */\n/**\n * Cn function.\n * @param {...any} inputs\n * @returns Function result.\n */\n/**\n * Cn function.\n * @param ...inputs - ...inputs parameter.\n * @param {...any} inputs\n */\nexport function /**\n * Cn function.\n * @param ...inputs - ...inputs parameter.\n */ /**\n * Cn function.\n * @param ...inputs - ...inputs parameter.\n */\n\ncn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1543aa0ea48e08b0ed0f9862edc32e450aa15fc4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nj767hy26 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nj767hy26();
cov_2nj767hy26().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2nj767hy26().s[1]++;
exports.cn = cn;
const clsx_1 =
/* istanbul ignore next */
(cov_2nj767hy26().s[2]++, require("clsx"));
const tailwind_merge_1 =
/* istanbul ignore next */
(cov_2nj767hy26().s[3]++, require("tailwind-merge"));
/**
 * Combines class names using clsx and merges conflicting Tailwind classes with tailwind-merge.
 * This utility ensures proper Tailwind CSS class precedence and removes duplicate classes.
 *
 * @param {...ClassValue} inputs - Class names to combine (strings, objects, arrays, etc.).
 * @returns {string} Merged and optimized class name string.
 * @example
 * ```typescript
 * cn('px-4', 'px-2') // Returns 'px-2' (tailwind-merge removes conflicting px-4)
 * cn('text-red-500', { 'font-bold': true }) // Returns 'text-red-500 font-bold'
 * ```
 */
/**
 * Cn function.
 * @param {...any} inputs
 * @returns Function result.
 */
/**
 * Cn function.
 * @param ...inputs - ...inputs parameter.
 * @param {...any} inputs
 */
function cn(...inputs) {
  /* istanbul ignore next */
  cov_2nj767hy26().f[0]++;
  cov_2nj767hy26().s[4]++;
  return (0, tailwind_merge_1.twMerge)((0, clsx_1.clsx)(inputs));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiY24iLCJjbHN4XzEiLCJjb3ZfMm5qNzY3aHkyNiIsInMiLCJyZXF1aXJlIiwidGFpbHdpbmRfbWVyZ2VfMSIsImlucHV0cyIsImYiLCJ0d01lcmdlIiwiY2xzeCJdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvY2xpZW50L3NyYy9saWIvdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xzeCwgdHlwZSBDbGFzc1ZhbHVlIH0gZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSAndGFpbHdpbmQtbWVyZ2UnO1xuXG4vKipcbiAqIENvbWJpbmVzIGNsYXNzIG5hbWVzIHVzaW5nIGNsc3ggYW5kIG1lcmdlcyBjb25mbGljdGluZyBUYWlsd2luZCBjbGFzc2VzIHdpdGggdGFpbHdpbmQtbWVyZ2UuXG4gKiBUaGlzIHV0aWxpdHkgZW5zdXJlcyBwcm9wZXIgVGFpbHdpbmQgQ1NTIGNsYXNzIHByZWNlZGVuY2UgYW5kIHJlbW92ZXMgZHVwbGljYXRlIGNsYXNzZXMuXG4gKlxuICogQHBhcmFtIHsuLi5DbGFzc1ZhbHVlfSBpbnB1dHMgLSBDbGFzcyBuYW1lcyB0byBjb21iaW5lIChzdHJpbmdzLCBvYmplY3RzLCBhcnJheXMsIGV0Yy4pLlxuICogQHJldHVybnMge3N0cmluZ30gTWVyZ2VkIGFuZCBvcHRpbWl6ZWQgY2xhc3MgbmFtZSBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY24oJ3B4LTQnLCAncHgtMicpIC8vIFJldHVybnMgJ3B4LTInICh0YWlsd2luZC1tZXJnZSByZW1vdmVzIGNvbmZsaWN0aW5nIHB4LTQpXG4gKiBjbigndGV4dC1yZWQtNTAwJywgeyAnZm9udC1ib2xkJzogdHJ1ZSB9KSAvLyBSZXR1cm5zICd0ZXh0LXJlZC01MDAgZm9udC1ib2xkJ1xuICogYGBgXG4gKi9cbi8qKlxuICogQ24gZnVuY3Rpb24uXG4gKiBAcGFyYW0gey4uLmFueX0gaW5wdXRzXG4gKiBAcmV0dXJucyBGdW5jdGlvbiByZXN1bHQuXG4gKi9cbi8qKlxuICogQ24gZnVuY3Rpb24uXG4gKiBAcGFyYW0gLi4uaW5wdXRzIC0gLi4uaW5wdXRzIHBhcmFtZXRlci5cbiAqIEBwYXJhbSB7Li4uYW55fSBpbnB1dHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIC8qKlxuICogQ24gZnVuY3Rpb24uXG4gKiBAcGFyYW0gLi4uaW5wdXRzIC0gLi4uaW5wdXRzIHBhcmFtZXRlci5cbiAqLyAvKipcbiAqIENuIGZ1bmN0aW9uLlxuICogQHBhcmFtIC4uLmlucHV0cyAtIC4uLmlucHV0cyBwYXJhbWV0ZXIuXG4gKi9cblxuY24oLi4uaW5wdXRzOiBDbGFzc1ZhbHVlW10pIHtcbiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkFBLE9BQUEsQ0FBQUMsRUFBQSxHQUFBQSxFQUFBO0FBekJBLE1BQUFDLE1BQUE7QUFBQTtBQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxPQUFBQyxPQUFBO0FBQ0EsTUFBQUMsZ0JBQUE7QUFBQTtBQUFBLENBQUFILGNBQUEsR0FBQUMsQ0FBQSxPQUFBQyxPQUFBO0FBRUE7Ozs7Ozs7Ozs7OztBQVlBOzs7OztBQUtBOzs7OztBQUtBLFNBUUFKLEVBQUVBLENBQUMsR0FBR00sTUFBb0I7RUFBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFBQUwsY0FBQSxHQUFBQyxDQUFBO0VBQ3hCLE9BQU8sSUFBQUUsZ0JBQUEsQ0FBQUcsT0FBTyxFQUFDLElBQUFQLE1BQUEsQ0FBQVEsSUFBSSxFQUFDSCxNQUFNLENBQUMsQ0FBQztBQUM5QiIsImlnbm9yZUxpc3QiOltdfQ==