{"file":"/home/runner/workspace/client/src/pages/auth/login.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/auth/login.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useLocation, Link } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { AlertCircle, Shield, Building, Users, Eye, EyeOff, Loader2, Home } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { Switch } from '@/components/ui/switch';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useAuth } from '@/hooks/use-auth';\nimport { LanguageSwitcher } from '@/components/ui/language-switcher';\nimport koveoLogo from '@/assets/koveo-logo.jpg';\n\n/**\n * Login form validation schema with Quebec-specific requirements.\n * Ensures proper email format and password complexity for security compliance.\n */\nconst loginSchema = z.object({\n  email: z\n    .string()\n    .min(1, 'emailRequired')\n    .email('invalidEmailFormat')\n    .toLowerCase(),\n  password: z\n    .string()\n    .min(1, 'passwordRequired')\n    .min(8, 'passwordTooShort'),\n});\n\n/**\n *\n */\ntype LoginFormData = z.infer<typeof loginSchema>;\n\n/**\n * Login page component for Koveo Gestion property management system.\n * Implements secure authentication with Quebec Law 25 compliance messaging.\n *\n * Features:\n * - Form validation with Zod schema\n * - Error handling with user-friendly messages\n * - Bilingual support (French/English)\n * - Quebec-compliant security messaging\n * - Role-based redirection after login.\n */\n// Demo credentials for testing purposes only - not real production data\nconst DEMO_CREDENTIALS = {\n  DEFAULT_DEMO_PASSWORD: 'demo123456',\n  TENANT_DEMO_PASSWORD: 'demo123456',\n} as const;\n\n// Types for demo users from API\ninterface DemoUser {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n}\n\ninterface DemoUsersData {\n  demo_manager: DemoUser[];\n  demo_tenant: DemoUser[];\n  demo_resident: DemoUser[];\n}\n\n/**\n *\n */\nexport default function LoginPage() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const { t, language } = useLanguage();\n  const { login } = useAuth();\n  const [loginError, setLoginError] = useState<string>('');\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const [isDemoMode, setIsDemoMode] = useState(false);\n  const [selectedRole, setSelectedRole] = useState<string | null>(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [demoUsers, setDemoUsers] = useState<DemoUsersData | null>(null);\n  const [loadingDemoUsers, setLoadingDemoUsers] = useState(false);\n\n  // Check for demo query parameter on component mount\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('demo') === 'true') {\n      setIsDemoMode(true);\n    }\n  }, []);\n\n  // Fetch demo users when demo mode is enabled\n  useEffect(() => {\n    if (isDemoMode && !demoUsers) {\n      setLoadingDemoUsers(true);\n      fetch('/api/demo/users')\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            setDemoUsers(data.data);\n          } else {\n            // Failed to fetch demo users\n            toast({\n              title: language === 'fr' ? 'Erreur Demo' : 'Demo Error',\n              description: language === 'fr' \n                ? 'Impossible de charger les utilisateurs de démonstration' \n                : 'Failed to load demo users',\n              variant: 'destructive',\n            });\n          }\n        })\n        .catch(error => {\n          // Error fetching demo users\n          toast({\n            title: language === 'fr' ? 'Erreur Demo' : 'Demo Error',\n            description: language === 'fr' \n              ? 'Impossible de charger les utilisateurs de démonstration' \n              : 'Failed to load demo users',\n            variant: 'destructive',\n          });\n        })\n        .finally(() => {\n          setLoadingDemoUsers(false);\n        });\n    }\n  }, [isDemoMode, demoUsers, toast, language]);\n\n  // Create dynamic demo roles from fetched users\n  const getDemoRoles = () => {\n    if (!demoUsers) return {};\n\n    return {\n      demo_manager: {\n        displayName: language === 'fr' ? 'Gestionnaire' : 'Manager',\n        description:\n          language === 'fr' ? 'Gestion complète des immeubles' : 'Full building management',\n        detailedDescription:\n          language === 'fr'\n            ? 'Accès complet à toutes les fonctionnalités de gestion immobilière, incluant la gestion des locataires, maintenance, finances et rapports.'\n            : 'Complete access to all property management features, including tenant management, maintenance, finances, and reporting.',\n        users: demoUsers.demo_manager.map(user => ({\n          email: user.email,\n          name: `${user.firstName} ${user.lastName}`,\n          building: language === 'fr' ? 'Gestionnaire Démonstration' : 'Demo Manager',\n          password: DEMO_CREDENTIALS.DEFAULT_DEMO_PASSWORD,\n        })),\n      },\n      demo_tenant: {\n        displayName: language === 'fr' ? 'Locataire' : 'Tenant',\n        description: language === 'fr' ? 'Accès locataire standard' : 'Standard tenant access',\n        detailedDescription:\n          language === 'fr'\n            ? 'Accès aux fonctionnalités essentielles pour les locataires: demandes de maintenance, documents, communications avec la gestion.'\n            : 'Access to essential tenant features: maintenance requests, documents, communication with management.',\n        users: demoUsers.demo_tenant.map(user => ({\n          email: user.email,\n          name: `${user.firstName} ${user.lastName}`,\n          building: language === 'fr' ? 'Locataire Démonstration' : 'Demo Tenant',\n          password: DEMO_CREDENTIALS.DEFAULT_DEMO_PASSWORD,\n        })),\n      },\n      demo_resident: {\n        displayName: language === 'fr' ? 'Résident' : 'Resident',\n        description: language === 'fr' ? 'Accès résident propriétaire' : 'Resident owner access',\n        detailedDescription:\n          language === 'fr'\n            ? 'Accès étendu pour les résidents propriétaires: gestion de leur unité, participation aux décisions, accès aux documents financiers.'\n            : 'Extended access for resident owners: unit management, participation in decisions, access to financial documents.',\n        users: demoUsers.demo_resident.map(user => ({\n          email: user.email,\n          name: `${user.firstName} ${user.lastName}`,\n          building: language === 'fr' ? 'Résident Démonstration' : 'Demo Resident',\n          password: DEMO_CREDENTIALS.DEFAULT_DEMO_PASSWORD,\n        })),\n      },\n    };\n  };\n\n  const form = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleLogin = async (_data: LoginFormData) => {\n    try {\n      setIsLoggingIn(true);\n      setLoginError('');\n\n      const response = await login(_data.email, _data.password);\n\n      toast({\n        title: language === 'fr' ? 'Connexion réussie' : 'Login successful',\n        description:\n          language === 'fr'\n            ? 'Vous êtes maintenant connecté(e) à Koveo Gestion'\n            : 'You are now logged into Koveo Gestion',\n      });\n\n      // Note: Routing to /dashboard is handled by the auth hook\n    } catch (_error: unknown) {\n      /**\n       * Catch function.\n       * @param error - Error object.\n       */\n      /**\n       * Catch function.\n       * @param error - Error object.\n       */ /**\n       * Catch function.\n       * @param error - Error object.\n       */\n\n      /**\n       * Catch function.\n       * @param error - Error object.\n       */\n      const errorMessage = (_error as Error).message || 'Login failed';\n      setLoginError(errorMessage);\n\n      toast({\n        title: language === 'fr' ? 'Erreur de connexion' : 'Login error',\n        description:\n          language === 'fr'\n            ? 'Identifiants invalides ou compte inactif'\n            : 'Invalid credentials or inactive account',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoggingIn(false);\n    }\n  };\n\n  const onSubmit = (_data: LoginFormData) => {\n    handleLogin(_data);\n  };\n\n  const handleDemoLogin = async (demoUserEmail: string, userName: string) => {\n    try {\n      setIsLoggingIn(true);\n      setLoginError('');\n\n      // Find the password for the selected user\n      let password: string = DEMO_CREDENTIALS.DEFAULT_DEMO_PASSWORD; // default\n      const demoRoles = getDemoRoles();\n      for (const role of Object.values(demoRoles)) {\n        const user = role.users?.find((u) => u.email === demoUserEmail);\n        if (user) {\n          password = user.password;\n          break;\n        }\n      }\n\n      const response = await login(demoUserEmail, password);\n\n      toast({\n        title: language === 'fr' ? 'Demo Mode Activé' : 'Demo Mode Activated',\n        description:\n          language === 'fr' ? `Connecté(e) en tant que ${userName}` : `Logged in as ${userName}`,\n      });\n    } catch (_error: unknown) {\n      const errorMessage = (_error as Error).message || 'Demo login failed';\n      setLoginError(errorMessage);\n\n      toast({\n        title: language === 'fr' ? 'Erreur Demo' : 'Demo Error',\n        description:\n          language === 'fr' ? \"Impossible d'accéder à la démonstration\" : 'Unable to access demo',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoggingIn(false);\n    }\n  };\n\n  const handleRoleSelect = (roleKey: string) => {\n    setSelectedRole(roleKey);\n  };\n\n  const handleBackToRoles = () => {\n    setSelectedRole(null);\n  };\n\n  return (\n    <div className='min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4'>\n      {/* Header with Language Switcher and Home Button */}\n      <div className='absolute top-4 left-4 right-4 flex justify-between items-center z-10'>\n        <Button\n          variant='ghost'\n          size='sm'\n          asChild\n          className='text-gray-600 hover:text-gray-800 hover:bg-white/80 backdrop-blur-sm'\n          data-testid='button-home'\n        >\n          <Link href='/'>\n            <Home className='w-4 h-4 mr-2' />\n            {language === 'fr' ? 'Accueil' : 'Home'}\n          </Link>\n        </Button>\n        <div className='bg-white/80 backdrop-blur-sm rounded-lg p-1'>\n          <LanguageSwitcher />\n        </div>\n      </div>\n      \n      <div className='w-full max-w-md space-y-6'>\n        {/* Header */}\n        <div className='text-center space-y-4'>\n          <div className='flex items-center justify-center mb-4'>\n            <img\n              src={koveoLogo}\n              alt='Koveo Gestion Logo'\n              className='h-16 w-auto rounded-lg shadow-sm'\n            />\n          </div>\n        </div>\n\n        {/* Login Form */}\n        <Card className='shadow-lg border-0'>\n          <CardHeader className='space-y-1'>\n            <CardTitle className='text-2xl text-center'>\n              {language === 'fr' ? 'Connexion' : 'Sign In'}\n            </CardTitle>\n            <CardDescription className='text-center'>\n              {language === 'fr'\n                ? 'Entrez vos identifiants pour accéder à votre compte'\n                : 'Enter your credentials to access your account'}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className='space-y-4'>\n            {loginError && (\n              <Alert variant='destructive'>\n                <AlertCircle className='h-4 w-4' />\n                <AlertDescription>{loginError}</AlertDescription>\n              </Alert>\n            )}\n\n            {/* Demo Mode Toggle */}\n            <div className='flex items-center justify-between p-3 border rounded-lg bg-blue-50 dark:bg-blue-900/20'>\n              <div className='flex items-center space-x-2'>\n                <Eye className='w-4 h-4 text-blue-600 dark:text-blue-400' />\n                <span className='text-sm font-medium text-blue-900 dark:text-blue-100'>\n                  {language === 'fr' ? 'Mode Démonstration' : 'Demo Mode'}\n                </span>\n              </div>\n              <Switch\n                checked={isDemoMode}\n                onCheckedChange={setIsDemoMode}\n                data-testid='toggle-demo-mode'\n              />\n            </div>\n\n            {isDemoMode ? (\n              <div className='space-y-3'>\n                {loadingDemoUsers ? (\n                  // Loading state\n                  <div className='flex items-center justify-center py-8'>\n                    <Loader2 className='w-6 h-6 animate-spin text-blue-600 dark:text-blue-400' />\n                    <span className='ml-2 text-sm text-gray-600 dark:text-gray-400'>\n                      {language === 'fr' ? 'Chargement des utilisateurs...' : 'Loading users...'}\n                    </span>\n                  </div>\n                ) : !selectedRole ? (\n                  // Role Selection View\n                  <>\n                    <div className='text-center text-sm text-gray-600 dark:text-gray-400'>\n                      {language === 'fr'\n                        ? 'Choisissez un rôle pour tester la plateforme :'\n                        : 'Choose a role to test the platform:'}\n                    </div>\n                    {Object.entries(getDemoRoles()).map(([roleKey, role]) => (\n                      <Card\n                        key={roleKey}\n                        className='cursor-pointer hover:shadow-md transition-shadow border border-blue-200 hover:border-blue-300'\n                        onClick={() => handleRoleSelect(roleKey)}\n                        data-testid={`demo-role-${roleKey}`}\n                      >\n                        <CardContent className='p-4'>\n                          <div className='flex items-center justify-between'>\n                            <div>\n                              <h3 className='font-medium text-sm'>{role.displayName}</h3>\n                              <p className='text-xs text-gray-500 dark:text-gray-400'>\n                                {role.description}\n                              </p>\n                            </div>\n                            <Users className='w-4 h-4 text-blue-600 dark:text-blue-400' />\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </>\n                ) : (\n                  // Role Detail View with Demo Users\n                  <>\n                    <div className='flex items-center justify-between mb-4'>\n                      <Button\n                        variant='ghost'\n                        size='sm'\n                        onClick={handleBackToRoles}\n                        className='text-blue-600 hover:text-blue-700'\n                      >\n                        ← {language === 'fr' ? 'Retour' : 'Back'}\n                      </Button>\n                      <h3 className='font-medium text-lg'>{getDemoRoles()[selectedRole]?.displayName}</h3>\n                      <div></div>\n                    </div>\n\n                    <div className='bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg mb-4'>\n                      <p className='text-sm text-blue-800 dark:text-blue-200'>\n                        {getDemoRoles()[selectedRole]?.detailedDescription}\n                      </p>\n                    </div>\n\n                    <div className='text-center text-sm text-gray-600 dark:text-gray-400 mb-3'>\n                      {language === 'fr'\n                        ? 'Sélectionnez un utilisateur de démonstration :'\n                        : 'Select a demo user:'}\n                    </div>\n\n                    {getDemoRoles()[selectedRole]?.users?.map((user, index) => (\n                      <Card\n                        key={user.email}\n                        className='cursor-pointer hover:shadow-md transition-shadow border border-green-200 hover:border-green-300'\n                        onClick={() => handleDemoLogin(user.email, user.name)}\n                        data-testid={`demo-user-${selectedRole}-${index}`}\n                      >\n                        <CardContent className='p-4'>\n                          <div className='flex items-center justify-between'>\n                            <div>\n                              <h4 className='font-medium text-sm'>{user.name}</h4>\n                              <p className='text-xs text-gray-500 dark:text-gray-400'>\n                                {user.building}\n                              </p>\n                              <p className='text-xs text-green-600 dark:text-green-400 mt-1'>\n                                {user.email}\n                              </p>\n                            </div>\n                            <Building className='w-4 h-4 text-green-600 dark:text-green-400' />\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </>\n                )}\n\n                <div className='text-xs text-center text-amber-600 dark:text-amber-400 px-2'>\n                  <AlertCircle className='w-3 h-3 inline mr-1' />\n                  {language === 'fr'\n                    ? 'Mode lecture seule - aucune modification possible'\n                    : 'Read-only mode - no modifications allowed'}\n                </div>\n              </div>\n            ) : (\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-4'>\n                  <FormField\n                    control={form.control}\n                    name='email'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>\n                          {language === 'fr' ? 'Adresse courriel' : 'Email Address'}\n                        </FormLabel>\n                        <FormControl>\n                          <Input\n                            {...field}\n                            type='email'\n                            autoComplete='username'\n                            placeholder={language === 'fr' ? 'votre@email.com' : 'your@email.com'}\n                            disabled={isLoggingIn}\n                            className='h-11'\n                            data-testid='input-email'\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name='password'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{language === 'fr' ? 'Mot de passe' : 'Password'}</FormLabel>\n                        <FormControl>\n                          <div className='relative'>\n                            <Input\n                              {...field}\n                              type={showPassword ? 'text' : 'password'}\n                              placeholder={\n                                language === 'fr' ? 'Votre mot de passe' : 'Your password'\n                              }\n                              disabled={isLoggingIn}\n                              className='h-11 pr-10'\n                              data-testid='input-password'\n                              autoComplete='current-password'\n                            />\n                            <Button\n                              type='button'\n                              variant='ghost'\n                              size='sm'\n                              className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                              onClick={() => setShowPassword(!showPassword)}\n                              disabled={isLoggingIn}\n                              data-testid='button-toggle-password'\n                            >\n                              {showPassword ? (\n                                <EyeOff className='h-4 w-4 text-gray-400' />\n                              ) : (\n                                <Eye className='h-4 w-4 text-gray-400' />\n                              )}\n                              <span className='sr-only'>\n                                {showPassword\n                                  ? language === 'fr'\n                                    ? 'Masquer le mot de passe'\n                                    : 'Hide password'\n                                  : language === 'fr'\n                                    ? 'Afficher le mot de passe'\n                                    : 'Show password'}\n                              </span>\n                            </Button>\n                          </div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <Button type='submit' className='w-full h-11' disabled={isLoggingIn}>\n                    {isLoggingIn\n                      ? language === 'fr'\n                        ? 'Connexion...'\n                        : 'Signing in...'\n                      : language === 'fr'\n                        ? 'Se connecter'\n                        : 'Sign In'}\n                  </Button>\n\n                  <div className='text-center'>\n                    <Button variant='link' asChild className='text-sm'>\n                      <Link href='/forgot-password'>\n                        {language === 'fr' ? 'Mot de passe oublié ?' : 'Forgot your password?'}\n                      </Link>\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Quebec Compliance Notice */}\n        <Card className='border-blue-200 bg-blue-50 dark:bg-blue-900/20 dark:border-blue-800'>\n          <CardContent className='pt-6'>\n            <div className='flex items-start space-x-3'>\n              <Shield className='w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5' />\n              <div className='text-sm text-blue-800 dark:text-blue-200'>\n                <p className='font-medium mb-1'>\n                  {language === 'fr' ? 'Confidentialité & Sécurité' : 'Privacy & Security'}\n                </p>\n                <p>\n                  {language === 'fr'\n                    ? 'Conforme à la Loi 25 du Québec. Vos données sont protégées selon les normes de sécurité les plus strictes.'\n                    : 'Quebec Law 25 compliant. Your data is protected according to the strictest security standards.'}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className='text-center text-sm text-gray-500 dark:text-gray-400'>\n          <p>\n            {language === 'fr'\n              ? '© 2025 Koveo Gestion. Tous droits réservés.'\n              : '© 2025 Koveo Gestion. All rights reserved.'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}