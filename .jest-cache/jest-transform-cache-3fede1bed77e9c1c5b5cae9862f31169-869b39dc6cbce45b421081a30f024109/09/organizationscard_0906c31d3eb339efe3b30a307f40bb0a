520ac71baef236e23bf67b0f0ca5b90c
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationsCard = OrganizationsCard;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const react_query_1 = require("@tanstack/react-query");
const card_1 = require("@/components/ui/card");
const button_1 = require("@/components/ui/button");
const badge_1 = require("@/components/ui/badge");
const dropdown_menu_1 = require("@/components/ui/dropdown-menu");
const alert_dialog_1 = require("@/components/ui/alert-dialog");
const lucide_react_1 = require("lucide-react");
const use_toast_1 = require("@/hooks/use-toast");
const queryClient_1 = require("@/lib/queryClient");
const organization_form_dialog_1 = require("./organization-form-dialog");
const delete_confirmation_dialog_1 = require("@/components/dialogs/delete-confirmation-dialog");
/**
 * Organizations Card component displays and manages organization data.
 * @param props - Component props.
 * @param props.className - Optional CSS class name for styling.
 * @returns JSX element for the organizations card component.
 */
function OrganizationsCard({ className }) {
    const { toast } = (0, use_toast_1.useToast)();
    const queryClient = (0, react_query_1.useQueryClient)();
    const [isFormDialogOpen, setIsFormDialogOpen] = (0, react_1.useState)(false);
    const [editingOrganization, setEditingOrganization] = (0, react_1.useState)(null);
    const [deletingOrganization, setDeletingOrganization] = (0, react_1.useState)(null);
    const [viewingOrganization, setViewingOrganization] = (0, react_1.useState)(null);
    // Fetch organizations
    const { data: organizations, isLoading } = (0, react_query_1.useQuery)({
        queryKey: ['/api/organizations'],
        queryFn: async () => {
            const response = await (0, queryClient_1.apiRequest)('GET', '/api/organizations');
            return response.json();
        },
    });
    // Delete organization mutation
    const deleteMutation = (0, react_query_1.useMutation)({
        mutationFn: async (organizationId) => {
            return (0, queryClient_1.apiRequest)('DELETE', `/api/organizations/${organizationId}`);
        },
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/organizations'] });
            toast({
                title: 'Organization Deleted',
                description: 'Organization deleted successfully',
            });
            setDeletingOrganization(null);
        },
        onError: (_error) => {
            toast({
                title: 'Error',
                description: _error.message || 'Failed to delete organization',
                variant: 'destructive',
            });
        },
    });
    const handleEdit = (organization) => {
        setEditingOrganization(organization);
        setIsFormDialogOpen(true);
    };
    const handleView = (organization) => {
        setViewingOrganization(organization);
    };
    const handleDelete = (organization) => {
        setDeletingOrganization(organization);
    };
    const confirmDelete = () => {
        if (deletingOrganization) {
            deleteMutation.mutate(deletingOrganization.id);
        }
    };
    const handleCreateNew = () => {
        setEditingOrganization(null);
        setIsFormDialogOpen(true);
    };
    const handleFormClose = () => {
        setIsFormDialogOpen(false);
        setEditingOrganization(null);
    };
    const getOrganizationTypeColor = (type) => {
        switch (type) {
            case 'management_company':
                return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300';
            case 'syndicate':
                return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300';
            case 'cooperative':
                return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300';
            default:
                return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300';
        }
    };
    const formatTypeName = (type) => {
        switch (type) {
            case 'management_company':
                return 'Management Company';
            case 'syndicate':
                return 'Syndicate';
            case 'cooperative':
                return 'Cooperative';
            default:
                return type;
        }
    };
    if (isLoading) {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { className: className, children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: 'text-sm font-medium flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: 'h-4 w-4' }), "Organizations"] }), (0, jsx_runtime_1.jsxs)(button_1.Button, { size: 'sm', onClick: handleCreateNew, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: 'h-4 w-4 mr-2' }), "Create"] })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)("div", { className: 'flex items-center justify-center py-8', children: (0, jsx_runtime_1.jsx)("div", { className: 'animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900' }) }) })] }));
    }
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)(card_1.Card, { className: className, children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-4', children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: 'text-lg font-semibold flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: 'h-5 w-5' }), "Organizations"] }), (0, jsx_runtime_1.jsxs)(button_1.Button, { size: 'sm', onClick: handleCreateNew, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: 'h-4 w-4 mr-2' }), "Create"] })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { className: 'space-y-4', children: !organizations || organizations.length === 0 ? ((0, jsx_runtime_1.jsxs)("div", { className: 'text-center py-8', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: 'h-12 w-12 text-gray-400 mx-auto mb-4' }), (0, jsx_runtime_1.jsx)("p", { className: 'text-gray-500 mb-4', children: "No organizations found" }), (0, jsx_runtime_1.jsxs)(button_1.Button, { onClick: handleCreateNew, variant: 'outline', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: 'h-4 w-4 mr-2' }), "Create First Organization"] })] })) : ((0, jsx_runtime_1.jsx)("div", { className: 'grid gap-4', children: organizations.map((organization) => ((0, jsx_runtime_1.jsx)("div", { className: 'border rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors', children: (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-start justify-between', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex-1 space-y-2', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)("h4", { className: 'font-medium text-lg', children: organization.name }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { className: getOrganizationTypeColor(organization.type), children: formatTypeName(organization.type) })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-1', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.MapPin, { className: 'h-3 w-3' }), (0, jsx_runtime_1.jsxs)("span", { children: [organization.city, ", ", organization.province] })] }), organization.phone && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-1', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Phone, { className: 'h-3 w-3' }), (0, jsx_runtime_1.jsx)("span", { children: organization.phone })] })), organization.email && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-1', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Mail, { className: 'h-3 w-3' }), (0, jsx_runtime_1.jsx)("span", { children: organization.email })] })), organization.website && ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-1', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Globe, { className: 'h-3 w-3' }), (0, jsx_runtime_1.jsx)("span", { children: organization.website })] }))] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-sm text-gray-600 dark:text-gray-400', children: organization.address })] }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenu, { children: [(0, jsx_runtime_1.jsx)(dropdown_menu_1.DropdownMenuTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'sm', children: (0, jsx_runtime_1.jsx)(lucide_react_1.MoreVertical, { className: 'h-4 w-4' }) }) }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuContent, { align: 'end', children: [(0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuItem, { onClick: () => handleView(organization), children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Eye, { className: 'h-4 w-4 mr-2' }), "View"] }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuItem, { onClick: () => handleEdit(organization), children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Edit, { className: 'h-4 w-4 mr-2' }), "Edit"] }), (0, jsx_runtime_1.jsxs)(dropdown_menu_1.DropdownMenuItem, { onClick: () => handleDelete(organization), className: 'text-red-600 dark:text-red-400', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, { className: 'h-4 w-4 mr-2' }), "Delete"] })] })] })] }) }, organization.id))) })) })] }), (0, jsx_runtime_1.jsx)(organization_form_dialog_1.OrganizationFormDialog, { open: isFormDialogOpen, onOpenChange: handleFormClose, organization: editingOrganization, onSuccess: () => {
                    setIsFormDialogOpen(false);
                    setEditingOrganization(null);
                } }), deletingOrganization && ((0, jsx_runtime_1.jsx)(delete_confirmation_dialog_1.DeleteConfirmationDialog, { open: !!deletingOrganization, onOpenChange: (open) => !open && setDeletingOrganization(null), entityType: 'organization', entityId: deletingOrganization.id, entityName: deletingOrganization.name, onConfirm: confirmDelete, isDeleting: deleteMutation.isPending })), viewingOrganization && ((0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialog, { open: !!viewingOrganization, onOpenChange: () => setViewingOrganization(null), children: (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogContent, { className: 'max-w-2xl', children: [(0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialogHeader, { children: (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogTitle, { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, { className: 'h-5 w-5' }), viewingOrganization.name] }) }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-4', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-2 gap-4', children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Type" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { className: getOrganizationTypeColor(viewingOrganization.type), children: formatTypeName(viewingOrganization.type) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Status" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: viewingOrganization.isActive ? 'default' : 'secondary', children: viewingOrganization.isActive ? 'Active' : 'Inactive' })] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Address" }), (0, jsx_runtime_1.jsxs)("p", { className: 'mt-1', children: [viewingOrganization.address, (0, jsx_runtime_1.jsx)("br", {}), viewingOrganization.city, ", ", viewingOrganization.province, ' ', viewingOrganization.postalCode] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-2 gap-4', children: [viewingOrganization.phone && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Phone" }), (0, jsx_runtime_1.jsx)("p", { className: 'mt-1', children: viewingOrganization.phone })] })), viewingOrganization.email && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Email" }), (0, jsx_runtime_1.jsx)("p", { className: 'mt-1', children: viewingOrganization.email })] }))] }), viewingOrganization.website && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Website" }), (0, jsx_runtime_1.jsx)("p", { className: 'mt-1', children: (0, jsx_runtime_1.jsx)("a", { href: viewingOrganization.website, target: '_blank', rel: 'noopener noreferrer', className: 'text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200', children: viewingOrganization.website }) })] })), viewingOrganization.registrationNumber && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: 'text-sm font-medium text-gray-500 dark:text-gray-400', children: "Registration Number" }), (0, jsx_runtime_1.jsx)("p", { className: 'mt-1', children: viewingOrganization.registrationNumber })] }))] }), (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogFooter, { children: [(0, jsx_runtime_1.jsx)(alert_dialog_1.AlertDialogCancel, { children: "Close" }), (0, jsx_runtime_1.jsxs)(alert_dialog_1.AlertDialogAction, { onClick: () => {
                                        setViewingOrganization(null);
                                        handleEdit(viewingOrganization);
                                    }, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Edit, { className: 'h-4 w-4 mr-2' }), "Edit"] })] })] }) }))] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,