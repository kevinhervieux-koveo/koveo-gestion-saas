{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/document/prepareDocument.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,aAAa,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACzD,IAAI,aAAa,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAC9D,OAAO,CAAC,oCAAoC,CAAC,CAAC;AAC9C,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC5B,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAChC,IAAI,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAE9C,MAAM,UAAU,GAAG,MAAM,CAAC,+CAA+C,CAAC,CAAC;AAC3E,SAAS,eAAe,CAAC,QAAQ;IAC7B,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;QACvB,OAAO;IACX,CAAC;IACD,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAC,EAAE;QACpC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QACpB,cAAc,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC,EAAE;QACC,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,IAAI;KAChB,CAAC,CAAC;IACH,uEAAuE;IACvE,6DAA6D;IAC7D,uBAAuB;IACvB,IAAI,QAAQ,CAAC,aAAa,EAAE,CAAC;QACzB,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IACD,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAC,EAAE;QACnC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QACpB,MAAM,YAAY,GAAG,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,YAAY,KAAK,SAAS,EAAE,CAAC;YAC7B,IAAI,EAAE,CAAC,KAAK,KAAK,YAAY,EAAE,CAAC;gBAC5B,aAAa,CAAC,gBAAgB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YACjD,CAAC;YACD,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC7B,CAAC;IACL,CAAC,EAAE;QACC,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,IAAI;KAChB,CAAC,CAAC;IACH,QAAQ,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;AACtC,CAAC;AACD,SAAS,cAAc,CAAC,EAAE;IACtB,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC;QACjB,OAAO;IACX,CAAC;IACD,IAAI,aAAa,CAAC,aAAa,CAAC,EAAE,EAAE;QAChC,OAAO;QACP,UAAU;KACb,CAAC,EAAE,CAAC;QACD,WAAW,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;QACxC,WAAW,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC;QAC5C,WAAW,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IACD,EAAE,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;AAChC,CAAC;AAED,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/document/prepareDocument.js"],"sourcesContent":["'use strict';\n\nvar dispatchEvent = require('../event/dispatchEvent.js');\nvar isElementType = require('../utils/misc/isElementType.js');\nrequire('../utils/dataTransfer/Clipboard.js');\nvar UI = require('./UI.js');\nrequire('@testing-library/dom');\nvar interceptor = require('./interceptor.js');\n\nconst isPrepared = Symbol('Node prepared with document state workarounds');\nfunction prepareDocument(document) {\n    if (document[isPrepared]) {\n        return;\n    }\n    document.addEventListener('focus', (e)=>{\n        const el = e.target;\n        prepareElement(el);\n    }, {\n        capture: true,\n        passive: true\n    });\n    // Our test environment defaults to `document.body` as `activeElement`.\n    // In other environments this might be `null` when preparing.\n    // istanbul ignore else\n    if (document.activeElement) {\n        prepareElement(document.activeElement);\n    }\n    document.addEventListener('blur', (e)=>{\n        const el = e.target;\n        const initialValue = UI.getInitialValue(el);\n        if (initialValue !== undefined) {\n            if (el.value !== initialValue) {\n                dispatchEvent.dispatchDOMEvent(el, 'change');\n            }\n            UI.clearInitialValue(el);\n        }\n    }, {\n        capture: true,\n        passive: true\n    });\n    document[isPrepared] = isPrepared;\n}\nfunction prepareElement(el) {\n    if (el[isPrepared]) {\n        return;\n    }\n    if (isElementType.isElementType(el, [\n        'input',\n        'textarea'\n    ])) {\n        interceptor.prepareValueInterceptor(el);\n        interceptor.prepareSelectionInterceptor(el);\n        interceptor.prepareRangeTextInterceptor(el);\n    }\n    el[isPrepared] = isPrepared;\n}\n\nexports.prepareDocument = prepareDocument;\n"],"version":3}