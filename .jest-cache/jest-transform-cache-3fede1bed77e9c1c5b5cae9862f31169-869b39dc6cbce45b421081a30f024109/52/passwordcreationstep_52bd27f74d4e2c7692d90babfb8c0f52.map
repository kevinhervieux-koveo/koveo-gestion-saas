{"file":"/home/runner/workspace/client/src/components/auth/steps/password-creation-step.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/auth/steps/password-creation-step.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Shield, Lock, AlertTriangle, Eye, EyeOff } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport { PasswordStrengthIndicator } from '../password-strength-indicator';\nimport { validatePasswordStrength } from '@/utils/password-validation';\nimport type { WizardStepProps } from '../registration-wizard';\n\n/**\n * Interface for password creation step data.\n * Contains password validation and confirmation fields.\n */\ninterface PasswordCreationData {\n  password: string;\n  confirmPassword: string;\n  isValid: boolean;\n  error?: string;\n}\n\n/**\n * Password Creation Step Component.\n *\n * Secure password creation with strength validation and confirmation.\n * Implements Quebec-compliant security standards for property management.\n * @param root0 - The wizard step props.\n * @param root0.data - Current step data.\n * @param root0.onDataChange - Callback when step data changes.\n * @param root0.onValidationChange - Callback when validation status changes.\n * @returns JSX element for the password creation step.\n */\n/**\n * PasswordCreationStep function.\n * @param root0\n * @param root0.data\n * @param root0.onDataChange\n * @param root0.onValidationChange\n * @param root0._data\n * @returns Function result.\n */\nexport function PasswordCreationStep({ _data, onDataChange, onValidationChange }: WizardStepProps) {\n  const { t: _t } = useLanguage();\n  const [formData, setFormData] = useState<PasswordCreationData>({\n    password: '',\n    confirmPassword: '',\n    isValid: false,\n    ..._data,\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [touched, setTouched] = useState({\n    password: false,\n    confirmPassword: false,\n  });\n\n  // Validate form whenever password fields change\n  useEffect(() => {\n    const passwordStrength = validatePasswordStrength(formData.password);\n    const passwordsMatch = formData.password === formData.confirmPassword;\n    const hasPassword = formData.password.length > 0;\n    const hasConfirmPassword = formData.confirmPassword.length > 0;\n    const isValid = passwordStrength.isValid && passwordsMatch && hasPassword && hasConfirmPassword;\n\n    // Only update if validation state actually changed\n    if (formData.isValid !== isValid) {\n      const updatedData = { ...formData, isValid };\n      onDataChange(updatedData);\n      onValidationChange(isValid);\n    }\n  }, [formData.password, formData.confirmPassword, formData.isValid]);\n\n  const handlePasswordChange = (_value: string) => {\n    setFormData((prev) => ({\n      ...prev,\n      password: _value,\n      _error: undefined,\n    }));\n  };\n\n  const handleConfirmPasswordChange = (_value: string) => {\n    setFormData((prev) => ({\n      ...prev,\n      confirmPassword: _value,\n      _error: undefined,\n    }));\n  };\n\n  const handleBlur = (field: 'password' | 'confirmPassword') => {\n    setTouched((prev) => ({ ...prev, [field]: true }));\n  };\n\n  const getPasswordMatchError = () => {\n    if (!touched.confirmPassword || !formData.confirmPassword) {\n      return null;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      return 'Les mots de passe ne correspondent pas';\n    }\n    return null;\n  };\n\n  const passwordStrength = validatePasswordStrength(formData.password);\n  const passwordMatchError = getPasswordMatchError();\n  const hasPasswordError =\n    touched.password && !passwordStrength.isValid && formData.password.length > 0;\n\n  return (\n    <div className='space-y-6 max-w-2xl mx-auto'>\n      {/* Security Notice */}\n      <Alert className='border-blue-200 bg-blue-50'>\n        <Shield className='h-4 w-4 text-blue-600' />\n        <AlertDescription className='text-blue-800'>\n          <strong>Sécurité renforcée:</strong> Créez un mot de passe sécurisé pour protéger votre\n          compte et respecter les standards de sécurité québécois.\n        </AlertDescription>\n      </Alert>\n\n      <Card>\n        <CardContent className='pt-6 space-y-6'>\n          {/* Password Field */}\n          <div className='space-y-2'>\n            <Label htmlFor='password' className='text-sm font-medium text-gray-700'>\n              Mot de passe *\n            </Label>\n            <div className='relative'>\n              <Lock className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n              <Input\n                id='password'\n                type={showPassword ? 'text' : 'password'}\n                value={formData.password}\n                onChange={(e) => handlePasswordChange(e.target.value)}\n                onBlur={() => handleBlur('password')}\n                placeholder='Entrez votre mot de passe'\n                className={`pl-10 pr-10 ${hasPasswordError ? 'border-red-500 focus:border-red-500' : ''}`}\n                aria-describedby='password-requirements'\n                data-testid='input-password'\n              />\n              <Button\n                type='button'\n                variant='ghost'\n                size='sm'\n                className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                onClick={() => setShowPassword(!showPassword)}\n                data-testid='button-toggle-password'\n              >\n                {showPassword ? (\n                  <EyeOff className='h-4 w-4 text-gray-400' />\n                ) : (\n                  <Eye className='h-4 w-4 text-gray-400' />\n                )}\n                <span className='sr-only'>\n                  {showPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n                </span>\n              </Button>\n            </div>\n\n            {/* Password Strength Indicator */}\n            <PasswordStrengthIndicator\n              password={formData.password}\n              showPassword={showPassword}\n              onToggleVisibility={() => setShowPassword(!showPassword)}\n              className='mt-3'\n            />\n\n            {hasPasswordError && (\n              <Alert variant='destructive'>\n                <AlertTriangle className='h-4 w-4' />\n                <AlertDescription>\n                  Le mot de passe ne respecte pas les exigences de sécurité.\n                </AlertDescription>\n              </Alert>\n            )}\n          </div>\n\n          {/* Confirm Password Field */}\n          <div className='space-y-2'>\n            <Label htmlFor='confirmPassword' className='text-sm font-medium text-gray-700'>\n              Confirmer le mot de passe *\n            </Label>\n            <div className='relative'>\n              <Lock className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n              <Input\n                id='confirmPassword'\n                type={showConfirmPassword ? 'text' : 'password'}\n                value={formData.confirmPassword}\n                onChange={(e) => handleConfirmPasswordChange(e.target.value)}\n                onBlur={() => handleBlur('confirmPassword')}\n                placeholder='Confirmez votre mot de passe'\n                className={`pl-10 pr-10 ${passwordMatchError ? 'border-red-500 focus:border-red-500' : ''}`}\n                data-testid='input-confirm-password'\n              />\n              <Button\n                type='button'\n                variant='ghost'\n                size='sm'\n                className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                data-testid='button-toggle-confirm-password'\n              >\n                {showConfirmPassword ? (\n                  <EyeOff className='h-4 w-4 text-gray-400' />\n                ) : (\n                  <Eye className='h-4 w-4 text-gray-400' />\n                )}\n                <span className='sr-only'>\n                  {showConfirmPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n                </span>\n              </Button>\n            </div>\n\n            {formData.confirmPassword && formData.password === formData.confirmPassword && (\n              <div className='flex items-center text-sm text-green-600'>\n                <Shield className='h-4 w-4 mr-1' />\n                Les mots de passe correspondent\n              </div>\n            )}\n\n            {passwordMatchError && (\n              <Alert variant='destructive'>\n                <AlertTriangle className='h-4 w-4' />\n                <AlertDescription>{passwordMatchError}</AlertDescription>\n              </Alert>\n            )}\n          </div>\n\n          {/* Security Guidelines */}\n          <div className='bg-gray-50 p-4 rounded-lg'>\n            <h4 className='text-sm font-medium text-gray-900 mb-2'>💡 Conseils de sécurité</h4>\n            <ul className='text-xs text-gray-600 space-y-1'>\n              <li>• Utilisez une combinaison unique de lettres, chiffres et symboles</li>\n              <li>• Évitez les informations personnelles (nom, date de naissance)</li>\n              <li>• Ne réutilisez pas un mot de passe d'un autre compte</li>\n              <li>• Considérez l'utilisation d'un gestionnaire de mots de passe</li>\n            </ul>\n          </div>\n\n          {/* Quebec Compliance Notice */}\n          <div className='bg-blue-50 border border-blue-200 p-4 rounded-lg'>\n            <h4 className='text-sm font-medium text-blue-900 mb-2'>\n              🛡️ Conformité Québécoise - Sécurité des données\n            </h4>\n            <p className='text-xs text-blue-800'>\n              Votre mot de passe est chiffré selon les standards de l'industrie et stocké de manière\n              sécurisée conformément à la Loi 25 du Québec. Nous ne pouvons pas voir votre mot de\n              passe une fois qu'il est enregistré.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"version":3}