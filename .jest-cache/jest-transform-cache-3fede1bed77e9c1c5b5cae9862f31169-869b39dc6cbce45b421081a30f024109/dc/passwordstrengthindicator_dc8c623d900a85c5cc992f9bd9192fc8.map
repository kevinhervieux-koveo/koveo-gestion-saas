{"file":"/home/runner/workspace/client/src/components/auth/password-strength-indicator.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/auth/password-strength-indicator.tsx"],"sourcesContent":["import React from 'react';\nimport { Check, X, Eye, EyeOff } from 'lucide-react';\nimport {\n  validatePasswordStrength,\n  getPasswordCriteria,\n  getPasswordStrengthLabel,\n  getPasswordStrengthColor,\n  getPasswordStrengthBarColor,\n} from '@/utils/password-validation';\n\n/**\n * Props for the PasswordStrengthIndicator component.\n * Displays real-time password strength validation and criteria.\n */\ninterface PasswordStrengthIndicatorProps {\n  password: string;\n  showPassword: boolean;\n  onToggleVisibility: () => void;\n  className?: string;\n}\n\n/**\n * Password Strength Indicator Component.\n *\n * Provides real-time password strength feedback with Quebec French labels\n * and visual indicators for security compliance.\n * @param root0 - Component props object.\n * @param root0.password - Current password value to validate.\n * @param root0.showPassword - Whether password is visible.\n * @param root0.onToggleVisibility - Function to toggle password visibility.\n * @param root0.className - Optional CSS class name.\n * @returns JSX element for password strength indicator.\n */\nexport function PasswordStrengthIndicator({\n  password,\n  showPassword,\n  onToggleVisibility,\n  className = '',\n}: PasswordStrengthIndicatorProps) {\n  const strength = validatePasswordStrength(password);\n  const criteria = getPasswordCriteria(password);\n\n  return (\n    <div className={`space-y-3 ${className}`}>\n      {/* Password visibility toggle */}\n      <div className='flex items-center justify-between'>\n        <span className='text-sm font-medium text-gray-700'>Force du mot de passe</span>\n        <button\n          type='button'\n          onClick={onToggleVisibility}\n          className='flex items-center text-sm text-gray-500 hover:text-gray-700'\n          aria-label={showPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n        >\n          {showPassword ? (\n            <>\n              <EyeOff className='h-4 w-4 mr-1' />\n              Masquer\n            </>\n          ) : (\n            <>\n              <Eye className='h-4 w-4 mr-1' />\n              Afficher\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Strength progress bar */}\n      {password && password.length > 0 && (\n        <div className='space-y-2'>\n          <div className='flex items-center justify-between'>\n            <span className={`text-sm font-medium ${getPasswordStrengthColor(strength.score)}`}>\n              {getPasswordStrengthLabel(strength.score)}\n            </span>\n            <span className='text-xs text-gray-500'>{strength.score}/4</span>\n          </div>\n\n          <div className='w-full bg-gray-200 rounded-full h-2'>\n            <div\n              className={`h-2 rounded-full transition-all duration-300 ${getPasswordStrengthBarColor(strength.score)}`}\n              style={{ width: `${(strength.score / 4) * 100}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Criteria checklist */}\n      <div className='space-y-2'>\n        <h4 className='text-sm font-medium text-gray-700 mb-2'>Exigences du mot de passe:</h4>\n        <div className='grid grid-cols-1 gap-1 text-xs'>\n          <CriteriaItem met={criteria.minLength} text='Au moins 8 caractères' />\n          <CriteriaItem met={criteria.hasUpperCase} text='Une lettre majuscule' />\n          <CriteriaItem met={criteria.hasLowerCase} text='Une lettre minuscule' />\n          <CriteriaItem met={criteria.hasNumbers} text='Un chiffre' />\n          <CriteriaItem met={criteria.hasSymbols} text='Un symbole (!@#$%^&*)' />\n          <CriteriaItem met={criteria.noCommonPatterns} text='Éviter les mots de passe communs' />\n        </div>\n      </div>\n\n      {/* Feedback messages */}\n      {password &&\n        password.length > 0 &&\n        strength &&\n        strength.feedback &&\n        strength.feedback.length > 0 && (\n          <div className='space-y-1'>\n            {strength.feedback.map((message, _index) => (\n              <div key={_index} className='text-xs text-gray-600 flex items-start'>\n                <span className='mr-1'>•</span>\n                <span>{message}</span>\n              </div>\n            ))}\n          </div>\n        )}\n    </div>\n  );\n}\n\n/**\n * Props for the CriteriaItem component.\n * Displays individual password criteria with status indicator.\n */\ninterface CriteriaItemProps {\n  met: boolean;\n  text: string;\n}\n\n/**\n * Displays an individual password criteria item with check/x icon.\n * Shows whether the criterion is met with appropriate styling.\n * @param root0 - The props object.\n * @param root0.met - Whether the password criterion is satisfied.\n * @param root0.text - The text description of the criterion.\n * @returns JSX element for the criteria item.\n */\n/**\n * CriteriaItem function.\n * @param root0\n * @param root0.met\n * @param root0.text\n * @returns Function result.\n */\nfunction CriteriaItem({ met, text }: CriteriaItemProps) {\n  return (\n    <div className='flex items-center space-x-2'>\n      {met ? (\n        <Check className='h-3 w-3 text-green-500 flex-shrink-0' />\n      ) : (\n        <X className='h-3 w-3 text-red-500 flex-shrink-0' />\n      )}\n      <span className={met ? 'text-green-700' : 'text-red-600'}>{text}</span>\n    </div>\n  );\n}\n"],"version":3}