{"file":"/home/runner/workspace/server/api/trial-request.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/server/api/trial-request.ts"],"sourcesContent":["import express from 'express';\nimport { z } from 'zod';\nimport { MailService } from '@sendgrid/mail';\n\nconst router = express.Router();\n\n// Initialize SendGrid\nif (!process.env.SENDGRID_API_KEY) {\n  console.warn('⚠️ SENDGRID_API_KEY environment variable is not set');\n}\n\nconst mailService = new MailService();\nif (process.env.SENDGRID_API_KEY) {\n  mailService.setApiKey(process.env.SENDGRID_API_KEY);\n}\n\n// Validation schema for trial request\nconst trialRequestSchema = z.object({\n  firstName: z.string().min(1, 'First name is required'),\n  lastName: z.string().min(1, 'Last name is required'),\n  email: z.string().email('Invalid email format'),\n  phone: z.string().min(1, 'Phone number is required'),\n  company: z.string().min(1, 'Company name is required'),\n  address: z.string().optional(),\n  city: z.string().optional(),\n  province: z.string().optional(),\n  postalCode: z.string().optional(),\n  numberOfBuildings: z.string().refine((val) => parseInt(val) > 0, 'Must be a positive number'),\n  numberOfResidences: z.string().refine((val) => parseInt(val) > 0, 'Must be a positive number'),\n  message: z.string().optional(),\n});\n\ntype TrialRequestData = z.infer<typeof trialRequestSchema>;\n\n/**\n * POST /api/trial-request\n * Sends a trial request email to Koveo Gestion.\n */\nrouter.post('/trial-request', async (req, res) => {\n  try {\n    // Validate request data\n    const validationResult = trialRequestSchema.safeParse(req.body);\n\n    if (!validationResult.success) {\n      return res.status(400).json({\n        message: 'Invalid request data',\n        errors: validationResult.error.issues,\n      });\n    }\n\n    const data: TrialRequestData = validationResult.data;\n\n    // Check if SendGrid is configured\n    if (!process.env.SENDGRID_API_KEY) {\n      return res.status(500).json({\n        message: 'Email service not configured',\n      });\n    }\n\n    // Prepare email content\n    const emailSubject = `Nouvelle demande d'essai gratuit - ${data.company}`;\n\n    const emailText = `\nNouvelle demande d'essai gratuit pour Koveo Gestion\n\nINFORMATIONS DU CONTACT:\n- Nom: ${data.firstName} ${data.lastName}\n- Entreprise: ${data.company}\n- Courriel: ${data.email}\n- Téléphone: ${data.phone}\n\nADRESSE:\n${data.address ? `- Adresse: ${data.address}` : ''}\n${data.city ? `- Ville: ${data.city}` : ''}\n${data.province ? `- Province: ${data.province}` : ''}\n${data.postalCode ? `- Code postal: ${data.postalCode}` : ''}\n\nINFORMATIONS SUR LES PROPRIÉTÉS:\n- Nombre de bâtiments: ${data.numberOfBuildings}\n- Nombre de résidences: ${data.numberOfResidences}\n\n${data.message ? `MESSAGE ADDITIONNEL:\\n${data.message}` : ''}\n\n---\nCette demande a été soumise via le site web Koveo Gestion.\n    `.trim();\n\n    const emailHtml = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Nouvelle demande d'essai gratuit</title>\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background-color: #2563eb; color: white; padding: 20px; text-align: center; }\n    .content { padding: 20px; background-color: #f9fafb; }\n    .section { margin-bottom: 20px; }\n    .section h3 { color: #2563eb; margin-bottom: 10px; }\n    .info-grid { display: grid; grid-template-columns: 1fr 2fr; gap: 10px; margin-bottom: 10px; }\n    .label { font-weight: bold; }\n    .highlight { background-color: #dbeafe; padding: 15px; border-radius: 5px; }\n    .footer { text-align: center; color: #666; font-size: 12px; margin-top: 30px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>Nouvelle demande d'essai gratuit</h1>\n      <p>Koveo Gestion</p>\n    </div>\n    \n    <div class=\"content\">\n      <div class=\"section\">\n        <h3>Informations du contact</h3>\n        <div class=\"info-grid\">\n          <span class=\"label\">Nom:</span>\n          <span>${data.firstName} ${data.lastName}</span>\n          <span class=\"label\">Entreprise:</span>\n          <span>${data.company}</span>\n          <span class=\"label\">Courriel:</span>\n          <span><a href=\"mailto:${data.email}\">${data.email}</a></span>\n          <span class=\"label\">Téléphone:</span>\n          <span><a href=\"tel:${data.phone}\">${data.phone}</a></span>\n        </div>\n      </div>\n\n      ${\n        data.address || data.city || data.province || data.postalCode\n          ? `\n      <div class=\"section\">\n        <h3>Adresse</h3>\n        <div class=\"info-grid\">\n          ${data.address ? `<span class=\"label\">Adresse:</span><span>${data.address}</span>` : ''}\n          ${data.city ? `<span class=\"label\">Ville:</span><span>${data.city}</span>` : ''}\n          ${data.province ? `<span class=\"label\">Province:</span><span>${data.province}</span>` : ''}\n          ${data.postalCode ? `<span class=\"label\">Code postal:</span><span>${data.postalCode}</span>` : ''}\n        </div>\n      </div>\n      `\n          : ''\n      }\n\n      <div class=\"section highlight\">\n        <h3>Informations sur les propriétés</h3>\n        <div class=\"info-grid\">\n          <span class=\"label\">Nombre de bâtiments:</span>\n          <span><strong>${data.numberOfBuildings}</strong></span>\n          <span class=\"label\">Nombre de résidences:</span>\n          <span><strong>${data.numberOfResidences}</strong></span>\n        </div>\n      </div>\n\n      ${\n        data.message\n          ? `\n      <div class=\"section\">\n        <h3>Message additionnel</h3>\n        <p>${data.message.replace(/\\n/g, '<br>')}</p>\n      </div>\n      `\n          : ''\n      }\n      \n      <div class=\"footer\">\n        <p>Cette demande a été soumise via le site web Koveo Gestion</p>\n        <p>Date: ${new Date().toLocaleDateString('fr-CA', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          timeZone: 'America/Toronto',\n        })}</p>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n    `.trim();\n\n    // Send email via SendGrid\n    const emailData = {\n      to: 'info@koveo-gestion.com',\n      from: {\n        email: 'noreply@koveo-gestion.com',\n        name: \"Koveo Gestion - Demandes d'essai\",\n      },\n      replyTo: {\n        email: data.email,\n        name: `${data.firstName} ${data.lastName}`,\n      },\n      subject: emailSubject,\n      text: emailText,\n      html: emailHtml,\n      trackingSettings: {\n        clickTracking: { enable: false },\n        openTracking: { enable: false },\n        subscriptionTracking: { enable: false },\n      },\n      mailSettings: {\n        sandboxMode: { enable: false },\n      },\n    };\n\n    await mailService.send(emailData);\n\n    // Log successful request\n    console.log(`✅ Trial request sent successfully for ${data.company} (${data.email})`);\n\n    res.status(200).json({\n      message: 'Trial request sent successfully',\n      success: true,\n    });\n\n  } catch (error: any) {\n    console.error('❌ Error processing trial request:', error);\n\n    // Send appropriate error response\n    if (error.code) {\n      const sgError = error as { code: number; message: string };\n      console.error('SendGrid error details:', sgError);\n\n      return res.status(500).json({\n        message: 'Failed to send trial request email',\n        error: 'Email service error',\n      });\n    }\n\n    res.status(500).json({\n      message: 'Internal server error',\n      error: 'Failed to process request',\n    });\n  }\n});\n\nexport default router;\n\n// Export registration function for consistency with other modules\nexport function registerTrialRequestRoutes(app: express.Application) {\n  app.use('/api', router);\n}"],"version":3}