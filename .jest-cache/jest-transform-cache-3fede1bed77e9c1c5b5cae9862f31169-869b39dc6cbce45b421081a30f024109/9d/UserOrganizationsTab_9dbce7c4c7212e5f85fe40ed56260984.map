{"file":"/home/runner/workspace/client/src/components/user-tabs/UserOrganizationsTab.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,oDAwDC;;AArED,+CAAmD;AACnD,mDAAgD;AAChD,+CAAgF;AAChF,uDAAoD;AAUpD,SAAgB,oBAAoB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,GAAG,KAAK,EAA6B;IAChH,MAAM,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,GAAG,IAAA,gBAAQ,EAAW,EAAE,CAAC,CAAC;IAEjF,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YAC/B,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEX,MAAM,wBAAwB,GAAG,CAAC,cAAsB,EAAE,EAAE;QAC1D,wBAAwB,CAAC,IAAI,CAAC,EAAE,CAC9B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;YAC3B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,cAAc,CAAC;YAC1C,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,cAAc,CAAC,CAC9B,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,GAAG,EAAE;QACtB,MAAM,CAAC,qBAAqB,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IAEvB,OAAO,CACL,wBAAC,WAAI,eACH,uBAAC,iBAAU,cACT,uBAAC,gBAAS,2CAAqC,GACpC,EACb,wBAAC,kBAAW,IAAC,SAAS,EAAC,WAAW,aAChC,gCAAK,SAAS,EAAC,qCAAqC,YACjD,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAC1B,iCAAkB,SAAS,EAAC,6BAA6B,aACvD,uBAAC,mBAAQ,IACP,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE,EAAE,EACnB,OAAO,EAAE,qBAAqB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAC/C,eAAe,EAAE,GAAG,EAAE,CAAC,wBAAwB,CAAC,GAAG,CAAC,EAAE,CAAC,iBAC1C,gBAAgB,GAAG,CAAC,EAAE,EAAE,GACrC,EACF,kCACE,OAAO,EAAE,OAAO,GAAG,CAAC,EAAE,EAAE,EACxB,SAAS,EAAC,4FAA4F,YAErG,GAAG,CAAC,IAAI,GACH,KAZA,GAAG,CAAC,EAAE,CAaV,CACP,CAAC,GACE,EAEN,gCAAK,SAAS,EAAC,uBAAuB,YACpC,uBAAC,eAAM,IAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,iBAAc,oBAAoB,YAC/E,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,+BAA+B,GACnD,GACL,IACM,IACT,CACR,CAAC;AACJ,CAAC","names":[],"sources":["/home/runner/workspace/client/src/components/user-tabs/UserOrganizationsTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport type { UserWithAssignments, Organization } from '@shared/schema';\n\ninterface UserOrganizationsTabProps {\n  user: UserWithAssignments | null;\n  organizations: Organization[];\n  onSave: (organizationIds: string[]) => void;\n  isLoading?: boolean;\n}\n\nexport function UserOrganizationsTab({ user, organizations, onSave, isLoading = false }: UserOrganizationsTabProps) {\n  const [selectedOrganizations, setSelectedOrganizations] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (user && user.organizations) {\n      setSelectedOrganizations(user.organizations.map((org: any) => org.id));\n    }\n  }, [user]);\n\n  const handleOrganizationToggle = (organizationId: string) => {\n    setSelectedOrganizations(prev => \n      prev.includes(organizationId)\n        ? prev.filter(id => id !== organizationId)\n        : [...prev, organizationId]\n    );\n  };\n\n  const handleSave = () => {\n    onSave(selectedOrganizations);\n  };\n\n  if (!user) return null;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Organization Assignments</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid gap-4 max-h-60 overflow-y-auto\">\n          {organizations.map((org) => (\n            <div key={org.id} className=\"flex items-center space-x-2\">\n              <Checkbox\n                id={`org-${org.id}`}\n                checked={selectedOrganizations.includes(org.id)}\n                onCheckedChange={() => handleOrganizationToggle(org.id)}\n                data-testid={`checkbox-org-${org.id}`}\n              />\n              <label\n                htmlFor={`org-${org.id}`}\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                {org.name}\n              </label>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"flex justify-end pt-4\">\n          <Button onClick={handleSave} disabled={isLoading} data-testid=\"save-organizations\">\n            {isLoading ? 'Saving...' : 'Save Organization Assignments'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"version":3}