{"file":"/home/runner/workspace/client/src/pages/residents/residence.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/residents/residence.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { NoDataCard } from '@/components/ui/no-data-card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Home,\n  Building,\n  MapPin,\n  Bed,\n  Bath,\n  Car,\n  Package,\n  Phone,\n  Mail,\n  User,\n  Edit,\n  Plus,\n  Trash2,\n  FileText,\n  Download,\n  Calendar,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/hooks/use-language';\nimport { apiRequest } from '@/lib/queryClient';\nimport { Link } from 'wouter';\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  unitNumber: string;\n  floor?: number;\n  squareFootage?: string;\n  bedrooms?: number;\n  bathrooms?: string;\n  balcony?: boolean;\n  parkingSpaceNumbers?: string[];\n  storageSpaceNumbers?: string[];\n  isActive: boolean;\n  buildingId: string;\n  building: {\n    id: string;\n    name: string;\n    address: string;\n    city: string;\n    province: string;\n    postalCode: string;\n  };\n}\n\n/**\n *\n */\ninterface Contact {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone?: string;\n  type: string;\n}\n\n// Contact form schema\nconst contactFormSchema = z.object({\n  firstName: z.string().min(1, 'First name is required'),\n  lastName: z.string().min(1, 'Last name is required'),\n  email: z.string().email('Invalid email address'),\n  phone: z.string().optional(),\n  type: z.enum(['primary', 'emergency', 'other']),\n});\n\n/**\n *\n */\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\n/**\n *\n */\nexport default function Residence() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const queryClient = useQueryClient();\n\n  const [selectedBuildingId, setSelectedBuildingId] = useState<string>('');\n  const [selectedResidenceId, setSelectedResidenceId] = useState<string>('');\n  const [isContactDialogOpen, setIsContactDialogOpen] = useState(false);\n  const [editingContact, setEditingContact] = useState<Contact | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  // Form for contact management\n  const contactForm = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      type: 'primary',\n    },\n  });\n\n  // Fetch current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // All users see only their assigned residences\n  const {\n    data: accessibleResidences = [],\n    isLoading,\n    error: residencesError,\n    refetch: refetchResidences,\n  } = useQuery({\n    queryKey: ['/api/users/residences', user?.id],\n    queryFn: async () => {\n      if (!user?.id) {\n        return [];\n      }\n\n      // All users (including admin/manager) see only their assigned residences\n      const url = `/api/users/${user.id}/residences`;\n\n      const response = await fetch(url, {\n        credentials: 'include',\n        headers: {\n          'Cache-Control': 'no-cache',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch residences');\n      }\n      return response.json();\n    },\n    enabled: !!user?.id,\n    refetchOnMount: true,\n    staleTime: 0,\n  });\n\n  // Ensure accessibleResidences is always an array\n  const safeAccessibleResidences = Array.isArray(accessibleResidences) ? accessibleResidences : [];\n\n  // Extract buildings from user's residences for filtering\n  const buildings = useMemo(() => {\n    const buildingMap = new Map();\n    safeAccessibleResidences.forEach((residence) => {\n      if (residence.building && !buildingMap.has(residence.building.id)) {\n        buildingMap.set(residence.building.id, residence.building);\n      }\n    });\n    return Array.from(buildingMap.values());\n  }, [safeAccessibleResidences]);\n\n  // Filter residences based on selected building (if multiple residences exist)\n  const filteredResidences = useMemo(() => {\n    // If no building filter is selected, return all residences\n    if (!selectedBuildingId) {\n      return safeAccessibleResidences;\n    }\n\n    // Filter by selected building\n    return safeAccessibleResidences.filter((r) => r.buildingId === selectedBuildingId);\n  }, [safeAccessibleResidences, selectedBuildingId]);\n\n  // Pagination calculations\n  const totalPages = Math.ceil(filteredResidences.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentResidences = filteredResidences.slice(startIndex, endIndex);\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prev) => Math.max(1, prev - 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prev) => Math.min(totalPages, prev + 1));\n  };\n\n  const handlePageClick = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  // Reset pagination when filters change\n  const resetToFirstPage = () => {\n    setCurrentPage(1);\n  };\n\n  // Select first residence by default\n  const selectedResidence = useMemo(() => {\n    if (!selectedResidenceId && filteredResidences.length > 0) {\n      setSelectedResidenceId(filteredResidences[0].id);\n      return filteredResidences[0];\n    }\n    return filteredResidences.find((r) => r.id === selectedResidenceId) || null;\n  }, [selectedResidenceId, filteredResidences]);\n\n  // Fetch contacts for selected residence\n  const { data: contacts = [], isLoading: contactsLoading } = useQuery({\n    queryKey: ['/api/contacts', selectedResidenceId],\n    queryFn: async () => {\n      if (!selectedResidenceId) {\n        return [];\n      }\n      const response = await apiRequest(\n        'GET',\n        `/api/contacts?entity=residence&entityId=${selectedResidenceId}`\n      );\n      return Array.isArray(response) ? response : [];\n    },\n    enabled: !!selectedResidenceId,\n  });\n\n  // Fetch building contacts (read-only for residents)\n  const { data: buildingContacts = [], isLoading: buildingContactsLoading } = useQuery({\n    queryKey: ['/api/contacts', 'building', selectedResidence?.buildingId],\n    queryFn: async () => {\n      if (!selectedResidence?.buildingId) {\n        return [];\n      }\n      const response = await apiRequest(\n        'GET',\n        `/api/contacts?entity=building&entityId=${selectedResidence.buildingId}`\n      );\n      return Array.isArray(response) ? response : [];\n    },\n    enabled: !!selectedResidence?.buildingId,\n  });\n\n  // Mutations for contact management\n  const addContactMutation = useMutation({\n    mutationFn: (data: ContactFormData) =>\n      apiRequest('POST', '/api/contacts', {\n        ...data,\n        residenceId: selectedResidenceId,\n      }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contacts', selectedResidenceId] });\n      setIsContactDialogOpen(false);\n      setEditingContact(null);\n      contactForm.reset();\n      toast({\n        title: 'Contact added successfully',\n        description: 'The new contact has been added to this residence.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Failed to add contact',\n        description: error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const updateContactMutation = useMutation({\n    mutationFn: (data: ContactFormData) =>\n      apiRequest('PATCH', `/api/contacts/${editingContact?.id}`, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contacts', selectedResidenceId] });\n      setIsContactDialogOpen(false);\n      setEditingContact(null);\n      contactForm.reset();\n      toast({\n        title: 'Contact updated successfully',\n        description: 'The contact information has been updated.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Failed to update contact',\n        description: error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const deleteContactMutation = useMutation({\n    mutationFn: (contactId: string) => apiRequest('DELETE', `/api/contacts/${contactId}`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contacts', selectedResidenceId] });\n      toast({\n        title: 'Contact deleted successfully',\n        description: 'The contact has been removed.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Failed to delete contact',\n        description: error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleAddContact = (data: ContactFormData) => {\n    if (editingContact) {\n      updateContactMutation.mutate(data);\n    } else {\n      addContactMutation.mutate(data);\n    }\n  };\n\n  const handleEditContact = (contact: Contact) => {\n    setEditingContact(contact);\n    contactForm.reset({\n      firstName: contact.firstName,\n      lastName: contact.lastName,\n      email: contact.email,\n      phone: contact.phone || '',\n      type: contact.type as any,\n    });\n    setIsContactDialogOpen(true);\n  };\n\n  const handleDeleteContact = (contact: Contact) => {\n    if (confirm('Are you sure you want to delete this contact?')) {\n      deleteContactMutation.mutate(contact.id);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header\n          title={t('myResidence')}\n          subtitle={t('viewResidenceInfo')}\n        />\n\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-4'></div>\n            <p className='text-gray-600'>{t('loading')}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (filteredResidences.length === 0) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header\n          title={t('myResidence')}\n          subtitle={t('viewResidenceInfo')}\n        />\n\n        <div className='flex-1 flex items-center justify-center p-6'>\n          <NoDataCard\n            icon={Home}\n            titleKey=\"noResidencesFound\"\n            descriptionKey={user?.role && ['admin', 'manager'].includes(user.role)\n              ? 'noResidencesFoundOrg'\n              : 'notAssignedResidences'}\n            testId=\"no-residences-message\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header\n        title={t('myResidence')}\n        subtitle={t('myResidenceInfo')}\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Building and Residence Filters */}\n          {(buildings.length > 1 || filteredResidences.length > 1) && (\n            <Card>\n              <CardHeader>\n                <CardTitle className='flex items-center gap-2'>\n                  <Home className='w-5 h-5' />\n                  Select Residence\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className='flex flex-col md:flex-row gap-4'>\n                  {/* Building Filter (if user has multiple buildings) */}\n                  {buildings.length > 1 && (\n                    <div className='flex-1'>\n                      <Label className='text-sm font-medium mb-2 block'>{t('building2')}</Label>\n                      <Select\n                        value={selectedBuildingId}\n                        onValueChange={(value) => {\n                          setSelectedBuildingId(value);\n                          setSelectedResidenceId(''); // Reset residence selection when building changes\n                        }}\n                      >\n                        <SelectTrigger className='w-full'>\n                          <SelectValue placeholder={t('selectABuilding')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"all\">{t('allBuildings')}</SelectItem>\n                          {buildings.map((building: any) => (\n                            <SelectItem key={building.id} value={building.id}>\n                              {building.name} - {building.address}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n\n                  {/* Residence Filter */}\n                  {filteredResidences.length > 1 && (\n                    <div className='flex-1'>\n                      <Label className='text-sm font-medium mb-2 block'>\n                        {t('selectResidence')}\n                      </Label>\n                      <Select value={selectedResidenceId} onValueChange={setSelectedResidenceId}>\n                        <SelectTrigger className='w-full'>\n                          <SelectValue placeholder={t('selectAResidence')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {filteredResidences.map((residence) => (\n                            <SelectItem key={residence.id} value={residence.id}>\n                              {t('unit')} {residence.unitNumber} - {residence.building?.name || 'N/A'}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Residence Cards */}\n          {currentResidences.length > 0 && (\n            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\n              {currentResidences.map((residence) => (\n                <Card key={residence.id} className='hover:shadow-lg transition-shadow'>\n                  <CardHeader>\n                    <CardTitle className='flex items-center gap-2'>\n                      <Home className='w-5 h-5' />\n                      {t('unit')} {residence.unitNumber}\n                    </CardTitle>\n                    <div className='text-sm text-gray-600'>\n                      {residence.building?.name || t('buildingInfoUnavailable')}\n                    </div>\n                  </CardHeader>\n                  <CardContent className='space-y-4'>\n                    <div className='grid grid-cols-1 gap-3'>\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>{t('address')}</Label>\n                        <p className='text-sm text-gray-700'>\n                          {residence.building?.address || t('addressUnavailable')}\n                        </p>\n                        <p className='text-sm text-gray-700'>\n                          {residence.building?.city || 'N/A'},{' '}\n                          {residence.building?.province || 'N/A'}{' '}\n                          {residence.building?.postalCode || ''}\n                        </p>\n                      </div>\n\n                      <div className='grid grid-cols-2 gap-3'>\n                        {residence.floor && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('floor')}</Label>\n                            <p className='text-sm text-gray-700'>{residence.floor}</p>\n                          </div>\n                        )}\n                        {residence.squareFootage && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('sqFt')}</Label>\n                            <p className='text-sm text-gray-700'>{residence.squareFootage}</p>\n                          </div>\n                        )}\n                        {residence.bedrooms && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('bedrooms')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Bed className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>{residence.bedrooms}</span>\n                            </div>\n                          </div>\n                        )}\n                        {residence.bathrooms && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('bathrooms')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Bath className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>{residence.bathrooms}</span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      {residence.parkingSpaceNumbers &&\n                        residence.parkingSpaceNumbers.length > 0 && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('parking')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Car className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {residence.parkingSpaceNumbers.join(', ')}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n\n                      {residence.storageSpaceNumbers &&\n                        residence.storageSpaceNumbers.length > 0 && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('storage')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Package className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {residence.storageSpaceNumbers.join(', ')}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n\n                    <div className='flex flex-col gap-2 pt-4 border-t'>\n                      <Link href={`/residents/residences/${residence.id}/documents`}>\n                        <Button variant='outline' size='sm' className='w-full justify-start'>\n                          <FileText className='w-4 h-4 mr-2' />\n                          {t('residenceDocumentsButton')}\n                        </Button>\n                      </Link>\n                      <Link href={`/residents/buildings/${residence.buildingId}/documents`}>\n                        <Button variant='outline' size='sm' className='w-full justify-start'>\n                          <Building className='w-4 h-4 mr-2' />\n                          {t('buildingDocumentsButton')}\n                        </Button>\n                      </Link>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className='flex items-center justify-center gap-2 mt-8'>\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handlePreviousPage}\n                disabled={currentPage === 1}\n              >\n                <ChevronLeft className='h-4 w-4' />\n                {t('previous')}\n              </Button>\n\n              <div className='flex gap-1'>\n                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                  let pageNum;\n                  if (totalPages <= 5) {\n                    pageNum = i + 1;\n                  } else if (currentPage <= 3) {\n                    pageNum = i + 1;\n                  } else if (currentPage >= totalPages - 2) {\n                    pageNum = totalPages - 4 + i;\n                  } else {\n                    pageNum = currentPage - 2 + i;\n                  }\n\n                  return (\n                    <Button\n                      key={pageNum}\n                      variant={currentPage === pageNum ? 'default' : 'outline'}\n                      size='sm'\n                      onClick={() => handlePageClick(pageNum)}\n                    >\n                      {pageNum}\n                    </Button>\n                  );\n                })}\n              </div>\n\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handleNextPage}\n                disabled={currentPage === totalPages}\n              >\n                {t('next')}\n                <ChevronRight className='h-4 w-4' />\n              </Button>\n            </div>\n          )}\n\n          {/* Page info */}\n          {filteredResidences.length > 0 && (\n            <div className='text-center text-sm text-muted-foreground mt-4'>\n              {t('showing')} {startIndex + 1} to {Math.min(endIndex, filteredResidences.length)} of{' '}\n              {filteredResidences.length} {t('residences')}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}