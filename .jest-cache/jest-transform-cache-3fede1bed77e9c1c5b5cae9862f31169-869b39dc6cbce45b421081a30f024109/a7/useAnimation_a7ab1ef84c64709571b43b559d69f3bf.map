{"file":"/home/runner/workspace/node_modules/react-day-picker/dist/cjs/useAnimation.js","mappings":"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","names":[],"sources":["/home/runner/workspace/node_modules/react-day-picker/dist/cjs/useAnimation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAnimation = useAnimation;\nconst react_1 = require(\"react\");\nconst UI_js_1 = require(\"./UI.js\");\nconst asHtmlElement = (element) => {\n    if (element instanceof HTMLElement)\n        return element;\n    return null;\n};\nconst queryMonthEls = (element) => [\n    ...(element.querySelectorAll(\"[data-animated-month]\") ?? []),\n];\nconst queryMonthEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-month]\"));\nconst queryCaptionEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-caption]\"));\nconst queryWeeksEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weeks]\"));\nconst queryNavEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-nav]\"));\nconst queryWeekdaysEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weekdays]\"));\n/**\n * Handles animations for transitioning between months in the DayPicker\n * component.\n *\n * @private\n * @param rootElRef - A reference to the root element of the DayPicker\n *   component.\n * @param enabled - Whether animations are enabled.\n * @param options - Configuration options for the animation, including class\n *   names, months, focused day, and the date utility library.\n */\nfunction useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib, }) {\n    const previousRootElSnapshotRef = (0, react_1.useRef)(null);\n    const previousMonthsRef = (0, react_1.useRef)(months);\n    const animatingRef = (0, react_1.useRef)(false);\n    (0, react_1.useLayoutEffect)(() => {\n        // get previous months before updating the previous months ref\n        const previousMonths = previousMonthsRef.current;\n        // update previous months ref for next effect trigger\n        previousMonthsRef.current = months;\n        if (!enabled ||\n            !rootElRef.current ||\n            // safety check because the ref can be set to anything by consumers\n            !(rootElRef.current instanceof HTMLElement) ||\n            // validation required for the animation to work as expected\n            months.length === 0 ||\n            previousMonths.length === 0 ||\n            months.length !== previousMonths.length) {\n            return;\n        }\n        const isSameMonth = dateLib.isSameMonth(months[0].date, previousMonths[0].date);\n        const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);\n        const captionAnimationClass = isAfterPreviousMonth\n            ? classNames[UI_js_1.Animation.caption_after_enter]\n            : classNames[UI_js_1.Animation.caption_before_enter];\n        const weeksAnimationClass = isAfterPreviousMonth\n            ? classNames[UI_js_1.Animation.weeks_after_enter]\n            : classNames[UI_js_1.Animation.weeks_before_enter];\n        // get previous root element snapshot before updating the snapshot ref\n        const previousRootElSnapshot = previousRootElSnapshotRef.current;\n        // update snapshot for next effect trigger\n        const rootElSnapshot = rootElRef.current.cloneNode(true);\n        if (rootElSnapshot instanceof HTMLElement) {\n            // if this effect is triggered while animating, we need to clean up the new root snapshot\n            // to put it in the same state as when not animating, to correctly animate the next month change\n            const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);\n            currentMonthElsSnapshot.forEach((currentMonthElSnapshot) => {\n                if (!(currentMonthElSnapshot instanceof HTMLElement))\n                    return;\n                // remove the old month snapshots from the new root snapshot\n                const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);\n                if (previousMonthElSnapshot &&\n                    currentMonthElSnapshot.contains(previousMonthElSnapshot)) {\n                    currentMonthElSnapshot.removeChild(previousMonthElSnapshot);\n                }\n                // remove animation classes from the new month snapshots\n                const captionEl = queryCaptionEl(currentMonthElSnapshot);\n                if (captionEl) {\n                    captionEl.classList.remove(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthElSnapshot);\n                if (weeksEl) {\n                    weeksEl.classList.remove(weeksAnimationClass);\n                }\n            });\n            previousRootElSnapshotRef.current = rootElSnapshot;\n        }\n        else {\n            previousRootElSnapshotRef.current = null;\n        }\n        if (animatingRef.current ||\n            isSameMonth ||\n            // skip animation if a day is focused because it can cause issues to the animation and is better for a11y\n            focused) {\n            return;\n        }\n        const previousMonthEls = previousRootElSnapshot instanceof HTMLElement\n            ? queryMonthEls(previousRootElSnapshot)\n            : [];\n        const currentMonthEls = queryMonthEls(rootElRef.current);\n        if (currentMonthEls?.every((el) => el instanceof HTMLElement) &&\n            previousMonthEls &&\n            previousMonthEls.every((el) => el instanceof HTMLElement)) {\n            animatingRef.current = true;\n            const cleanUpFunctions = [];\n            // set isolation to isolate to isolate the stacking context during animation\n            rootElRef.current.style.isolation = \"isolate\";\n            // set z-index to 1 to ensure the nav is clickable over the other elements being animated\n            const navEl = queryNavEl(rootElRef.current);\n            if (navEl) {\n                navEl.style.zIndex = \"1\";\n            }\n            currentMonthEls.forEach((currentMonthEl, index) => {\n                const previousMonthEl = previousMonthEls[index];\n                if (!previousMonthEl) {\n                    return;\n                }\n                // animate new displayed month\n                currentMonthEl.style.position = \"relative\";\n                currentMonthEl.style.overflow = \"hidden\";\n                const captionEl = queryCaptionEl(currentMonthEl);\n                if (captionEl) {\n                    captionEl.classList.add(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthEl);\n                if (weeksEl) {\n                    weeksEl.classList.add(weeksAnimationClass);\n                }\n                // animate new displayed month end\n                const cleanUp = () => {\n                    animatingRef.current = false;\n                    if (rootElRef.current) {\n                        rootElRef.current.style.isolation = \"\";\n                    }\n                    if (navEl) {\n                        navEl.style.zIndex = \"\";\n                    }\n                    if (captionEl) {\n                        captionEl.classList.remove(captionAnimationClass);\n                    }\n                    if (weeksEl) {\n                        weeksEl.classList.remove(weeksAnimationClass);\n                    }\n                    currentMonthEl.style.position = \"\";\n                    currentMonthEl.style.overflow = \"\";\n                    if (currentMonthEl.contains(previousMonthEl)) {\n                        currentMonthEl.removeChild(previousMonthEl);\n                    }\n                };\n                cleanUpFunctions.push(cleanUp);\n                // animate old displayed month\n                previousMonthEl.style.pointerEvents = \"none\";\n                previousMonthEl.style.position = \"absolute\";\n                previousMonthEl.style.overflow = \"hidden\";\n                previousMonthEl.setAttribute(\"aria-hidden\", \"true\");\n                // hide the weekdays container of the old month and only the new one\n                const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);\n                if (previousWeekdaysEl) {\n                    previousWeekdaysEl.style.opacity = \"0\";\n                }\n                const previousCaptionEl = queryCaptionEl(previousMonthEl);\n                if (previousCaptionEl) {\n                    previousCaptionEl.classList.add(isAfterPreviousMonth\n                        ? classNames[UI_js_1.Animation.caption_before_exit]\n                        : classNames[UI_js_1.Animation.caption_after_exit]);\n                    previousCaptionEl.addEventListener(\"animationend\", cleanUp);\n                }\n                const previousWeeksEl = queryWeeksEl(previousMonthEl);\n                if (previousWeeksEl) {\n                    previousWeeksEl.classList.add(isAfterPreviousMonth\n                        ? classNames[UI_js_1.Animation.weeks_before_exit]\n                        : classNames[UI_js_1.Animation.weeks_after_exit]);\n                }\n                currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);\n            });\n        }\n    });\n}\n"],"version":3}