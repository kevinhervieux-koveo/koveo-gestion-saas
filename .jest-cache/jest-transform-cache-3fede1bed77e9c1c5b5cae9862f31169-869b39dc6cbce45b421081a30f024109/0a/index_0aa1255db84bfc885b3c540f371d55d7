80243404e0f5eb7777d5239396185332
/**
 * @param {string|RegExp} input The route pattern
 * @param {boolean} [loose] Allow open-ended matching. Ignored with `RegExp` input.
 */
function parse(input, loose) {
    if (input instanceof RegExp)
        return { keys: false, pattern: input };
    var c, o, tmp, ext, keys = [], pattern = '', arr = input.split('/');
    arr[0] || arr.shift();
    while (tmp = arr.shift()) {
        c = tmp[0];
        if (c === '*') {
            keys.push(c);
            pattern += tmp[1] === '?' ? '(?:/(.*))?' : '/(.*)';
        }
        else if (c === ':') {
            o = tmp.indexOf('?', 1);
            ext = tmp.indexOf('.', 1);
            keys.push(tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length));
            pattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';
            if (!!~ext)
                pattern += (!!~o ? '?' : '') + '\\' + tmp.substring(ext);
        }
        else {
            pattern += '/' + tmp;
        }
    }
    return {
        keys: keys,
        pattern: new RegExp('^' + pattern + (loose ? '(?=$|\/)' : '\/?$'), 'i')
    };
}
var RGX = /(\/|^)([:*][^/]*?)(\?)?(?=[/.]|$)/g;
// error if key missing?
function inject(route, values) {
    return route.replace(RGX, (x, lead, key, optional) => {
        x = values[key == '*' ? key : key.substring(1)];
        return x ? '/' + x : (optional || key == '*') ? '' : '/' + key;
    });
}
exports.inject = inject;
exports.parse = parse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvcmVnZXhwYXJhbS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILFNBQVMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLO0lBQzFCLElBQUksS0FBSyxZQUFZLE1BQU07UUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFDLEtBQUssRUFBRSxPQUFPLEVBQUMsS0FBSyxFQUFFLENBQUM7SUFDbEUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxHQUFDLEVBQUUsRUFBRSxPQUFPLEdBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hFLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7SUFFdEIsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUM7UUFDMUIsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1lBQ2YsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNiLE9BQU8sSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNwRCxDQUFDO2FBQU0sSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7WUFDdEIsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMxQixJQUFJLENBQUMsSUFBSSxDQUFFLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFFLENBQUM7WUFDcEUsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO1lBQzFELElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRztnQkFBRSxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEUsQ0FBQzthQUFNLENBQUM7WUFDUCxPQUFPLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUN0QixDQUFDO0lBQ0YsQ0FBQztJQUVELE9BQU87UUFDTixJQUFJLEVBQUUsSUFBSTtRQUNWLE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQyxHQUFHLEdBQUcsT0FBTyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsQ0FBQztLQUN2RSxDQUFDO0FBQ0gsQ0FBQztBQUVELElBQUksR0FBRyxHQUFHLG9DQUFvQyxDQUFDO0FBRS9DLHdCQUF3QjtBQUN4QixTQUFTLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTTtJQUM1QixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLEVBQUU7UUFDcEQsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLElBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLElBQUksR0FBRyxJQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDNUQsQ0FBQyxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsT0FBTyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvcmVnZXhwYXJhbS9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhcmFtIHtzdHJpbmd8UmVnRXhwfSBpbnB1dCBUaGUgcm91dGUgcGF0dGVyblxuICogQHBhcmFtIHtib29sZWFufSBbbG9vc2VdIEFsbG93IG9wZW4tZW5kZWQgbWF0Y2hpbmcuIElnbm9yZWQgd2l0aCBgUmVnRXhwYCBpbnB1dC5cbiAqL1xuZnVuY3Rpb24gcGFyc2UoaW5wdXQsIGxvb3NlKSB7XG5cdGlmIChpbnB1dCBpbnN0YW5jZW9mIFJlZ0V4cCkgcmV0dXJuIHsga2V5czpmYWxzZSwgcGF0dGVybjppbnB1dCB9O1xuXHR2YXIgYywgbywgdG1wLCBleHQsIGtleXM9W10sIHBhdHRlcm49JycsIGFyciA9IGlucHV0LnNwbGl0KCcvJyk7XG5cdGFyclswXSB8fCBhcnIuc2hpZnQoKTtcblxuXHR3aGlsZSAodG1wID0gYXJyLnNoaWZ0KCkpIHtcblx0XHRjID0gdG1wWzBdO1xuXHRcdGlmIChjID09PSAnKicpIHtcblx0XHRcdGtleXMucHVzaChjKTtcblx0XHRcdHBhdHRlcm4gKz0gdG1wWzFdID09PSAnPycgPyAnKD86LyguKikpPycgOiAnLyguKiknO1xuXHRcdH0gZWxzZSBpZiAoYyA9PT0gJzonKSB7XG5cdFx0XHRvID0gdG1wLmluZGV4T2YoJz8nLCAxKTtcblx0XHRcdGV4dCA9IHRtcC5pbmRleE9mKCcuJywgMSk7XG5cdFx0XHRrZXlzLnB1c2goIHRtcC5zdWJzdHJpbmcoMSwgISF+byA/IG8gOiAhIX5leHQgPyBleHQgOiB0bXAubGVuZ3RoKSApO1xuXHRcdFx0cGF0dGVybiArPSAhIX5vICYmICF+ZXh0ID8gJyg/Oi8oW14vXSs/KSk/JyA6ICcvKFteL10rPyknO1xuXHRcdFx0aWYgKCEhfmV4dCkgcGF0dGVybiArPSAoISF+byA/ICc/JyA6ICcnKSArICdcXFxcJyArIHRtcC5zdWJzdHJpbmcoZXh0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cGF0dGVybiArPSAnLycgKyB0bXA7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHtcblx0XHRrZXlzOiBrZXlzLFxuXHRcdHBhdHRlcm46IG5ldyBSZWdFeHAoJ14nICsgcGF0dGVybiArIChsb29zZSA/ICcoPz0kfFxcLyknIDogJ1xcLz8kJyksICdpJylcblx0fTtcbn1cblxudmFyIFJHWCA9IC8oXFwvfF4pKFs6Kl1bXi9dKj8pKFxcPyk/KD89Wy8uXXwkKS9nO1xuXG4vLyBlcnJvciBpZiBrZXkgbWlzc2luZz9cbmZ1bmN0aW9uIGluamVjdChyb3V0ZSwgdmFsdWVzKSB7XG5cdHJldHVybiByb3V0ZS5yZXBsYWNlKFJHWCwgKHgsIGxlYWQsIGtleSwgb3B0aW9uYWwpID0+IHtcblx0XHR4ID0gdmFsdWVzW2tleT09JyonID8ga2V5IDoga2V5LnN1YnN0cmluZygxKV07XG5cdFx0cmV0dXJuIHggPyAnLycreCA6IChvcHRpb25hbCB8fCBrZXk9PScqJykgPyAnJyA6ICcvJyArIGtleTtcblx0fSk7XG59XG5cbmV4cG9ydHMuaW5qZWN0ID0gaW5qZWN0O1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlOyJdLCJ2ZXJzaW9uIjozfQ==