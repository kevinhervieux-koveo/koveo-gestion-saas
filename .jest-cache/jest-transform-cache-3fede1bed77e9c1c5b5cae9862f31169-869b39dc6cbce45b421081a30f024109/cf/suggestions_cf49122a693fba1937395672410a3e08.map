{"file":"/home/runner/workspace/client/src/pages/admin/suggestions.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/admin/suggestions.tsx"],"sourcesContent":["import { useQuery, useMutation } from '@tanstack/react-query';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  CheckCircle,\n  Clock,\n  MessageSquare,\n  AlertCircle,\n  Shield,\n  Code,\n  FileText,\n  Zap,\n  Terminal,\n} from 'lucide-react';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useMemo } from 'react';\n\n/**\n *\n */\ninterface ImprovementSuggestion {\n  id: string;\n  title: string;\n  description: string;\n  priority: 'High' | 'Medium' | 'Low' | 'Critical';\n  status: 'New' | 'Acknowledged' | 'Done';\n  category: string;\n  createdAt: string;\n}\n\n// Category configuration with icons and colors\nconst categoryConfig = [\n  { name: 'Code Quality', icon: Code, color: 'bg-blue-50 text-blue-700 border-blue-200' },\n  { name: 'Testing', icon: CheckCircle, color: 'bg-green-50 text-green-700 border-green-200' },\n  {\n    name: 'Documentation',\n    icon: FileText,\n    color: 'bg-purple-50 text-purple-700 border-purple-200',\n  },\n  { name: 'Security', icon: Shield, color: 'bg-red-50 text-red-700 border-red-200' },\n  { name: 'Performance', icon: Zap, color: 'bg-yellow-50 text-yellow-700 border-yellow-200' },\n  {\n    name: 'Continuous Improvement',\n    icon: Terminal,\n    color: 'bg-indigo-50 text-indigo-700 border-indigo-200',\n  },\n  {\n    name: 'Replit AI Agent Monitoring',\n    icon: MessageSquare,\n    color: 'bg-teal-50 text-teal-700 border-teal-200',\n  },\n];\n\n/**\n *\n */\nexport default function OwnerSuggestions() {\n  const { toast } = useToast();\n  const { data: suggestions = [], isLoading } = useQuery<ImprovementSuggestion[]>({\n    queryKey: ['/api/pillars/suggestions'],\n    refetchInterval: 30000, // Refetch every 30 seconds to ensure fresh data\n    staleTime: 0, // Data is always considered stale\n  });\n\n  // Group suggestions by category and take 2 from each\n  const categorizedSuggestions = useMemo(() => {\n    const grouped = suggestions.reduce(\n      (acc, suggestion) => {\n        if (!acc[suggestion.category]) {\n          acc[suggestion.category] = [];\n        }\n        // Only add if not done and we have less than 2 in this category\n        if (suggestion.status !== 'Done' && acc[suggestion.category].length < 2) {\n          acc[suggestion.category].push(suggestion);\n        }\n        return acc;\n      },\n      {} as Record<string, ImprovementSuggestion[]>\n    );\n\n    // Sort suggestions within each category by priority\n    const priorityOrder = { Critical: 0, High: 1, Medium: 2, Low: 3 };\n    Object.keys(grouped).forEach((category) => {\n      grouped[category].sort((a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]);\n    });\n\n    return grouped;\n  }, [suggestions]);\n\n  const acknowledgeMutation = useMutation({\n    mutationFn: (id: string) => apiRequest('POST', `/api/pillars/suggestions/${id}/acknowledge`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/pillars/suggestions'] });\n    },\n  });\n\n  const completeMutation = useMutation({\n    mutationFn: (id: string) => apiRequest('POST', `/api/pillars/suggestions/${id}/complete`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/pillars/suggestions'] });\n      // Show success message indicating deletion and continuous improvement update\n      toast({\n        title: 'Suggestion Completed',\n        description:\n          'Suggestion has been removed and continuous improvement analysis is running in the background.',\n      });\n    },\n  });\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'Critical':\n        return 'bg-purple-100 text-purple-800';\n      case 'High':\n        return 'bg-red-100 text-red-800';\n      case 'Medium':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Low':\n        return 'bg-blue-100 text-blue-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'Done':\n        return 'bg-green-100 text-green-800';\n      case 'Acknowledged':\n        return 'bg-blue-100 text-blue-800';\n      case 'New':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getAIPrompt = (suggestion: ImprovementSuggestion) => {\n    const baseContext =\n      'You are working on a Quebec property management SaaS called Koveo Gestion. ';\n\n    switch (suggestion.category) {\n      case 'Code Quality':\n        return `${baseContext}${suggestion.description} Focus on improving code maintainability while preserving existing functionality. Follow existing TypeScript patterns and ensure all changes maintain type safety.`;\n\n      case 'Testing':\n        return `${baseContext}${suggestion.description} Add comprehensive unit tests using Jest and React Testing Library. Focus on critical paths and edge cases. Ensure tests follow the existing test structure in /tests/ directory.`;\n\n      case 'Documentation':\n        return `${baseContext}${suggestion.description} Add JSDoc comments to all exported functions and classes. Follow the existing documentation style and include parameter descriptions, return values, and usage examples where appropriate.`;\n\n      case 'Security':\n        return `${baseContext}${suggestion.description} Address security vulnerabilities while maintaining Law 25 compliance for Quebec privacy regulations. Update dependencies safely and validate all changes don't break authentication or data protection.`;\n\n      case 'Performance':\n        return `${baseContext}${suggestion.description} Optimize performance while maintaining the existing user experience. Consider code splitting, lazy loading, and bundle optimization. Test changes thoroughly to ensure no regressions.`;\n\n      default:\n        return `${baseContext}${suggestion.description} Implement this improvement following the existing codebase patterns and Quebec property management requirements. Ensure all changes are well-tested and documented.`;\n    }\n  };\n\n  const getCategoryIcon = (categoryName: string) => {\n    const config = categoryConfig.find((c) => c.name === categoryName);\n    return config?.icon || MessageSquare;\n  };\n\n  const getCategoryColor = (categoryName: string) => {\n    const config = categoryConfig.find((c) => c.name === categoryName);\n    return config?.color || 'bg-gray-50 text-gray-700 border-gray-200';\n  };\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header\n        title='Improvement Suggestions'\n        subtitle='Review and manage system improvement recommendations'\n      />\n\n      {/* Refresh Command */}\n      <div className='border-b bg-gray-50 px-6 py-3'>\n        <div className='max-w-7xl mx-auto'>\n          <div className='flex items-center gap-2 text-sm text-gray-600'>\n            <Terminal className='h-4 w-4' />\n            <span className='font-medium'>Refresh Command:</span>\n            <code className='bg-gray-100 px-2 py-1 rounded text-xs font-mono'>\n              npm run quality:check\n            </code>\n          </div>\n        </div>\n      </div>\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto'>\n          {/* Category Summary */}\n          <Card className='mb-6 bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200'>\n            <CardContent className='pt-6'>\n              <div className='flex items-center justify-between'>\n                <div>\n                  <h3 className='text-lg font-semibold text-blue-900'>\n                    Continuous Improvement Overview\n                  </h3>\n                  <p className='text-sm text-blue-700 mt-1'>\n                    Displaying 2 priority suggestions per category for focused improvements\n                  </p>\n                </div>\n                <Badge className='bg-blue-100 text-blue-800'>\n                  {Object.values(categorizedSuggestions).flat().length} Active Suggestions\n                </Badge>\n              </div>\n            </CardContent>\n          </Card>\n\n          {isLoading ? (\n            <div className='flex items-center justify-center h-64'>\n              <div className='animate-spin rounded-full h-32 w-32 border-b-2 border-koveo-navy'></div>\n            </div>\n          ) : (\n            <div className='space-y-8'>\n              {categoryConfig.map((category) => {\n                const categorySuggestions = categorizedSuggestions[category.name] || [];\n                const Icon = category.icon;\n\n                if (categorySuggestions.length === 0) {\n                  return null;\n                }\n\n                return (\n                  <div key={category.name} className='space-y-4'>\n                    {/* Category Header */}\n                    <div\n                      className={`flex items-center gap-3 p-3 rounded-lg border ${category.color}`}\n                    >\n                      <Icon className='h-5 w-5' />\n                      <h2 className='text-lg font-semibold'>{category.name}</h2>\n                      <Badge variant='outline' className='ml-auto'>\n                        {categorySuggestions.length}{' '}\n                        {categorySuggestions.length === 1 ? 'suggestion' : 'suggestions'}\n                      </Badge>\n                    </div>\n\n                    {/* Category Suggestions */}\n                    <div className='grid gap-4 md:grid-cols-2'>\n                      {categorySuggestions.map((suggestion) => (\n                        <Card\n                          key={suggestion.id}\n                          className='hover:shadow-lg transition-all hover:scale-[1.02]'\n                        >\n                          <CardHeader>\n                            <div className='flex items-start justify-between'>\n                              <div className='flex-1'>\n                                <CardTitle className='text-lg font-semibold text-koveo-navy'>\n                                  {suggestion.title}\n                                </CardTitle>\n                                <CardDescription className='mt-2'>\n                                  {suggestion.description}\n                                </CardDescription>\n                              </div>\n                              <div className='flex flex-col gap-2 ml-4'>\n                                <Badge className={getPriorityColor(suggestion.priority)}>\n                                  {suggestion.priority} Priority\n                                </Badge>\n                                <Badge className={getStatusColor(suggestion.status)}>\n                                  {suggestion.status}\n                                </Badge>\n                              </div>\n                            </div>\n                          </CardHeader>\n\n                          <CardContent>\n                            <div className='mb-4'>\n                              <div className='flex items-center gap-4 text-sm text-gray-600 mb-3'>\n                                <span className='flex items-center gap-1'>\n                                  <MessageSquare size={16} />\n                                  {suggestion.category}\n                                </span>\n                                <span>\n                                  Created: {new Date(suggestion.createdAt).toLocaleDateString()}\n                                </span>\n                              </div>\n\n                              {/* AI Agent Prompt */}\n                              <div className='bg-blue-50 border border-blue-200 rounded-lg p-3'>\n                                <div className='text-xs font-semibold text-blue-800 mb-2 uppercase tracking-wide'>\n                                  AI Agent Prompt\n                                </div>\n                                <div className='text-sm text-blue-900 font-mono bg-white border rounded px-3 py-2 select-all cursor-pointer'>\n                                  {getAIPrompt(suggestion)}\n                                </div>\n                                <div className='text-xs text-blue-600 mt-1'>\n                                  Click to select and copy the prompt above\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className='flex items-center justify-between'>\n                              <div></div>\n\n                              <div className='flex gap-2'>\n                                {suggestion.status === 'New' && (\n                                  <Button\n                                    size='sm'\n                                    variant='outline'\n                                    onClick={() => acknowledgeMutation.mutate(suggestion.id)}\n                                    disabled={acknowledgeMutation.isPending}\n                                    className='flex items-center gap-2'\n                                  >\n                                    <Clock size={16} />\n                                    Acknowledge\n                                  </Button>\n                                )}\n\n                                {(suggestion.status === 'New' ||\n                                  suggestion.status === 'Acknowledged') && (\n                                  <Button\n                                    size='sm'\n                                    onClick={() => completeMutation.mutate(suggestion.id)}\n                                    disabled={completeMutation.isPending}\n                                    className='flex items-center gap-2'\n                                  >\n                                    <CheckCircle size={16} />\n                                    Mark Complete\n                                  </Button>\n                                )}\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n\n              {/* Empty State */}\n              {Object.values(categorizedSuggestions).flat().length === 0 && (\n                <Card>\n                  <CardContent className='flex flex-col items-center justify-center py-16'>\n                    <MessageSquare size={48} className='text-gray-400 mb-4' />\n                    <h3 className='text-lg font-semibold text-gray-600 mb-2'>\n                      No Active Suggestions\n                    </h3>\n                    <p className='text-gray-500 text-center max-w-md'>\n                      All suggestions have been completed or no improvement suggestions have been\n                      generated yet. Run the quality check to generate new recommendations.\n                    </p>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}