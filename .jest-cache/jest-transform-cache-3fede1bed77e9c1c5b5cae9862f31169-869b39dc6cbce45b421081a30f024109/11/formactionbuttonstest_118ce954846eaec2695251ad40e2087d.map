{"file":"/home/runner/workspace/tests/unit/button-functionality/form-action-buttons.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/button-functionality/form-action-buttons.test.tsx"],"sourcesContent":["/**\n * Form Action Button Functionality Tests\n * Tests all form submission, saving, and action buttons\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport '@testing-library/jest-dom';\nimport userEvent from '@testing-library/user-event';\n\n// Mock API requests\nconst mockApiRequest = jest.fn();\njest.mock('../../../client/src/lib/queryClient', () => ({\n  apiRequest: mockApiRequest,\n  queryClient: new (jest.requireActual('@tanstack/react-query').QueryClient)(),\n}));\n\n// Mock authentication context\njest.mock('../../../client/src/contexts/AuthContext', () => ({\n  useAuth: () => ({\n    user: { id: '1', email: 'test@test.com', role: 'admin' },\n    isAuthenticated: true,\n    login: jest.fn(),\n    logout: jest.fn(),\n  }),\n}));\n\n// Mock toast notifications\nconst mockToast = jest.fn();\njest.mock('../../../client/src/hooks/use-toast', () => ({\n  useToast: () => ({\n    toast: mockToast,\n  }),\n}));\n\ndescribe('Form Action Buttons Functionality', () => {\n  let queryClient: QueryClient;\n  let user: any;\n\n  beforeEach(() => {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: { retry: false },\n        mutations: { retry: false },\n      },\n    });\n    user = userEvent.setup();\n    jest.clearAllMocks();\n    mockApiRequest.mockResolvedValue({ ok: true, json: () => Promise.resolve({}) });\n  });\n\n  const renderWithProvider = (component: React.ReactElement) => {\n    return render(\n      <QueryClientProvider client={queryClient}>\n        {component}\n      </QueryClientProvider>\n    );\n  };\n\n  describe('Save Buttons', () => {\n    const saveButtonTestIds = [\n      'save-residences',\n      'save-buildings', \n      'save-organizations',\n      'button-save-text-file',\n      'button-save-edit',\n    ];\n\n    saveButtonTestIds.forEach(testId => {\n      it(`should handle save action for ${testId}`, async () => {\n        // Create a mock component with the save button\n        const MockComponent = () => {\n          const handleSave = () => {\n            mockApiRequest('/api/save', { method: 'POST' });\n          };\n\n          return (\n            <button data-testid={testId} onClick={handleSave}>\n              Save\n            </button>\n          );\n        };\n\n        renderWithProvider(<MockComponent />);\n        \n        const saveButton = screen.getByTestId(testId);\n        expect(saveButton).toBeInTheDocument();\n        \n        await user.click(saveButton);\n        \n        await waitFor(() => {\n          expect(mockApiRequest).toHaveBeenCalledWith('/api/save', { method: 'POST' });\n        });\n      });\n    });\n  });\n\n  describe('Submit Buttons', () => {\n    const submitButtonTestIds = [\n      'button-submit-bug',\n      'button-submit-feature-request',\n    ];\n\n    submitButtonTestIds.forEach(testId => {\n      it(`should handle form submission for ${testId}`, async () => {\n        const MockForm = () => {\n          const handleSubmit = (e: React.FormEvent) => {\n            e.preventDefault();\n            mockApiRequest('/api/submit', { method: 'POST' });\n          };\n\n          return (\n            <form onSubmit={handleSubmit}>\n              <input type=\"text\" name=\"title\" defaultValue=\"Test Title\" />\n              <button type=\"submit\" data-testid={testId}>\n                Submit\n              </button>\n            </form>\n          );\n        };\n\n        renderWithProvider(<MockForm />);\n        \n        const submitButton = screen.getByTestId(testId);\n        expect(submitButton).toBeInTheDocument();\n        \n        await user.click(submitButton);\n        \n        await waitFor(() => {\n          expect(mockApiRequest).toHaveBeenCalledWith('/api/submit', { method: 'POST' });\n        });\n      });\n    });\n  });\n\n  describe('Update Buttons', () => {\n    const updateButtonTestIds = [\n      'button-update-bug',\n      'button-update-feature-request',\n    ];\n\n    updateButtonTestIds.forEach(testId => {\n      it(`should handle update action for ${testId}`, async () => {\n        const MockComponent = () => {\n          const handleUpdate = () => {\n            mockApiRequest('/api/update', { method: 'PATCH' });\n          };\n\n          return (\n            <button data-testid={testId} onClick={handleUpdate}>\n              Update\n            </button>\n          );\n        };\n\n        renderWithProvider(<MockComponent />);\n        \n        const updateButton = screen.getByTestId(testId);\n        expect(updateButton).toBeInTheDocument();\n        \n        await user.click(updateButton);\n        \n        await waitFor(() => {\n          expect(mockApiRequest).toHaveBeenCalledWith('/api/update', { method: 'PATCH' });\n        });\n      });\n    });\n  });\n\n  describe('Create Buttons', () => {\n    const createButtonTestIds = [\n      'button-create-bug',\n      'button-create-feature-request',\n      'button-create-space',\n      'button-invite-user',\n    ];\n\n    createButtonTestIds.forEach(testId => {\n      it(`should handle create action for ${testId}`, async () => {\n        const MockComponent = () => {\n          const handleCreate = () => {\n            mockApiRequest('/api/create', { method: 'POST' });\n          };\n\n          return (\n            <button data-testid={testId} onClick={handleCreate}>\n              Create\n            </button>\n          );\n        };\n\n        renderWithProvider(<MockComponent />);\n        \n        const createButton = screen.getByTestId(testId);\n        expect(createButton).toBeInTheDocument();\n        \n        await user.click(createButton);\n        \n        await waitFor(() => {\n          expect(mockApiRequest).toHaveBeenCalledWith('/api/create', { method: 'POST' });\n        });\n      });\n    });\n  });\n\n  describe('Button States', () => {\n    it('should handle loading states correctly', () => {\n      const MockComponent = () => {\n        const [isLoading, setIsLoading] = React.useState(false);\n\n        const handleClick = () => {\n          setIsLoading(true);\n          setTimeout(() => setIsLoading(false), 1000);\n        };\n\n        return (\n          <button \n            data-testid=\"loading-button\" \n            onClick={handleClick}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Loading...' : 'Click Me'}\n          </button>\n        );\n      };\n\n      renderWithProvider(<MockComponent />);\n      \n      const button = screen.getByTestId('loading-button');\n      expect(button).toBeInTheDocument();\n      expect(button).not.toBeDisabled();\n      \n      fireEvent.click(button);\n      expect(button).toBeDisabled();\n    });\n\n    it('should handle disabled states correctly', () => {\n      const MockComponent = () => (\n        <button data-testid=\"disabled-button\" disabled>\n          Disabled Button\n        </button>\n      );\n\n      renderWithProvider(<MockComponent />);\n      \n      const button = screen.getByTestId('disabled-button');\n      expect(button).toBeInTheDocument();\n      expect(button).toBeDisabled();\n    });\n  });\n});"],"version":3}