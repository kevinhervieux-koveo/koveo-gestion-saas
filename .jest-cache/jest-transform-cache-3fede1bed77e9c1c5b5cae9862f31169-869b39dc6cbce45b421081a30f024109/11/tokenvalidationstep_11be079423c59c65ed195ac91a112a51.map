{"version":3,"names":["exports","TokenValidationStep","react_1","cov_27ecd4n0vw","s","__importStar","require","card_1","alert_1","badge_1","lucide_react_1","use_language_1","_data","onDataChange","onValidationChange","f","t","_t","useLanguage","isValidating","setIsValidating","useState","validationResult","setValidationResult","b","validatedToken","setValidatedToken","window","sessionStorage","getItem","hasValidatedRef","useRef","Set","validateToken","token","sessionValidatedToken","current","has","setItem","add","response","fetch","method","headers","body","JSON","stringify","result","json","ok","isValid","validationData","email","invitation","role","organizationName","inviterName","expiresAt","errorData","error","message","initialEffectRan","useEffect","urlParams","URLSearchParams","location","search","get","getTimeRemaining","now","Date","expires","diff","getTime","days","Math","floor","hours","getRoleBadgeColor","jsx_runtime_1","jsxs","className","children","jsx","AlertTriangle","Alert","variant","XCircle","AlertDescription","Card","CardContent","CheckCircle","Mail","Shield","Badge","Clock"],"sources":["/home/runner/workspace/client/src/components/auth/steps/token-validation-step.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle, Clock, XCircle, AlertTriangle, Shield, Mail } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { WizardStepProps } from '../registration-wizard';\n\n/**\n * Interface for token validation step data.\n * Contains invitation token details and validation status.\n */\ninterface TokenValidationData {\n  token: string;\n  email: string;\n  role: string;\n  organizationName: string;\n  inviterName: string;\n  expiresAt: string;\n  isValid: boolean;\n  error?: string;\n}\n\n/**\n * Token Validation Step Component.\n *\n * Validates invitation token and displays invitation details.\n * Handles expired, invalid, and malformed tokens with appropriate feedback.\n * @param root0 - The wizard step props.\n * @param root0.data - Current step data.\n * @param root0.onDataChange - Callback when step data changes.\n * @param root0.onValidationChange - Callback when validation status changes.\n * @returns JSX element for the token validation step.\n */\n/**\n * TokenValidationStep function.\n * @param root0\n * @param root0.data\n * @param root0.onDataChange\n * @param root0.onValidationChange\n * @param root0._data\n * @returns Function result.\n */\nexport function TokenValidationStep({ _data, onDataChange, onValidationChange }: WizardStepProps) {\n  const { t: _t } = useLanguage();\n  const [isValidating, setIsValidating] = useState(false);\n  const [validationResult, setValidationResult] = useState<TokenValidationData | null>(\n    (_data as unknown as TokenValidationData) || null\n  );\n  const [validatedToken, setValidatedToken] = useState<string | null>(() => {\n    // Initialize from sessionStorage to persist across component re-renders\n    if (typeof window !== 'undefined') {\n      return sessionStorage.getItem('koveo-validated-token');\n    }\n    return null;\n  }); // Track which token was validated\n\n  const hasValidatedRef = useRef<Set<string>>(new Set()); // Prevent duplicate validations completely\n\n  const validateToken = async (token: string) => {\n\n    // Triple-check: state, sessionStorage, and ref guard\n    const sessionValidatedToken = sessionStorage.getItem('koveo-validated-token');\n\n    // Skip if already validating this token OR if already validated\n    if (\n      validatedToken === token ||\n      sessionValidatedToken === token ||\n      hasValidatedRef.current.has(token) ||\n      isValidating\n    ) {\n      // Token validation skipped\n      return;\n    }\n\n    // Mark this token as being validated in state, sessionStorage, AND ref\n    setValidatedToken(token);\n    sessionStorage.setItem('koveo-validated-token', token);\n    hasValidatedRef.current.add(token);\n    setIsValidating(true);\n\n    try {\n      const response = await fetch('/api/invitations/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok && result.isValid) {\n        const validationData: TokenValidationData = {\n          token,\n          email: result.invitation.email,\n          role: result.invitation.role,\n          organizationName: result.organizationName || 'Koveo Gestion',\n          inviterName: result.inviterName || 'Administrateur',\n          expiresAt: result.invitation.expiresAt,\n          isValid: true,\n        };\n\n\n        // Store successful validation in sessionStorage\n        sessionStorage.setItem('koveo-validation-result', JSON.stringify(validationData));\n\n        setValidationResult(validationData);\n        onDataChange(validationData as unknown as Record<string, unknown>);\n        onValidationChange(true);\n      } else {\n        const errorData: TokenValidationData = {\n          token,\n          email: '',\n          role: '',\n          organizationName: '',\n          inviterName: '',\n          expiresAt: '',\n          isValid: false,\n          error: result.message || 'Token invalide',\n        };\n\n        setValidationResult(errorData);\n        onDataChange(errorData as unknown as Record<string, unknown>);\n        onValidationChange(false);\n      }\n    } catch (error: any) {\n      // Error validating token\n      const errorData: TokenValidationData = {\n        token,\n        email: '',\n        role: '',\n        organizationName: '',\n        inviterName: '',\n        expiresAt: '',\n        isValid: false,\n        error: 'Erreur de connexion au serveur',\n      };\n\n      setValidationResult(errorData);\n      onDataChange(errorData as unknown as Record<string, unknown>);\n      onValidationChange(false);\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  // Track if initial effect has run to prevent multiple executions\n  const initialEffectRan = useRef(false);\n\n  useEffect(() => {\n    // Prevent running multiple times\n    if (initialEffectRan.current) return;\n    initialEffectRan.current = true;\n\n    // Auto-validate if token is provided via URL params\n    const urlParams = new window.URLSearchParams(window.location.search);\n    const token = urlParams.get('token') || urlParams.get('invitation');\n    // Token auto-validation check\n\n    if (token && validatedToken !== token && !hasValidatedRef.current.has(token) && !isValidating) {\n      validateToken(token);\n    }\n  }, []); // Only run once on component mount\n\n  const getTimeRemaining = (expiresAt: string) => {\n    const now = new Date();\n    const expires = new Date(expiresAt);\n    const diff = expires.getTime() - now.getTime();\n\n    if (diff <= 0) {\n      return 'Expiré';\n    }\n\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n    if (days > 0) {\n      return `${days} jour${days > 1 ? 's' : ''} restant${days > 1 ? 's' : ''}`;\n    } else if (hours > 0) {\n      return `${hours} heure${hours > 1 ? 's' : ''} restante${hours > 1 ? 's' : ''}`;\n    } else {\n      return 'Expire bientôt';\n    }\n  };\n\n  const getRoleBadgeColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'bg-red-100 text-red-800';\n      case 'manager':\n        return 'bg-blue-100 text-blue-800';\n      case 'tenant':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (isValidating) {\n    return (\n      <div className='flex flex-col items-center justify-center py-12'>\n        <div className='animate-spin rounded-full h-12 w-12 border-b-2 border-primary mb-4' />\n        <h3 className='text-lg font-medium text-gray-900 mb-2'>Validation de l'invitation</h3>\n        <p className='text-gray-600 text-center max-w-md'>\n          Vérification du token d'invitation et des détails associés...\n        </p>\n      </div>\n    );\n  }\n\n  if (!validationResult) {\n    return (\n      <div className='flex flex-col items-center justify-center py-12'>\n        <AlertTriangle className='h-12 w-12 text-yellow-500 mb-4' />\n        <h3 className='text-lg font-medium text-gray-900 mb-2'>Token d'invitation requis</h3>\n        <p className='text-gray-600 text-center max-w-md'>\n          Aucun token d'invitation valide n'a été trouvé. Veuillez utiliser le lien d'invitation\n          reçu par email.\n        </p>\n      </div>\n    );\n  }\n\n  if (!validationResult.isValid) {\n    return (\n      <div className='space-y-4'>\n        <Alert variant='destructive'>\n          <XCircle className='h-4 w-4' />\n          <AlertDescription>\n            <strong>Invitation invalide:</strong> {validationResult.error}\n          </AlertDescription>\n        </Alert>\n\n        <Card className='border-red-200 bg-red-50'>\n          <CardContent className='pt-6'>\n            <div className='text-center'>\n              <XCircle className='h-12 w-12 text-red-500 mx-auto mb-4' />\n              <h3 className='text-lg font-medium text-red-900 mb-2'>\n                Impossible de valider l'invitation\n              </h3>\n              <p className='text-red-700 mb-4'>\n                Le lien d'invitation peut être expiré, invalide ou déjà utilisé.\n              </p>\n              <div className='text-sm text-red-600 space-y-1'>\n                <p>• Vérifiez que vous utilisez le lien complet reçu par email</p>\n                <p>• Assurez-vous que l'invitation n'est pas expirée</p>\n                <p>• Contactez l'administrateur si le problème persiste</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className='space-y-6'>\n      <Alert className='border-green-200 bg-green-50'>\n        <CheckCircle className='h-4 w-4 text-green-600' />\n        <AlertDescription className='text-green-800'>\n          <strong>Invitation valide!</strong> Vous pouvez procéder à la création de votre compte.\n        </AlertDescription>\n      </Alert>\n\n      <Card className='border-green-200 bg-green-50'>\n        <CardContent className='pt-6'>\n          <div className='text-center mb-6'>\n            <CheckCircle className='h-12 w-12 text-green-500 mx-auto mb-4' />\n            <h3 className='text-lg font-medium text-green-900 mb-2'>Invitation confirmée</h3>\n            <p className='text-green-700'>\n              Vous avez été invité(e) à rejoindre {validationResult.organizationName}\n            </p>\n          </div>\n\n          <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n            {/* Email */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Mail className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Email</span>\n              </div>\n              <p className='text-gray-900 font-medium'>{validationResult.email}</p>\n            </div>\n\n            {/* Role */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Shield className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Rôle</span>\n              </div>\n              <Badge className={getRoleBadgeColor(validationResult.role)}>\n                {validationResult.role === 'admin' && 'Administrateur'}\n                {validationResult.role === 'manager' && 'Gestionnaire'}\n                {validationResult.role === 'tenant' && 'Locataire'}\n                {validationResult.role === 'resident' && 'Résident'}\n              </Badge>\n            </div>\n\n            {/* Inviter */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Shield className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Invité par</span>\n              </div>\n              <p className='text-gray-900'>{validationResult.inviterName}</p>\n            </div>\n\n            {/* Expiration */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Clock className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Validité</span>\n              </div>\n              <p className='text-gray-900'>{getTimeRemaining(validationResult.expiresAt)}</p>\n            </div>\n          </div>\n\n          {/* Quebec Law 25 Notice */}\n          <div className='mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg'>\n            <h4 className='text-sm font-medium text-blue-900 mb-2'>\n              🛡️ Protection des données personnelles (Loi 25 - Québec)\n            </h4>\n            <p className='text-xs text-blue-800'>\n              En acceptant cette invitation, vous reconnaissez avoir été informé(e) de la collecte\n              et de l'utilisation de vos données personnelles conformément à la Loi 25 du Québec sur\n              la protection des renseignements personnels dans le secteur privé.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}