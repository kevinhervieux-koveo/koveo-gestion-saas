{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/selection/getInputRange.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,yBAAyB,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAE1E;;GAEG,CAAC,SAAS,aAAa,CAAC,SAAS;IAChC,MAAM,gBAAgB,GAAG,yBAAyB,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;IACxF,IAAI,gBAAgB,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;QACpC,OAAO,gBAAgB,CAAC,SAAS,CAAC;IACtC,CAAC;SAAM,IAAI,gBAAgB,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;QACrD,IAAI,2BAA2B,CAAC;QAChC,+EAA+E;QAC/E,OAAO,CAAC,2BAA2B,GAAG,gBAAgB,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,2BAA2B,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACpL,CAAC;AACL,CAAC;AAED,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/event/selection/getInputRange.js"],"sourcesContent":["'use strict';\n\nvar getTargetTypeAndSelection = require('./getTargetTypeAndSelection.js');\n\n/**\n * Get the range that would be overwritten by input.\n */ function getInputRange(focusNode) {\n    const typeAndSelection = getTargetTypeAndSelection.getTargetTypeAndSelection(focusNode);\n    if (typeAndSelection.type === 'input') {\n        return typeAndSelection.selection;\n    } else if (typeAndSelection.type === 'contenteditable') {\n        var _typeAndSelection_selection;\n        // Multi-range on contenteditable edits the first selection instead of the last\n        return (_typeAndSelection_selection = typeAndSelection.selection) === null || _typeAndSelection_selection === undefined ? undefined : _typeAndSelection_selection.getRangeAt(0);\n    }\n}\n\nexports.getInputRange = getInputRange;\n"],"version":3}