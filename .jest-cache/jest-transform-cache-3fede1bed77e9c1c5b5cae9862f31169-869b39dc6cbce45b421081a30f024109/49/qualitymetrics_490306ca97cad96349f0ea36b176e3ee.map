{"version":3,"names":["exports","QualityMetrics","card_1","cov_o67nl94gs","s","require","lucide_react_1","use_language_1","react_query_1","skeleton_1","f","t","useLanguage","data","metricsData","isLoading","useQuery","queryKey","staleTime","refetchInterval","getColorByValue","label","_value","b","coverage","parseInt","bg","text","includes","issues","timeMs","replace","memoryMB","sizeMB","parseFloat","queryMs","loadMs","metrics","codeQuality","securityIssues","buildTime","translationCoverage","responseTime","memoryUsage","bundleSize","dbQueryTime","pageLoadTime","jsx_runtime_1","jsx","Card","children","jsxs","CardContent","className","TrendingUp","size","Array","from","length","map","_","_index","Skeleton","metric"],"sources":["/home/runner/workspace/client/src/components/dashboard/quality-metrics.tsx"],"sourcesContent":["import { Card, CardContent } from '@/components/ui/card';\nimport { TrendingUp } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useQuery } from '@tanstack/react-query';\nimport { Skeleton } from '@/components/ui/skeleton';\n\n/**\n * Interface for quality metrics data from the API including performance metrics.\n */\ninterface QualityMetricsData {\n  coverage: string;\n  codeQuality: string;\n  securityIssues: string;\n  buildTime: string;\n  translationCoverage: string;\n  // Performance metrics\n  responseTime: string;\n  memoryUsage: string;\n  bundleSize: string;\n  dbQueryTime: string;\n  pageLoadTime: string;\n}\n\n/**\n * Quality metrics component that displays comprehensive development quality indicators\n * including code coverage, complexity, performance metrics, and compliance scores.\n * @returns JSX element displaying the quality metrics dashboard.\n */\n/**\n * QualityMetrics function.\n * @returns Function result.\n */\nexport function QualityMetrics() {\n  const { t } = useLanguage();\n\n  const { data: metricsData, isLoading } = useQuery<QualityMetricsData>({\n    queryKey: ['/api/quality-metrics'],\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchInterval: 5 * 60 * 1000, // Refetch every 5 minutes\n  });\n\n  const getColorByValue = (label: string, _value: string) => {\n    if (label === t('codeCoverage')) {\n      const coverage = parseInt(_value);\n      if (coverage >= 80) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (coverage >= 60) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    if (label === t('translationCoverage')) {\n      const coverage = parseInt(_value);\n      if (coverage >= 95) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (coverage >= 80) {\n        return { bg: 'bg-blue-50', text: 'text-blue-600' };\n      }\n      if (coverage >= 60) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    if (label === t('codeQuality')) {\n      if (['A+', 'A'].includes(_value)) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (['B+', 'B'].includes(_value)) {\n        return { bg: 'bg-blue-50', text: 'text-blue-600' };\n      }\n      return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n    }\n\n    if (label === t('securityIssues')) {\n      const issues = parseInt(_value);\n      if (issues === 0) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (issues <= 5) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    // Performance metrics color coding with null safety\n    if (label === t('responseTime')) {\n      const timeMs = parseInt((_value || '0ms').replace('ms', ''));\n      if (timeMs <= 100) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (timeMs <= 200) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    if (label === t('memoryUsage')) {\n      const memoryMB = parseInt((_value || '0MB').replace('MB', ''));\n      if (memoryMB <= 50) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (memoryMB <= 100) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    if (label === t('bundleSize')) {\n      const sizeMB = parseFloat((_value || '0MB').replace('MB', ''));\n      if (sizeMB <= 2) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (sizeMB <= 5) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    if (label === t('dbQueryTime')) {\n      const queryMs = parseInt((_value || '0ms').replace('ms', ''));\n      if (queryMs <= 50) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (queryMs <= 100) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    if (label === t('pageLoadTime')) {\n      const loadMs = parseInt((_value || '0ms').replace('ms', ''));\n      if (loadMs <= 1000) {\n        return { bg: 'bg-green-50', text: 'text-green-600' };\n      }\n      if (loadMs <= 2000) {\n        return { bg: 'bg-yellow-50', text: 'text-yellow-600' };\n      }\n      return { bg: 'bg-red-50', text: 'text-red-600' };\n    }\n\n    return { bg: 'bg-orange-50', text: 'text-orange-600' };\n  };\n\n  const metrics = metricsData\n    ? [\n        {\n          _value: metricsData.coverage,\n          label: t('codeCoverage'),\n          ...getColorByValue(t('codeCoverage'), metricsData.coverage),\n        },\n        {\n          _value: metricsData.codeQuality,\n          label: t('codeQuality'),\n          ...getColorByValue(t('codeQuality'), metricsData.codeQuality),\n        },\n        {\n          _value: metricsData.securityIssues,\n          label: t('securityIssues'),\n          ...getColorByValue(t('securityIssues'), metricsData.securityIssues),\n        },\n        {\n          _value: metricsData.buildTime,\n          label: t('buildTime'),\n          ...getColorByValue(t('buildTime'), metricsData.buildTime),\n        },\n        {\n          _value: metricsData.translationCoverage,\n          label: t('translationCoverage'),\n          ...getColorByValue(t('translationCoverage'), metricsData.translationCoverage),\n        },\n        // Performance metrics with null safety\n        {\n          _value: metricsData.responseTime || 'N/A',\n          label: t('responseTime'),\n          ...getColorByValue(t('responseTime'), metricsData.responseTime || '0ms'),\n        },\n        {\n          _value: metricsData.memoryUsage || 'N/A',\n          label: t('memoryUsage'),\n          ...getColorByValue(t('memoryUsage'), metricsData.memoryUsage || '0MB'),\n        },\n        {\n          _value: metricsData.bundleSize || 'N/A',\n          label: t('bundleSize'),\n          ...getColorByValue(t('bundleSize'), metricsData.bundleSize || '0MB'),\n        },\n        {\n          _value: metricsData.dbQueryTime || 'N/A',\n          label: t('dbQueryTime'),\n          ...getColorByValue(t('dbQueryTime'), metricsData.dbQueryTime || '0ms'),\n        },\n        {\n          _value: metricsData.pageLoadTime || 'N/A',\n          label: t('pageLoadTime'),\n          ...getColorByValue(t('pageLoadTime'), metricsData.pageLoadTime || '0ms'),\n        },\n      ]\n    : [];\n\n  return (\n    <Card>\n      <CardContent className='p-6'>\n        <h3 className='text-lg font-semibold text-gray-900 mb-4 flex items-center'>\n          <TrendingUp className='text-koveo-navy mr-3' size={20} />\n          {t('qualityMetrics')}\n        </h3>\n\n        <div className='grid grid-cols-2 lg:grid-cols-5 xl:grid-cols-10 gap-4'>\n          {isLoading\n            ? // Loading skeleton\n              Array.from({ length: 10 }).map((_, _index) => (\n                <div key={`skeleton-${_index}`} className='text-center p-4 bg-gray-50 rounded-lg'>\n                  <Skeleton className='h-8 w-16 mx-auto mb-2' />\n                  <Skeleton className='h-4 w-20 mx-auto' />\n                </div>\n              ))\n            : metrics.map((metric) => (\n                <div key={metric.label} className={`text-center p-4 ${metric.bg} rounded-lg`}>\n                  <div className={`text-2xl font-bold ${metric.text}`}>{metric._value}</div>\n                  <div className='text-sm text-gray-600'>{metric.label}</div>\n                </div>\n              ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"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","ignoreList":[]}