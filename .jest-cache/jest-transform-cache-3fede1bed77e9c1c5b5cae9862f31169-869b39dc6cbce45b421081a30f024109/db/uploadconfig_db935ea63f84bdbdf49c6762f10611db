30d6e91d94dca3f7f8fa071dc9eb1736
"use strict";
/**
 * Universal Upload Configuration System
 *
 * Defines AI analysis settings, storage directories, and form configurations
 * for all document upload functionality across the application.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UPLOAD_FORM_CONFIGS = void 0;
exports.generateStorageDirectory = generateStorageDirectory;
exports.getUploadConfig = getUploadConfig;
exports.isAiAnalysisEnabled = isAiAnalysisEnabled;
exports.validateUploadContext = validateUploadContext;
/**
 * Configuration for each upload form type
 */
exports.UPLOAD_FORM_CONFIGS = {
    bills: {
        aiAnalysisEnabled: true, // Bills have AI enabled by default
        maxFileSize: 25,
        allowedFileTypes: ['image/*', 'application/pdf'],
        showCamera: true,
        contextFields: {
            category: 'string',
            vendor: 'string',
            amount: 'number',
            date: 'string'
        }
    },
    buildings: {
        aiAnalysisEnabled: false, // Disabled by default
        maxFileSize: 25,
        allowedFileTypes: ['image/*', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],
        showCamera: true,
        contextFields: {
            documentType: 'string',
            description: 'string'
        }
    },
    residences: {
        aiAnalysisEnabled: false, // Disabled by default
        maxFileSize: 25,
        allowedFileTypes: ['image/*', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],
        showCamera: true,
        contextFields: {
            documentType: 'string',
            description: 'string'
        }
    },
    bugs: {
        aiAnalysisEnabled: false, // Disabled by default
        maxFileSize: 15,
        allowedFileTypes: ['image/*', 'application/pdf', '.txt', '.log', '.json', '.csv'],
        showCamera: true,
        contextFields: {
            category: 'string',
            priority: 'string',
            steps: 'string'
        }
    },
    features: {
        aiAnalysisEnabled: false, // Disabled by default
        maxFileSize: 20,
        allowedFileTypes: ['image/*', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],
        showCamera: true,
        contextFields: {
            category: 'string',
            priority: 'string',
            description: 'string'
        }
    },
    documents: {
        aiAnalysisEnabled: false, // Disabled by default
        maxFileSize: 50,
        allowedFileTypes: ['image/*', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],
        showCamera: true,
        contextFields: {
            category: 'string',
            accessLevel: 'string',
            description: 'string'
        }
    },
    maintenance: {
        aiAnalysisEnabled: false, // Disabled by default
        maxFileSize: 25,
        allowedFileTypes: ['image/*', 'application/pdf'],
        showCamera: true,
        contextFields: {
            priority: 'string',
            category: 'string',
            description: 'string'
        }
    }
};
/**
 * Generate secure storage directory path based on context and user role
 */
function generateStorageDirectory(context) {
    const { type, organizationId, buildingId, residenceId, userRole, userId } = context;
    // Base directory structure: uploads/{type}/{org_or_default}/{building?}/{residence?}/{user_role}
    const baseParts = ['uploads', type];
    // Organization level
    const orgId = organizationId || 'default';
    baseParts.push(`org_${orgId}`);
    // Building level (if applicable)
    if (buildingId) {
        baseParts.push(`building_${buildingId}`);
    }
    // Residence level (if applicable)
    if (residenceId) {
        baseParts.push(`residence_${residenceId}`);
    }
    // Role-based access control
    if (userRole) {
        baseParts.push(`role_${userRole}`);
    }
    // User-specific directory for private uploads (if needed)
    if (userRole === 'tenant' || userRole === 'resident') {
        baseParts.push(`user_${userId}`);
    }
    return baseParts.join('/');
}
/**
 * Get upload configuration for a specific form type
 */
function getUploadConfig(formType) {
    return exports.UPLOAD_FORM_CONFIGS[formType] || exports.UPLOAD_FORM_CONFIGS.documents;
}
/**
 * Check if AI analysis is enabled for a specific context
 */
function isAiAnalysisEnabled(formType) {
    const config = getUploadConfig(formType);
    return config.aiAnalysisEnabled;
}
/**
 * Validate upload context and ensure proper access control
 */
function validateUploadContext(context, userRole) {
    // Admin can upload to any context
    if (userRole === 'admin') {
        return true;
    }
    // Manager can upload to their organization's buildings and residences
    if (userRole === 'manager') {
        return !!context.organizationId;
    }
    // Resident can upload to their specific building/residence
    if (userRole === 'resident') {
        return !!(context.organizationId && (context.buildingId || context.residenceId));
    }
    // Tenant can only upload to their specific residence
    if (userRole === 'tenant') {
        return !!(context.organizationId && context.buildingId && context.residenceId);
    }
    return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,