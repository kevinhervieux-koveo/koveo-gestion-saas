{"file":"/home/runner/workspace/tests/pages/all-pages-integrity.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/pages/all-pages-integrity.test.tsx"],"sourcesContent":["/**\n * Comprehensive test suite to ensure all pages in the app work correctly\n * and prevent issues like missing imports and authentication failures\n */\n\nimport { render, screen, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { Router, Route, Switch } from 'wouter';\nimport { MemoryRouter } from 'wouter/memory-location';\nimport { AuthProvider } from '@/hooks/use-auth';\nimport { LanguageProvider } from '@/hooks/use-language';\nimport '@testing-library/jest-dom';\n\n// Mock the auth API responses\nglobal.fetch = jest.fn();\n\n// Test data - all pages in the app\nconst allPages = [\n  // Public pages\n  { path: '/', name: 'Home' },\n  { path: '/features', name: 'Features' },\n  { path: '/pricing', name: 'Pricing' },\n  { path: '/security', name: 'Security' },\n  { path: '/story', name: 'Story' },\n  { path: '/privacy-policy', name: 'Privacy Policy' },\n  { path: '/terms-of-service', name: 'Terms of Service' },\n  \n  // Auth pages\n  { path: '/login', name: 'Login' },\n  { path: '/forgot-password', name: 'Forgot Password' },\n  { path: '/reset-password', name: 'Reset Password' },\n  \n  // Dashboard pages (require auth)\n  { path: '/dashboard', name: 'Dashboard' },\n  { path: '/dashboard/calendar', name: 'Calendar' },\n  \n  // Admin pages (require admin role)\n  { path: '/admin/organizations', name: 'Admin Organizations' },\n  { path: '/admin/compliance', name: 'Admin Compliance' },\n  { path: '/admin/documentation', name: 'Admin Documentation' },\n  { path: '/admin/permissions', name: 'Admin Permissions' },\n  { path: '/admin/pillars', name: 'Admin Pillars' },\n  { path: '/admin/quality', name: 'Admin Quality' },\n  { path: '/admin/roadmap', name: 'Admin Roadmap' },\n  { path: '/admin/suggestions', name: 'Admin Suggestions' },\n  \n  // Manager pages (require manager role)\n  { path: '/manager/bills', name: 'Manager Bills' },\n  { path: '/manager/budget', name: 'Manager Budget' },\n  { path: '/manager/buildings', name: 'Manager Buildings' },\n  { path: '/manager/common-spaces-stats', name: 'Manager Common Spaces Stats' },\n  { path: '/manager/demands', name: 'Manager Demands' },\n  { path: '/manager/invoices', name: 'Manager Invoices' },\n  { path: '/manager/residences', name: 'Manager Residences' },\n  { path: '/manager/user-management', name: 'Manager User Management' },\n  \n  // Resident pages (require resident role)\n  { path: '/residents/dashboard', name: 'Residents Dashboard' },\n  { path: '/residents/building', name: 'Residents Building' },\n  { path: '/residents/common-spaces', name: 'Residents Common Spaces' },\n  { path: '/residents/my-calendar', name: 'Residents My Calendar' },\n  { path: '/residents/residence', name: 'Residents Residence' },\n  \n  // Settings pages\n  { path: '/settings/settings', name: 'Settings' },\n  { path: '/settings/bug-reports', name: 'Bug Reports' },\n  { path: '/settings/idea-box', name: 'Idea Box' },\n];\n\n// Import all page components dynamically\nconst pageComponents = {\n  '/': () => import('@/pages/home'),\n  '/features': () => import('@/pages/features'),\n  '/pricing': () => import('@/pages/pricing'),\n  '/security': () => import('@/pages/security'),\n  '/story': () => import('@/pages/story'),\n  '/privacy-policy': () => import('@/pages/privacy-policy'),\n  '/terms-of-service': () => import('@/pages/terms-of-service'),\n  '/login': () => import('@/pages/auth/login'),\n  '/forgot-password': () => import('@/pages/auth/forgot-password'),\n  '/reset-password': () => import('@/pages/auth/reset-password'),\n  '/dashboard': () => import('@/pages/dashboard'),\n  '/dashboard/calendar': () => import('@/pages/dashboard/calendar'),\n  '/admin/organizations': () => import('@/pages/admin/organizations'),\n  '/admin/compliance': () => import('@/pages/admin/compliance'),\n  '/admin/documentation': () => import('@/pages/admin/documentation'),\n  '/admin/permissions': () => import('@/pages/admin/permissions'),\n  '/admin/pillars': () => import('@/pages/admin/pillars'),\n  '/admin/quality': () => import('@/pages/admin/quality'),\n  '/admin/roadmap': () => import('@/pages/admin/roadmap'),\n  '/admin/suggestions': () => import('@/pages/admin/suggestions'),\n  '/manager/bills': () => import('@/pages/manager/bills'),\n  '/manager/budget': () => import('@/pages/manager/budget'),\n  '/manager/buildings': () => import('@/pages/manager/buildings'),\n  '/manager/common-spaces-stats': () => import('@/pages/manager/common-spaces-stats'),\n  '/manager/demands': () => import('@/pages/manager/demands'),\n  '/manager/invoices': () => import('@/pages/manager/invoices'),\n  '/manager/residences': () => import('@/pages/manager/residences'),\n  '/manager/user-management': () => import('@/pages/manager/user-management'),\n  '/residents/dashboard': () => import('@/pages/residents/dashboard'),\n  '/residents/building': () => import('@/pages/residents/building'),\n  '/residents/common-spaces': () => import('@/pages/residents/common-spaces'),\n  '/residents/my-calendar': () => import('@/pages/residents/my-calendar'),\n  '/residents/residence': () => import('@/pages/residents/residence'),\n  '/settings/settings': () => import('@/pages/settings/settings'),\n  '/settings/bug-reports': () => import('@/pages/settings/bug-reports'),\n  '/settings/idea-box': () => import('@/pages/settings/idea-box'),\n};\n\n// Helper to create test providers\nconst TestWrapper = ({ children, mockUser = null }: { children: React.ReactNode, mockUser?: any }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n        gcTime: 0,\n      },\n    },\n  });\n\n  // Mock auth API response\n  const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n  \n  if (mockUser) {\n    mockFetch.mockResolvedValueOnce({\n      ok: true,\n      status: 200,\n      json: () => Promise.resolve(mockUser),\n    } as Response);\n  } else {\n    mockFetch.mockResolvedValueOnce({\n      ok: false,\n      status: 401,\n      statusText: 'Unauthorized',\n      json: () => Promise.resolve({ error: 'Unauthorized' }),\n    } as Response);\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LanguageProvider>\n        <AuthProvider>\n          <MemoryRouter>\n            {children}\n          </MemoryRouter>\n        </AuthProvider>\n      </LanguageProvider>\n    </QueryClientProvider>\n  );\n};\n\ndescribe('All Pages Integrity Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Reset console.error to catch React errors\n    jest.spyOn(console, 'error').mockImplementation(() => {});\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  describe('Public Pages', () => {\n    const publicPages = allPages.filter(page => \n      ['/', '/features', '/pricing', '/security', '/story', '/privacy-policy', '/terms-of-service'].includes(page.path)\n    );\n\n    it.each(publicPages)('should render $name page without errors', async ({ path, name }) => {\n      const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n      mockFetch.mockResolvedValue({\n        ok: false,\n        status: 401,\n        statusText: 'Unauthorized',\n        json: () => Promise.resolve({ error: 'Unauthorized' }),\n      } as Response);\n\n      let Component;\n      try {\n        const module = await pageComponents[path]?.();\n        Component = module?.default;\n      } catch (error) {\n        throw new Error(`Failed to import component for ${name} (${path}): ${error}`);\n      }\n\n      if (!Component) {\n        throw new Error(`No component found for ${name} (${path})`);\n      }\n\n      let renderError;\n      try {\n        render(\n          <TestWrapper>\n            <Component />\n          </TestWrapper>\n        );\n      } catch (error) {\n        renderError = error;\n      }\n\n      // Check for render errors\n      expect(renderError).toBeUndefined();\n      \n      // Check for console errors (like missing imports)\n      const consoleSpy = jest.spyOn(console, 'error');\n      expect(consoleSpy).not.toHaveBeenCalledWith(\n        expect.stringMatching(/ReferenceError.*is not defined/)\n      );\n    });\n  });\n\n  describe('Authentication Pages', () => {\n    const authPages = allPages.filter(page => \n      ['/login', '/forgot-password', '/reset-password'].includes(page.path)\n    );\n\n    it.each(authPages)('should render $name page without errors', async ({ path, name }) => {\n      const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n      mockFetch.mockResolvedValue({\n        ok: false,\n        status: 401,\n        statusText: 'Unauthorized',\n        json: () => Promise.resolve({ error: 'Unauthorized' }),\n      } as Response);\n\n      let Component;\n      try {\n        const module = await pageComponents[path]?.();\n        Component = module?.default;\n      } catch (error) {\n        throw new Error(`Failed to import component for ${name} (${path}): ${error}`);\n      }\n\n      if (!Component) {\n        throw new Error(`No component found for ${name} (${path})`);\n      }\n\n      expect(() => {\n        render(\n          <TestWrapper>\n            <Component />\n          </TestWrapper>\n        );\n      }).not.toThrow();\n    });\n  });\n\n  describe('Protected Pages with Authentication', () => {\n    const protectedPages = allPages.filter(page => \n      page.path.startsWith('/dashboard') || \n      page.path.startsWith('/admin') || \n      page.path.startsWith('/manager') || \n      page.path.startsWith('/residents') ||\n      page.path.startsWith('/settings')\n    );\n\n    const mockUsers = {\n      admin: { id: '1', email: 'admin@test.com', role: 'admin', firstName: 'Admin', lastName: 'User' },\n      manager: { id: '2', email: 'manager@test.com', role: 'manager', firstName: 'Manager', lastName: 'User' },\n      resident: { id: '3', email: 'resident@test.com', role: 'resident', firstName: 'Resident', lastName: 'User' }\n    };\n\n    it.each(protectedPages)('should render $name page with proper authentication', async ({ path, name }) => {\n      // Determine required role based on path\n      let mockUser = mockUsers.admin; // Default to admin\n      if (path.startsWith('/manager')) mockUser = mockUsers.manager;\n      if (path.startsWith('/residents')) mockUser = mockUsers.resident;\n\n      let Component;\n      try {\n        const module = await pageComponents[path]?.();\n        Component = module?.default;\n      } catch (error) {\n        throw new Error(`Failed to import component for ${name} (${path}): ${error}`);\n      }\n\n      if (!Component) {\n        throw new Error(`No component found for ${name} (${path})`);\n      }\n\n      expect(() => {\n        render(\n          <TestWrapper mockUser={mockUser}>\n            <Component />\n          </TestWrapper>\n        );\n      }).not.toThrow();\n    });\n  });\n\n  describe('Import Validation', () => {\n    it('should not have missing lucide-react imports', async () => {\n      const pages = [\n        '/privacy-policy',\n        '/home',\n        '/features', \n        '/pricing',\n        '/security',\n        '/story',\n        '/terms-of-service'\n      ];\n\n      for (const path of pages) {\n        let Component;\n        try {\n          const module = await pageComponents[path]?.();\n          Component = module?.default;\n        } catch (error) {\n          throw new Error(`Failed to import component for ${path}: ${error}`);\n        }\n\n        if (Component) {\n          // Test that component can be rendered without import errors\n          expect(() => {\n            render(\n              <TestWrapper>\n                <Component />\n              </TestWrapper>\n            );\n          }).not.toThrow();\n\n          // Check that no ReferenceError is thrown for missing lucide icons\n          const consoleSpy = jest.spyOn(console, 'error');\n          expect(consoleSpy).not.toHaveBeenCalledWith(\n            expect.stringMatching(/ReferenceError.*ArrowRight is not defined/)\n          );\n          expect(consoleSpy).not.toHaveBeenCalledWith(\n            expect.stringMatching(/ReferenceError.*ArrowLeft is not defined/)\n          );\n        }\n      }\n    });\n  });\n\n  describe('API Integration', () => {\n    it('should handle 401 responses gracefully on public pages', async () => {\n      const publicPages = ['/', '/features', '/privacy-policy'];\n      \n      for (const path of publicPages) {\n        const mockFetch = global.fetch as jest.MockedFunction<typeof fetch>;\n        mockFetch.mockClear();\n        \n        // Mock 401 response\n        mockFetch.mockResolvedValue({\n          ok: false,\n          status: 401,\n          statusText: 'Unauthorized',\n          json: () => Promise.resolve({ error: 'Unauthorized' }),\n        } as Response);\n\n        let Component;\n        try {\n          const module = await pageComponents[path]?.();\n          Component = module?.default;\n        } catch (error) {\n          continue; // Skip if component doesn't exist\n        }\n\n        if (Component) {\n          expect(() => {\n            render(\n              <TestWrapper>\n                <Component />\n              </TestWrapper>\n            );\n          }).not.toThrow();\n\n          // Wait for auth check to complete\n          await waitFor(() => {\n            expect(mockFetch).toHaveBeenCalledWith('/api/auth/user', {\n              credentials: 'include',\n            });\n          });\n        }\n      }\n    });\n  });\n});"],"version":3}