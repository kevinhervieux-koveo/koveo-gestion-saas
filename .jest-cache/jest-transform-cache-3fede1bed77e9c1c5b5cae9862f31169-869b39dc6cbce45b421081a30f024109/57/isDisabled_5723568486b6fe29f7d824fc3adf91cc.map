{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/utils/misc/isDisabled.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,aAAa,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAElD,yGAAyG;AACzG,SAAS,UAAU,CAAC,OAAO;IACvB,KAAI,IAAI,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,aAAa,EAAC,CAAC;QAC7C,IAAI,aAAa,CAAC,aAAa,CAAC,EAAE,EAAE;YAChC,QAAQ;YACR,OAAO;YACP,QAAQ;YACR,UAAU;YACV,UAAU;YACV,QAAQ;SACX,CAAC,EAAE,CAAC;YACD,IAAI,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;aAAM,IAAI,aAAa,CAAC,aAAa,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,CAAC;YACrD,IAAI,iBAAiB,CAAC;YACtB,IAAI,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,GAAG,EAAE,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;gBAC5L,OAAO,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;aAAM,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAClC,IAAI,EAAE,CAAC,WAAW,CAAC,cAAc,IAAI,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC/D,OAAO,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;IACL,CAAC;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/utils/misc/isDisabled.js"],"sourcesContent":["'use strict';\n\nvar isElementType = require('./isElementType.js');\n\n// This should probably just rely on the :disabled pseudo-class, but JSDOM doesn't implement it properly.\nfunction isDisabled(element) {\n    for(let el = element; el; el = el.parentElement){\n        if (isElementType.isElementType(el, [\n            'button',\n            'input',\n            'select',\n            'textarea',\n            'optgroup',\n            'option'\n        ])) {\n            if (el.hasAttribute('disabled')) {\n                return true;\n            }\n        } else if (isElementType.isElementType(el, 'fieldset')) {\n            var _el_querySelector;\n            if (el.hasAttribute('disabled') && !((_el_querySelector = el.querySelector(':scope > legend')) === null || _el_querySelector === undefined ? undefined : _el_querySelector.contains(element))) {\n                return true;\n            }\n        } else if (el.tagName.includes('-')) {\n            if (el.constructor.formAssociated && el.hasAttribute('disabled')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexports.isDisabled = isDisabled;\n"],"version":3}