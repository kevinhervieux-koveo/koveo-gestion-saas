{"file":"/home/runner/workspace/client/src/pages/residents/common-spaces.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/residents/common-spaces.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport {\n  format,\n  addDays,\n  isSameDay,\n  parseISO,\n  isWithinInterval,\n  parse,\n  startOfMonth,\n  endOfMonth,\n  eachDayOfInterval,\n  isToday,\n} from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport {\n  Building2,\n  Clock,\n  Users,\n  MapPin,\n  Download,\n  Link,\n  Calendar as CalendarIcon,\n  Plus,\n  X,\n  FileText,\n  User,\n  CalendarDays,\n  ChevronDown,\n  ChevronUp,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useLanguage } from '@/hooks/use-language';\nimport { apiRequest } from '@/lib/queryClient';\nimport { CalendarView } from '@/components/common-spaces/calendar-view';\nimport { CommonSpaceCalendar } from '@/components/common-spaces/common-space-calendar';\n\n/**\n * Common Space interface.\n */\ninterface CommonSpace {\n  id: string;\n  name: string;\n  description?: string;\n  buildingId: string;\n  isReservable: boolean;\n  capacity?: number;\n  contactPersonId?: string;\n  openingHours?: Array<{\n    day: string;\n    open: string;\n    close: string;\n    isOpen?: boolean;\n    breaks?: Array<{\n      start: string;\n      end: string;\n      reason?: string;\n    }>;\n  }>;\n  unavailablePeriods?: Array<{\n    startDate: string;\n    endDate: string;\n    reason?: string;\n    recurrence?: 'none' | 'weekly' | 'monthly' | 'yearly';\n  }>;\n  bookingRules?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n/**\n * Booking interface.\n */\ninterface Booking {\n  id: string;\n  commonSpaceId: string;\n  userId: string;\n  startTime: string;\n  endTime: string;\n  status: 'confirmed' | 'cancelled';\n  createdAt: string;\n  updatedAt: string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n}\n\n/**\n * Booking form schema.\n */\nconst bookingFormSchema = z\n  .object({\n    date: z.date({\n      message: 'Please select a booking date from the calendar',\n    }),\n    startTime: z.string().min(1, 'Start time is required (example: 09:00)').regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Start time must be in HH:MM format (example: 09:00)'),\n    endTime: z.string().min(1, 'End time is required (example: 11:00)').regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'End time must be in HH:MM format (example: 11:00)'),\n  })\n  .refine(\n    (data) => {\n      const start = parse(data.startTime, 'HH:mm', new Date());\n      const end = parse(data.endTime, 'HH:mm', new Date());\n      return end > start;\n    },\n    {\n      message: 'End time must be after start time (example: start at 09:00, end at 11:00)',\n      path: ['endTime'],\n    }\n  );\n\n/**\n *\n */\ntype BookingFormData = z.infer<typeof bookingFormSchema>;\n\n/**\n * Compact Booking Calendar Component.\n */\ninterface BookingCalendarProps {\n  selected: Date;\n  onSelect: (date: Date) => void;\n  space: CommonSpace;\n  bookings: Booking[];\n  language: string;\n  'data-testid'?: string;\n}\n\n/**\n *\n * @param root0\n * @param root0.selected\n * @param root0.onSelect\n * @param root0.space\n * @param root0.bookings\n * @param root0.language\n * @param root0.'data-testid'\n */\nfunction BookingCalendar({\n  selected,\n  onSelect,\n  space,\n  bookings,\n  language,\n  'data-testid': testId,\n}: BookingCalendarProps) {\n  const [currentDate, setCurrentDate] = useState(selected || new Date());\n\n  const monthDays = useMemo(() => {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    return eachDayOfInterval({ start, end });\n  }, [currentDate]);\n\n  const getBookingsForDay = (day: Date) => {\n    return bookings.filter(\n      (booking) => isSameDay(parseISO(booking.startTime), day) && booking.status === 'confirmed'\n    );\n  };\n\n  const isDayAvailable = (day: Date) => {\n    // Past dates are not available\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const checkDay = new Date(day);\n    checkDay.setHours(0, 0, 0, 0);\n    \n    if (checkDay < today) {\n      return false;\n    }\n\n    // Check if day falls within any unavailable periods\n    if (space.unavailablePeriods && Array.isArray(space.unavailablePeriods)) {\n      for (const period of space.unavailablePeriods) {\n        const startDate = new Date(period.startDate);\n        const endDate = new Date(period.endDate);\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n        \n        if (checkDay >= startDate && checkDay <= endDate) {\n          return false;\n        }\n      }\n    }\n\n    // Check opening hours if available\n    if (space.openingHours && Array.isArray(space.openingHours)) {\n      const dayName = day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const todayHours = space.openingHours.find((h) => h.day.toLowerCase() === dayName);\n      \n      // If no hours defined for this day, it's unavailable\n      if (!todayHours) {\n        return false;\n      }\n      \n      // If explicitly marked as closed\n      if (todayHours.isOpen === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const goToPrevMonth = () => {\n    setCurrentDate((prev) => {\n      const newDate = new Date(prev);\n      newDate.setMonth(prev.getMonth() - 1);\n      return newDate;\n    });\n  };\n\n  const goToNextMonth = () => {\n    setCurrentDate((prev) => {\n      const newDate = new Date(prev);\n      newDate.setMonth(prev.getMonth() + 1);\n      return newDate;\n    });\n  };\n\n  return (\n    <TooltipProvider>\n      <div className='border rounded-md bg-white' data-testid={testId}>\n        {/* Calendar Header */}\n        <div className='flex items-center justify-between p-3 border-b'>\n          <Button variant='outline' size='sm' onClick={goToPrevMonth} className='h-8 w-8 p-0'>\n            <ChevronLeft className='h-4 w-4' />\n          </Button>\n\n          <h3 className='text-sm font-semibold'>\n            {format(currentDate, 'MMMM yyyy', { locale: language === 'fr' ? fr : undefined })}\n          </h3>\n\n          <Button variant='outline' size='sm' onClick={goToNextMonth} className='h-8 w-8 p-0'>\n            <ChevronRight className='h-4 w-4' />\n          </Button>\n        </div>\n\n        {/* Calendar Grid */}\n        <div className='p-2'>\n          <div className='grid grid-cols-7 gap-1 mb-2'>\n            {/* Week day headers */}\n            {[\n              language === 'fr' ? 'L' : 'M',\n              language === 'fr' ? 'M' : 'T',\n              language === 'fr' ? 'M' : 'W',\n              language === 'fr' ? 'J' : 'T',\n              language === 'fr' ? 'V' : 'F',\n              language === 'fr' ? 'S' : 'S',\n              language === 'fr' ? 'D' : 'S',\n            ].map((day, index) => (\n              <div key={index} className='p-1 text-center text-xs font-medium text-gray-500'>\n                {day}\n              </div>\n            ))}\n          </div>\n\n          <div className='grid grid-cols-7 gap-1'>\n            {monthDays.map((day, index) => {\n              const dayBookings = getBookingsForDay(day);\n              const isCurrentDay = isToday(day);\n              const isSelected = selected && isSameDay(day, selected);\n              const isAvailable = isDayAvailable(day);\n\n              return (\n                <Tooltip key={index}>\n                  <TooltipTrigger asChild>\n                    <div\n                      className={`\n                        h-8 p-1 text-xs rounded cursor-pointer transition-colors flex items-center justify-center\n                        ${\n                          !isAvailable\n                            ? 'bg-red-100 text-red-600 cursor-not-allowed border border-red-200'\n                            : isSelected\n                              ? 'bg-blue-600 text-white'\n                              : isCurrentDay\n                                ? 'bg-blue-100 text-blue-900 hover:bg-blue-200'\n                                : dayBookings.length > 0\n                                  ? 'bg-orange-100 text-orange-900 hover:bg-orange-200'\n                                  : 'hover:bg-gray-100'\n                        }\n                      `}\n                      onClick={() => isAvailable && onSelect(day)}\n                    >\n                      <span className='font-medium'>{format(day, 'd')}</span>\n                      {dayBookings.length > 0 && (\n                        <div className='absolute -mt-3 -mr-1'>\n                          <div className='w-1.5 h-1.5 bg-orange-500 rounded-full'></div>\n                        </div>\n                      )}\n                    </div>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    <div className='space-y-1'>\n                      <p className='font-medium'>\n                        {format(day, 'EEEE, d MMMM yyyy', {\n                          locale: language === 'fr' ? fr : undefined,\n                        })}\n                      </p>\n                      {!isAvailable && (\n                        <p className='text-xs text-red-500'>\n                          {language === 'fr' ? 'Non disponible' : 'Not available'}\n                        </p>\n                      )}\n                      {dayBookings.length > 0 && (\n                        <div className='text-xs'>\n                          <p className='text-orange-600'>\n                            {dayBookings.length}{' '}\n                            {language === 'fr' ? 'réservation(s)' : 'booking(s)'}\n                          </p>\n                          {dayBookings.slice(0, 2).map((booking, idx) => (\n                            <p key={idx} className='text-gray-600'>\n                              {format(parseISO(booking.startTime), 'HH:mm')} -{' '}\n                              {format(parseISO(booking.endTime), 'HH:mm')}\n                            </p>\n                          ))}\n                          {dayBookings.length > 2 && (\n                            <p className='text-gray-500'>\n                              +{dayBookings.length - 2} {language === 'fr' ? 'autres' : 'more'}\n                            </p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </TooltipContent>\n                </Tooltip>\n              );\n            })}\n          </div>\n\n          {/* Legend */}\n          <div className='flex items-center justify-center gap-4 mt-3 pt-2 border-t text-xs'>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-blue-600 rounded'></div>\n              <span className='text-gray-600'>\n                {language === 'fr' ? 'Sélectionné' : 'Selected'}\n              </span>\n            </div>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-orange-500 rounded'></div>\n              <span className='text-gray-600'>{language === 'fr' ? 'Réservé' : 'Booked'}</span>\n            </div>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-red-500 rounded'></div>\n              <span className='text-gray-600'>{language === 'fr' ? 'Non disponible' : 'Unavailable'}</span>\n            </div>\n            <div className='flex items-center gap-1'>\n              <div className='w-2 h-2 bg-blue-200 rounded'></div>\n              <span className='text-gray-600'>{language === 'fr' ? \"Aujourd'hui\" : 'Today'}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </TooltipProvider>\n  );\n}\n\n/**\n * Utility function to generate .ics calendar content.\n * @param bookings\n * @param allSpaces\n */\nfunction generateICS(bookings: Booking[], allSpaces?: boolean): string {\n  const now = new Date();\n  const icsHeader = [\n    'BEGIN:VCALENDAR',\n    'VERSION:2.0',\n    'PRODID:-//Koveo Gestion//Common Spaces//FR',\n    'CALSCALE:GREGORIAN',\n    'METHOD:PUBLISH',\n  ].join('\\r\\n');\n\n  const icsEvents = bookings.map((booking) => {\n    const startDate = new Date(booking.startTime);\n    const endDate = new Date(booking.endTime);\n\n    // Format dates for ICS (YYYYMMDDTHHMMSSZ)\n    const formatICSDate = (date: Date) => {\n      return date\n        .toISOString()\n        .replace(/[-:]/g, '')\n        .replace(/\\.\\d{3}/, '');\n    };\n\n    const title = allSpaces ? `Réservation d'espace commun` : `Espace commun réservé`;\n\n    return [\n      'BEGIN:VEVENT',\n      `UID:${booking.id}@koveogestion.com`,\n      `DTSTAMP:${formatICSDate(now)}`,\n      `DTSTART:${formatICSDate(startDate)}`,\n      `DTEND:${formatICSDate(endDate)}`,\n      `SUMMARY:${title}`,\n      `DESCRIPTION:Réservation confirmée pour un espace commun`,\n      'STATUS:CONFIRMED',\n      'END:VEVENT',\n    ].join('\\r\\n');\n  });\n\n  const icsFooter = 'END:VCALENDAR';\n\n  return [icsHeader, ...icsEvents, icsFooter].join('\\r\\n');\n}\n\n/**\n * Common Spaces page component for residents.\n */\nexport default function CommonSpacesPage() {\n  const { user } = useAuth();\n  const { language } = useLanguage();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [selectedSpace, setSelectedSpace] = useState<CommonSpace | null>(null);\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [isBookingDialogOpen, setIsBookingDialogOpen] = useState(false);\n  const [expandedSpaceId, setExpandedSpaceId] = useState<string | null>(null);\n  const [preSelectedDate, setPreSelectedDate] = useState<Date | null>(null);\n\n  // Form for booking creation\n  const form = useForm<BookingFormData>({\n    resolver: zodResolver(bookingFormSchema),\n    defaultValues: {\n      date: new Date(),\n      startTime: '09:00',\n      endTime: '10:00',\n    },\n  });\n\n  // Fetch common spaces in user's buildings\n  const { data: commonSpaces = [], isLoading: spacesLoading } = useQuery<CommonSpace[]>({\n    queryKey: ['/api/common-spaces'],\n    enabled: !!user,\n  });\n\n  // Fetch bookings for selected space\n  const { data: bookings = [], isLoading: bookingsLoading } = useQuery<Booking[]>({\n    queryKey: ['/api/common-spaces', selectedSpace?.id, 'bookings'],\n    enabled: !!selectedSpace,\n  });\n\n  // Fetch all user's bookings for export\n  const { data: userBookings = [] } = useQuery<Booking[]>({\n    queryKey: ['/api/common-spaces/my-bookings'],\n    enabled: !!user,\n  });\n\n  // Create booking mutation\n  const createBookingMutation = useMutation({\n    mutationFn: async (data: BookingFormData) => {\n      if (!selectedSpace) {\n        throw new Error('No space selected');\n      }\n\n      // More robust date handling to avoid timezone issues\n      const baseDate = data.date instanceof Date ? data.date : new Date(data.date);\n\n      // Create start time by setting the time on a date object in local timezone\n      const startDateTime = new Date(\n        baseDate.getFullYear(),\n        baseDate.getMonth(),\n        baseDate.getDate()\n      );\n      const [startHour, startMinute] = data.startTime.split(':').map(Number);\n      startDateTime.setHours(startHour, startMinute, 0, 0);\n\n      // Create end time similarly\n      const endDateTime = new Date(baseDate.getFullYear(), baseDate.getMonth(), baseDate.getDate());\n      const [endHour, endMinute] = data.endTime.split(':').map(Number);\n      endDateTime.setHours(endHour, endMinute, 0, 0);\n\n      // Booking creation handling\n\n      return apiRequest('POST', `/api/common-spaces/${selectedSpace.id}/bookings`, {\n        start_time: startDateTime.toISOString(),\n        end_time: endDateTime.toISOString(),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/common-spaces'] });\n      toast({\n        title: 'Réservation confirmée',\n        description: 'Votre réservation a été créée avec succès.',\n      });\n      setIsBookingDialogOpen(false);\n      form.reset();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Erreur de réservation',\n        description:\n          error.message || 'Une erreur est survenue lors de la création de la réservation.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Get bookings for selected date\n  const bookingsForDate = useMemo(() => {\n    if (!bookings || !selectedDate) {\n      return [];\n    }\n\n    return bookings.filter((booking: Booking) => {\n      const bookingDate = parseISO(booking.startTime);\n      return isSameDay(bookingDate, selectedDate);\n    });\n  }, [bookings, selectedDate]);\n\n  // Get time slots availability\n  const timeSlots = useMemo(() => {\n    const slots = [];\n    for (let hour = 6; hour <= 22; hour++) {\n      slots.push(`${hour.toString().padStart(2, '0')}:00`);\n      slots.push(`${hour.toString().padStart(2, '0')}:30`);\n    }\n    return slots;\n  }, []);\n\n  // Helper function to check if a day is available (moved from BookingCalendar)\n  const isDayAvailable = (day: Date) => {\n    if (!selectedSpace) {\n      return false;\n    }\n\n    // Past dates are not available\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const checkDay = new Date(day);\n    checkDay.setHours(0, 0, 0, 0);\n    \n    if (checkDay < today) {\n      return false;\n    }\n\n    // Check if day falls within any unavailable periods\n    if (selectedSpace.unavailablePeriods && Array.isArray(selectedSpace.unavailablePeriods)) {\n      for (const period of selectedSpace.unavailablePeriods) {\n        const startDate = new Date(period.startDate);\n        const endDate = new Date(period.endDate);\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n        \n        if (checkDay >= startDate && checkDay <= endDate) {\n          return false;\n        }\n      }\n    }\n\n    // Check opening hours if available\n    if (selectedSpace.openingHours && Array.isArray(selectedSpace.openingHours)) {\n      const dayName = day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const todayHours = selectedSpace.openingHours.find((h) => h.day.toLowerCase() === dayName);\n      \n      // If no hours defined for this day, it's unavailable\n      if (!todayHours) {\n        return false;\n      }\n      \n      // If explicitly marked as closed\n      if (todayHours.isOpen === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  // Check if time slot is available\n  const isTimeSlotAvailable = (time: string, duration: number = 60) => {\n    if (!selectedSpace || !selectedDate) {\n      return false;\n    }\n\n    const [hour, minute] = time.split(':').map(Number);\n    const slotStart = new Date(selectedDate);\n    slotStart.setHours(hour, minute, 0, 0);\n\n    const slotEnd = new Date(slotStart);\n    slotEnd.setMinutes(slotEnd.getMinutes() + duration);\n\n    // Check if day is available first (uses our enhanced availability logic)\n    if (!isDayAvailable(selectedDate)) {\n      return false;\n    }\n\n    // Check opening hours\n    if (selectedSpace.openingHours && Array.isArray(selectedSpace.openingHours)) {\n      const dayName = selectedDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const todayHours = selectedSpace.openingHours.find((h) => h.day.toLowerCase() === dayName);\n\n      if (!todayHours || todayHours.isOpen === false) {\n        return false;\n      }\n\n      const openTime = parse(todayHours.open, 'HH:mm', selectedDate);\n      const closeTime = parse(todayHours.close, 'HH:mm', selectedDate);\n\n      // Check if slot is within opening hours\n      if (\n        !isWithinInterval(slotStart, { start: openTime, end: closeTime }) ||\n        !isWithinInterval(slotEnd, { start: openTime, end: closeTime })\n      ) {\n        return false;\n      }\n\n      // Check if slot conflicts with any breaks\n      if (todayHours.breaks && Array.isArray(todayHours.breaks)) {\n        for (const breakPeriod of todayHours.breaks) {\n          const breakStart = parse(breakPeriod.start, 'HH:mm', selectedDate);\n          const breakEnd = parse(breakPeriod.end, 'HH:mm', selectedDate);\n\n          // Check if slot overlaps with break period\n          if (\n            (slotStart >= breakStart && slotStart < breakEnd) ||\n            (slotEnd > breakStart && slotEnd <= breakEnd) ||\n            (slotStart <= breakStart && slotEnd >= breakEnd)\n          ) {\n            return false;\n          }\n        }\n      }\n    }\n\n    // Check conflicts with existing bookings\n    return !bookingsForDate.some((booking: Booking) => {\n      const bookingStart = parseISO(booking.startTime);\n      const bookingEnd = parseISO(booking.endTime);\n\n      return (\n        (slotStart >= bookingStart && slotStart < bookingEnd) ||\n        (slotEnd > bookingStart && slotEnd <= bookingEnd) ||\n        (slotStart <= bookingStart && slotEnd >= bookingEnd)\n      );\n    });\n  };\n\n  // Export functions\n  const exportMyBookings = () => {\n    const icsContent = generateICS(userBookings, false);\n    const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `mes-reservations-${format(new Date(), 'yyyy-MM-dd')}.ics`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const exportAllBookings = () => {\n    if (!selectedSpace) {\n      return;\n    }\n\n    const icsContent = generateICS(bookings, true);\n    const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `agenda-${selectedSpace.name.toLowerCase().replace(/\\s+/g, '-')}-${format(new Date(), 'yyyy-MM-dd')}.ics`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const onSubmit = (data: BookingFormData) => {\n    createBookingMutation.mutate(data);\n  };\n\n  const handleSpaceClick = (space: CommonSpace) => {\n    setSelectedSpace(space);\n    setExpandedSpaceId(expandedSpaceId === space.id ? null : space.id);\n  };\n\n  const handleDateClick = (date: Date) => {\n    setPreSelectedDate(date);\n    form.setValue('date', date);\n    setIsBookingDialogOpen(true);\n  };\n\n  const handleNewBooking = (space: CommonSpace, date?: Date) => {\n    setSelectedSpace(space);\n    if (date) {\n      setPreSelectedDate(date);\n      form.setValue('date', date);\n    }\n    setIsBookingDialogOpen(true);\n  };\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden' data-testid='common-spaces-page'>\n      <Header\n        title={language === 'fr' ? 'Espaces Communs' : 'Common Spaces'}\n        subtitle={language === 'fr' ? 'Réservez vos espaces communs' : 'Book your common spaces'}\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n        <div className='space-y-6'>\n          <div className='flex items-center justify-between'>\n            <h2 className='text-2xl font-bold text-gray-900' data-testid='spaces-list-title'>\n              {language === 'fr' ? 'Espaces Disponibles' : 'Available Spaces'}\n            </h2>\n            <div className='flex items-center gap-2'>\n              <Button\n                onClick={() =>\n                  window.open(\n                    'https://calendar.google.com/calendar/u/0/r/settings/addbyurl',\n                    '_blank'\n                  )\n                }\n                variant='outline'\n                size='sm'\n                className='flex items-center gap-2'\n                data-testid='button-link-calendar'\n              >\n                <Link className='w-4 h-4' />\n                {language === 'fr' ? 'Lier calendrier' : 'Link calendar'}\n              </Button>\n              <Button\n                onClick={exportMyBookings}\n                variant='outline'\n                size='sm'\n                className='flex items-center gap-2'\n                data-testid='button-export-my-bookings'\n              >\n                <Download className='w-4 h-4' />\n                {language === 'fr'\n                  ? 'Exporter mes réservations (.ics)'\n                  : 'Export my bookings (.ics)'}\n              </Button>\n            </div>\n          </div>\n\n          {spacesLoading ? (\n            <div className='space-y-4'>\n              {[...Array(3)].map((_, i) => (\n                <div key={i} className='h-32 bg-gray-200 rounded-lg animate-pulse' />\n              ))}\n            </div>\n          ) : (\n            <div className='space-y-4' data-testid='spaces-list'>\n              {(commonSpaces as CommonSpace[]).map((space: CommonSpace) => (\n                <div key={space.id}>\n                  <Card\n                    className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n                      expandedSpaceId === space.id ? 'ring-2 ring-koveo-navy bg-koveo-light/10' : ''\n                    }`}\n                    onClick={() => handleSpaceClick(space)}\n                    data-testid={`space-card-${space.id}`}\n                  >\n                    <CardHeader className='pb-3'>\n                      <div className='flex items-start justify-between'>\n                        <CardTitle className='flex items-center gap-2 text-lg'>\n                          <Building2 className='w-5 h-5 text-koveo-navy' />\n                          {space.name}\n                          {expandedSpaceId === space.id ? (\n                            <ChevronUp className='w-4 h-4 text-gray-500' />\n                          ) : (\n                            <ChevronDown className='w-4 h-4 text-gray-500' />\n                          )}\n                        </CardTitle>\n                        <div className='flex items-center gap-2'>\n                          {space.isReservable ? (\n                            <Badge variant='secondary' className='bg-green-100 text-green-800'>\n                              {language === 'fr' ? 'Réservable' : 'Bookable'}\n                            </Badge>\n                          ) : (\n                            <Badge variant='secondary' className='bg-gray-100 text-gray-600'>\n                              {language === 'fr' ? 'Non Réservable' : 'Non Bookable'}\n                            </Badge>\n                          )}\n                        </div>\n                      </div>\n                    </CardHeader>\n\n                    <CardContent className='space-y-3'>\n                      {space.description && (\n                        <p\n                          className='text-gray-600 text-sm'\n                          data-testid={`space-description-${space.id}`}\n                        >\n                          {space.description}\n                        </p>\n                      )}\n\n                      <div className='flex items-center gap-4 text-sm text-gray-500'>\n                        {space.capacity && (\n                          <div className='flex items-center gap-1'>\n                            <Users className='w-4 h-4' />\n                            <span data-testid={`space-capacity-${space.id}`}>\n                              {space.capacity} {language === 'fr' ? 'personnes max' : 'people max'}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n\n                      {space.openingHours && space.openingHours.length > 0 && (\n                        <div className='mt-3'>\n                          <h4 className='font-medium text-sm text-gray-700 mb-2 flex items-center gap-1'>\n                            <Clock className='w-4 h-4' />\n                            {language === 'fr' ? \"Heures d'ouverture\" : 'Opening Hours'}\n                          </h4>\n                          <div\n                            className='grid grid-cols-1 gap-1 text-xs text-gray-600'\n                            data-testid={`space-hours-${space.id}`}\n                          >\n                            {space.openingHours.map((hours, idx) => (\n                              <div key={idx} className='flex justify-between'>\n                                <span className='capitalize'>{hours.day}</span>\n                                <span>\n                                  {hours.open} - {hours.close}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {space.bookingRules && (\n                        <div className='mt-3'>\n                          <h4 className='font-medium text-sm text-gray-700 mb-1 flex items-center gap-1'>\n                            <FileText className='w-4 h-4' />\n                            {language === 'fr' ? 'Règles de réservation' : 'Booking Rules'}\n                          </h4>\n                          <p\n                            className='text-xs text-gray-600'\n                            data-testid={`space-rules-${space.id}`}\n                          >\n                            {space.bookingRules}\n                          </p>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n\n                  {/* Inline Calendar */}\n                  {expandedSpaceId === space.id && (\n                    <>\n                      <CommonSpaceCalendar\n                        space={space}\n                        onExport={exportAllBookings}\n                        onNewBooking={(date) => handleNewBooking(space, date)}\n                        className='mt-4'\n                      />\n\n                      {/* Booking Dialog */}\n                      {space.isReservable && (\n                        <Dialog open={isBookingDialogOpen} onOpenChange={setIsBookingDialogOpen}>\n                          <DialogContent\n                            className='max-w-lg max-h-[90vh] overflow-y-auto'\n                            data-testid='booking-dialog'\n                          >\n                            <DialogHeader>\n                              <DialogTitle>\n                                {language === 'fr' ? 'Nouvelle réservation' : 'New Booking'}\n                              </DialogTitle>\n                              <DialogDescription>\n                                {language === 'fr'\n                                  ? `Réserver ${space.name}`\n                                  : `Book ${space.name}`}\n                              </DialogDescription>\n                            </DialogHeader>\n\n                            <Form {...form}>\n                              <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n                                {/* Selected Date Display */}\n                                <div className='p-4 bg-blue-50 border border-blue-200 rounded-lg'>\n                                  <div className='text-sm font-medium text-blue-900 mb-1'>\n                                    {language === 'fr' ? 'Date sélectionnée' : 'Selected Date'}\n                                  </div>\n                                  <div className='text-lg font-semibold text-blue-800'>\n                                    {format(form.watch('date'), 'EEEE, d MMMM yyyy', {\n                                      locale: language === 'fr' ? fr : undefined,\n                                    })}\n                                  </div>\n                                </div>\n\n                                {/* Opening Hours Display */}\n                                {selectedSpace?.openingHours && Array.isArray(selectedSpace.openingHours) && (\n                                  <div className='p-3 bg-green-50 border border-green-200 rounded-lg'>\n                                    <div className='text-sm font-medium text-green-900 mb-2'>\n                                      {language === 'fr' ? 'Heures d\\'ouverture' : 'Opening Hours'}\n                                    </div>\n                                    {selectedSpace.openingHours.map((hours, index) => {\n                                      const dayName = form.watch('date').toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n                                      if (hours.day.toLowerCase() === dayName) {\n                                        return (\n                                          <div key={index} className='text-sm text-green-800'>\n                                            {hours.open} - {hours.close}\n                                          </div>\n                                        );\n                                      }\n                                      return null;\n                                    })}\n                                  </div>\n                                )}\n\n                                {/* Time Slots Grid */}\n                                <div className='space-y-4'>\n                                  <div className='text-sm font-medium text-gray-900'>\n                                    {language === 'fr' ? 'Créneaux horaires disponibles' : 'Available Time Slots'}\n                                  </div>\n                                  \n                                  <div className='grid grid-cols-4 gap-2 max-h-60 overflow-y-auto p-2 border rounded-lg bg-gray-50'>\n                                    {timeSlots.map((time) => {\n                                      const isAvailable = isTimeSlotAvailable(time);\n                                      const hasBooking = bookingsForDate.some((booking: Booking) => {\n                                        const bookingStart = parseISO(booking.startTime);\n                                        const bookingEnd = parseISO(booking.endTime);\n                                        const timeSlot = parse(time, 'HH:mm', form.watch('date'));\n                                        return timeSlot >= bookingStart && timeSlot < bookingEnd;\n                                      });\n                                      \n                                      const currentStartTime = form.watch('startTime');\n                                      const currentEndTime = form.watch('endTime');\n                                      const isSelected = time === currentStartTime || time === currentEndTime;\n                                      \n                                      return (\n                                        <button\n                                          key={time}\n                                          type='button'\n                                          disabled={!isAvailable || hasBooking}\n                                          onClick={() => {\n                                            if (!currentStartTime || (currentStartTime && currentEndTime)) {\n                                              // Set start time\n                                              form.setValue('startTime', time);\n                                              form.setValue('endTime', '');\n                                            } else {\n                                              // Set end time if start time is already set\n                                              if (time > currentStartTime) {\n                                                form.setValue('endTime', time);\n                                              } else {\n                                                // If selected time is before start time, make it the new start time\n                                                form.setValue('startTime', time);\n                                                form.setValue('endTime', '');\n                                              }\n                                            }\n                                          }}\n                                          className={`\n                                            p-2 text-xs rounded-md border transition-colors relative\n                                            ${\n                                              !isAvailable\n                                                ? 'bg-red-100 border-red-200 text-red-600 cursor-not-allowed'\n                                                : hasBooking\n                                                  ? 'bg-orange-100 border-orange-200 text-orange-700 cursor-not-allowed'\n                                                  : isSelected\n                                                    ? 'bg-blue-500 border-blue-600 text-white font-semibold'\n                                                    : 'bg-white border-gray-200 text-gray-700 hover:bg-gray-100 hover:border-gray-300'\n                                            }\n                                          `}\n                                        >\n                                          <div className='font-medium'>{time}</div>\n                                          {hasBooking && (\n                                            <div className='text-[10px] mt-1 text-orange-600'>\n                                              {language === 'fr' ? 'Réservé' : 'Booked'}\n                                            </div>\n                                          )}\n                                          {!isAvailable && !hasBooking && (\n                                            <div className='text-[10px] mt-1 text-red-600'>\n                                              {language === 'fr' ? 'Fermé' : 'Closed'}\n                                            </div>\n                                          )}\n                                          {isSelected && (\n                                            <div className='text-[10px] mt-1 text-white'>\n                                              {time === currentStartTime \n                                                ? (language === 'fr' ? 'Début' : 'Start')\n                                                : (language === 'fr' ? 'Fin' : 'End')\n                                              }\n                                            </div>\n                                          )}\n                                        </button>\n                                      );\n                                    })}\n                                  </div>\n\n                                  {/* Legend */}\n                                  <div className='grid grid-cols-2 gap-4 text-xs'>\n                                    <div className='space-y-2'>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-white border border-gray-200 rounded'></div>\n                                        <span>{language === 'fr' ? 'Disponible' : 'Available'}</span>\n                                      </div>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-blue-500 rounded'></div>\n                                        <span>{language === 'fr' ? 'Sélectionné' : 'Selected'}</span>\n                                      </div>\n                                    </div>\n                                    <div className='space-y-2'>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-orange-100 border border-orange-200 rounded'></div>\n                                        <span>{language === 'fr' ? 'Réservé' : 'Booked'}</span>\n                                      </div>\n                                      <div className='flex items-center gap-2'>\n                                        <div className='w-3 h-3 bg-red-100 border border-red-200 rounded'></div>\n                                        <span>{language === 'fr' ? 'Fermé' : 'Closed'}</span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                {/* Selected Time Summary */}\n                                {form.watch('startTime') && (\n                                  <div className='p-3 bg-gray-50 border border-gray-200 rounded-lg'>\n                                    <div className='text-sm font-medium text-gray-900 mb-1'>\n                                      {language === 'fr' ? 'Réservation sélectionnée' : 'Selected Booking'}\n                                    </div>\n                                    <div className='text-sm text-gray-700'>\n                                      <span className='font-medium'>\n                                        {language === 'fr' ? 'Début:' : 'Start:'}\n                                      </span> {form.watch('startTime')}\n                                      {form.watch('endTime') && (\n                                        <span className='ml-4'>\n                                          <span className='font-medium'>\n                                            {language === 'fr' ? 'Fin:' : 'End:'}\n                                          </span> {form.watch('endTime')}\n                                        </span>\n                                      )}\n                                    </div>\n                                    {form.watch('endTime') && (\n                                      <div className='text-xs text-gray-500 mt-1'>\n                                        {language === 'fr' ? 'Durée:' : 'Duration:'} \n                                        {(() => {\n                                          const start = parse(form.watch('startTime'), 'HH:mm', new Date());\n                                          const end = parse(form.watch('endTime'), 'HH:mm', new Date());\n                                          const duration = (end.getTime() - start.getTime()) / (1000 * 60);\n                                          return `${Math.floor(duration / 60)}h ${duration % 60 > 0 ? `${duration % 60}min` : ''}`;\n                                        })()} \n                                      </div>\n                                    )}\n                                  </div>\n                                )}\n\n                                {/* Validation Messages */}\n                                {!form.watch('startTime') && (\n                                  <div className='text-sm text-amber-600 bg-amber-50 border border-amber-200 rounded-lg p-3'>\n                                    {language === 'fr' \n                                      ? 'Veuillez sélectionner une heure de début'\n                                      : 'Please select a start time'}\n                                  </div>\n                                )}\n                                {form.watch('startTime') && !form.watch('endTime') && (\n                                  <div className='text-sm text-amber-600 bg-amber-50 border border-amber-200 rounded-lg p-3'>\n                                    {language === 'fr' \n                                      ? 'Veuillez sélectionner une heure de fin'\n                                      : 'Please select an end time'}\n                                  </div>\n                                )}\n\n                                {/* Hidden form fields to maintain form validation */}\n                                <div className='hidden'>\n                                  <FormField\n                                    control={form.control}\n                                    name='date'\n                                    render={({ field }) => (\n                                      <FormItem>\n                                        <FormControl>\n                                          <input {...field} value={field.value?.toISOString() || ''} readOnly />\n                                        </FormControl>\n                                        <FormMessage />\n                                      </FormItem>\n                                    )}\n                                  />\n                                  <FormField\n                                    control={form.control}\n                                    name='startTime'\n                                    render={({ field }) => (\n                                      <FormItem>\n                                        <FormControl>\n                                          <input {...field} readOnly />\n                                        </FormControl>\n                                        <FormMessage />\n                                      </FormItem>\n                                    )}\n                                  />\n                                  <FormField\n                                    control={form.control}\n                                    name='endTime'\n                                    render={({ field }) => (\n                                      <FormItem>\n                                        <FormControl>\n                                          <input {...field} readOnly />\n                                        </FormControl>\n                                        <FormMessage />\n                                      </FormItem>\n                                    )}\n                                  />\n                                </div>\n\n                                <DialogFooter>\n                                  <Button\n                                    type='button'\n                                    variant='outline'\n                                    onClick={() => {\n                                      setIsBookingDialogOpen(false);\n                                      form.reset();\n                                    }}\n                                    data-testid='button-cancel-booking'\n                                  >\n                                    {language === 'fr' ? 'Annuler' : 'Cancel'}\n                                  </Button>\n                                  <Button\n                                    type='submit'\n                                    disabled={\n                                      createBookingMutation.isPending || \n                                      !form.watch('startTime') || \n                                      !form.watch('endTime')\n                                    }\n                                    data-testid='button-confirm-booking'\n                                  >\n                                    {createBookingMutation.isPending\n                                      ? language === 'fr'\n                                        ? 'Réservation...'\n                                        : 'Booking...'\n                                      : language === 'fr'\n                                        ? 'Confirmer la réservation'\n                                        : 'Confirm Booking'}\n                                  </Button>\n                                </DialogFooter>\n                              </form>\n                            </Form>\n                          </DialogContent>\n                        </Dialog>\n                      )}\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}