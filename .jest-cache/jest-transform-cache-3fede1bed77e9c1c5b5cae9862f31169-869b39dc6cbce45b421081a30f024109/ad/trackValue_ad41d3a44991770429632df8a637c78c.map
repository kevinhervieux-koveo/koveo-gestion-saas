{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/document/trackValue.js","mappings":"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","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/document/trackValue.js"],"sourcesContent":["'use strict';\n\nrequire('../utils/dataTransfer/Clipboard.js');\nvar getWindow = require('../utils/misc/getWindow.js');\nvar UI = require('./UI.js');\n\nconst TrackChanges = Symbol('Track programmatic changes for React workaround');\n// When the input event happens in the browser, React executes all event handlers\n// and if they change state of a controlled value, nothing happens.\n// But when we trigger the event handlers in test environment with React@17,\n// the changes are rolled back before the state update is applied.\n// This results in a reset cursor.\n// There might be a better way to work around if we figure out\n// why the batched update is executed differently in our test environment.\nfunction isReact17Element(element) {\n    return Object.getOwnPropertyNames(element).some((k)=>k.startsWith('__react')) && getWindow.getWindow(element).REACT_VERSION === 17;\n}\nfunction startTrackValue(element) {\n    if (!isReact17Element(element)) {\n        return;\n    }\n    element[TrackChanges] = {\n        previousValue: String(element.value),\n        tracked: []\n    };\n}\nfunction trackOrSetValue(element, v) {\n    var _element_TrackChanges_tracked, _element_TrackChanges;\n    (_element_TrackChanges = element[TrackChanges]) === null || _element_TrackChanges === undefined ? undefined : (_element_TrackChanges_tracked = _element_TrackChanges.tracked) === null || _element_TrackChanges_tracked === undefined ? undefined : _element_TrackChanges_tracked.push(v);\n    if (!element[TrackChanges]) {\n        UI.setUIValueClean(element);\n        UI.setUISelection(element, {\n            focusOffset: v.length\n        });\n    }\n}\nfunction commitValueAfterInput(element, cursorOffset) {\n    var _changes_tracked;\n    const changes = element[TrackChanges];\n    element[TrackChanges] = undefined;\n    if (!(changes === null || changes === undefined ? undefined : (_changes_tracked = changes.tracked) === null || _changes_tracked === undefined ? undefined : _changes_tracked.length)) {\n        return;\n    }\n    const isJustReactStateUpdate = changes.tracked.length === 2 && changes.tracked[0] === changes.previousValue && changes.tracked[1] === element.value;\n    if (!isJustReactStateUpdate) {\n        UI.setUIValueClean(element);\n    }\n    if (UI.hasUISelection(element)) {\n        UI.setUISelection(element, {\n            focusOffset: isJustReactStateUpdate ? cursorOffset : element.value.length\n        });\n    }\n}\n\nexports.commitValueAfterInput = commitValueAfterInput;\nexports.startTrackValue = startTrackValue;\nexports.trackOrSetValue = trackOrSetValue;\n"],"version":3}