{"file":"/home/runner/workspace/client/src/components/BillEditForm.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/BillEditForm.tsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport type { Bill } from '../../../shared/schema';\n\n// Form schema for bill editing\nconst billFormSchema = z.object({\n  title: z.string().min(1, 'Bill title is required (example: Monthly Maintenance - January 2025)').max(200, 'Title must be less than 200 characters'),\n  description: z.string().max(1000, 'Description must be less than 1000 characters').optional(),\n  category: z.enum([\n    'insurance',\n    'maintenance',\n    'salary',\n    'utilities',\n    'cleaning',\n    'security',\n    'landscaping',\n    'professional_services',\n    'administration',\n    'repairs',\n    'supplies',\n    'taxes',\n    'technology',\n    'reserves',\n    'other',\n  ]),\n  vendor: z.string().max(200, 'Vendor name must be less than 200 characters').optional(),\n  paymentType: z.enum(['unique', 'recurrent']),\n  schedulePayment: z.enum(['weekly', 'monthly', 'quarterly', 'yearly', 'custom']).optional(),\n  totalAmount: z.string().min(1, 'Bill amount is required (example: 125.50)').regex(/^\\d+(\\.\\d{1,2})?$/, 'Amount must be a valid number with up to 2 decimal places (example: 125.50)'),\n  startDate: z.string().min(1, 'Start date is required (select from calendar)'),\n  endDate: z.string().optional(),\n  status: z.enum(['draft', 'sent', 'overdue', 'paid', 'cancelled']),\n  notes: z.string().max(1000, 'Notes must be less than 1000 characters').optional(),\n});\n\n/**\n * Bill editing form component for modifying existing bills.\n * @param root0 - The component props.\n * @param root0.bill - The bill object to edit.\n * @param root0.onSuccess - Callback function called when bill is successfully updated.\n * @param root0.onCancel - Callback function called when editing is cancelled.\n * @returns JSX element for bill editing form.\n */\n/**\n * BillEditForm function.\n * @param root0\n * @param root0.bill\n * @param root0.onSuccess\n * @param root0.onCancel\n * @returns Function result.\n */\n/**\n * BillEditForm component.\n * @param props - Component props.\n * @param props.bill - Bill parameter.\n * @param props.onSuccess - Callback function called when operation succeeds.\n * @param props.onCancel - Callback function called when operation is cancelled.\n * @returns JSX element.\n */\n/**\n * BillEditForm component.\n * @param props - Component props.\n * @param props.bill - Bill parameter.\n * @param props.onSuccess - Callback function called when operation succeeds.\n * @param props.onCancel - Callback function called when operation is cancelled.\n * @returns JSX element.\n */\n/**\n * BillEditForm component.\n * @param props - Component props.\n * @param props.bill - bill parameter.\n * @param props.onSuccess - Callback function called when operation succeeds.\n * @param props.onCancel - Callback function called when operation is cancelled.\n * @returns JSX element.\n */\n/**\n * BillEditForm component.\n * @param props - Component props.\n * @param props.bill - bill parameter.\n * @param props.onSuccess - Callback function called when operation succeeds.\n * @param props.onCancel - Callback function called when operation is cancelled.\n * @returns JSX element.\n */\n/**\n * BillEditForm component.\n * @param props - Component props.\n * @param props.bill - bill parameter.\n * @param props.onSuccess - Callback function called when operation succeeds.\n * @param props.onCancel - Callback function called when operation is cancelled.\n * @returns JSX element.\n */\nexport function BillEditForm({\n  bill,\n  onSuccess,\n  onCancel,\n}: {\n  bill: Bill;\n  onSuccess: () => void;\n  onCancel: () => void;\n}) {\n  const form = useForm<z.infer<typeof billFormSchema>>({\n    resolver: zodResolver(billFormSchema),\n    defaultValues: {\n      title: bill.title,\n      description: bill.description || '',\n      category: bill.category,\n      vendor: bill.vendor || '',\n      paymentType: bill.paymentType,\n      schedulePayment: bill.schedulePayment || 'monthly',\n      totalAmount: bill.totalAmount.toString(),\n      startDate: bill.startDate,\n      endDate: bill.endDate || '',\n      status: bill.status,\n      notes: bill.notes || '',\n    },\n  });\n\n  const queryClient = useQueryClient();\n\n  const updateBillMutation = useMutation({\n    mutationFn: async (updates: z.infer<typeof billFormSchema>) => {\n      const response = await fetch(`/api/bills/${bill.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ...updates,\n          costs: [updates.totalAmount], // Single cost for now\n        }),\n      }); /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */ /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */ /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */ /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */ /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n\n      if (!response.ok) {\n        throw new Error('Failed to update bill');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      onSuccess();\n    },\n  });\n\n  const onSubmit = (values: z.infer<typeof billFormSchema>) => {\n    updateBillMutation.mutate(values);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6 pt-4 border-t'>\n        <div className='grid grid-cols-2 gap-4'>\n          {/* Title */}\n          <FormField\n            control={form.control}\n            name='title'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Title *</FormLabel>\n                <FormControl>\n                  <Input {...field} placeholder='Bill title' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Vendor */}\n          <FormField\n            control={form.control}\n            name='vendor'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Vendor</FormLabel>\n                <FormControl>\n                  <Input {...field} placeholder='Company or service provider' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Category */}\n          <FormField\n            control={form.control}\n            name='category'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Category *</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder='Select category' />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value='insurance'>Insurance</SelectItem>\n                    <SelectItem value='maintenance'>Maintenance</SelectItem>\n                    <SelectItem value='salary'>Salary</SelectItem>\n                    <SelectItem value='utilities'>Utilities</SelectItem>\n                    <SelectItem value='cleaning'>Cleaning</SelectItem>\n                    <SelectItem value='security'>Security</SelectItem>\n                    <SelectItem value='landscaping'>Landscaping</SelectItem>\n                    <SelectItem value='professional_services'>Professional Services</SelectItem>\n                    <SelectItem value='administration'>Administration</SelectItem>\n                    <SelectItem value='repairs'>Repairs</SelectItem>\n                    <SelectItem value='supplies'>Supplies</SelectItem>\n                    <SelectItem value='taxes'>Taxes</SelectItem>\n                    <SelectItem value='technology'>Technology</SelectItem>\n                    <SelectItem value='reserves'>Reserves</SelectItem>\n                    <SelectItem value='other'>Other</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Total Amount */}\n          <FormField\n            control={form.control}\n            name='totalAmount'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Total Amount *</FormLabel>\n                <FormControl>\n                  <Input {...field} type='number' step='0.01' placeholder='0.00' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Payment Type */}\n          <FormField\n            control={form.control}\n            name='paymentType'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Payment Type *</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder='Select payment type' />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value='unique'>One-time Payment</SelectItem>\n                    <SelectItem value='recurrent'>Recurring Payment</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Schedule Payment (only for recurrent) */}\n          {form.watch('paymentType') === 'recurrent' && (\n            <FormField\n              control={form.control}\n              name='schedulePayment'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Schedule *</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder='Select schedule' />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value='weekly'>Weekly</SelectItem>\n                      <SelectItem value='monthly'>Monthly</SelectItem>\n                      <SelectItem value='quarterly'>Quarterly</SelectItem>\n                      <SelectItem value='yearly'>Yearly</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n\n          {/* Start Date */}\n          <FormField\n            control={form.control}\n            name='startDate'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Start Date *</FormLabel>\n                <FormControl>\n                  <Input {...field} type='date' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* End Date (only for recurrent) */}\n          {form.watch('paymentType') === 'recurrent' && (\n            <FormField\n              control={form.control}\n              name='endDate'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>End Date (Optional)</FormLabel>\n                  <FormControl>\n                    <Input {...field} type='date' />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n\n          {/* Status */}\n          <FormField\n            control={form.control}\n            name='status'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Status *</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder='Select status' />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value='draft'>Draft</SelectItem>\n                    <SelectItem value='sent'>Sent</SelectItem>\n                    <SelectItem value='overdue'>Overdue</SelectItem>\n                    <SelectItem value='paid'>Paid</SelectItem>\n                    <SelectItem value='cancelled'>Cancelled</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Description */}\n        <FormField\n          control={form.control}\n          name='description'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea {...field} placeholder='Bill description...' rows={3} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Notes */}\n        <FormField\n          control={form.control}\n          name='notes'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Notes</FormLabel>\n              <FormControl>\n                <Textarea {...field} placeholder='Additional notes...' rows={3} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Form Actions */}\n        <div className='flex justify-end gap-2 pt-4 border-t'>\n          <Button type='button' variant='outline' onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button type='submit' disabled={updateBillMutation.isPending}>\n            {updateBillMutation.isPending ? 'Updating...' : 'Update Bill'}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n"],"version":3}