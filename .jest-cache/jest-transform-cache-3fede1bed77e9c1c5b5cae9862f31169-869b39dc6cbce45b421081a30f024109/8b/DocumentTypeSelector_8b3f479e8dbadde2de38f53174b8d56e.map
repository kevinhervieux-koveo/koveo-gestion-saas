{"file":"/home/runner/workspace/client/src/components/common/DocumentTypeSelector.tsx","mappings":";;;;;AAoBA,oDAkFC;;AAtGD,kDAAwC;AAExC,iDAA8C;AAC9C,iDAA8C;AAiB9C,SAAgB,oBAAoB,CAAC,EACnC,IAAI,EACJ,YAAY,EACZ,YAAY,EACZ,WAAW,GAAG,EAAE,EAChB,YAAY,EACZ,cAAc,GAAG,EAAE,EACnB,aAAa,GAAG,EAAE,EAClB,aAAa,GAAG,IAAI,EACpB,YAAY,GAAG,IAAI,EACnB,SAAS,GAAG,EAAE,EACY;IAC1B,MAAM,gBAAgB,GAAG,CAAC,KAA0C,EAAE,EAAE;QACtE,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;QAC7C,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO,CACL,iCAAK,SAAS,EAAE,aAAa,SAAS,EAAE,aACtC,+BAAI,SAAS,EAAC,qCAAqC,qCAA0B,EAG7E,iCAAK,SAAS,EAAC,YAAY,aACzB,mCACE,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,EACnC,SAAS,EAAE,uHACT,IAAI,KAAK,MAAM;4BACb,CAAC,CAAC,0CAA0C;4BAC5C,CAAC,CAAC,sEACN,EAAE,iBACU,oBAAoB,yCAGzB,EACT,mCACE,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,EACnC,SAAS,EAAE,uHACT,IAAI,KAAK,MAAM;4BACb,CAAC,CAAC,0CAA0C;4BAC5C,CAAC,CAAC,sEACN,EAAE,iBACU,sBAAsB,2CAG3B,IACL,EAGL,IAAI,KAAK,MAAM,IAAI,aAAa,IAAI,CACnC,iCAAK,SAAS,EAAC,WAAW,aACxB,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,sCAA8B,EAClF,uBAAC,aAAK,IACJ,IAAI,EAAC,MAAM,EACX,QAAQ,EAAE,gBAAgB,EAC1B,SAAS,EAAC,gBAAgB,iBACd,mBAAmB,KAC3B,cAAc,GAClB,IACE,CACP,EAEA,IAAI,KAAK,MAAM,IAAI,YAAY,IAAI,CAClC,iCAAK,SAAS,EAAC,WAAW,aACxB,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,iCAAyB,EAC7E,qCACE,KAAK,EAAE,WAAW,EAClB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAC/C,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sJAAsJ,EAChK,WAAW,EAAC,gCAAgC,iBAChC,2BAA2B,KACnC,aAAa,GACjB,EACF,8BAAG,SAAS,EAAC,uBAAuB,mEAEhC,IACA,CACP,IACG,CACP,CAAC;AACJ,CAAC;AAED,kBAAe,oBAAoB,CAAC","names":[],"sources":["/home/runner/workspace/client/src/components/common/DocumentTypeSelector.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n\nexport type DocumentMode = 'file' | 'text';\n\ninterface DocumentTypeSelectorProps {\n  mode: DocumentMode;\n  onModeChange: (mode: DocumentMode) => void;\n  onFileSelect?: (file: File | null) => void;\n  textContent?: string;\n  onTextChange?: (text: string) => void;\n  fileInputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  textAreaProps?: React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n  showFileInput?: boolean;\n  showTextArea?: boolean;\n  className?: string;\n}\n\nexport function DocumentTypeSelector({\n  mode,\n  onModeChange,\n  onFileSelect,\n  textContent = '',\n  onTextChange,\n  fileInputProps = {},\n  textAreaProps = {},\n  showFileInput = true,\n  showTextArea = true,\n  className = ''\n}: DocumentTypeSelectorProps) {\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0] || null;\n    onFileSelect?.(file);\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <h3 className=\"text-base font-medium text-gray-900\">Choose Document Type</h3>\n      \n      {/* Document Type Selection */}\n      <div className=\"flex gap-4\">\n        <button\n          type=\"button\"\n          onClick={() => onModeChange('file')}\n          className={`flex-1 px-6 py-3 rounded-full border-2 text-sm font-medium transition-colors flex items-center justify-center gap-2 ${\n            mode === 'file'\n              ? 'border-blue-500 bg-blue-50 text-blue-600'\n              : 'border-gray-300 text-gray-700 hover:border-blue-300 hover:bg-blue-50'\n          }`}\n          data-testid=\"button-upload-file\"\n        >\n          üìÅ Upload File\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => onModeChange('text')}\n          className={`flex-1 px-6 py-3 rounded-full border-2 text-sm font-medium transition-colors flex items-center justify-center gap-2 ${\n            mode === 'text'\n              ? 'border-blue-500 bg-blue-50 text-blue-600'\n              : 'border-gray-300 text-gray-700 hover:border-blue-300 hover:bg-blue-50'\n          }`}\n          data-testid=\"button-text-document\"\n        >\n          üìÑ Text Document\n        </button>\n      </div>\n\n      {/* Dynamic Content Based on Selection */}\n      {mode === 'file' && showFileInput && (\n        <div className=\"space-y-3\">\n          <Label className=\"text-sm font-medium text-gray-700\">Select File to Upload</Label>\n          <Input\n            type=\"file\"\n            onChange={handleFileChange}\n            className=\"cursor-pointer\"\n            data-testid=\"input-file-select\"\n            {...fileInputProps}\n          />\n        </div>\n      )}\n\n      {mode === 'text' && showTextArea && (\n        <div className=\"space-y-3\">\n          <Label className=\"text-sm font-medium text-gray-700\">Document Content</Label>\n          <textarea\n            value={textContent}\n            onChange={(e) => onTextChange?.(e.target.value)}\n            rows={6}\n            className=\"w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm resize-vertical\"\n            placeholder=\"Enter your document content...\"\n            data-testid=\"textarea-document-content\"\n            {...textAreaProps}\n          />\n          <p className=\"text-xs text-gray-500\">\n            Add text content that will be saved as a document.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DocumentTypeSelector;"],"version":3}