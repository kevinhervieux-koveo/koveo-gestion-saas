34fcadd294680bf620d5c83767857800
"use strict";

/* istanbul ignore next */
function cov_fvayfstip() {
  var path = "/home/runner/workspace/client/src/components/forms/residence-edit-form.tsx";
  var hash = "9902bdc51dda8b21cc0cdb0ddb6e43d0105fe4d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/components/forms/residence-edit-form.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "4": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "6": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "7": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 54
        }
      },
      "8": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "9": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "10": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "11": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "12": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "13": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "14": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "15": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "16": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "17": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "18": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "19": {
        start: {
          line: 46,
          column: 46
        },
        end: {
          line: 46,
          column: 104
        }
      },
      "20": {
        start: {
          line: 47,
          column: 46
        },
        end: {
          line: 47,
          column: 104
        }
      },
      "21": {
        start: {
          line: 48,
          column: 50
        },
        end: {
          line: 48,
          column: 75
        }
      },
      "22": {
        start: {
          line: 49,
          column: 50
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "23": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "24": {
        start: {
          line: 66,
          column: 36
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "25": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "26": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "27": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "28": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 86,
          column: 55
        }
      },
      "29": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 76
        }
      },
      "30": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 35
        }
      },
      "31": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "32": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 77
        }
      },
      "33": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 24
        }
      },
      "34": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "35": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "36": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "37": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "38": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "39": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 73
        }
      },
      "40": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 35
        }
      },
      "41": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "42": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "43": {
        start: {
          line: 117,
          column: 56
        },
        end: {
          line: 117,
          column: 67
        }
      },
      "44": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "46": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 73
        }
      },
      "47": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 35
        }
      },
      "48": {
        start: {
          line: 125,
          column: 31
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "49": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 70
        }
      },
      "50": {
        start: {
          line: 126,
          column: 56
        },
        end: {
          line: 126,
          column: 67
        }
      },
      "51": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 6669
        }
      },
      "52": {
        start: {
          line: 128,
          column: 3979
        },
        end: {
          line: 128,
          column: 4012
        }
      },
      "53": {
        start: {
          line: 128,
          column: 4493
        },
        end: {
          line: 128,
          column: 4746
        }
      },
      "54": {
        start: {
          line: 128,
          column: 4707
        },
        end: {
          line: 128,
          column: 4732
        }
      },
      "55": {
        start: {
          line: 128,
          column: 4944
        },
        end: {
          line: 128,
          column: 4978
        }
      },
      "56": {
        start: {
          line: 128,
          column: 4999
        },
        end: {
          line: 128,
          column: 5059
        }
      },
      "57": {
        start: {
          line: 128,
          column: 5632
        },
        end: {
          line: 128,
          column: 5885
        }
      },
      "58": {
        start: {
          line: 128,
          column: 5846
        },
        end: {
          line: 128,
          column: 5871
        }
      },
      "59": {
        start: {
          line: 128,
          column: 6083
        },
        end: {
          line: 128,
          column: 6117
        }
      },
      "60": {
        start: {
          line: 128,
          column: 6138
        },
        end: {
          line: 128,
          column: 6198
        }
      }
    },
    fnMap: {
      "0": {
        name: "ResidenceEditForm",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 26
          }
        },
        loc: {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 43
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 21
          }
        },
        loc: {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 67
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 91,
            column: 20
          }
        },
        loc: {
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 98,
            column: 9
          }
        },
        line: 91
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 99,
            column: 17
          },
          end: {
            line: 99,
            column: 18
          }
        },
        loc: {
          start: {
            line: 99,
            column: 29
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 99
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 22
          }
        },
        loc: {
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 107
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 110,
            column: 28
          },
          end: {
            line: 110,
            column: 29
          }
        },
        loc: {
          start: {
            line: 110,
            column: 34
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 110
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 116,
            column: 32
          }
        },
        loc: {
          start: {
            line: 116,
            column: 42
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 116
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 117,
            column: 46
          },
          end: {
            line: 117,
            column: 47
          }
        },
        loc: {
          start: {
            line: 117,
            column: 56
          },
          end: {
            line: 117,
            column: 67
          }
        },
        line: 117
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 29
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 119
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 32
          }
        },
        loc: {
          start: {
            line: 125,
            column: 42
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 125
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 126,
            column: 47
          }
        },
        loc: {
          start: {
            line: 126,
            column: 56
          },
          end: {
            line: 126,
            column: 67
          }
        },
        line: 126
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 128,
            column: 3966
          },
          end: {
            line: 128,
            column: 3967
          }
        },
        loc: {
          start: {
            line: 128,
            column: 3979
          },
          end: {
            line: 128,
            column: 4012
          }
        },
        line: 128
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 128,
            column: 4474
          },
          end: {
            line: 128,
            column: 4475
          }
        },
        loc: {
          start: {
            line: 128,
            column: 4493
          },
          end: {
            line: 128,
            column: 4746
          }
        },
        line: 128
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 4701
          },
          end: {
            line: 128,
            column: 4702
          }
        },
        loc: {
          start: {
            line: 128,
            column: 4707
          },
          end: {
            line: 128,
            column: 4732
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 128,
            column: 4937
          },
          end: {
            line: 128,
            column: 4938
          }
        },
        loc: {
          start: {
            line: 128,
            column: 4944
          },
          end: {
            line: 128,
            column: 4978
          }
        },
        line: 128
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 128,
            column: 4992
          },
          end: {
            line: 128,
            column: 4993
          }
        },
        loc: {
          start: {
            line: 128,
            column: 4999
          },
          end: {
            line: 128,
            column: 5059
          }
        },
        line: 128
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 128,
            column: 5613
          },
          end: {
            line: 128,
            column: 5614
          }
        },
        loc: {
          start: {
            line: 128,
            column: 5632
          },
          end: {
            line: 128,
            column: 5885
          }
        },
        line: 128
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 128,
            column: 5840
          },
          end: {
            line: 128,
            column: 5841
          }
        },
        loc: {
          start: {
            line: 128,
            column: 5846
          },
          end: {
            line: 128,
            column: 5871
          }
        },
        line: 128
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 128,
            column: 6076
          },
          end: {
            line: 128,
            column: 6077
          }
        },
        loc: {
          start: {
            line: 128,
            column: 6083
          },
          end: {
            line: 128,
            column: 6117
          }
        },
        line: 128
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 128,
            column: 6131
          },
          end: {
            line: 128,
            column: 6132
          }
        },
        loc: {
          start: {
            line: 128,
            column: 6138
          },
          end: {
            line: 128,
            column: 6198
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 68
          },
          end: {
            line: 46,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 68
          },
          end: {
            line: 46,
            column: 97
          }
        }, {
          start: {
            line: 46,
            column: 101
          },
          end: {
            line: 46,
            column: 103
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 97
          }
        }, {
          start: {
            line: 47,
            column: 101
          },
          end: {
            line: 47,
            column: 103
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 34
          }
        }, {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 54,
            column: 39
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 53
          },
          end: {
            line: 55,
            column: 84
          }
        }, {
          start: {
            line: 55,
            column: 87
          },
          end: {
            line: 55,
            column: 89
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 40
          }
        }, {
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 56,
            column: 45
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 72
          }
        }, {
          start: {
            line: 57,
            column: 75
          },
          end: {
            line: 57,
            column: 77
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 38
          }
        }, {
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 47
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 62
          }
        }, {
          start: {
            line: 59,
            column: 66
          },
          end: {
            line: 59,
            column: 68
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 62
          }
        }, {
          start: {
            line: 60,
            column: 66
          },
          end: {
            line: 60,
            column: 68
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 62,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 62,
            column: 144
          }
        }, {
          start: {
            line: 62,
            column: 148
          },
          end: {
            line: 62,
            column: 150
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 62,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 61
          },
          end: {
            line: 62,
            column: 104
          }
        }, {
          start: {
            line: 62,
            column: 107
          },
          end: {
            line: 62,
            column: 144
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 78
          }
        }, {
          start: {
            line: 63,
            column: 81
          },
          end: {
            line: 63,
            column: 83
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 71,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 60
          },
          end: {
            line: 71,
            column: 64
          }
        }, {
          start: {
            line: 71,
            column: 67
          },
          end: {
            line: 71,
            column: 86
          }
        }],
        line: 71
      },
      "13": {
        loc: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 72,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 52
          },
          end: {
            line: 72,
            column: 56
          }
        }, {
          start: {
            line: 72,
            column: 59
          },
          end: {
            line: 72,
            column: 74
          }
        }],
        line: 72
      },
      "14": {
        loc: {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 73,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 72
          },
          end: {
            line: 73,
            column: 76
          }
        }, {
          start: {
            line: 73,
            column: 79
          },
          end: {
            line: 73,
            column: 112
          }
        }],
        line: 73
      },
      "15": {
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 56
          },
          end: {
            line: 74,
            column: 60
          }
        }, {
          start: {
            line: 74,
            column: 63
          },
          end: {
            line: 74,
            column: 80
          }
        }],
        line: 74
      },
      "16": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "17": {
        loc: {
          start: {
            line: 102,
            column: 29
          },
          end: {
            line: 102,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 29
          },
          end: {
            line: 102,
            column: 44
          }
        }, {
          start: {
            line: 102,
            column: 48
          },
          end: {
            line: 102,
            column: 76
          }
        }],
        line: 102
      },
      "18": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "19": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 34
          }
        }, {
          start: {
            line: 111,
            column: 38
          },
          end: {
            line: 111,
            column: 85
          }
        }],
        line: 111
      },
      "20": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "21": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 34
          }
        }, {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 85
          }
        }],
        line: 120
      },
      "22": {
        loc: {
          start: {
            line: 128,
            column: 718
          },
          end: {
            line: 128,
            column: 874
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 718
          },
          end: {
            line: 128,
            column: 750
          }
        }, {
          start: {
            line: 128,
            column: 755
          },
          end: {
            line: 128,
            column: 873
          }
        }],
        line: 128
      },
      "23": {
        loc: {
          start: {
            line: 128,
            column: 1162
          },
          end: {
            line: 128,
            column: 1308
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 1162
          },
          end: {
            line: 128,
            column: 1189
          }
        }, {
          start: {
            line: 128,
            column: 1194
          },
          end: {
            line: 128,
            column: 1307
          }
        }],
        line: 128
      },
      "24": {
        loc: {
          start: {
            line: 128,
            column: 1690
          },
          end: {
            line: 128,
            column: 1852
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 1690
          },
          end: {
            line: 128,
            column: 1725
          }
        }, {
          start: {
            line: 128,
            column: 1730
          },
          end: {
            line: 128,
            column: 1851
          }
        }],
        line: 128
      },
      "25": {
        loc: {
          start: {
            line: 128,
            column: 2147
          },
          end: {
            line: 128,
            column: 2305
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 2147
          },
          end: {
            line: 128,
            column: 2180
          }
        }, {
          start: {
            line: 128,
            column: 2185
          },
          end: {
            line: 128,
            column: 2304
          }
        }],
        line: 128
      },
      "26": {
        loc: {
          start: {
            line: 128,
            column: 2690
          },
          end: {
            line: 128,
            column: 2842
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 2690
          },
          end: {
            line: 128,
            column: 2720
          }
        }, {
          start: {
            line: 128,
            column: 2725
          },
          end: {
            line: 128,
            column: 2841
          }
        }],
        line: 128
      },
      "27": {
        loc: {
          start: {
            line: 128,
            column: 3121
          },
          end: {
            line: 128,
            column: 3275
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 3121
          },
          end: {
            line: 128,
            column: 3152
          }
        }, {
          start: {
            line: 128,
            column: 3157
          },
          end: {
            line: 128,
            column: 3274
          }
        }],
        line: 128
      },
      "28": {
        loc: {
          start: {
            line: 128,
            column: 3590
          },
          end: {
            line: 128,
            column: 3764
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 3590
          },
          end: {
            line: 128,
            column: 3631
          }
        }, {
          start: {
            line: 128,
            column: 3636
          },
          end: {
            line: 128,
            column: 3763
          }
        }],
        line: 128
      },
      "29": {
        loc: {
          start: {
            line: 128,
            column: 4999
          },
          end: {
            line: 128,
            column: 5059
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 4999
          },
          end: {
            line: 128,
            column: 5016
          }
        }, {
          start: {
            line: 128,
            column: 5021
          },
          end: {
            line: 128,
            column: 5058
          }
        }],
        line: 128
      },
      "30": {
        loc: {
          start: {
            line: 128,
            column: 6138
          },
          end: {
            line: 128,
            column: 6198
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 6138
          },
          end: {
            line: 128,
            column: 6155
          }
        }, {
          start: {
            line: 128,
            column: 6160
          },
          end: {
            line: 128,
            column: 6197
          }
        }],
        line: 128
      },
      "31": {
        loc: {
          start: {
            line: 128,
            column: 6587
          },
          end: {
            line: 128,
            column: 6657
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 6623
          },
          end: {
            line: 128,
            column: 6636
          }
        }, {
          start: {
            line: 128,
            column: 6639
          },
          end: {
            line: 128,
            column: 6657
          }
        }],
        line: 128
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/components/forms/residence-edit-form.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/components/forms/residence-edit-form.tsx"],
      sourcesContent: ["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { X, Plus } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  unitNumber: string;\n  floor: number;\n  squareFootage: string;\n  bedrooms: number;\n  bathrooms: string;\n  balcony: boolean;\n  parkingSpaceNumbers: string[];\n  storageSpaceNumbers: string[];\n  ownershipPercentage: string;\n  monthlyFees: string;\n  isActive: boolean;\n  building: {\n    id: string;\n    name: string;\n  };\n}\n\nconst residenceEditSchema = z.object({\n  unitNumber: z.string().min(1, 'Unit number is required and must be alphanumeric (example: 101A)'),\n  floor: z.coerce.number().min(0, 'Floor must be between 0 and 50 (example: 2)').max(50, 'Floor must be between 0 and 50 (example: 2)').optional(),\n  squareFootage: z.union([z.coerce.number().min(1, 'Square footage must be between 1 and 10,000 sq ft (example: 1200)').max(10000, 'Square footage must be between 1 and 10,000 sq ft (example: 1200)'), z.literal('')]).optional(),\n  bedrooms: z.coerce.number().min(0, 'Bedrooms must be between 0 and 10 (example: 2)').max(10, 'Bedrooms must be between 0 and 10 (example: 2)').optional(),\n  bathrooms: z.union([z.coerce.number().min(0, 'Bathrooms must be between 0 and 10 (example: 1.5)').max(10, 'Bathrooms must be between 0 and 10 (example: 1.5)'), z.literal('')]).optional(),\n  balcony: z.boolean(),\n  parkingSpaceNumbers: z.array(z.string()).optional(),\n  storageSpaceNumbers: z.array(z.string()).optional(),\n  ownershipPercentage: z.union([z.coerce.number().min(0, 'Ownership percentage must be between 0 and 100 (example: 25)').max(100, 'Ownership percentage must be between 0 and 100 (example: 25)'), z.literal('')]).optional(),\n  monthlyFees: z.union([z.coerce.number().min(0, 'Monthly fees must be a positive amount in CAD (example: 350.00)').max(99999, 'Monthly fees must be less than $99,999 CAD (example: 350.00)'), z.literal('')]).optional(),\n});\n\n/**\n *\n */\ntype ResidenceEditFormData = z.infer<typeof residenceEditSchema>;\n\n/**\n *\n */\ninterface ResidenceEditFormProps {\n  residence: Residence;\n  onSuccess: () => void;\n}\n\n/**\n *\n * @param root0\n * @param root0.residence\n * @param root0.onSuccess\n */\n/**\n * ResidenceEditForm function.\n * @param root0\n * @param root0.residence\n * @param root0.onSuccess\n * @returns Function result.\n */\nexport function ResidenceEditForm({ residence, onSuccess }: ResidenceEditFormProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [parkingSpaces, setParkingSpaces] = useState<string[]>(residence.parkingSpaceNumbers || []);\n  const [storageSpaces, setStorageSpaces] = useState<string[]>(residence.storageSpaceNumbers || []);\n  const [newParkingSpace, setNewParkingSpace] = useState('');\n  const [newStorageSpace, setNewStorageSpace] = useState('');\n\n  const form = useForm<ResidenceEditFormData>({\n    resolver: zodResolver(residenceEditSchema),\n    defaultValues: {\n      unitNumber: residence.unitNumber,\n      floor: residence.floor || 0,\n      squareFootage: residence.squareFootage ? Number(residence.squareFootage) : '',\n      bedrooms: residence.bedrooms || 0,\n      bathrooms: residence.bathrooms ? Number(residence.bathrooms) : '',\n      balcony: residence.balcony || false,\n      parkingSpaceNumbers: residence.parkingSpaceNumbers || [],\n      storageSpaceNumbers: residence.storageSpaceNumbers || [],\n      ownershipPercentage: residence.ownershipPercentage ? \n        (Number(residence.ownershipPercentage) < 1 ? Number(residence.ownershipPercentage) * 100 : Number(residence.ownershipPercentage)) : '',\n      monthlyFees: residence.monthlyFees ? Number(residence.monthlyFees) : '',\n    },\n  });\n\n  const updateResidenceMutation = useMutation({\n    mutationFn: async (_data: ResidenceEditFormData) => {\n      // Convert empty strings to null for optional numeric fields\n      const processedData = {\n        ..._data,\n        squareFootage: _data.squareFootage === '' ? null : _data.squareFootage,\n        bathrooms: _data.bathrooms === '' ? null : _data.bathrooms,\n        ownershipPercentage: _data.ownershipPercentage === '' ? null : Number(_data.ownershipPercentage),\n        monthlyFees: _data.monthlyFees === '' ? null : _data.monthlyFees,\n        parkingSpaceNumbers: parkingSpaces,\n        storageSpaceNumbers: storageSpaces,\n      };\n\n      const response = await fetch(`/api/residences/${residence.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(processedData),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to update residence: ${errorText}`);\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: 'Residence updated successfully',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/residences'] });\n      onSuccess();\n    },\n    onError: (_error: unknown) => {\n      toast({\n        title: 'Error',\n        description: (_error as Error)?.message || 'Failed to update residence',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onSubmit = (_data: ResidenceEditFormData) => {\n    updateResidenceMutation.mutate(_data);\n  };\n\n  const addParkingSpace = () => {\n    if (newParkingSpace.trim() && !parkingSpaces.includes(newParkingSpace.trim())) {\n      setParkingSpaces([...parkingSpaces, newParkingSpace.trim()]);\n      setNewParkingSpace('');\n    }\n  };\n\n  const removeParkingSpace = (index: number) => {\n    setParkingSpaces(parkingSpaces.filter((_, i) => i !== index));\n  };\n\n  const addStorageSpace = () => {\n    if (newStorageSpace.trim() && !storageSpaces.includes(newStorageSpace.trim())) {\n      setStorageSpaces([...storageSpaces, newStorageSpace.trim()]);\n      setNewStorageSpace('');\n    }\n  };\n\n  const removeStorageSpace = (index: number) => {\n    setStorageSpaces(storageSpaces.filter((_, i) => i !== index));\n  };\n\n  return (\n    <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n      {/* Basic Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Basic Information</CardTitle>\n        </CardHeader>\n        <CardContent className='space-y-4'>\n          <div className='grid grid-cols-2 gap-4'>\n            <div className='space-y-2'>\n              <Label htmlFor='unitNumber'>Unit Number</Label>\n              <Input id='unitNumber' {...form.register('unitNumber')} />\n              {form.formState.errors.unitNumber && (\n                <p className='text-sm text-red-500'>{form.formState.errors.unitNumber.message}</p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='floor'>Floor</Label>\n              <Input\n                id='floor'\n                type='number'\n                min='0'\n                {...form.register('floor', { valueAsNumber: true })}\n              />\n              {form.formState.errors.floor && (\n                <p className='text-sm text-red-500'>{form.formState.errors.floor.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div className='grid grid-cols-2 gap-4'>\n            <div className='space-y-2'>\n              <Label htmlFor='squareFootage'>Square Footage</Label>\n              <Input\n                id='squareFootage'\n                placeholder='e.g., 1200'\n                {...form.register('squareFootage')}\n              />\n              {form.formState.errors.squareFootage && (\n                <p className='text-sm text-red-500'>\n                  {form.formState.errors.squareFootage.message}\n                </p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='monthlyFees'>Monthly Fees ($)</Label>\n              <Input\n                id='monthlyFees'\n                placeholder='e.g., 350.00'\n                {...form.register('monthlyFees')}\n              />\n              {form.formState.errors.monthlyFees && (\n                <p className='text-sm text-red-500'>{form.formState.errors.monthlyFees.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div className='grid grid-cols-3 gap-4'>\n            <div className='space-y-2'>\n              <Label htmlFor='bedrooms'>Bedrooms</Label>\n              <Input\n                id='bedrooms'\n                type='number'\n                min='0'\n                {...form.register('bedrooms', { valueAsNumber: true })}\n              />\n              {form.formState.errors.bedrooms && (\n                <p className='text-sm text-red-500'>{form.formState.errors.bedrooms.message}</p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='bathrooms'>Bathrooms</Label>\n              <Input id='bathrooms' placeholder='e.g., 2.5' {...form.register('bathrooms')} />\n              {form.formState.errors.bathrooms && (\n                <p className='text-sm text-red-500'>{form.formState.errors.bathrooms.message}</p>\n              )}\n            </div>\n\n            <div className='space-y-2'>\n              <Label htmlFor='ownershipPercentage'>Ownership 0-100%</Label>\n              <Input\n                id='ownershipPercentage'\n                placeholder='e.g., 17'\n                {...form.register('ownershipPercentage')}\n              />\n              {form.formState.errors.ownershipPercentage && (\n                <p className='text-sm text-red-500'>\n                  {form.formState.errors.ownershipPercentage.message}\n                </p>\n              )}\n            </div>\n          </div>\n\n          <div className='flex items-center space-x-2'>\n            <Switch\n              id='balcony'\n              checked={form.watch('balcony')}\n              onCheckedChange={(checked) => form.setValue('balcony', checked)}\n            />\n            <Label htmlFor='balcony'>Has Balcony</Label>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Parking Spaces */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Parking Spaces</CardTitle>\n        </CardHeader>\n        <CardContent className='space-y-4'>\n          <div className='flex flex-wrap gap-2'>\n            {parkingSpaces.map((space, index) => (\n              <Badge key={index} variant='secondary' className='flex items-center gap-1'>\n                {space}\n                <X className='w-3 h-3 cursor-pointer' onClick={() => removeParkingSpace(index)} />\n              </Badge>\n            ))}\n          </div>\n\n          <div className='flex gap-2'>\n            <Input\n              placeholder='Add parking space number'\n              value={newParkingSpace}\n              onChange={(e) => setNewParkingSpace(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addParkingSpace())}\n            />\n            <Button type='button' onClick={addParkingSpace} size='sm'>\n              <Plus className='w-4 h-4' />\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Storage Spaces */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Storage Spaces</CardTitle>\n        </CardHeader>\n        <CardContent className='space-y-4'>\n          <div className='flex flex-wrap gap-2'>\n            {storageSpaces.map((space, index) => (\n              <Badge key={index} variant='secondary' className='flex items-center gap-1'>\n                {space}\n                <X className='w-3 h-3 cursor-pointer' onClick={() => removeStorageSpace(index)} />\n              </Badge>\n            ))}\n          </div>\n\n          <div className='flex gap-2'>\n            <Input\n              placeholder='Add storage space number'\n              value={newStorageSpace}\n              onChange={(e) => setNewStorageSpace(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addStorageSpace())}\n            />\n            <Button type='button' onClick={addStorageSpace} size='sm'>\n              <Plus className='w-4 h-4' />\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Submit Button */}\n      <div className='flex justify-end gap-2'>\n        <Button type='submit' disabled={updateResidenceMutation.isPending}>\n          {updateResidenceMutation.isPending ? 'Updating...' : 'Update Residence'}\n        </Button>\n      </div>\n    </form>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9902bdc51dda8b21cc0cdb0ddb6e43d0105fe4d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fvayfstip = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fvayfstip();
cov_fvayfstip().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_fvayfstip().s[1]++;
exports.ResidenceEditForm = ResidenceEditForm;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[2]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[3]++, require("react"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[4]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[5]++, require("@hookform/resolvers/zod"));
const zod_2 =
/* istanbul ignore next */
(cov_fvayfstip().s[6]++, require("zod"));
const react_query_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[7]++, require("@tanstack/react-query"));
const button_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[8]++, require("@/components/ui/button"));
const input_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[9]++, require("@/components/ui/input"));
const label_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[10]++, require("@/components/ui/label"));
const switch_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[11]++, require("@/components/ui/switch"));
const card_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[12]++, require("@/components/ui/card"));
const badge_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[13]++, require("@/components/ui/badge"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[14]++, require("lucide-react"));
const use_toast_1 =
/* istanbul ignore next */
(cov_fvayfstip().s[15]++, require("@/hooks/use-toast"));
const residenceEditSchema =
/* istanbul ignore next */
(cov_fvayfstip().s[16]++, zod_2.z.object({
  unitNumber: zod_2.z.string().min(1, 'Unit number is required and must be alphanumeric (example: 101A)'),
  floor: zod_2.z.coerce.number().min(0, 'Floor must be between 0 and 50 (example: 2)').max(50, 'Floor must be between 0 and 50 (example: 2)').optional(),
  squareFootage: zod_2.z.union([zod_2.z.coerce.number().min(1, 'Square footage must be between 1 and 10,000 sq ft (example: 1200)').max(10000, 'Square footage must be between 1 and 10,000 sq ft (example: 1200)'), zod_2.z.literal('')]).optional(),
  bedrooms: zod_2.z.coerce.number().min(0, 'Bedrooms must be between 0 and 10 (example: 2)').max(10, 'Bedrooms must be between 0 and 10 (example: 2)').optional(),
  bathrooms: zod_2.z.union([zod_2.z.coerce.number().min(0, 'Bathrooms must be between 0 and 10 (example: 1.5)').max(10, 'Bathrooms must be between 0 and 10 (example: 1.5)'), zod_2.z.literal('')]).optional(),
  balcony: zod_2.z.boolean(),
  parkingSpaceNumbers: zod_2.z.array(zod_2.z.string()).optional(),
  storageSpaceNumbers: zod_2.z.array(zod_2.z.string()).optional(),
  ownershipPercentage: zod_2.z.union([zod_2.z.coerce.number().min(0, 'Ownership percentage must be between 0 and 100 (example: 25)').max(100, 'Ownership percentage must be between 0 and 100 (example: 25)'), zod_2.z.literal('')]).optional(),
  monthlyFees: zod_2.z.union([zod_2.z.coerce.number().min(0, 'Monthly fees must be a positive amount in CAD (example: 350.00)').max(99999, 'Monthly fees must be less than $99,999 CAD (example: 350.00)'), zod_2.z.literal('')]).optional()
}));
/**
 *
 * @param root0
 * @param root0.residence
 * @param root0.onSuccess
 */
/**
 * ResidenceEditForm function.
 * @param root0
 * @param root0.residence
 * @param root0.onSuccess
 * @returns Function result.
 */
function ResidenceEditForm({
  residence,
  onSuccess
}) {
  /* istanbul ignore next */
  cov_fvayfstip().f[0]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_fvayfstip().s[17]++, (0, use_toast_1.useToast)());
  const queryClient =
  /* istanbul ignore next */
  (cov_fvayfstip().s[18]++, (0, react_query_1.useQueryClient)());
  const [parkingSpaces, setParkingSpaces] =
  /* istanbul ignore next */
  (cov_fvayfstip().s[19]++, (0, react_1.useState)(
  /* istanbul ignore next */
  (cov_fvayfstip().b[0][0]++, residence.parkingSpaceNumbers) ||
  /* istanbul ignore next */
  (cov_fvayfstip().b[0][1]++, [])));
  const [storageSpaces, setStorageSpaces] =
  /* istanbul ignore next */
  (cov_fvayfstip().s[20]++, (0, react_1.useState)(
  /* istanbul ignore next */
  (cov_fvayfstip().b[1][0]++, residence.storageSpaceNumbers) ||
  /* istanbul ignore next */
  (cov_fvayfstip().b[1][1]++, [])));
  const [newParkingSpace, setNewParkingSpace] =
  /* istanbul ignore next */
  (cov_fvayfstip().s[21]++, (0, react_1.useState)(''));
  const [newStorageSpace, setNewStorageSpace] =
  /* istanbul ignore next */
  (cov_fvayfstip().s[22]++, (0, react_1.useState)(''));
  const form =
  /* istanbul ignore next */
  (cov_fvayfstip().s[23]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(residenceEditSchema),
    defaultValues: {
      unitNumber: residence.unitNumber,
      floor:
      /* istanbul ignore next */
      (cov_fvayfstip().b[2][0]++, residence.floor) ||
      /* istanbul ignore next */
      (cov_fvayfstip().b[2][1]++, 0),
      squareFootage: residence.squareFootage ?
      /* istanbul ignore next */
      (cov_fvayfstip().b[3][0]++, Number(residence.squareFootage)) :
      /* istanbul ignore next */
      (cov_fvayfstip().b[3][1]++, ''),
      bedrooms:
      /* istanbul ignore next */
      (cov_fvayfstip().b[4][0]++, residence.bedrooms) ||
      /* istanbul ignore next */
      (cov_fvayfstip().b[4][1]++, 0),
      bathrooms: residence.bathrooms ?
      /* istanbul ignore next */
      (cov_fvayfstip().b[5][0]++, Number(residence.bathrooms)) :
      /* istanbul ignore next */
      (cov_fvayfstip().b[5][1]++, ''),
      balcony:
      /* istanbul ignore next */
      (cov_fvayfstip().b[6][0]++, residence.balcony) ||
      /* istanbul ignore next */
      (cov_fvayfstip().b[6][1]++, false),
      parkingSpaceNumbers:
      /* istanbul ignore next */
      (cov_fvayfstip().b[7][0]++, residence.parkingSpaceNumbers) ||
      /* istanbul ignore next */
      (cov_fvayfstip().b[7][1]++, []),
      storageSpaceNumbers:
      /* istanbul ignore next */
      (cov_fvayfstip().b[8][0]++, residence.storageSpaceNumbers) ||
      /* istanbul ignore next */
      (cov_fvayfstip().b[8][1]++, []),
      ownershipPercentage: residence.ownershipPercentage ?
      /* istanbul ignore next */
      (cov_fvayfstip().b[9][0]++, Number(residence.ownershipPercentage) < 1 ?
      /* istanbul ignore next */
      (cov_fvayfstip().b[10][0]++, Number(residence.ownershipPercentage) * 100) :
      /* istanbul ignore next */
      (cov_fvayfstip().b[10][1]++, Number(residence.ownershipPercentage))) :
      /* istanbul ignore next */
      (cov_fvayfstip().b[9][1]++, ''),
      monthlyFees: residence.monthlyFees ?
      /* istanbul ignore next */
      (cov_fvayfstip().b[11][0]++, Number(residence.monthlyFees)) :
      /* istanbul ignore next */
      (cov_fvayfstip().b[11][1]++, '')
    }
  }));
  const updateResidenceMutation =
  /* istanbul ignore next */
  (cov_fvayfstip().s[24]++, (0, react_query_1.useMutation)({
    mutationFn: async _data => {
      /* istanbul ignore next */
      cov_fvayfstip().f[1]++;
      // Convert empty strings to null for optional numeric fields
      const processedData =
      /* istanbul ignore next */
      (cov_fvayfstip().s[25]++, {
        ..._data,
        squareFootage: _data.squareFootage === '' ?
        /* istanbul ignore next */
        (cov_fvayfstip().b[12][0]++, null) :
        /* istanbul ignore next */
        (cov_fvayfstip().b[12][1]++, _data.squareFootage),
        bathrooms: _data.bathrooms === '' ?
        /* istanbul ignore next */
        (cov_fvayfstip().b[13][0]++, null) :
        /* istanbul ignore next */
        (cov_fvayfstip().b[13][1]++, _data.bathrooms),
        ownershipPercentage: _data.ownershipPercentage === '' ?
        /* istanbul ignore next */
        (cov_fvayfstip().b[14][0]++, null) :
        /* istanbul ignore next */
        (cov_fvayfstip().b[14][1]++, Number(_data.ownershipPercentage)),
        monthlyFees: _data.monthlyFees === '' ?
        /* istanbul ignore next */
        (cov_fvayfstip().b[15][0]++, null) :
        /* istanbul ignore next */
        (cov_fvayfstip().b[15][1]++, _data.monthlyFees),
        parkingSpaceNumbers: parkingSpaces,
        storageSpaceNumbers: storageSpaces
      });
      const response =
      /* istanbul ignore next */
      (cov_fvayfstip().s[26]++, await fetch(`/api/residences/${residence.id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(processedData)
      }));
      /* istanbul ignore next */
      cov_fvayfstip().s[27]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_fvayfstip().b[16][0]++;
        const errorText =
        /* istanbul ignore next */
        (cov_fvayfstip().s[28]++, await response.text());
        /* istanbul ignore next */
        cov_fvayfstip().s[29]++;
        throw new Error(`Failed to update residence: ${errorText}`);
      } else
      /* istanbul ignore next */
      {
        cov_fvayfstip().b[16][1]++;
      }
      cov_fvayfstip().s[30]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_fvayfstip().f[2]++;
      cov_fvayfstip().s[31]++;
      toast({
        title: 'Success',
        description: 'Residence updated successfully'
      });
      /* istanbul ignore next */
      cov_fvayfstip().s[32]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/residences']
      });
      /* istanbul ignore next */
      cov_fvayfstip().s[33]++;
      onSuccess();
    },
    onError: _error => {
      /* istanbul ignore next */
      cov_fvayfstip().f[3]++;
      cov_fvayfstip().s[34]++;
      toast({
        title: 'Error',
        description:
        /* istanbul ignore next */
        (cov_fvayfstip().b[17][0]++, _error?.message) ||
        /* istanbul ignore next */
        (cov_fvayfstip().b[17][1]++, 'Failed to update residence'),
        variant: 'destructive'
      });
    }
  }));
  /* istanbul ignore next */
  cov_fvayfstip().s[35]++;
  const onSubmit = _data => {
    /* istanbul ignore next */
    cov_fvayfstip().f[4]++;
    cov_fvayfstip().s[36]++;
    updateResidenceMutation.mutate(_data);
  };
  /* istanbul ignore next */
  cov_fvayfstip().s[37]++;
  const addParkingSpace = () => {
    /* istanbul ignore next */
    cov_fvayfstip().f[5]++;
    cov_fvayfstip().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_fvayfstip().b[19][0]++, newParkingSpace.trim()) &&
    /* istanbul ignore next */
    (cov_fvayfstip().b[19][1]++, !parkingSpaces.includes(newParkingSpace.trim()))) {
      /* istanbul ignore next */
      cov_fvayfstip().b[18][0]++;
      cov_fvayfstip().s[39]++;
      setParkingSpaces([...parkingSpaces, newParkingSpace.trim()]);
      /* istanbul ignore next */
      cov_fvayfstip().s[40]++;
      setNewParkingSpace('');
    } else
    /* istanbul ignore next */
    {
      cov_fvayfstip().b[18][1]++;
    }
  };
  /* istanbul ignore next */
  cov_fvayfstip().s[41]++;
  const removeParkingSpace = index => {
    /* istanbul ignore next */
    cov_fvayfstip().f[6]++;
    cov_fvayfstip().s[42]++;
    setParkingSpaces(parkingSpaces.filter((_, i) => {
      /* istanbul ignore next */
      cov_fvayfstip().f[7]++;
      cov_fvayfstip().s[43]++;
      return i !== index;
    }));
  };
  /* istanbul ignore next */
  cov_fvayfstip().s[44]++;
  const addStorageSpace = () => {
    /* istanbul ignore next */
    cov_fvayfstip().f[8]++;
    cov_fvayfstip().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_fvayfstip().b[21][0]++, newStorageSpace.trim()) &&
    /* istanbul ignore next */
    (cov_fvayfstip().b[21][1]++, !storageSpaces.includes(newStorageSpace.trim()))) {
      /* istanbul ignore next */
      cov_fvayfstip().b[20][0]++;
      cov_fvayfstip().s[46]++;
      setStorageSpaces([...storageSpaces, newStorageSpace.trim()]);
      /* istanbul ignore next */
      cov_fvayfstip().s[47]++;
      setNewStorageSpace('');
    } else
    /* istanbul ignore next */
    {
      cov_fvayfstip().b[20][1]++;
    }
  };
  /* istanbul ignore next */
  cov_fvayfstip().s[48]++;
  const removeStorageSpace = index => {
    /* istanbul ignore next */
    cov_fvayfstip().f[9]++;
    cov_fvayfstip().s[49]++;
    setStorageSpaces(storageSpaces.filter((_, i) => {
      /* istanbul ignore next */
      cov_fvayfstip().f[10]++;
      cov_fvayfstip().s[50]++;
      return i !== index;
    }));
  };
  /* istanbul ignore next */
  cov_fvayfstip().s[51]++;
  return (0, jsx_runtime_1.jsxs)("form", {
    onSubmit: form.handleSubmit(onSubmit),
    className: 'space-y-6',
    children: [(0, jsx_runtime_1.jsxs)(card_1.Card, {
      children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
        children: (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
          children: "Basic Information"
        })
      }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
        className: 'space-y-4',
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: 'grid grid-cols-2 gap-4',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'unitNumber',
              children: "Unit Number"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'unitNumber',
              ...form.register('unitNumber')
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[22][0]++, form.formState.errors.unitNumber) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[22][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.unitNumber.message
            }))]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'floor',
              children: "Floor"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'floor',
              type: 'number',
              min: '0',
              ...form.register('floor', {
                valueAsNumber: true
              })
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[23][0]++, form.formState.errors.floor) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[23][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.floor.message
            }))]
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'grid grid-cols-2 gap-4',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'squareFootage',
              children: "Square Footage"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'squareFootage',
              placeholder: 'e.g., 1200',
              ...form.register('squareFootage')
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[24][0]++, form.formState.errors.squareFootage) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[24][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.squareFootage.message
            }))]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'monthlyFees',
              children: "Monthly Fees ($)"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'monthlyFees',
              placeholder: 'e.g., 350.00',
              ...form.register('monthlyFees')
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[25][0]++, form.formState.errors.monthlyFees) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[25][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.monthlyFees.message
            }))]
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'grid grid-cols-3 gap-4',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'bedrooms',
              children: "Bedrooms"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'bedrooms',
              type: 'number',
              min: '0',
              ...form.register('bedrooms', {
                valueAsNumber: true
              })
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[26][0]++, form.formState.errors.bedrooms) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[26][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.bedrooms.message
            }))]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'bathrooms',
              children: "Bathrooms"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'bathrooms',
              placeholder: 'e.g., 2.5',
              ...form.register('bathrooms')
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[27][0]++, form.formState.errors.bathrooms) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[27][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.bathrooms.message
            }))]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: 'space-y-2',
            children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
              htmlFor: 'ownershipPercentage',
              children: "Ownership 0-100%"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              id: 'ownershipPercentage',
              placeholder: 'e.g., 17',
              ...form.register('ownershipPercentage')
            }),
            /* istanbul ignore next */
            (cov_fvayfstip().b[28][0]++, form.formState.errors.ownershipPercentage) &&
            /* istanbul ignore next */
            (cov_fvayfstip().b[28][1]++, (0, jsx_runtime_1.jsx)("p", {
              className: 'text-sm text-red-500',
              children: form.formState.errors.ownershipPercentage.message
            }))]
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center space-x-2',
          children: [(0, jsx_runtime_1.jsx)(switch_1.Switch, {
            id: 'balcony',
            checked: form.watch('balcony'),
            onCheckedChange: checked => {
              /* istanbul ignore next */
              cov_fvayfstip().f[11]++;
              cov_fvayfstip().s[52]++;
              return form.setValue('balcony', checked);
            }
          }), (0, jsx_runtime_1.jsx)(label_1.Label, {
            htmlFor: 'balcony',
            children: "Has Balcony"
          })]
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)(card_1.Card, {
      children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
        children: (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
          children: "Parking Spaces"
        })
      }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
        className: 'space-y-4',
        children: [(0, jsx_runtime_1.jsx)("div", {
          className: 'flex flex-wrap gap-2',
          children: parkingSpaces.map((space, index) => {
            /* istanbul ignore next */
            cov_fvayfstip().f[12]++;
            cov_fvayfstip().s[53]++;
            return (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
              variant: 'secondary',
              className: 'flex items-center gap-1',
              children: [space, (0, jsx_runtime_1.jsx)(lucide_react_1.X, {
                className: 'w-3 h-3 cursor-pointer',
                onClick: () => {
                  /* istanbul ignore next */
                  cov_fvayfstip().f[13]++;
                  cov_fvayfstip().s[54]++;
                  return removeParkingSpace(index);
                }
              })]
            }, index);
          })
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex gap-2',
          children: [(0, jsx_runtime_1.jsx)(input_1.Input, {
            placeholder: 'Add parking space number',
            value: newParkingSpace,
            onChange: e => {
              /* istanbul ignore next */
              cov_fvayfstip().f[14]++;
              cov_fvayfstip().s[55]++;
              return setNewParkingSpace(e.target.value);
            },
            onKeyPress: e => {
              /* istanbul ignore next */
              cov_fvayfstip().f[15]++;
              cov_fvayfstip().s[56]++;
              return /* istanbul ignore next */(cov_fvayfstip().b[29][0]++, e.key === 'Enter') &&
              /* istanbul ignore next */
              (cov_fvayfstip().b[29][1]++, e.preventDefault(), addParkingSpace());
            }
          }), (0, jsx_runtime_1.jsx)(button_1.Button, {
            type: 'button',
            onClick: addParkingSpace,
            size: 'sm',
            children: (0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
              className: 'w-4 h-4'
            })
          })]
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)(card_1.Card, {
      children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
        children: (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
          children: "Storage Spaces"
        })
      }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
        className: 'space-y-4',
        children: [(0, jsx_runtime_1.jsx)("div", {
          className: 'flex flex-wrap gap-2',
          children: storageSpaces.map((space, index) => {
            /* istanbul ignore next */
            cov_fvayfstip().f[16]++;
            cov_fvayfstip().s[57]++;
            return (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
              variant: 'secondary',
              className: 'flex items-center gap-1',
              children: [space, (0, jsx_runtime_1.jsx)(lucide_react_1.X, {
                className: 'w-3 h-3 cursor-pointer',
                onClick: () => {
                  /* istanbul ignore next */
                  cov_fvayfstip().f[17]++;
                  cov_fvayfstip().s[58]++;
                  return removeStorageSpace(index);
                }
              })]
            }, index);
          })
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex gap-2',
          children: [(0, jsx_runtime_1.jsx)(input_1.Input, {
            placeholder: 'Add storage space number',
            value: newStorageSpace,
            onChange: e => {
              /* istanbul ignore next */
              cov_fvayfstip().f[18]++;
              cov_fvayfstip().s[59]++;
              return setNewStorageSpace(e.target.value);
            },
            onKeyPress: e => {
              /* istanbul ignore next */
              cov_fvayfstip().f[19]++;
              cov_fvayfstip().s[60]++;
              return /* istanbul ignore next */(cov_fvayfstip().b[30][0]++, e.key === 'Enter') &&
              /* istanbul ignore next */
              (cov_fvayfstip().b[30][1]++, e.preventDefault(), addStorageSpace());
            }
          }), (0, jsx_runtime_1.jsx)(button_1.Button, {
            type: 'button',
            onClick: addStorageSpace,
            size: 'sm',
            children: (0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
              className: 'w-4 h-4'
            })
          })]
        })]
      })]
    }), (0, jsx_runtime_1.jsx)("div", {
      className: 'flex justify-end gap-2',
      children: (0, jsx_runtime_1.jsx)(button_1.Button, {
        type: 'submit',
        disabled: updateResidenceMutation.isPending,
        children: updateResidenceMutation.isPending ?
        /* istanbul ignore next */
        (cov_fvayfstip().b[31][0]++, 'Updating...') :
        /* istanbul ignore next */
        (cov_fvayfstip().b[31][1]++, 'Update Residence')
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,