f797d62b3b0863c1bf290b603d887352
"use strict";

/* istanbul ignore next */
function cov_9rh1xfle1() {
  var path = "/home/runner/workspace/client/src/pages/manager/buildings.tsx";
  var hash = "335fa6a9ccd8b34006ca6920e2c4517b652fa34d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/pages/manager/buildings.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "6": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "7": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "8": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "9": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "10": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "11": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "12": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "13": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "14": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "15": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "16": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 48
        }
      },
      "17": {
        start: {
          line: 19,
          column: 14
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "18": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 50
        }
      },
      "19": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "20": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "21": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "22": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "23": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "24": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 2550
        }
      },
      "25": {
        start: {
          line: 35,
          column: 693
        },
        end: {
          line: 35,
          column: 709
        }
      },
      "26": {
        start: {
          line: 35,
          column: 894
        },
        end: {
          line: 35,
          column: 912
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 6861
        }
      },
      "28": {
        start: {
          line: 50,
          column: 776
        },
        end: {
          line: 50,
          column: 1131
        }
      },
      "29": {
        start: {
          line: 50,
          column: 1244
        },
        end: {
          line: 50,
          column: 1603
        }
      },
      "30": {
        start: {
          line: 50,
          column: 1713
        },
        end: {
          line: 50,
          column: 2032
        }
      },
      "31": {
        start: {
          line: 50,
          column: 2146
        },
        end: {
          line: 50,
          column: 3853
        }
      },
      "32": {
        start: {
          line: 50,
          column: 3969
        },
        end: {
          line: 50,
          column: 4300
        }
      },
      "33": {
        start: {
          line: 50,
          column: 4418
        },
        end: {
          line: 50,
          column: 5173
        }
      },
      "34": {
        start: {
          line: 50,
          column: 5289
        },
        end: {
          line: 50,
          column: 5691
        }
      },
      "35": {
        start: {
          line: 50,
          column: 5588
        },
        end: {
          line: 50,
          column: 5633
        }
      },
      "36": {
        start: {
          line: 50,
          column: 5811
        },
        end: {
          line: 50,
          column: 6496
        }
      },
      "37": {
        start: {
          line: 50,
          column: 6345
        },
        end: {
          line: 50,
          column: 6435
        }
      },
      "38": {
        start: {
          line: 50,
          column: 6659
        },
        end: {
          line: 50,
          column: 6678
        }
      },
      "39": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "40": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 59
        }
      },
      "41": {
        start: {
          line: 58,
          column: 18
        },
        end: {
          line: 58,
          column: 51
        }
      },
      "42": {
        start: {
          line: 60,
          column: 31
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "43": {
        start: {
          line: 75,
          column: 40
        },
        end: {
          line: 75,
          column: 65
        }
      },
      "44": {
        start: {
          line: 76,
          column: 50
        },
        end: {
          line: 76,
          column: 78
        }
      },
      "45": {
        start: {
          line: 77,
          column: 52
        },
        end: {
          line: 77,
          column: 80
        }
      },
      "46": {
        start: {
          line: 78,
          column: 50
        },
        end: {
          line: 78,
          column: 77
        }
      },
      "47": {
        start: {
          line: 79,
          column: 52
        },
        end: {
          line: 79,
          column: 79
        }
      },
      "48": {
        start: {
          line: 81,
          column: 27
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "49": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 77
        }
      },
      "50": {
        start: {
          line: 86,
          column: 41
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "51": {
        start: {
          line: 89,
          column: 29
        },
        end: {
          line: 89,
          column: 93
        }
      },
      "52": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "53": {
        start: {
          line: 94,
          column: 63
        },
        end: {
          line: 100,
          column: 6
        }
      },
      "54": {
        start: {
          line: 97,
          column: 29
        },
        end: {
          line: 97,
          column: 97
        }
      },
      "55": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "56": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 102,
          column: 52
        }
      },
      "57": {
        start: {
          line: 104,
          column: 30
        },
        end: {
          line: 110,
          column: 31
        }
      },
      "58": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "59": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 22
        }
      },
      "60": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 109,
          column: 79
        }
      },
      "61": {
        start: {
          line: 108,
          column: 46
        },
        end: {
          line: 109,
          column: 77
        }
      },
      "62": {
        start: {
          line: 112,
          column: 17
        },
        end: {
          line: 124,
          column: 6
        }
      },
      "63": {
        start: {
          line: 126,
          column: 21
        },
        end: {
          line: 128,
          column: 6
        }
      },
      "64": {
        start: {
          line: 130,
          column: 35
        },
        end: {
          line: 148,
          column: 6
        }
      },
      "65": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 131,
          column: 97
        }
      },
      "66": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 84
        }
      },
      "67": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 38
        }
      },
      "68": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 25
        }
      },
      "69": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "70": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "71": {
        start: {
          line: 149,
          column: 35
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "72": {
        start: {
          line: 150,
          column: 38
        },
        end: {
          line: 150,
          column: 110
        }
      },
      "73": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 84
        }
      },
      "74": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 39
        }
      },
      "75": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 37
        }
      },
      "76": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 29
        }
      },
      "77": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "78": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "79": {
        start: {
          line: 169,
          column: 35
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "80": {
        start: {
          line: 170,
          column: 36
        },
        end: {
          line: 170,
          column: 113
        }
      },
      "81": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 84
        }
      },
      "82": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 76
        }
      },
      "83": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 38
        }
      },
      "84": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "85": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "86": {
        start: {
          line: 189,
          column: 33
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "87": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 44
        }
      },
      "88": {
        start: {
          line: 192,
          column: 31
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "89": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 37
        }
      },
      "90": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 203,
          column: 11
        }
      },
      "91": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 34
        }
      },
      "92": {
        start: {
          line: 206,
          column: 33
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "93": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "94": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 76
        }
      },
      "95": {
        start: {
          line: 211,
          column: 33
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "96": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 38
        }
      },
      "97": {
        start: {
          line: 214,
          column: 34
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "98": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "99": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 63
        }
      },
      "100": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "101": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 398
        }
      },
      "102": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "103": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 967
        }
      },
      "104": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 3222
        }
      },
      "105": {
        start: {
          line: 225,
          column: 831
        },
        end: {
          line: 225,
          column: 860
        }
      },
      "106": {
        start: {
          line: 225,
          column: 974
        },
        end: {
          line: 225,
          column: 998
        }
      },
      "107": {
        start: {
          line: 225,
          column: 1292
        },
        end: {
          line: 225,
          column: 1453
        }
      },
      "108": {
        start: {
          line: 225,
          column: 2388
        },
        end: {
          line: 225,
          column: 2413
        }
      },
      "109": {
        start: {
          line: 225,
          column: 2934
        },
        end: {
          line: 225,
          column: 2959
        }
      }
    },
    fnMap: {
      "0": {
        name: "BuildingCard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 21
          }
        },
        loc: {
          start: {
            line: 32,
            column: 67
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 687
          },
          end: {
            line: 35,
            column: 688
          }
        },
        loc: {
          start: {
            line: 35,
            column: 693
          },
          end: {
            line: 35,
            column: 709
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 888
          },
          end: {
            line: 35,
            column: 889
          }
        },
        loc: {
          start: {
            line: 35,
            column: 894
          },
          end: {
            line: 35,
            column: 912
          }
        },
        line: 35
      },
      "3": {
        name: "BuildingForm",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 21
          }
        },
        loc: {
          start: {
            line: 49,
            column: 117
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 760
          },
          end: {
            line: 50,
            column: 761
          }
        },
        loc: {
          start: {
            line: 50,
            column: 776
          },
          end: {
            line: 50,
            column: 1131
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 1228
          },
          end: {
            line: 50,
            column: 1229
          }
        },
        loc: {
          start: {
            line: 50,
            column: 1244
          },
          end: {
            line: 50,
            column: 1603
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 1697
          },
          end: {
            line: 50,
            column: 1698
          }
        },
        loc: {
          start: {
            line: 50,
            column: 1713
          },
          end: {
            line: 50,
            column: 2032
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 2130
          },
          end: {
            line: 50,
            column: 2131
          }
        },
        loc: {
          start: {
            line: 50,
            column: 2146
          },
          end: {
            line: 50,
            column: 3853
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 50,
            column: 3953
          },
          end: {
            line: 50,
            column: 3954
          }
        },
        loc: {
          start: {
            line: 50,
            column: 3969
          },
          end: {
            line: 50,
            column: 4300
          }
        },
        line: 50
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 4402
          },
          end: {
            line: 50,
            column: 4403
          }
        },
        loc: {
          start: {
            line: 50,
            column: 4418
          },
          end: {
            line: 50,
            column: 5173
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 50,
            column: 5273
          },
          end: {
            line: 50,
            column: 5274
          }
        },
        loc: {
          start: {
            line: 50,
            column: 5289
          },
          end: {
            line: 50,
            column: 5691
          }
        },
        line: 50
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 50,
            column: 5581
          },
          end: {
            line: 50,
            column: 5582
          }
        },
        loc: {
          start: {
            line: 50,
            column: 5588
          },
          end: {
            line: 50,
            column: 5633
          }
        },
        line: 50
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 5795
          },
          end: {
            line: 50,
            column: 5796
          }
        },
        loc: {
          start: {
            line: 50,
            column: 5811
          },
          end: {
            line: 50,
            column: 6496
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 50,
            column: 6335
          },
          end: {
            line: 50,
            column: 6336
          }
        },
        loc: {
          start: {
            line: 50,
            column: 6345
          },
          end: {
            line: 50,
            column: 6435
          }
        },
        line: 50
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 50,
            column: 6653
          },
          end: {
            line: 50,
            column: 6654
          }
        },
        loc: {
          start: {
            line: 50,
            column: 6659
          },
          end: {
            line: 50,
            column: 6678
          }
        },
        line: 50
      },
      "15": {
        name: "Buildings",
        decl: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 55,
            column: 18
          }
        },
        loc: {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 55
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 18
          }
        },
        loc: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 77
          }
        },
        line: 83
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 88,
            column: 17
          },
          end: {
            line: 88,
            column: 18
          }
        },
        loc: {
          start: {
            line: 88,
            column: 29
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 88
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 96,
            column: 18
          }
        },
        loc: {
          start: {
            line: 96,
            column: 29
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 96
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 104,
            column: 51
          },
          end: {
            line: 104,
            column: 52
          }
        },
        loc: {
          start: {
            line: 104,
            column: 57
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 104
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 33
          }
        },
        loc: {
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 109,
            column: 77
          }
        },
        line: 108
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        },
        loc: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 131,
            column: 97
          }
        },
        line: 131
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 132,
            column: 19
          },
          end: {
            line: 132,
            column: 20
          }
        },
        loc: {
          start: {
            line: 132,
            column: 25
          },
          end: {
            line: 140,
            column: 9
          }
        },
        line: 132
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 141,
            column: 17
          },
          end: {
            line: 141,
            column: 18
          }
        },
        loc: {
          start: {
            line: 141,
            column: 28
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 141
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 21
          }
        },
        loc: {
          start: {
            line: 150,
            column: 38
          },
          end: {
            line: 150,
            column: 110
          }
        },
        line: 150
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 151,
            column: 19
          },
          end: {
            line: 151,
            column: 20
          }
        },
        loc: {
          start: {
            line: 151,
            column: 25
          },
          end: {
            line: 160,
            column: 9
          }
        },
        line: 151
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 161,
            column: 17
          },
          end: {
            line: 161,
            column: 18
          }
        },
        loc: {
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 167,
            column: 9
          }
        },
        line: 161
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 170,
            column: 21
          }
        },
        loc: {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 170,
            column: 113
          }
        },
        line: 170
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 171,
            column: 19
          },
          end: {
            line: 171,
            column: 20
          }
        },
        loc: {
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 179,
            column: 9
          }
        },
        line: 171
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 180,
            column: 17
          },
          end: {
            line: 180,
            column: 18
          }
        },
        loc: {
          start: {
            line: 180,
            column: 28
          },
          end: {
            line: 186,
            column: 9
          }
        },
        line: 180
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 189,
            column: 34
          }
        },
        loc: {
          start: {
            line: 189,
            column: 49
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 189
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 192,
            column: 31
          },
          end: {
            line: 192,
            column: 32
          }
        },
        loc: {
          start: {
            line: 192,
            column: 45
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 192
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 206,
            column: 33
          },
          end: {
            line: 206,
            column: 34
          }
        },
        loc: {
          start: {
            line: 206,
            column: 49
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 206
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 34
          }
        },
        loc: {
          start: {
            line: 211,
            column: 47
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 214,
            column: 34
          },
          end: {
            line: 214,
            column: 35
          }
        },
        loc: {
          start: {
            line: 214,
            column: 40
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 214
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 225,
            column: 824
          },
          end: {
            line: 225,
            column: 825
          }
        },
        loc: {
          start: {
            line: 225,
            column: 831
          },
          end: {
            line: 225,
            column: 860
          }
        },
        line: 225
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 225,
            column: 968
          },
          end: {
            line: 225,
            column: 969
          }
        },
        loc: {
          start: {
            line: 225,
            column: 974
          },
          end: {
            line: 225,
            column: 998
          }
        },
        line: 225
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 225,
            column: 1277
          },
          end: {
            line: 225,
            column: 1278
          }
        },
        loc: {
          start: {
            line: 225,
            column: 1292
          },
          end: {
            line: 225,
            column: 1453
          }
        },
        line: 225
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 225,
            column: 2382
          },
          end: {
            line: 225,
            column: 2383
          }
        },
        loc: {
          start: {
            line: 225,
            column: 2388
          },
          end: {
            line: 225,
            column: 2413
          }
        },
        line: 225
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 225,
            column: 2928
          },
          end: {
            line: 225,
            column: 2929
          }
        },
        loc: {
          start: {
            line: 225,
            column: 2934
          },
          end: {
            line: 225,
            column: 2959
          }
        },
        line: 225
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 50
          },
          end: {
            line: 34,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 50
          },
          end: {
            line: 34,
            column: 58
          }
        }, {
          start: {
            line: 34,
            column: 62
          },
          end: {
            line: 34,
            column: 64
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 525
          },
          end: {
            line: 35,
            column: 1050
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 525
          },
          end: {
            line: 35,
            column: 532
          }
        }, {
          start: {
            line: 35,
            column: 537
          },
          end: {
            line: 35,
            column: 1049
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 795
          },
          end: {
            line: 35,
            column: 1045
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 795
          },
          end: {
            line: 35,
            column: 802
          }
        }, {
          start: {
            line: 35,
            column: 807
          },
          end: {
            line: 35,
            column: 1044
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 5603
          },
          end: {
            line: 50,
            column: 5632
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 5603
          },
          end: {
            line: 50,
            column: 5627
          }
        }, {
          start: {
            line: 50,
            column: 5631
          },
          end: {
            line: 50,
            column: 5632
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 6798
          },
          end: {
            line: 50,
            column: 6838
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 6813
          },
          end: {
            line: 50,
            column: 6824
          }
        }, {
          start: {
            line: 50,
            column: 6827
          },
          end: {
            line: 50,
            column: 6838
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 18
          },
          end: {
            line: 86,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 36
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 46
          }
        }, {
          start: {
            line: 102,
            column: 50
          },
          end: {
            line: 102,
            column: 52
          }
        }],
        line: 102
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 109,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 108,
            column: 108
          }
        }, {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 77
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 144,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 144,
            column: 42
          }
        }, {
          start: {
            line: 144,
            column: 46
          },
          end: {
            line: 144,
            column: 73
          }
        }],
        line: 144
      },
      "10": {
        loc: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 42
          }
        }, {
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 73
          }
        }],
        line: 164
      },
      "11": {
        loc: {
          start: {
            line: 183,
            column: 29
          },
          end: {
            line: 183,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 29
          },
          end: {
            line: 183,
            column: 42
          }
        }, {
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 73
          }
        }],
        line: 183
      },
      "12": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "13": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "14": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "15": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "16": {
        loc: {
          start: {
            line: 225,
            column: 889
          },
          end: {
            line: 225,
            column: 1108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 889
          },
          end: {
            line: 225,
            column: 911
          }
        }, {
          start: {
            line: 225,
            column: 916
          },
          end: {
            line: 225,
            column: 1107
          }
        }],
        line: 225
      },
      "17": {
        loc: {
          start: {
            line: 225,
            column: 1114
          },
          end: {
            line: 225,
            column: 1725
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 1146
          },
          end: {
            line: 225,
            column: 1458
          }
        }, {
          start: {
            line: 225,
            column: 1463
          },
          end: {
            line: 225,
            column: 1724
          }
        }],
        line: 225
      },
      "18": {
        loc: {
          start: {
            line: 225,
            column: 1592
          },
          end: {
            line: 225,
            column: 1669
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 1617
          },
          end: {
            line: 225,
            column: 1642
          }
        }, {
          start: {
            line: 225,
            column: 1645
          },
          end: {
            line: 225,
            column: 1669
          }
        }],
        line: 225
      },
      "19": {
        loc: {
          start: {
            line: 225,
            column: 3136
          },
          end: {
            line: 225,
            column: 3195
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 3171
          },
          end: {
            line: 225,
            column: 3184
          }
        }, {
          start: {
            line: 225,
            column: 3187
          },
          end: {
            line: 225,
            column: 3195
          }
        }],
        line: 225
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/pages/manager/buildings.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/pages/manager/buildings.tsx"],
      sourcesContent: ["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { NoDataCard } from '@/components/ui/no-data-card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Building,\n  Search,\n  Plus,\n  Edit,\n  Trash2,\n  MapPin,\n  Phone,\n  Mail,\n  Calendar,\n  Users,\n} from 'lucide-react';\nimport { Header } from '@/components/layout/header';\nimport { Link } from 'wouter';\n\n// Form schema for creating/editing buildings\n// Schema will be created inside component with translations\n\n/**\n *\n */\ntype BuildingFormData = z.infer<typeof buildingFormSchema>;\n\n/**\n *\n */\ninterface BuildingData {\n  id: string;\n  name: string;\n  address: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  buildingType: string;\n  totalUnits: number;\n  organizationId: string;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n/**\n *\n */\ninterface BuildingCardProps {\n  building: BuildingData;\n  userRole?: string;\n  onEdit: (building: BuildingData) => void;\n  onDelete: (building: BuildingData) => void;\n  t: (key: string) => string;\n}\n\n/**\n *\n * @param root0\n * @param root0.building\n * @param root0.userRole\n * @param root0.onEdit\n * @param root0.onDelete\n */\nfunction BuildingCard({ building, userRole, onEdit, onDelete, t }: BuildingCardProps) {\n  const isAdmin = userRole === 'admin';\n  const canEdit = ['admin', 'manager'].includes(userRole || '');\n\n  return (\n    <Card className='h-full'>\n      <CardHeader>\n        <div className='flex items-start justify-between'>\n          <div className='flex items-center space-x-2'>\n            <Building className='h-5 w-5 text-blue-600' />\n            <CardTitle className='text-lg line-clamp-2 break-words'>{building.name}</CardTitle>\n          </div>\n          {canEdit && (\n            <div className='flex gap-1'>\n              <Button size='sm' variant='ghost' onClick={() => onEdit(building)}>\n                <Edit className='h-3 w-3' />\n              </Button>\n              {isAdmin && (\n                <Button\n                  size='sm'\n                  variant='ghost'\n                  onClick={() => onDelete(building)}\n                  className='text-red-600 hover:text-red-700'\n                >\n                  <Trash2 className='h-3 w-3' />\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className='space-y-2'>\n          <div className='flex items-center text-sm text-gray-600'>\n            <MapPin className='h-4 w-4 mr-2' />\n            <span className='line-clamp-2 break-words flex-1'>{building.address}</span>\n          </div>\n          <div className='flex items-center text-sm text-gray-600'>\n            <span>\n              {building.city}, {building.province} {building.postalCode}\n            </span>\n          </div>\n          <div className='flex items-center justify-between pt-2'>\n            <Badge variant='outline'>{building.totalUnits} {t('unitsCount')}</Badge>\n            <Badge variant='secondary'>{building.buildingType}</Badge>\n          </div>\n          <div className='pt-2 flex gap-2'>\n            <Link href={`/manager/buildings/${building.id}/documents`}>\n              <Button size='sm' variant='outline' className='flex-1'>\n                Documents\n              </Button>\n            </Link>\n            <Link href={`/manager/residences?buildingId=${building.id}`}>\n              <Button size='sm' variant='outline' className='flex-1'>\n                Residences\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n/**\n *\n */\ninterface BuildingFormProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  form: any;\n  onSubmit: (data: BuildingFormData) => void;\n  organizations: any[];\n  isSubmitting: boolean;\n  title: string;\n  submitLabel: string;\n  t: (key: string) => string;\n}\n\n/**\n *\n * @param root0\n * @param root0.isOpen\n * @param root0.onOpenChange\n * @param root0.form\n * @param root0.onSubmit\n * @param root0.organizations\n * @param root0.isSubmitting\n * @param root0.title\n * @param root0.submitLabel\n */\nfunction BuildingForm({\n  isOpen,\n  onOpenChange,\n  form,\n  onSubmit,\n  organizations,\n  isSubmitting,\n  title,\n  submitLabel,\n  t,\n}: BuildingFormProps) {\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className='max-w-2xl'>\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>\n            {t('fillBuildingInfo')}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-4'>\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n              <FormField\n                control={form.control}\n                name='name'\n                render={({ field }) => (\n                  <FormItem className='md:col-span-2'>\n                    <FormLabel>{t('buildingName')}</FormLabel>\n                    <FormControl>\n                      <Input placeholder={t('enterBuildingName')} {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='address'\n                render={({ field }) => (\n                  <FormItem className='md:col-span-2'>\n                    <FormLabel>{t('buildingAddress')}</FormLabel>\n                    <FormControl>\n                      <Input placeholder={t('enterStreetAddress')} {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='city'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('buildingCity')}</FormLabel>\n                    <FormControl>\n                      <Input placeholder={t('enterCity')} {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='province'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('buildingProvince')}</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder={t('selectProvince')} />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value='QC'>Quebec</SelectItem>\n                        <SelectItem value='ON'>Ontario</SelectItem>\n                        <SelectItem value='BC'>British Columbia</SelectItem>\n                        <SelectItem value='AB'>Alberta</SelectItem>\n                        <SelectItem value='MB'>Manitoba</SelectItem>\n                        <SelectItem value='SK'>Saskatchewan</SelectItem>\n                        <SelectItem value='NS'>Nova Scotia</SelectItem>\n                        <SelectItem value='NB'>New Brunswick</SelectItem>\n                        <SelectItem value='PE'>Prince Edward Island</SelectItem>\n                        <SelectItem value='NL'>Newfoundland and Labrador</SelectItem>\n                        <SelectItem value='NT'>Northwest Territories</SelectItem>\n                        <SelectItem value='NU'>Nunavut</SelectItem>\n                        <SelectItem value='YT'>Yukon</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='postalCode'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('buildingPostalCode')}</FormLabel>\n                    <FormControl>\n                      <Input placeholder={t('enterPostalCode')} {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='buildingType'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('buildingType')}</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder={t('selectBuildingType')} />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value='condo'>{t('condoType')}</SelectItem>\n                        <SelectItem value='appartement'>{t('appartementType')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='totalUnits'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('totalUnits')}</FormLabel>\n                    <FormControl>\n                      <Input\n                        type='number'\n                        placeholder='Enter total units'\n                        {...field}\n                        onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='organizationId'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('organizationLabel')}</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder={t('selectOrganization')} />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {organizations.map((org) => (\n                          <SelectItem key={org.id} value={org.id}>\n                            {org.name}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <DialogFooter>\n              <Button type='button' variant='outline' onClick={() => onOpenChange(false)}>\n                {t('cancel')}\n              </Button>\n              <Button type='submit' disabled={isSubmitting}>\n                {isSubmitting ? t('saving') : submitLabel}\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n/**\n *\n */\nexport default function Buildings() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const { t } = useLanguage();\n\n  // Create schema with translations\n  const buildingFormSchema = z.object({\n    name: z.string().min(1, t('buildingNameRequired')).max(255, t('nameTooLong')),\n    address: z.string().min(1, t('addressRequired')).max(500, t('addressTooLong')),\n    city: z.string().min(1, t('cityRequired')).max(100, t('cityTooLong')),\n    province: z.string().min(1, t('provinceRequired')).max(100, t('provinceTooLong')),\n    postalCode: z.string().min(1, t('postalCodeRequired')).max(20, t('postalCodeTooLong')),\n    buildingType: z.enum(['condo', 'appartement']),\n    totalUnits: z\n      .number()\n      .int()\n      .min(1, t('mustHaveAtLeastOneUnit'))\n      .max(300, t('maximumUnitsAllowed')),\n    organizationId: z.string().min(1, t('organizationRequired')),\n  });\n\n  // State variables\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editingBuilding, setEditingBuilding] = useState<BuildingData | null>(null);\n  const [deletingBuilding, setDeletingBuilding] = useState<BuildingData | null>(null);\n\n  // Get current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // Fetch organizations for form\n  const { data: organizations = [] } = useQuery({\n    queryKey: ['/api/organizations'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/organizations');\n      return await response.json();\n    },\n  });\n\n  // Fetch buildings using the working manager endpoint\n  const {\n    data: buildingsData,\n    isLoading,\n    error: _error,\n  } = useQuery({\n    queryKey: ['/api/manager/buildings'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/manager/buildings');\n      return await response.json();\n    },\n  });\n\n  // Extract buildings array from the wrapped response\n  const buildings = (buildingsData as any)?.buildings || [];\n\n  // Filter buildings based on search\n  const filteredBuildings = useMemo(() => {\n    if (!Array.isArray(buildings)) {\n      return [];\n    }\n    return buildings.filter(\n      (building) =>\n        building.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        building.address.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [buildings, searchTerm]);\n\n  // Form for creating buildings\n  const form = useForm<BuildingFormData>({\n    resolver: zodResolver(buildingFormSchema),\n    defaultValues: {\n      name: '',\n      address: '',\n      city: '',\n      province: 'QC',\n      postalCode: '',\n      buildingType: 'condo',\n      totalUnits: 1,\n      organizationId: '',\n    },\n  });\n\n  // Form for editing buildings\n  const editForm = useForm<BuildingFormData>({\n    resolver: zodResolver(buildingFormSchema),\n  });\n\n  // Mutations\n  const createBuildingMutation = useMutation({\n    mutationFn: (data: BuildingFormData) => apiRequest('POST', '/api/admin/buildings', data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/manager/buildings'] });\n      setIsAddDialogOpen(false);\n      form.reset();\n      toast({\n        title: 'Success',\n        description: 'Building created successfully',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to create building',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const updateBuildingMutation = useMutation({\n    mutationFn: ({ id, data }: { id: string; data: BuildingFormData }) =>\n      apiRequest('PUT', `/api/admin/buildings/${id}`, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/manager/buildings'] });\n      setIsEditDialogOpen(false);\n      setEditingBuilding(null);\n      editForm.reset();\n      toast({\n        title: 'Success',\n        description: 'Building updated successfully',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to update building',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const deleteBuildingMutation = useMutation({\n    mutationFn: (buildingId: string) => apiRequest('DELETE', `/api/admin/buildings/${buildingId}`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/manager/buildings'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/buildings'] });\n      setDeletingBuilding(null);\n      toast({\n        title: 'Success',\n        description: 'Building deleted successfully',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to delete building',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Event handlers\n  const handleCreateBuilding = async (data: BuildingFormData) => {\n    createBuildingMutation.mutate(data);\n  };\n\n  const handleEditBuilding = (building: BuildingData) => {\n    setEditingBuilding(building);\n    editForm.reset({\n      name: building.name,\n      address: building.address,\n      city: building.city,\n      province: building.province,\n      postalCode: building.postalCode,\n      buildingType: building.buildingType as any,\n      totalUnits: building.totalUnits,\n      organizationId: building.organizationId,\n    });\n    setIsEditDialogOpen(true);\n  };\n\n  const handleUpdateBuilding = async (data: BuildingFormData) => {\n    if (editingBuilding) {\n      updateBuildingMutation.mutate({ id: editingBuilding.id, data });\n    }\n  };\n\n  const handleDeleteBuilding = (building: BuildingData) => {\n    setDeletingBuilding(building);\n  };\n\n  const confirmDeleteBuilding = () => {\n    if (deletingBuilding) {\n      deleteBuildingMutation.mutate(deletingBuilding.id);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title='Buildings' subtitle='Loading buildings...' />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='text-center py-8'>Loading buildings...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (_error) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title='Buildings' subtitle='Error loading buildings' />\n\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <Building className='w-16 h-16 mx-auto text-red-400 mb-4' />\n                <h3 className='text-lg font-semibold text-red-600 mb-2'>Error Loading Buildings</h3>\n                <p className='text-red-500 mb-4'>\n                  Failed to load buildings data. Please try again later.\n                </p>\n                <Badge variant='destructive'>Error</Badge>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header\n        title={t('buildings')}\n        subtitle={t('manageBuildings')}\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-6xl mx-auto space-y-6'>\n          {/* Search and Add Building Controls */}\n          <div className='flex flex-col sm:flex-row gap-4 items-center justify-between'>\n            <div className='relative w-full sm:w-96'>\n              <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4' />\n              <Input\n                placeholder={t('searchBuildingsAddress')}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className='pl-10'\n              />\n            </div>\n\n            {user?.role === 'admin' && (\n              <Button onClick={() => setIsAddDialogOpen(true)}>\n                <Plus className='w-4 h-4 mr-2' />\n                {t('addBuilding')}\n              </Button>\n            )}\n          </div>\n\n          {/* Buildings Grid */}\n          {filteredBuildings.length > 0 ? (\n            <div className='grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6'>\n              {filteredBuildings.map((building) => (\n                <BuildingCard\n                  key={building.id}\n                  building={building}\n                  userRole={user?.role}\n                  onEdit={handleEditBuilding}\n                  onDelete={handleDeleteBuilding}\n                  t={t}\n                />\n              ))}\n            </div>\n          ) : (\n            <NoDataCard\n              icon={Building}\n              titleKey=\"noBuildingsFound\"\n              descriptionKey={user?.role === 'admin' ? 'noBuildingsAdminMessage' : 'noBuildingsUserMessage'}\n              badgeKey=\"noData\"\n              testId=\"no-buildings-message\"\n            />\n          )}\n\n          {/* Add Building Dialog */}\n          <BuildingForm\n            isOpen={isAddDialogOpen}\n            onOpenChange={setIsAddDialogOpen}\n            form={form}\n            onSubmit={handleCreateBuilding}\n            organizations={organizations}\n            isSubmitting={createBuildingMutation.isPending}\n            title={t('addBuilding')}\n            submitLabel={t('createBuilding')}\n            t={t}\n          />\n\n          {/* Edit Building Dialog */}\n          <BuildingForm\n            isOpen={isEditDialogOpen}\n            onOpenChange={setIsEditDialogOpen}\n            form={editForm}\n            onSubmit={handleUpdateBuilding}\n            organizations={organizations}\n            isSubmitting={updateBuildingMutation.isPending}\n            title={t('editBuilding')}\n            submitLabel={t('save')}\n            t={t}\n          />\n\n          {/* Delete Confirmation Dialog */}\n          <Dialog open={!!deletingBuilding} onOpenChange={() => setDeletingBuilding(null)}>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>Delete Building</DialogTitle>\n                <DialogDescription>\n                  Are you sure you want to delete \"{deletingBuilding?.name}\"? This action cannot be\n                  undone.\n                </DialogDescription>\n              </DialogHeader>\n              <DialogFooter>\n                <Button variant='outline' onClick={() => setDeletingBuilding(null)}>\n                  Cancel\n                </Button>\n                <Button\n                  variant='destructive'\n                  onClick={confirmDeleteBuilding}\n                  disabled={deleteBuildingMutation.isPending}\n                >\n                  {deleteBuildingMutation.isPending ? 'Deleting...' : 'Delete'}\n                </Button>\n              </DialogFooter>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "335fa6a9ccd8b34006ca6920e2c4517b652fa34d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9rh1xfle1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9rh1xfle1();
cov_9rh1xfle1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9rh1xfle1().s[1]++;
exports.default = Buildings;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[2]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[3]++, require("react"));
const react_query_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[4]++, require("@tanstack/react-query"));
const card_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[5]++, require("@/components/ui/card"));
const button_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[6]++, require("@/components/ui/button"));
const badge_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[7]++, require("@/components/ui/badge"));
const no_data_card_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[8]++, require("@/components/ui/no-data-card"));
const input_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[9]++, require("@/components/ui/input"));
const select_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[10]++, require("@/components/ui/select"));
const dialog_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[11]++, require("@/components/ui/dialog"));
const form_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[12]++, require("@/components/ui/form"));
const use_toast_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[13]++, require("@/hooks/use-toast"));
const use_language_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[14]++, require("@/hooks/use-language"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[15]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[16]++, require("@hookform/resolvers/zod"));
const zod_2 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[17]++, require("zod"));
const queryClient_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[18]++, require("@/lib/queryClient"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[19]++, require("lucide-react"));
const header_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[20]++, require("@/components/layout/header"));
const wouter_1 =
/* istanbul ignore next */
(cov_9rh1xfle1().s[21]++, require("wouter"));
/**
 *
 * @param root0
 * @param root0.building
 * @param root0.userRole
 * @param root0.onEdit
 * @param root0.onDelete
 */
function BuildingCard({
  building,
  userRole,
  onEdit,
  onDelete,
  t
}) {
  /* istanbul ignore next */
  cov_9rh1xfle1().f[0]++;
  const isAdmin =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[22]++, userRole === 'admin');
  const canEdit =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[23]++, ['admin', 'manager'].includes(
  /* istanbul ignore next */
  (cov_9rh1xfle1().b[0][0]++, userRole) ||
  /* istanbul ignore next */
  (cov_9rh1xfle1().b[0][1]++, '')));
  /* istanbul ignore next */
  cov_9rh1xfle1().s[24]++;
  return (0, jsx_runtime_1.jsxs)(card_1.Card, {
    className: 'h-full',
    children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'flex items-start justify-between',
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center space-x-2',
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, {
            className: 'h-5 w-5 text-blue-600'
          }), (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
            className: 'text-lg line-clamp-2 break-words',
            children: building.name
          })]
        }),
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[1][0]++, canEdit) &&
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[1][1]++, (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex gap-1',
          children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
            size: 'sm',
            variant: 'ghost',
            onClick: () => {
              /* istanbul ignore next */
              cov_9rh1xfle1().f[1]++;
              cov_9rh1xfle1().s[25]++;
              return onEdit(building);
            },
            children: (0, jsx_runtime_1.jsx)(lucide_react_1.Edit, {
              className: 'h-3 w-3'
            })
          }),
          /* istanbul ignore next */
          (cov_9rh1xfle1().b[2][0]++, isAdmin) &&
          /* istanbul ignore next */
          (cov_9rh1xfle1().b[2][1]++, (0, jsx_runtime_1.jsx)(button_1.Button, {
            size: 'sm',
            variant: 'ghost',
            onClick: () => {
              /* istanbul ignore next */
              cov_9rh1xfle1().f[2]++;
              cov_9rh1xfle1().s[26]++;
              return onDelete(building);
            },
            className: 'text-red-600 hover:text-red-700',
            children: (0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, {
              className: 'h-3 w-3'
            })
          }))]
        }))]
      })
    }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'space-y-2',
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center text-sm text-gray-600',
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.MapPin, {
            className: 'h-4 w-4 mr-2'
          }), (0, jsx_runtime_1.jsx)("span", {
            className: 'line-clamp-2 break-words flex-1',
            children: building.address
          })]
        }), (0, jsx_runtime_1.jsx)("div", {
          className: 'flex items-center text-sm text-gray-600',
          children: (0, jsx_runtime_1.jsxs)("span", {
            children: [building.city, ", ", building.province, " ", building.postalCode]
          })
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center justify-between pt-2',
          children: [(0, jsx_runtime_1.jsxs)(badge_1.Badge, {
            variant: 'outline',
            children: [building.totalUnits, " ", t('unitsCount')]
          }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
            variant: 'secondary',
            children: building.buildingType
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: 'pt-2 flex gap-2',
          children: [(0, jsx_runtime_1.jsx)(wouter_1.Link, {
            href: `/manager/buildings/${building.id}/documents`,
            children: (0, jsx_runtime_1.jsx)(button_1.Button, {
              size: 'sm',
              variant: 'outline',
              className: 'flex-1',
              children: "Documents"
            })
          }), (0, jsx_runtime_1.jsx)(wouter_1.Link, {
            href: `/manager/residences?buildingId=${building.id}`,
            children: (0, jsx_runtime_1.jsx)(button_1.Button, {
              size: 'sm',
              variant: 'outline',
              className: 'flex-1',
              children: "Residences"
            })
          })]
        })]
      })
    })]
  });
}
/**
 *
 * @param root0
 * @param root0.isOpen
 * @param root0.onOpenChange
 * @param root0.form
 * @param root0.onSubmit
 * @param root0.organizations
 * @param root0.isSubmitting
 * @param root0.title
 * @param root0.submitLabel
 */
function BuildingForm({
  isOpen,
  onOpenChange,
  form,
  onSubmit,
  organizations,
  isSubmitting,
  title,
  submitLabel,
  t
}) {
  /* istanbul ignore next */
  cov_9rh1xfle1().f[3]++;
  cov_9rh1xfle1().s[27]++;
  return (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
    open: isOpen,
    onOpenChange: onOpenChange,
    children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
      className: 'max-w-2xl',
      children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
        children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
          children: title
        }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, {
          children: t('fillBuildingInfo')
        })]
      }), (0, jsx_runtime_1.jsx)(form_1.Form, {
        ...form,
        children: (0, jsx_runtime_1.jsxs)("form", {
          onSubmit: form.handleSubmit(onSubmit),
          className: 'space-y-4',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'grid grid-cols-1 md:grid-cols-2 gap-4',
            children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'name',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[4]++;
                cov_9rh1xfle1().s[28]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  className: 'md:col-span-2',
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('buildingName')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: t('enterBuildingName'),
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'address',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[5]++;
                cov_9rh1xfle1().s[29]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  className: 'md:col-span-2',
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('buildingAddress')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: t('enterStreetAddress'),
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'city',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[6]++;
                cov_9rh1xfle1().s[30]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('buildingCity')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: t('enterCity'),
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'province',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[7]++;
                cov_9rh1xfle1().s[31]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('buildingProvince')
                  }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    onValueChange: field.onChange,
                    value: field.value,
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                        children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                          placeholder: t('selectProvince')
                        })
                      })
                    }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                      children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'QC',
                        children: "Quebec"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'ON',
                        children: "Ontario"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'BC',
                        children: "British Columbia"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'AB',
                        children: "Alberta"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'MB',
                        children: "Manitoba"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'SK',
                        children: "Saskatchewan"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NS',
                        children: "Nova Scotia"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NB',
                        children: "New Brunswick"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'PE',
                        children: "Prince Edward Island"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NL',
                        children: "Newfoundland and Labrador"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NT',
                        children: "Northwest Territories"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'NU',
                        children: "Nunavut"
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'YT',
                        children: "Yukon"
                      })]
                    })]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'postalCode',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[8]++;
                cov_9rh1xfle1().s[32]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('buildingPostalCode')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: t('enterPostalCode'),
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'buildingType',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[9]++;
                cov_9rh1xfle1().s[33]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('buildingType')
                  }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    onValueChange: field.onChange,
                    value: field.value,
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                        children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                          placeholder: t('selectBuildingType')
                        })
                      })
                    }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                      children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'condo',
                        children: t('condoType')
                      }), (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: 'appartement',
                        children: t('appartementType')
                      })]
                    })]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'totalUnits',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[10]++;
                cov_9rh1xfle1().s[34]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('totalUnits')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      type: 'number',
                      placeholder: 'Enter total units',
                      ...field,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_9rh1xfle1().f[11]++;
                        cov_9rh1xfle1().s[35]++;
                        return field.onChange(
                        /* istanbul ignore next */
                        (cov_9rh1xfle1().b[3][0]++, parseInt(e.target.value)) ||
                        /* istanbul ignore next */
                        (cov_9rh1xfle1().b[3][1]++, 0));
                      }
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'organizationId',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[12]++;
                cov_9rh1xfle1().s[36]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('organizationLabel')
                  }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    onValueChange: field.onChange,
                    value: field.value,
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                        children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                          placeholder: t('selectOrganization')
                        })
                      })
                    }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                      children: organizations.map(org => {
                        /* istanbul ignore next */
                        cov_9rh1xfle1().f[13]++;
                        cov_9rh1xfle1().s[37]++;
                        return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                          value: org.id,
                          children: org.name
                        }, org.id);
                      })
                    })]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })]
          }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, {
            children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
              type: 'button',
              variant: 'outline',
              onClick: () => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[14]++;
                cov_9rh1xfle1().s[38]++;
                return onOpenChange(false);
              },
              children: t('cancel')
            }), (0, jsx_runtime_1.jsx)(button_1.Button, {
              type: 'submit',
              disabled: isSubmitting,
              children: isSubmitting ?
              /* istanbul ignore next */
              (cov_9rh1xfle1().b[4][0]++, t('saving')) :
              /* istanbul ignore next */
              (cov_9rh1xfle1().b[4][1]++, submitLabel)
            })]
          })]
        })
      })]
    })
  });
}
/**
 *
 */
function Buildings() {
  /* istanbul ignore next */
  cov_9rh1xfle1().f[15]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[39]++, (0, use_toast_1.useToast)());
  const queryClient =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[40]++, (0, react_query_1.useQueryClient)());
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[41]++, (0, use_language_1.useLanguage)());
  // Create schema with translations
  const buildingFormSchema =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[42]++, zod_2.z.object({
    name: zod_2.z.string().min(1, t('buildingNameRequired')).max(255, t('nameTooLong')),
    address: zod_2.z.string().min(1, t('addressRequired')).max(500, t('addressTooLong')),
    city: zod_2.z.string().min(1, t('cityRequired')).max(100, t('cityTooLong')),
    province: zod_2.z.string().min(1, t('provinceRequired')).max(100, t('provinceTooLong')),
    postalCode: zod_2.z.string().min(1, t('postalCodeRequired')).max(20, t('postalCodeTooLong')),
    buildingType: zod_2.z.enum(['condo', 'appartement']),
    totalUnits: zod_2.z.number().int().min(1, t('mustHaveAtLeastOneUnit')).max(300, t('maximumUnitsAllowed')),
    organizationId: zod_2.z.string().min(1, t('organizationRequired'))
  }));
  // State variables
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[43]++, (0, react_1.useState)(''));
  const [isAddDialogOpen, setIsAddDialogOpen] =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[44]++, (0, react_1.useState)(false));
  const [isEditDialogOpen, setIsEditDialogOpen] =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[45]++, (0, react_1.useState)(false));
  const [editingBuilding, setEditingBuilding] =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[46]++, (0, react_1.useState)(null));
  const [deletingBuilding, setDeletingBuilding] =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[47]++, (0, react_1.useState)(null));
  // Get current user
  const {
    data: user
  } =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[48]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/auth/user'],
    queryFn: () => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[16]++;
      cov_9rh1xfle1().s[49]++;
      return (0, queryClient_1.apiRequest)('GET', '/api/auth/user');
    }
  }));
  // Fetch organizations for form
  const {
    data: organizations =
    /* istanbul ignore next */
    (cov_9rh1xfle1().b[5][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[50]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/organizations'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[17]++;
      const response =
      /* istanbul ignore next */
      (cov_9rh1xfle1().s[51]++, await (0, queryClient_1.apiRequest)('GET', '/api/organizations'));
      /* istanbul ignore next */
      cov_9rh1xfle1().s[52]++;
      return await response.json();
    }
  }));
  // Fetch buildings using the working manager endpoint
  const {
    data: buildingsData,
    isLoading,
    error: _error
  } =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[53]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/manager/buildings'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[18]++;
      const response =
      /* istanbul ignore next */
      (cov_9rh1xfle1().s[54]++, await (0, queryClient_1.apiRequest)('GET', '/api/manager/buildings'));
      /* istanbul ignore next */
      cov_9rh1xfle1().s[55]++;
      return await response.json();
    }
  }));
  // Extract buildings array from the wrapped response
  const buildings =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[56]++,
  /* istanbul ignore next */
  (cov_9rh1xfle1().b[6][0]++, buildingsData?.buildings) ||
  /* istanbul ignore next */
  (cov_9rh1xfle1().b[6][1]++, []));
  // Filter buildings based on search
  const filteredBuildings =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[57]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_9rh1xfle1().f[19]++;
    cov_9rh1xfle1().s[58]++;
    if (!Array.isArray(buildings)) {
      /* istanbul ignore next */
      cov_9rh1xfle1().b[7][0]++;
      cov_9rh1xfle1().s[59]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_9rh1xfle1().b[7][1]++;
    }
    cov_9rh1xfle1().s[60]++;
    return buildings.filter(building => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[20]++;
      cov_9rh1xfle1().s[61]++;
      return /* istanbul ignore next */(cov_9rh1xfle1().b[8][0]++, building.name.toLowerCase().includes(searchTerm.toLowerCase())) ||
      /* istanbul ignore next */
      (cov_9rh1xfle1().b[8][1]++, building.address.toLowerCase().includes(searchTerm.toLowerCase()));
    });
  }, [buildings, searchTerm]));
  // Form for creating buildings
  const form =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[62]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(buildingFormSchema),
    defaultValues: {
      name: '',
      address: '',
      city: '',
      province: 'QC',
      postalCode: '',
      buildingType: 'condo',
      totalUnits: 1,
      organizationId: ''
    }
  }));
  // Form for editing buildings
  const editForm =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[63]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(buildingFormSchema)
  }));
  // Mutations
  const createBuildingMutation =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[64]++, (0, react_query_1.useMutation)({
    mutationFn: data => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[21]++;
      cov_9rh1xfle1().s[65]++;
      return (0, queryClient_1.apiRequest)('POST', '/api/admin/buildings', data);
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[22]++;
      cov_9rh1xfle1().s[66]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/manager/buildings']
      });
      /* istanbul ignore next */
      cov_9rh1xfle1().s[67]++;
      setIsAddDialogOpen(false);
      /* istanbul ignore next */
      cov_9rh1xfle1().s[68]++;
      form.reset();
      /* istanbul ignore next */
      cov_9rh1xfle1().s[69]++;
      toast({
        title: 'Success',
        description: 'Building created successfully'
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[23]++;
      cov_9rh1xfle1().s[70]++;
      toast({
        title: 'Error',
        description:
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[9][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[9][1]++, 'Failed to create building'),
        variant: 'destructive'
      });
    }
  }));
  const updateBuildingMutation =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[71]++, (0, react_query_1.useMutation)({
    mutationFn: ({
      id,
      data
    }) => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[24]++;
      cov_9rh1xfle1().s[72]++;
      return (0, queryClient_1.apiRequest)('PUT', `/api/admin/buildings/${id}`, data);
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[25]++;
      cov_9rh1xfle1().s[73]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/manager/buildings']
      });
      /* istanbul ignore next */
      cov_9rh1xfle1().s[74]++;
      setIsEditDialogOpen(false);
      /* istanbul ignore next */
      cov_9rh1xfle1().s[75]++;
      setEditingBuilding(null);
      /* istanbul ignore next */
      cov_9rh1xfle1().s[76]++;
      editForm.reset();
      /* istanbul ignore next */
      cov_9rh1xfle1().s[77]++;
      toast({
        title: 'Success',
        description: 'Building updated successfully'
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[26]++;
      cov_9rh1xfle1().s[78]++;
      toast({
        title: 'Error',
        description:
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[10][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[10][1]++, 'Failed to update building'),
        variant: 'destructive'
      });
    }
  }));
  const deleteBuildingMutation =
  /* istanbul ignore next */
  (cov_9rh1xfle1().s[79]++, (0, react_query_1.useMutation)({
    mutationFn: buildingId => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[27]++;
      cov_9rh1xfle1().s[80]++;
      return (0, queryClient_1.apiRequest)('DELETE', `/api/admin/buildings/${buildingId}`);
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[28]++;
      cov_9rh1xfle1().s[81]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/manager/buildings']
      });
      /* istanbul ignore next */
      cov_9rh1xfle1().s[82]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/buildings']
      });
      /* istanbul ignore next */
      cov_9rh1xfle1().s[83]++;
      setDeletingBuilding(null);
      /* istanbul ignore next */
      cov_9rh1xfle1().s[84]++;
      toast({
        title: 'Success',
        description: 'Building deleted successfully'
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_9rh1xfle1().f[29]++;
      cov_9rh1xfle1().s[85]++;
      toast({
        title: 'Error',
        description:
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[11][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[11][1]++, 'Failed to delete building'),
        variant: 'destructive'
      });
    }
  }));
  // Event handlers
  /* istanbul ignore next */
  cov_9rh1xfle1().s[86]++;
  const handleCreateBuilding = async data => {
    /* istanbul ignore next */
    cov_9rh1xfle1().f[30]++;
    cov_9rh1xfle1().s[87]++;
    createBuildingMutation.mutate(data);
  };
  /* istanbul ignore next */
  cov_9rh1xfle1().s[88]++;
  const handleEditBuilding = building => {
    /* istanbul ignore next */
    cov_9rh1xfle1().f[31]++;
    cov_9rh1xfle1().s[89]++;
    setEditingBuilding(building);
    /* istanbul ignore next */
    cov_9rh1xfle1().s[90]++;
    editForm.reset({
      name: building.name,
      address: building.address,
      city: building.city,
      province: building.province,
      postalCode: building.postalCode,
      buildingType: building.buildingType,
      totalUnits: building.totalUnits,
      organizationId: building.organizationId
    });
    /* istanbul ignore next */
    cov_9rh1xfle1().s[91]++;
    setIsEditDialogOpen(true);
  };
  /* istanbul ignore next */
  cov_9rh1xfle1().s[92]++;
  const handleUpdateBuilding = async data => {
    /* istanbul ignore next */
    cov_9rh1xfle1().f[32]++;
    cov_9rh1xfle1().s[93]++;
    if (editingBuilding) {
      /* istanbul ignore next */
      cov_9rh1xfle1().b[12][0]++;
      cov_9rh1xfle1().s[94]++;
      updateBuildingMutation.mutate({
        id: editingBuilding.id,
        data
      });
    } else
    /* istanbul ignore next */
    {
      cov_9rh1xfle1().b[12][1]++;
    }
  };
  /* istanbul ignore next */
  cov_9rh1xfle1().s[95]++;
  const handleDeleteBuilding = building => {
    /* istanbul ignore next */
    cov_9rh1xfle1().f[33]++;
    cov_9rh1xfle1().s[96]++;
    setDeletingBuilding(building);
  };
  /* istanbul ignore next */
  cov_9rh1xfle1().s[97]++;
  const confirmDeleteBuilding = () => {
    /* istanbul ignore next */
    cov_9rh1xfle1().f[34]++;
    cov_9rh1xfle1().s[98]++;
    if (deletingBuilding) {
      /* istanbul ignore next */
      cov_9rh1xfle1().b[13][0]++;
      cov_9rh1xfle1().s[99]++;
      deleteBuildingMutation.mutate(deletingBuilding.id);
    } else
    /* istanbul ignore next */
    {
      cov_9rh1xfle1().b[13][1]++;
    }
  };
  /* istanbul ignore next */
  cov_9rh1xfle1().s[100]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_9rh1xfle1().b[14][0]++;
    cov_9rh1xfle1().s[101]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: 'Buildings',
        subtitle: 'Loading buildings...'
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 overflow-auto p-6',
        children: (0, jsx_runtime_1.jsx)("div", {
          className: 'text-center py-8',
          children: "Loading buildings..."
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_9rh1xfle1().b[14][1]++;
  }
  cov_9rh1xfle1().s[102]++;
  if (_error) {
    /* istanbul ignore next */
    cov_9rh1xfle1().b[15][0]++;
    cov_9rh1xfle1().s[103]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: 'Buildings',
        subtitle: 'Error loading buildings'
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 overflow-auto p-6',
        children: (0, jsx_runtime_1.jsx)("div", {
          className: 'max-w-4xl mx-auto',
          children: (0, jsx_runtime_1.jsx)(card_1.Card, {
            children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
              className: 'p-8 text-center',
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, {
                className: 'w-16 h-16 mx-auto text-red-400 mb-4'
              }), (0, jsx_runtime_1.jsx)("h3", {
                className: 'text-lg font-semibold text-red-600 mb-2',
                children: "Error Loading Buildings"
              }), (0, jsx_runtime_1.jsx)("p", {
                className: 'text-red-500 mb-4',
                children: "Failed to load buildings data. Please try again later."
              }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
                variant: 'destructive',
                children: "Error"
              })]
            })
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_9rh1xfle1().b[15][1]++;
  }
  cov_9rh1xfle1().s[104]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: 'flex-1 flex flex-col overflow-hidden',
    children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
      title: t('buildings'),
      subtitle: t('manageBuildings')
    }), (0, jsx_runtime_1.jsx)("div", {
      className: 'flex-1 overflow-auto p-6',
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'max-w-6xl mx-auto space-y-6',
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: 'flex flex-col sm:flex-row gap-4 items-center justify-between',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'relative w-full sm:w-96',
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Search, {
              className: 'absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4'
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              placeholder: t('searchBuildingsAddress'),
              value: searchTerm,
              onChange: e => {
                /* istanbul ignore next */
                cov_9rh1xfle1().f[35]++;
                cov_9rh1xfle1().s[105]++;
                return setSearchTerm(e.target.value);
              },
              className: 'pl-10'
            })]
          }),
          /* istanbul ignore next */
          (cov_9rh1xfle1().b[16][0]++, user?.role === 'admin') &&
          /* istanbul ignore next */
          (cov_9rh1xfle1().b[16][1]++, (0, jsx_runtime_1.jsxs)(button_1.Button, {
            onClick: () => {
              /* istanbul ignore next */
              cov_9rh1xfle1().f[36]++;
              cov_9rh1xfle1().s[106]++;
              return setIsAddDialogOpen(true);
            },
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
              className: 'w-4 h-4 mr-2'
            }), t('addBuilding')]
          }))]
        }), filteredBuildings.length > 0 ?
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[17][0]++, (0, jsx_runtime_1.jsx)("div", {
          className: 'grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6',
          children: filteredBuildings.map(building => {
            /* istanbul ignore next */
            cov_9rh1xfle1().f[37]++;
            cov_9rh1xfle1().s[107]++;
            return (0, jsx_runtime_1.jsx)(BuildingCard, {
              building: building,
              userRole: user?.role,
              onEdit: handleEditBuilding,
              onDelete: handleDeleteBuilding,
              t: t
            }, building.id);
          })
        })) :
        /* istanbul ignore next */
        (cov_9rh1xfle1().b[17][1]++, (0, jsx_runtime_1.jsx)(no_data_card_1.NoDataCard, {
          icon: lucide_react_1.Building,
          titleKey: "noBuildingsFound",
          descriptionKey: user?.role === 'admin' ?
          /* istanbul ignore next */
          (cov_9rh1xfle1().b[18][0]++, 'noBuildingsAdminMessage') :
          /* istanbul ignore next */
          (cov_9rh1xfle1().b[18][1]++, 'noBuildingsUserMessage'),
          badgeKey: "noData",
          testId: "no-buildings-message"
        })), (0, jsx_runtime_1.jsx)(BuildingForm, {
          isOpen: isAddDialogOpen,
          onOpenChange: setIsAddDialogOpen,
          form: form,
          onSubmit: handleCreateBuilding,
          organizations: organizations,
          isSubmitting: createBuildingMutation.isPending,
          title: t('addBuilding'),
          submitLabel: t('createBuilding'),
          t: t
        }), (0, jsx_runtime_1.jsx)(BuildingForm, {
          isOpen: isEditDialogOpen,
          onOpenChange: setIsEditDialogOpen,
          form: editForm,
          onSubmit: handleUpdateBuilding,
          organizations: organizations,
          isSubmitting: updateBuildingMutation.isPending,
          title: t('editBuilding'),
          submitLabel: t('save'),
          t: t
        }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
          open: !!deletingBuilding,
          onOpenChange: () => {
            /* istanbul ignore next */
            cov_9rh1xfle1().f[38]++;
            cov_9rh1xfle1().s[108]++;
            return setDeletingBuilding(null);
          },
          children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
            children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
              children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
                children: "Delete Building"
              }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogDescription, {
                children: ["Are you sure you want to delete \"", deletingBuilding?.name, "\"? This action cannot be undone."]
              })]
            }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, {
              children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
                variant: 'outline',
                onClick: () => {
                  /* istanbul ignore next */
                  cov_9rh1xfle1().f[39]++;
                  cov_9rh1xfle1().s[109]++;
                  return setDeletingBuilding(null);
                },
                children: "Cancel"
              }), (0, jsx_runtime_1.jsx)(button_1.Button, {
                variant: 'destructive',
                onClick: confirmDeleteBuilding,
                disabled: deleteBuildingMutation.isPending,
                children: deleteBuildingMutation.isPending ?
                /* istanbul ignore next */
                (cov_9rh1xfle1().b[19][0]++, 'Deleting...') :
                /* istanbul ignore next */
                (cov_9rh1xfle1().b[19][1]++, 'Delete')
              })]
            })]
          })
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,