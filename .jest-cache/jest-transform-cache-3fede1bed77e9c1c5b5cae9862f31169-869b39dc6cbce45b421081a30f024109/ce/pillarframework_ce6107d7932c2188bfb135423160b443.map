{"version":3,"names":["cov_gnn6sa8dr","actualCoverage","s","exports","PillarFramework","card_1","require","badge_1","progress_1","lucide_react_1","use_language_1","react_query_1","f","t","useLanguage","data","suggestions","isLoading","suggestionsLoading","useQuery","queryKey","refetchInterval","qualityMetrics","calculatePillarHealth","pillarName","b","health","completedToday","pillarSuggestions","Array","isArray","filter","category","toLowerCase","includes","completedSuggestions","status","length","Math","round","completedDate","Date","completedAt","updatedAt","today","toDateString","pillars","id","title","description","statusText","icon","CheckCircle2","bgColor","borderColor","iconColor","statusColor","TestTube","Shield","TrendingUp","FileText","overallHealth","reduce","acc","pillar","totalSuggestions","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","className","Columns","size","CardContent","map","i","Badge","variant","Progress","value","AlertCircle","Icon"],"sources":["/home/runner/workspace/client/src/components/dashboard/pillar-framework.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  Columns,\n  TrendingUp,\n  FileText,\n  Shield,\n  TestTube,\n  CheckCircle2,\n  Clock,\n  AlertCircle,\n} from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useQuery } from '@tanstack/react-query';\nimport { Button } from '@/components/ui/button';\n\n/**\n * Enhanced Pillar framework component that displays all five core development pillars\n * of the Koveo Gestion methodology with real-time status, metrics, and improvement suggestions.\n * @returns JSX element displaying the comprehensive pillar framework interface.\n */\nexport function PillarFramework() {\n  const { t } = useLanguage();\n\n  // Fetch real-time pillar data and improvement suggestions\n  const { data: suggestions, isLoading: suggestionsLoading } = useQuery({\n    queryKey: ['/api/pillars/suggestions'],\n    refetchInterval: 30000, // Refresh every 30 seconds for continuous monitoring\n  });\n\n  const { data: qualityMetrics } = useQuery({\n    queryKey: ['/api/quality-metrics'],\n    refetchInterval: 60000, // Refresh every minute\n  });\n\n  // Calculate completion percentages and health scores\n  const calculatePillarHealth = (pillarName: string) => {\n    if (!suggestions) return { health: 85, suggestions: 0, completedToday: 0 };\n\n    const pillarSuggestions = Array.isArray(suggestions)\n      ? suggestions.filter((s: any) => s.category?.toLowerCase().includes(pillarName.toLowerCase()))\n      : [];\n    const completedSuggestions = pillarSuggestions.filter((s: any) => s.status === 'Done');\n\n    return {\n      health:\n        pillarSuggestions.length > 0\n          ? Math.round((completedSuggestions.length / pillarSuggestions.length) * 100)\n          : 85,\n      suggestions: pillarSuggestions.length,\n      completedToday: completedSuggestions.filter((s: any) => {\n        const completedDate = new Date(s.completedAt || s.updatedAt);\n        const today = new Date();\n        return completedDate.toDateString() === today.toDateString();\n      }).length,\n    };\n  };\n\n  // Enhanced pillar configuration with all 5 pillars and real-time data\n  const pillars = [\n    {\n      id: 1,\n      title: t('validationQAPillar') || 'Validation & QA',\n      description: t('coreQualityAssurance') || 'Core quality assurance and validation framework',\n      status: 'in-progress',\n      statusText: t('inProgress') || 'In Progress',\n      icon: CheckCircle2,\n      bgColor: 'bg-blue-50 dark:bg-blue-950',\n      borderColor: 'border-blue-200 dark:border-blue-800',\n      iconColor: 'text-blue-600 dark:text-blue-400',\n      statusColor: 'text-orange-600 dark:text-orange-400',\n      ...calculatePillarHealth('Quality'),\n    },\n    {\n      id: 2,\n      title: t('testingPillar') || 'Testing Framework',\n      description: t('automatedTestingFramework') || 'Automated testing and validation system',\n      status: 'in-progress',\n      statusText: t('inProgress') || 'In Progress',\n      icon: TestTube,\n      bgColor: 'bg-green-50 dark:bg-green-950',\n      borderColor: 'border-green-200 dark:border-green-800',\n      iconColor: 'text-green-600 dark:text-green-400',\n      statusColor: 'text-orange-600 dark:text-orange-400',\n      ...calculatePillarHealth('Testing'),\n    },\n    {\n      id: 3,\n      title: t('securityPillar') || 'Security & Compliance',\n      description:\n        t('law25ComplianceFramework') || 'Quebec Law 25 compliance and security framework',\n      status: 'in-progress',\n      statusText: t('inProgress') || 'In Progress',\n      icon: Shield,\n      bgColor: 'bg-purple-50 dark:bg-purple-950',\n      borderColor: 'border-purple-200 dark:border-purple-800',\n      iconColor: 'text-purple-600 dark:text-purple-400',\n      statusColor: 'text-orange-600 dark:text-orange-400',\n      ...calculatePillarHealth('Security'),\n    },\n    {\n      id: 4,\n      title: t('continuousImprovementPillar') || 'Continuous Improvement',\n      description:\n        t('continuousImprovementDescription') ||\n        'AI-driven metrics, analytics, and automated improvement suggestions',\n      status: 'active',\n      statusText: t('activePillar') || 'Active',\n      icon: TrendingUp,\n      bgColor: 'bg-indigo-50 dark:bg-indigo-950',\n      borderColor: 'border-indigo-200 dark:border-indigo-800',\n      iconColor: 'text-indigo-600 dark:text-indigo-400',\n      statusColor: 'text-green-600 dark:text-green-400',\n      ...calculatePillarHealth('Continuous Improvement'),\n    },\n    {\n      id: 5,\n      title: t('documentationPillar') || 'Documentation & Knowledge',\n      description:\n        t('documentationDescription') ||\n        'Comprehensive documentation and knowledge management system',\n      status: 'in-progress',\n      statusText: t('inProgress') || 'In Progress',\n      icon: FileText,\n      bgColor: 'bg-amber-50 dark:bg-amber-950',\n      borderColor: 'border-amber-200 dark:border-amber-800',\n      iconColor: 'text-amber-600 dark:text-amber-400',\n      statusColor: 'text-orange-600 dark:text-orange-400',\n      ...calculatePillarHealth('Documentation'),\n    },\n  ];\n\n  const overallHealth = Math.round(\n    pillars.reduce((acc, pillar) => acc + pillar.health, 0) / pillars.length\n  );\n  const totalSuggestions = pillars.reduce((acc, pillar) => acc + pillar.suggestions, 0);\n  const completedToday = pillars.reduce((acc, pillar) => acc + pillar.completedToday, 0);\n\n  if (suggestionsLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className='flex items-center gap-2'>\n            <Columns className='text-koveo-navy' size={20} />\n            {t('pillarMethodology') || 'Pillar Methodology'}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className='animate-pulse space-y-4'>\n            {[1, 2, 3, 4, 5].map((i) => (\n              <div key={i} className='h-16 bg-gray-200 dark:bg-gray-700 rounded-lg'></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className='space-y-6'>\n      {/* Overview Dashboard */}\n      <Card>\n        <CardHeader>\n          <CardTitle className='flex items-center justify-between'>\n            <div className='flex items-center gap-2'>\n              <Columns className='text-koveo-navy' size={20} />\n              {t('pillarMethodology') || 'Pillar Methodology Framework'}\n            </div>\n            <Badge\n              variant={\n                overallHealth >= 80 ? 'default' : overallHealth >= 60 ? 'secondary' : 'destructive'\n              }\n            >\n              {overallHealth}% Health\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className='grid grid-cols-1 md:grid-cols-3 gap-4 mb-6'>\n            <div className='bg-blue-50 dark:bg-blue-950 p-4 rounded-lg'>\n              <div className='flex items-center gap-2 mb-2'>\n                <TrendingUp className='text-blue-600 dark:text-blue-400' size={16} />\n                <span className='text-sm font-medium text-blue-900 dark:text-blue-100'>\n                  System Health\n                </span>\n              </div>\n              <div className='text-2xl font-bold text-blue-600 dark:text-blue-400'>\n                {overallHealth}%\n              </div>\n              <Progress value={overallHealth} className='mt-2' />\n            </div>\n            <div className='bg-green-50 dark:bg-green-950 p-4 rounded-lg'>\n              <div className='flex items-center gap-2 mb-2'>\n                <CheckCircle2 className='text-green-600 dark:text-green-400' size={16} />\n                <span className='text-sm font-medium text-green-900 dark:text-green-100'>\n                  Completed Today\n                </span>\n              </div>\n              <div className='text-2xl font-bold text-green-600 dark:text-green-400'>\n                {completedToday}\n              </div>\n            </div>\n            <div className='bg-purple-50 dark:bg-purple-950 p-4 rounded-lg'>\n              <div className='flex items-center gap-2 mb-2'>\n                <AlertCircle className='text-purple-600 dark:text-purple-400' size={16} />\n                <span className='text-sm font-medium text-purple-900 dark:text-purple-100'>\n                  Active Suggestions\n                </span>\n              </div>\n              <div className='text-2xl font-bold text-purple-600 dark:text-purple-400'>\n                {totalSuggestions}\n              </div>\n            </div>\n          </div>\n\n          {/* Pillar Cards */}\n          <div className='space-y-4'>\n            {pillars.map((pillar) => {\n              const Icon = pillar.icon;\n              return (\n                <div\n                  key={pillar.id}\n                  className={`${pillar.bgColor} border ${pillar.borderColor} rounded-lg p-4 transition-all hover:shadow-md`}\n                  data-testid={`pillar-card-${pillar.id}`}\n                >\n                  <div className='flex items-center justify-between mb-3'>\n                    <div className='flex items-center gap-3'>\n                      <div className='flex items-center gap-2'>\n                        <Icon className={pillar.iconColor} size={20} />\n                        <span className='font-bold text-gray-500 dark:text-gray-400'>\n                          #{pillar.id}\n                        </span>\n                      </div>\n                      <div>\n                        <h3 className='font-semibold text-gray-900 dark:text-gray-100'>\n                          {pillar.title}\n                        </h3>\n                        <p className='text-sm text-gray-600 dark:text-gray-400'>\n                          {pillar.description}\n                        </p>\n                      </div>\n                    </div>\n                    <div className='text-right'>\n                      <Badge className={pillar.statusColor}>{pillar.statusText}</Badge>\n                      <div className='text-xs text-gray-500 dark:text-gray-400 mt-1'>\n                        {pillar.health}% healthy\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='flex items-center justify-between'>\n                    <div className='flex-1 mr-4'>\n                      <Progress value={pillar.health} className='h-2' />\n                    </div>\n                    <div className='flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400'>\n                      <span className='flex items-center gap-1'>\n                        <AlertCircle size={14} />\n                        {pillar.suggestions} suggestions\n                      </span>\n                      {pillar.completedToday > 0 && (\n                        <span className='flex items-center gap-1 text-green-600 dark:text-green-400'>\n                          <CheckCircle2 size={14} />\n                          {pillar.completedToday} completed today\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}