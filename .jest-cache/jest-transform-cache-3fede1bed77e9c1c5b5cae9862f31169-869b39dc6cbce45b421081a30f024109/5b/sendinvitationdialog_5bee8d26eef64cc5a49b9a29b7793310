00b8ee346c43b019f70b57c52a9ae923
"use strict";

/* istanbul ignore next */
function cov_100nd8042b() {
  var path = "/home/runner/workspace/client/src/components/admin/send-invitation-dialog.tsx";
  var hash = "591fabcd9cccde9135d76c2626c33bed22ba1ab4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/components/admin/send-invitation-dialog.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 52
        }
      },
      "37": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "38": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "39": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 39,
          column: 54
        }
      },
      "40": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "41": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "42": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "43": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 52
        }
      },
      "44": {
        start: {
          line: 44,
          column: 14
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "45": {
        start: {
          line: 45,
          column: 14
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "46": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "47": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 47,
          column: 50
        }
      },
      "48": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "49": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 49,
          column: 54
        }
      },
      "50": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "51": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "52": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "53": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "54": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "55": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "56": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "57": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "58": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "59": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "60": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 16
        }
      },
      "61": {
        start: {
          line: 111,
          column: 18
        },
        end: {
          line: 111,
          column: 51
        }
      },
      "62": {
        start: {
          line: 112,
          column: 43
        },
        end: {
          line: 112,
          column: 68
        }
      },
      "63": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 49
        }
      },
      "64": {
        start: {
          line: 114,
          column: 50
        },
        end: {
          line: 114,
          column: 75
        }
      },
      "65": {
        start: {
          line: 116,
          column: 17
        },
        end: {
          line: 129,
          column: 6
        }
      },
      "66": {
        start: {
          line: 131,
          column: 36
        },
        end: {
          line: 138,
          column: 6
        }
      },
      "67": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 134,
          column: 93
        }
      },
      "68": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 35
        }
      },
      "69": {
        start: {
          line: 140,
          column: 84
        },
        end: {
          line: 149,
          column: 6
        }
      },
      "70": {
        start: {
          line: 143,
          column: 29
        },
        end: {
          line: 143,
          column: 97
        }
      },
      "71": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 46
        }
      },
      "72": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 42
        }
      },
      "73": {
        start: {
          line: 151,
          column: 33
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "74": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 154,
          column: 90
        }
      },
      "75": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 155,
          column: 46
        }
      },
      "76": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 43
        }
      },
      "77": {
        start: {
          line: 162,
          column: 37
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "78": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "79": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 22
        }
      },
      "80": {
        start: {
          line: 167,
          column: 26
        },
        end: {
          line: 177,
          column: 10
        }
      },
      "81": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 175,
          column: 38
        }
      },
      "82": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 27
        }
      },
      "83": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "84": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 29
        }
      },
      "85": {
        start: {
          line: 182,
          column: 13
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "86": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 29
        }
      },
      "87": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 25
        }
      },
      "88": {
        start: {
          line: 190,
          column: 36
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "89": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "90": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 25
        }
      },
      "91": {
        start: {
          line: 194,
          column: 26
        },
        end: {
          line: 194,
          column: 71
        }
      },
      "92": {
        start: {
          line: 194,
          column: 54
        },
        end: {
          line: 194,
          column: 70
        }
      },
      "93": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "94": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "95": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 49
        }
      },
      "96": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "97": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 24
        }
      },
      "98": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "99": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "100": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 20
        }
      },
      "101": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "102": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "103": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "104": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 89
        }
      },
      "105": {
        start: {
          line: 216,
          column: 46
        },
        end: {
          line: 216,
          column: 87
        }
      },
      "106": {
        start: {
          line: 218,
          column: 34
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "107": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "108": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 22
        }
      },
      "109": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "110": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 97
        }
      },
      "111": {
        start: {
          line: 224,
          column: 52
        },
        end: {
          line: 224,
          column: 95
        }
      },
      "112": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "113": {
        start: {
          line: 228,
          column: 33
        },
        end: {
          line: 228,
          column: 111
        }
      },
      "114": {
        start: {
          line: 228,
          column: 63
        },
        end: {
          line: 228,
          column: 104
        }
      },
      "115": {
        start: {
          line: 229,
          column: 35
        },
        end: {
          line: 229,
          column: 76
        }
      },
      "116": {
        start: {
          line: 229,
          column: 64
        },
        end: {
          line: 229,
          column: 75
        }
      },
      "117": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 99
        }
      },
      "118": {
        start: {
          line: 230,
          column: 52
        },
        end: {
          line: 230,
          column: 97
        }
      },
      "119": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 18
        }
      },
      "120": {
        start: {
          line: 235,
          column: 31
        },
        end: {
          line: 281,
          column: 6
        }
      },
      "121": {
        start: {
          line: 237,
          column: 30
        },
        end: {
          line: 237,
          column: 40
        }
      },
      "122": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 69
        }
      },
      "123": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "124": {
        start: {
          line: 241,
          column: 33
        },
        end: {
          line: 247,
          column: 18
        }
      },
      "125": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 39
        }
      },
      "126": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 259,
          column: 14
        }
      },
      "127": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 35
        }
      },
      "128": {
        start: {
          line: 263,
          column: 31
        },
        end: {
          line: 263,
          column: 104
        }
      },
      "129": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "130": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 25
        }
      },
      "131": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 24
        }
      },
      "132": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 32
        }
      },
      "133": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 279,
          column: 15
        }
      },
      "134": {
        start: {
          line: 282,
          column: 21
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "135": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 41
        }
      },
      "136": {
        start: {
          line: 285,
          column: 26
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "137": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "138": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 24
        }
      },
      "139": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "140": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "141": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 28
        }
      },
      "142": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 21
        }
      },
      "143": {
        start: {
          line: 300,
          column: 27
        },
        end: {
          line: 300,
          column: 55
        }
      },
      "144": {
        start: {
          line: 301,
          column: 27
        },
        end: {
          line: 315,
          column: 48
        }
      },
      "145": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "146": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 22
        }
      },
      "147": {
        start: {
          line: 306,
          column: 28
        },
        end: {
          line: 306,
          column: 83
        }
      },
      "148": {
        start: {
          line: 306,
          column: 57
        },
        end: {
          line: 306,
          column: 82
        }
      },
      "149": {
        start: {
          line: 307,
          column: 26
        },
        end: {
          line: 307,
          column: 54
        }
      },
      "150": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "151": {
        start: {
          line: 310,
          column: 26
        },
        end: {
          line: 310,
          column: 138
        }
      },
      "152": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 25
        }
      },
      "153": {
        start: {
          line: 313,
          column: 22
        },
        end: {
          line: 313,
          column: 86
        }
      },
      "154": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 21
        }
      },
      "155": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 357,
          column: 99
        }
      },
      "156": {
        start: {
          line: 316,
          column: 914
        },
        end: {
          line: 333,
          column: 137
        }
      },
      "157": {
        start: {
          line: 317,
          column: 56
        },
        end: {
          line: 317,
          column: 87
        }
      },
      "158": {
        start: {
          line: 318,
          column: 76
        },
        end: {
          line: 318,
          column: 131
        }
      },
      "159": {
        start: {
          line: 318,
          column: 105
        },
        end: {
          line: 318,
          column: 130
        }
      },
      "160": {
        start: {
          line: 319,
          column: 56
        },
        end: {
          line: 319,
          column: 100
        }
      },
      "161": {
        start: {
          line: 321,
          column: 56
        },
        end: {
          line: 321,
          column: 88
        }
      },
      "162": {
        start: {
          line: 322,
          column: 56
        },
        end: {
          line: 322,
          column: 89
        }
      },
      "163": {
        start: {
          line: 324,
          column: 56
        },
        end: {
          line: 324,
          column: 135
        }
      },
      "164": {
        start: {
          line: 326,
          column: 60
        },
        end: {
          line: 328,
          column: 61
        }
      },
      "165": {
        start: {
          line: 327,
          column: 64
        },
        end: {
          line: 327,
          column: 76
        }
      },
      "166": {
        start: {
          line: 329,
          column: 78
        },
        end: {
          line: 329,
          column: 109
        }
      },
      "167": {
        start: {
          line: 330,
          column: 60
        },
        end: {
          line: 330,
          column: 216
        }
      },
      "168": {
        start: {
          line: 333,
          column: 247
        },
        end: {
          line: 345,
          column: 359
        }
      },
      "169": {
        start: {
          line: 333,
          column: 806
        },
        end: {
          line: 345,
          column: 122
        }
      },
      "170": {
        start: {
          line: 345,
          column: 616
        },
        end: {
          line: 345,
          column: 936
        }
      },
      "171": {
        start: {
          line: 345,
          column: 1050
        },
        end: {
          line: 345,
          column: 1368
        }
      },
      "172": {
        start: {
          line: 345,
          column: 1486
        },
        end: {
          line: 345,
          column: 1837
        }
      },
      "173": {
        start: {
          line: 345,
          column: 1987
        },
        end: {
          line: 349,
          column: 847
        }
      },
      "174": {
        start: {
          line: 346,
          column: 56
        },
        end: {
          line: 346,
          column: 87
        }
      },
      "175": {
        start: {
          line: 348,
          column: 56
        },
        end: {
          line: 348,
          column: 89
        }
      },
      "176": {
        start: {
          line: 349,
          column: 664
        },
        end: {
          line: 349,
          column: 786
        }
      },
      "177": {
        start: {
          line: 351,
          column: 187
        },
        end: {
          line: 351,
          column: 1342
        }
      },
      "178": {
        start: {
          line: 351,
          column: 997
        },
        end: {
          line: 351,
          column: 1171
        }
      },
      "179": {
        start: {
          line: 351,
          column: 1542
        },
        end: {
          line: 351,
          column: 2693
        }
      },
      "180": {
        start: {
          line: 351,
          column: 1786
        },
        end: {
          line: 351,
          column: 1826
        }
      },
      "181": {
        start: {
          line: 351,
          column: 2898
        },
        end: {
          line: 351,
          column: 3394
        }
      },
      "182": {
        start: {
          line: 351,
          column: 3554
        },
        end: {
          line: 351,
          column: 3573
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        loc: {
          start: {
            line: 75,
            column: 22
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        loc: {
          start: {
            line: 86,
            column: 22
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 86
      },
      "11": {
        name: "SendInvitationDialog",
        decl: {
          start: {
            line: 110,
            column: 9
          },
          end: {
            line: 110,
            column: 29
          }
        },
        loc: {
          start: {
            line: 110,
            column: 65
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 110
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 133,
            column: 17
          },
          end: {
            line: 133,
            column: 18
          }
        },
        loc: {
          start: {
            line: 133,
            column: 29
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 133
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 142,
            column: 17
          },
          end: {
            line: 142,
            column: 18
          }
        },
        loc: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 142
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 153,
            column: 18
          }
        },
        loc: {
          start: {
            line: 153,
            column: 29
          },
          end: {
            line: 158,
            column: 9
          }
        },
        line: 153
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 162,
            column: 37
          },
          end: {
            line: 162,
            column: 38
          }
        },
        loc: {
          start: {
            line: 162,
            column: 43
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 162
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 167,
            column: 47
          },
          end: {
            line: 167,
            column: 48
          }
        },
        loc: {
          start: {
            line: 167,
            column: 56
          },
          end: {
            line: 177,
            column: 9
          }
        },
        line: 167
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 190,
            column: 37
          }
        },
        loc: {
          start: {
            line: 190,
            column: 47
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 190
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 194,
            column: 45
          },
          end: {
            line: 194,
            column: 46
          }
        },
        loc: {
          start: {
            line: 194,
            column: 54
          },
          end: {
            line: 194,
            column: 70
          }
        },
        line: 194
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 212,
            column: 33
          },
          end: {
            line: 212,
            column: 34
          }
        },
        loc: {
          start: {
            line: 212,
            column: 52
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 212
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 216,
            column: 33
          }
        },
        loc: {
          start: {
            line: 216,
            column: 46
          },
          end: {
            line: 216,
            column: 87
          }
        },
        line: 216
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 218,
            column: 34
          },
          end: {
            line: 218,
            column: 35
          }
        },
        loc: {
          start: {
            line: 218,
            column: 73
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 218
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 224,
            column: 37
          },
          end: {
            line: 224,
            column: 38
          }
        },
        loc: {
          start: {
            line: 224,
            column: 52
          },
          end: {
            line: 224,
            column: 95
          }
        },
        line: 224
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 228,
            column: 51
          },
          end: {
            line: 228,
            column: 52
          }
        },
        loc: {
          start: {
            line: 228,
            column: 63
          },
          end: {
            line: 228,
            column: 104
          }
        },
        line: 228
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 229,
            column: 52
          },
          end: {
            line: 229,
            column: 53
          }
        },
        loc: {
          start: {
            line: 229,
            column: 64
          },
          end: {
            line: 229,
            column: 75
          }
        },
        line: 229
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 230,
            column: 37
          },
          end: {
            line: 230,
            column: 38
          }
        },
        loc: {
          start: {
            line: 230,
            column: 52
          },
          end: {
            line: 230,
            column: 97
          }
        },
        line: 230
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 236,
            column: 20
          },
          end: {
            line: 236,
            column: 21
          }
        },
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 261,
            column: 9
          }
        },
        line: 236
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 20
          }
        },
        loc: {
          start: {
            line: 262,
            column: 37
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 262
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 274,
            column: 17
          },
          end: {
            line: 274,
            column: 18
          }
        },
        loc: {
          start: {
            line: 274,
            column: 28
          },
          end: {
            line: 280,
            column: 9
          }
        },
        line: 274
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 282,
            column: 21
          },
          end: {
            line: 282,
            column: 22
          }
        },
        loc: {
          start: {
            line: 282,
            column: 32
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 282
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 285,
            column: 26
          },
          end: {
            line: 285,
            column: 27
          }
        },
        loc: {
          start: {
            line: 285,
            column: 36
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 285
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 301,
            column: 48
          },
          end: {
            line: 301,
            column: 49
          }
        },
        loc: {
          start: {
            line: 301,
            column: 54
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 301
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 306,
            column: 48
          },
          end: {
            line: 306,
            column: 49
          }
        },
        loc: {
          start: {
            line: 306,
            column: 57
          },
          end: {
            line: 306,
            column: 82
          }
        },
        line: 306
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 316,
            column: 898
          },
          end: {
            line: 316,
            column: 899
          }
        },
        loc: {
          start: {
            line: 316,
            column: 914
          },
          end: {
            line: 333,
            column: 137
          }
        },
        line: 316
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 316,
            column: 1163
          },
          end: {
            line: 316,
            column: 1164
          }
        },
        loc: {
          start: {
            line: 316,
            column: 1170
          },
          end: {
            line: 325,
            column: 53
          }
        },
        line: 316
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 318,
            column: 96
          },
          end: {
            line: 318,
            column: 97
          }
        },
        loc: {
          start: {
            line: 318,
            column: 105
          },
          end: {
            line: 318,
            column: 130
          }
        },
        line: 318
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 325,
            column: 587
          },
          end: {
            line: 325,
            column: 588
          }
        },
        loc: {
          start: {
            line: 325,
            column: 596
          },
          end: {
            line: 331,
            column: 57
          }
        },
        line: 325
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 333,
            column: 231
          },
          end: {
            line: 333,
            column: 232
          }
        },
        loc: {
          start: {
            line: 333,
            column: 247
          },
          end: {
            line: 345,
            column: 359
          }
        },
        line: 333
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 333,
            column: 795
          },
          end: {
            line: 333,
            column: 796
          }
        },
        loc: {
          start: {
            line: 333,
            column: 806
          },
          end: {
            line: 345,
            column: 122
          }
        },
        line: 333
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 345,
            column: 600
          },
          end: {
            line: 345,
            column: 601
          }
        },
        loc: {
          start: {
            line: 345,
            column: 616
          },
          end: {
            line: 345,
            column: 936
          }
        },
        line: 345
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 345,
            column: 1034
          },
          end: {
            line: 345,
            column: 1035
          }
        },
        loc: {
          start: {
            line: 345,
            column: 1050
          },
          end: {
            line: 345,
            column: 1368
          }
        },
        line: 345
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 345,
            column: 1470
          },
          end: {
            line: 345,
            column: 1471
          }
        },
        loc: {
          start: {
            line: 345,
            column: 1486
          },
          end: {
            line: 345,
            column: 1837
          }
        },
        line: 345
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 345,
            column: 1971
          },
          end: {
            line: 345,
            column: 1972
          }
        },
        loc: {
          start: {
            line: 345,
            column: 1987
          },
          end: {
            line: 349,
            column: 847
          }
        },
        line: 345
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 345,
            column: 2249
          },
          end: {
            line: 345,
            column: 2250
          }
        },
        loc: {
          start: {
            line: 345,
            column: 2256
          },
          end: {
            line: 349,
            column: 53
          }
        },
        line: 345
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 349,
            column: 649
          },
          end: {
            line: 349,
            column: 650
          }
        },
        loc: {
          start: {
            line: 349,
            column: 664
          },
          end: {
            line: 349,
            column: 786
          }
        },
        line: 349
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 351,
            column: 171
          },
          end: {
            line: 351,
            column: 172
          }
        },
        loc: {
          start: {
            line: 351,
            column: 187
          },
          end: {
            line: 351,
            column: 1342
          }
        },
        line: 351
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 351,
            column: 981
          },
          end: {
            line: 351,
            column: 982
          }
        },
        loc: {
          start: {
            line: 351,
            column: 997
          },
          end: {
            line: 351,
            column: 1171
          }
        },
        line: 351
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 351,
            column: 1526
          },
          end: {
            line: 351,
            column: 1527
          }
        },
        loc: {
          start: {
            line: 351,
            column: 1542
          },
          end: {
            line: 351,
            column: 2693
          }
        },
        line: 351
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 351,
            column: 1779
          },
          end: {
            line: 351,
            column: 1780
          }
        },
        loc: {
          start: {
            line: 351,
            column: 1786
          },
          end: {
            line: 351,
            column: 1826
          }
        },
        line: 351
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 351,
            column: 2882
          },
          end: {
            line: 351,
            column: 2883
          }
        },
        loc: {
          start: {
            line: 351,
            column: 2898
          },
          end: {
            line: 351,
            column: 3394
          }
        },
        line: 351
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 351,
            column: 3548
          },
          end: {
            line: 351,
            column: 3549
          }
        },
        loc: {
          start: {
            line: 351,
            column: 3554
          },
          end: {
            line: 351,
            column: 3573
          }
        },
        line: 351
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "18": {
        loc: {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 78,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 78,
            column: 31
          }
        }, {
          start: {
            line: 78,
            column: 35
          },
          end: {
            line: 78,
            column: 50
          }
        }],
        line: 78
      },
      "19": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "20": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 82
          }
        }, {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 23
          }
        }, {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 34
          }
        }, {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 30
          }
        }],
        line: 88
      },
      "21": {
        loc: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 33
          }
        }, {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 60
          }
        }],
        line: 92
      },
      "22": {
        loc: {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 146,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 146,
            column: 33
          }
        }, {
          start: {
            line: 146,
            column: 37
          },
          end: {
            line: 146,
            column: 41
          }
        }],
        line: 146
      },
      "23": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 34
          }
        }, {
          start: {
            line: 157,
            column: 38
          },
          end: {
            line: 157,
            column: 42
          }
        }],
        line: 157
      },
      "24": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "25": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 163,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 163,
            column: 26
          }
        }, {
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 163,
            column: 59
          }
        }],
        line: 163
      },
      "26": {
        loc: {
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 175,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 168,
            column: 31
          }
        }, {
          start: {
            line: 169,
            column: 16
          },
          end: {
            line: 169,
            column: 39
          }
        }, {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 22
          }
        }, {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 42
          }
        }, {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 36
          }
        }, {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 24
          }
        }, {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 174,
            column: 44
          }
        }, {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 38
          }
        }],
        line: 168
      },
      "27": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: 182,
            column: 13
          },
          end: {
            line: 185,
            column: 9
          }
        }],
        line: 178
      },
      "28": {
        loc: {
          start: {
            line: 182,
            column: 13
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 13
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "29": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "30": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 18
          }
        }, {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 36
          }
        }],
        line: 191
      },
      "31": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "32": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "33": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "34": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "35": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 22
          }
        }, {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 40
          }
        }],
        line: 213
      },
      "36": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "37": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "38": {
        loc: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 223,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 223,
            column: 30
          }
        }, {
          start: {
            line: 223,
            column: 34
          },
          end: {
            line: 223,
            column: 63
          }
        }],
        line: 223
      },
      "39": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "40": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 25
          }
        }, {
          start: {
            line: 227,
            column: 30
          },
          end: {
            line: 227,
            column: 49
          }
        }, {
          start: {
            line: 227,
            column: 53
          },
          end: {
            line: 227,
            column: 82
          }
        }],
        line: 227
      },
      "41": {
        loc: {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 105
          }
        }, {
          start: {
            line: 228,
            column: 109
          },
          end: {
            line: 228,
            column: 111
          }
        }],
        line: 228
      },
      "42": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "43": {
        loc: {
          start: {
            line: 246,
            column: 33
          },
          end: {
            line: 246,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 33
          },
          end: {
            line: 246,
            column: 49
          }
        }, {
          start: {
            line: 246,
            column: 53
          },
          end: {
            line: 246,
            column: 57
          }
        }],
        line: 246
      },
      "44": {
        loc: {
          start: {
            line: 253,
            column: 29
          },
          end: {
            line: 253,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 29
          },
          end: {
            line: 253,
            column: 45
          }
        }, {
          start: {
            line: 253,
            column: 49
          },
          end: {
            line: 253,
            column: 53
          }
        }],
        line: 253
      },
      "45": {
        loc: {
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 53
          }
        }, {
          start: {
            line: 258,
            column: 57
          },
          end: {
            line: 258,
            column: 61
          }
        }],
        line: 258
      },
      "46": {
        loc: {
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 265,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 36
          },
          end: {
            line: 265,
            column: 55
          }
        }, {
          start: {
            line: 265,
            column: 58
          },
          end: {
            line: 265,
            column: 77
          }
        }],
        line: 265
      },
      "47": {
        loc: {
          start: {
            line: 266,
            column: 29
          },
          end: {
            line: 268,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 63
          }
        }, {
          start: {
            line: 268,
            column: 22
          },
          end: {
            line: 268,
            column: 53
          }
        }],
        line: 266
      },
      "48": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "49": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "50": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "51": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "52": {
        loc: {
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "53": {
        loc: {
          start: {
            line: 319,
            column: 75
          },
          end: {
            line: 319,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 75
          },
          end: {
            line: 319,
            column: 92
          }
        }, {
          start: {
            line: 319,
            column: 96
          },
          end: {
            line: 319,
            column: 98
          }
        }],
        line: 319
      },
      "54": {
        loc: {
          start: {
            line: 324,
            column: 78
          },
          end: {
            line: 324,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 109
          },
          end: {
            line: 324,
            column: 122
          }
        }, {
          start: {
            line: 324,
            column: 125
          },
          end: {
            line: 324,
            column: 133
          }
        }],
        line: 324
      },
      "55": {
        loc: {
          start: {
            line: 326,
            column: 60
          },
          end: {
            line: 328,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 60
          },
          end: {
            line: 328,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "56": {
        loc: {
          start: {
            line: 326,
            column: 64
          },
          end: {
            line: 326,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 64
          },
          end: {
            line: 326,
            column: 72
          }
        }, {
          start: {
            line: 326,
            column: 76
          },
          end: {
            line: 326,
            column: 86
          }
        }],
        line: 326
      },
      "57": {
        loc: {
          start: {
            line: 330,
            column: 167
          },
          end: {
            line: 330,
            column: 202
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 330,
            column: 189
          },
          end: {
            line: 330,
            column: 197
          }
        }, {
          start: {
            line: 330,
            column: 200
          },
          end: {
            line: 330,
            column: 202
          }
        }],
        line: 330
      },
      "58": {
        loc: {
          start: {
            line: 331,
            column: 126
          },
          end: {
            line: 333,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 54
          },
          end: {
            line: 332,
            column: 102
          }
        }, {
          start: {
            line: 333,
            column: 54
          },
          end: {
            line: 333,
            column: 82
          }
        }],
        line: 331
      },
      "59": {
        loc: {
          start: {
            line: 333,
            column: 759
          },
          end: {
            line: 345,
            column: 267
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 776
          },
          end: {
            line: 345,
            column: 124
          }
        }, {
          start: {
            line: 345,
            column: 128
          },
          end: {
            line: 345,
            column: 266
          }
        }],
        line: 333
      },
      "60": {
        loc: {
          start: {
            line: 333,
            column: 1030
          },
          end: {
            line: 345,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 74
          },
          end: {
            line: 334,
            column: 84
          }
        }, {
          start: {
            line: 335,
            column: 74
          },
          end: {
            line: 345,
            column: 109
          }
        }],
        line: 333
      },
      "61": {
        loc: {
          start: {
            line: 335,
            column: 74
          },
          end: {
            line: 345,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 78
          },
          end: {
            line: 336,
            column: 90
          }
        }, {
          start: {
            line: 337,
            column: 78
          },
          end: {
            line: 345,
            column: 109
          }
        }],
        line: 335
      },
      "62": {
        loc: {
          start: {
            line: 337,
            column: 78
          },
          end: {
            line: 345,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 338,
            column: 82
          },
          end: {
            line: 338,
            column: 95
          }
        }, {
          start: {
            line: 339,
            column: 82
          },
          end: {
            line: 345,
            column: 109
          }
        }],
        line: 337
      },
      "63": {
        loc: {
          start: {
            line: 339,
            column: 82
          },
          end: {
            line: 345,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 340,
            column: 86
          },
          end: {
            line: 340,
            column: 97
          }
        }, {
          start: {
            line: 341,
            column: 86
          },
          end: {
            line: 345,
            column: 109
          }
        }],
        line: 339
      },
      "64": {
        loc: {
          start: {
            line: 341,
            column: 86
          },
          end: {
            line: 345,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 90
          },
          end: {
            line: 342,
            column: 104
          }
        }, {
          start: {
            line: 343,
            column: 90
          },
          end: {
            line: 345,
            column: 109
          }
        }],
        line: 341
      },
      "65": {
        loc: {
          start: {
            line: 343,
            column: 90
          },
          end: {
            line: 345,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 94
          },
          end: {
            line: 344,
            column: 107
          }
        }, {
          start: {
            line: 345,
            column: 94
          },
          end: {
            line: 345,
            column: 109
          }
        }],
        line: 343
      },
      "66": {
        loc: {
          start: {
            line: 345,
            column: 365
          },
          end: {
            line: 345,
            column: 1842
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 446
          },
          end: {
            line: 345,
            column: 1376
          }
        }, {
          start: {
            line: 345,
            column: 1381
          },
          end: {
            line: 345,
            column: 1841
          }
        }],
        line: 345
      },
      "67": {
        loc: {
          start: {
            line: 345,
            column: 1844
          },
          end: {
            line: 349,
            column: 852
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 1844
          },
          end: {
            line: 345,
            column: 1872
          }
        }, {
          start: {
            line: 345,
            column: 1877
          },
          end: {
            line: 349,
            column: 851
          }
        }],
        line: 345
      },
      "68": {
        loc: {
          start: {
            line: 349,
            column: 854
          },
          end: {
            line: 351,
            column: 1347
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 854
          },
          end: {
            line: 349,
            column: 937
          }
        }, {
          start: {
            line: 350,
            column: 36
          },
          end: {
            line: 350,
            column: 60
          }
        }, {
          start: {
            line: 351,
            column: 36
          },
          end: {
            line: 351,
            column: 71
          }
        }, {
          start: {
            line: 351,
            column: 76
          },
          end: {
            line: 351,
            column: 1346
          }
        }],
        line: 349
      },
      "69": {
        loc: {
          start: {
            line: 351,
            column: 1100
          },
          end: {
            line: 351,
            column: 1153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 1100
          },
          end: {
            line: 351,
            column: 1115
          }
        }, {
          start: {
            line: 351,
            column: 1119
          },
          end: {
            line: 351,
            column: 1153
          }
        }],
        line: 351
      },
      "70": {
        loc: {
          start: {
            line: 351,
            column: 1349
          },
          end: {
            line: 351,
            column: 2698
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 1349
          },
          end: {
            line: 351,
            column: 1427
          }
        }, {
          start: {
            line: 351,
            column: 1432
          },
          end: {
            line: 351,
            column: 2697
          }
        }],
        line: 351
      },
      "71": {
        loc: {
          start: {
            line: 351,
            column: 2700
          },
          end: {
            line: 351,
            column: 3399
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 2700
          },
          end: {
            line: 351,
            column: 2778
          }
        }, {
          start: {
            line: 351,
            column: 2783
          },
          end: {
            line: 351,
            column: 3398
          }
        }],
        line: 351
      },
      "72": {
        loc: {
          start: {
            line: 351,
            column: 3709
          },
          end: {
            line: 357,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 352,
            column: 50
          },
          end: {
            line: 354,
            column: 66
          }
        }, {
          start: {
            line: 355,
            column: 50
          },
          end: {
            line: 357,
            column: 73
          }
        }],
        line: 351
      },
      "73": {
        loc: {
          start: {
            line: 352,
            column: 50
          },
          end: {
            line: 354,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 353,
            column: 54
          },
          end: {
            line: 353,
            column: 72
          }
        }, {
          start: {
            line: 354,
            column: 54
          },
          end: {
            line: 354,
            column: 66
          }
        }],
        line: 352
      },
      "74": {
        loc: {
          start: {
            line: 355,
            column: 50
          },
          end: {
            line: 357,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 54
          },
          end: {
            line: 356,
            column: 72
          }
        }, {
          start: {
            line: 357,
            column: 54
          },
          end: {
            line: 357,
            column: 73
          }
        }],
        line: 355
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0, 0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0, 0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/components/admin/send-invitation-dialog.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/components/admin/send-invitation-dialog.tsx"],
      sourcesContent: ["import React, { useState, useMemo } from 'react';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { UserPlus, Shield } from 'lucide-react';\n\nimport { useToast } from '@/hooks/use-toast';\n\n// Form validation schema\nconst invitationSchema = z\n  .object({\n    email: z.string().email('invalidEmailFormat').optional(),\n    firstName: z.string().max(50, 'firstNameTooLong').regex(/^[a-zA-Z\xC0-\xFF\\s'-]*$/, 'firstNameInvalidCharacters').optional(),\n    lastName: z.string().max(50, 'lastNameTooLong').regex(/^[a-zA-Z\xC0-\xFF\\s'-]*$/, 'lastNameInvalidCharacters').optional(),\n    role: z.enum([\n      'admin',\n      'manager',\n      'tenant',\n      'resident',\n      'demo_manager',\n      'demo_tenant',\n      'demo_resident',\n    ]),\n    organizationId: z.string().min(1, 'organizationRequired'),\n    buildingId: z.string().optional(),\n    residenceId: z.string().optional(),\n    personalMessage: z.string().max(500, 'personalMessageTooLong').optional(),\n    expiryDays: z.number().min(1, 'expiryDaysInvalid').max(30, 'expiryDaysInvalid'),\n  })\n  .refine(\n    (data) => {\n\n      // For demo roles, first and last name are required instead of email\n      if (['demo_manager', 'demo_tenant', 'demo_resident'].includes(data.role)) {\n        return !!data.firstName && !!data.lastName;\n\n      }\n      // For regular roles, email is required\n      return !!data.email;\n    },\n    {\n      message: 'Email address is required for regular invitations (example: user@domain.com). For demo users, provide first and last name instead.',\n      path: ['email'],\n    }\n  )\n  .refine(\n    (data) => {\n      // If role is tenant or resident and a specific building is selected, residence must be assigned\n      if (\n        ['tenant', 'resident', 'demo_tenant', 'demo_resident'].includes(data.role) &&\n        data.buildingId &&\n        data.buildingId !== 'none' &&\n        data.buildingId !== ''\n      ) {\n        return !!data.residenceId && data.residenceId !== '';\n      }\n      return true;\n    },\n    {\n      message: 'Please select a specific residence unit for tenants and residents when a building is selected',\n      path: ['residenceId'],\n    }\n  );\n\n/**\n * Form data type for single invitation.\n * Inferred from the invitation Zod schema.\n */\ntype InvitationFormData = z.infer<typeof invitationSchema>;\n\n/**\n * Props for the SendInvitationDialog component.\n * Controls dialog visibility and success handling.\n */\ninterface SendInvitationDialogProps {\n  open: boolean;\n  onOpenChange: (_open: boolean) => void;\n  onSuccess: () => void;\n}\n\n/**\n * Organization interface for organization selection.\n * Contains basic organization information.\n */\ninterface Organization {\n  id: string;\n  name: string;\n  type: string;\n}\n\n/**\n * Building interface from schema.\n */\ninterface BuildingType {\n  id: string;\n  organizationId: string;\n  name: string;\n  address: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  buildingType: 'condo' | 'rental';\n  yearBuilt: number | null;\n  totalUnits: number;\n  totalFloors: number | null;\n  parkingSpaces: number | null;\n  storageSpaces: number | null;\n  amenities: unknown;\n  managementCompany: string | null;\n  isActive: boolean;\n  createdAt: Date | null;\n  updatedAt: Date | null;\n}\n\n/**\n * Residence interface for residence selection.\n */\ninterface Residence {\n  id: string;\n  buildingId: string;\n  unitNumber: string;\n  floor: number | null;\n  squareFootage: number | null;\n  bedrooms: number | null;\n  bathrooms: number | null;\n  residenceType: 'apartment' | 'condo' | 'house' | 'townhouse' | 'other';\n  isActive: boolean;\n  building: {\n    id: string;\n    name: string;\n    organizationId: string;\n    organization: {\n      id: string;\n      name: string;\n    };\n  };\n}\n\n/**\n * Send Invitation Dialog Component.\n *\n * Allows sending single invitations with comprehensive options\n * including role selection, organization/building assignment, and custom messages.\n * @param props - Component props.\n * @param props.open - Whether dialog is open.\n * @param props.onOpenChange - Handler for dialog open state changes.\n * @param props.onSuccess - Handler called when invitation is sent successfully.\n * @returns JSX element for the invitation dialog.\n */\nexport function SendInvitationDialog({ open, onOpenChange, onSuccess }: SendInvitationDialogProps) {\n  const { t } = useLanguage();\n  const { user: currentUser, hasRole } = useAuth();\n  const { toast } = useToast();\n\n  const [selectedOrgType, setSelectedOrgType] = useState<string>('');\n\n\n  // Single invitation form\n  const form = useForm<InvitationFormData>({\n    resolver: zodResolver(invitationSchema),\n    defaultValues: {\n      email: '',\n\n      firstName: '',\n      lastName: '',\n      role: 'tenant',\n      organizationId: '',\n      buildingId: '',\n      residenceId: '',\n      expiryDays: 7,\n      personalMessage: '',\n    },\n  });\n\n  // Fetch organizations (filtered by user access)\n  const { data: organizations } = useQuery<Organization[]>({\n    queryKey: ['/api/organizations'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/organizations');\n      return response.json();\n    },\n    enabled: open,\n  });\n\n  // Fetch buildings\n  const { data: buildings, error: buildingsError, isLoading: buildingsLoading } = useQuery<BuildingType[]>({\n    queryKey: ['/api/manager/buildings'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/manager/buildings');\n      const data = await response.json();\n      // The API returns { buildings: [...], meta: {...} } but we need just the buildings array\n      return data.buildings || data;\n    },\n    enabled: open,\n  });\n\n\n  // Fetch residences  \n  const { data: residences } = useQuery<Residence[]>({\n    queryKey: ['/api/residences'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/residences');\n      const data = await response.json();\n      // Handle both direct array and wrapped response formats\n      return data.residences || data;\n    },\n    enabled: open,\n  });\n\n  // Helper functions for filtering data based on selections\n  const getFilteredOrganizations = () => {\n    if (!organizations || !Array.isArray(organizations)) {\n      return [];\n    }\n\n    // Filter out any invalid organizations with detailed logging\n    const validOrgs = organizations.filter((org) => {\n      const isValid =\n        org &&\n        typeof org === 'object' &&\n        org.id &&\n        typeof org.id === 'string' &&\n        org.id.trim() !== '' &&\n        org.name &&\n        typeof org.name === 'string' &&\n        org.name.trim() !== '';\n\n      return isValid;\n    });\n\n    if (currentUser?.role === 'admin') {\n      // Admins can add users to any organization\n      return validOrgs;\n    } else if (currentUser?.role === 'manager') {\n      // Managers can only add users to their own organization\n      return validOrgs;\n    }\n\n    // Default: show all valid organizations for now\n    return validOrgs;\n  };\n\n  // Check if user can access a specific organization for invitations\n  const canInviteToOrganization = (orgId: string) => {\n    if (!orgId || !organizations) {\n      return false;\n    }\n\n    const targetOrg = organizations.find((org) => org.id === orgId);\n    const currentUserOrg = organizations[0]; // Use first organization for access control\n\n    // Organization filtering for user access control\n    if (targetOrg?.name?.toLowerCase() === 'demo') {\n      return currentUser?.role === 'admin';\n    }\n\n    // Koveo organization users can add to any organization (override all restrictions)\n    if (currentUserOrg?.name?.toLowerCase() === 'koveo') {\n      return true;\n    }\n\n    // Simplified access control for now\n\n    // Admins can add to organizations they have access to\n    if (currentUser?.role === 'admin') {\n      return true;\n    }\n\n    // Others can only add to their own organization - simplified for now\n    return true;\n  };\n\n  const getFilteredBuildings = (selectedOrgId: string) => {\n    if (!buildings || !selectedOrgId) {\n      return [];\n    }\n    return buildings.filter((building) => building.organizationId === selectedOrgId);\n  };\n\n  const getFilteredResidences = (selectedBuildingId: string, selectedOrgId: string) => {\n    if (!residences) {\n      return [];\n    }\n    \n    // If a specific building is selected, show only residences from that building\n    if (selectedBuildingId && selectedBuildingId !== 'none') {\n      return residences.filter((residence) => residence.buildingId === selectedBuildingId);\n    }\n    \n    // If no building selected but organization is selected, show all residences from that organization\n    if (selectedOrgId && (!selectedBuildingId || selectedBuildingId === 'none')) {\n      const orgBuildings = buildings?.filter(building => building.organizationId === selectedOrgId) || [];\n      const orgBuildingIds = orgBuildings.map(building => building.id);\n      return residences.filter((residence) => orgBuildingIds.includes(residence.buildingId));\n    }\n    \n    return [];\n  };\n\n  // Single invitation mutation\n  const invitationMutation = useMutation({\n    mutationFn: async (data: InvitationFormData) => {\n      const expiresAt = new Date();\n      expiresAt.setDate(expiresAt.getDate() + data.expiryDays);\n\n      // For demo roles, create user directly instead of sending invitation\n      if (['demo_manager', 'demo_tenant', 'demo_resident'].includes(data.role)) {\n        const response = await apiRequest('POST', '/api/users/demo', {\n          firstName: data.firstName,\n          lastName: data.lastName,\n          role: data.role,\n          organizationId: data.organizationId,\n          residenceId: data.residenceId || null,\n        });\n        return response.json();\n      }\n\n      // Regular invitation flow\n      const response = await apiRequest('POST', '/api/invitations', {\n        organizationId: data.organizationId,\n        residenceId: data.residenceId || null,\n        email: data.email,\n        role: data.role,\n        invitedByUserId: currentUser?.id,\n        expiresAt: expiresAt.toISOString(),\n        personalMessage: data.personalMessage || null,\n      });\n      return response.json();\n    },\n    onSuccess: (_, variables) => {\n      const isDemoRole = ['demo_manager', 'demo_tenant', 'demo_resident'].includes(variables.role);\n      toast({\n        title: isDemoRole ? 'Demo User Created' : t('invitationSent'),\n        description: isDemoRole\n          ? 'Demo user has been created successfully'\n          : t('invitationSentSuccessfully'),\n      });\n      form.reset();\n      onSuccess();\n      onOpenChange(false);\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'Error',\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onSubmit = (_data: InvitationFormData) => {\n    invitationMutation.mutate(_data);\n\n  };\n\n  const canInviteRole = (role: string) => {\n    if (hasRole(['admin'])) {\n      // Only admin can invite an admin, admin can invite to any organization\n      return true;\n    }\n    if (hasRole(['manager'])) {\n      // Manager can invite regular and demo roles (but not admin)\n      if (\n        ['resident', 'tenant', 'manager', 'demo_manager', 'demo_tenant', 'demo_resident'].includes(\n          role\n        )\n      ) {\n        return true;\n      }\n    }\n    // Residents and tenants cannot invite anyone\n    return false;\n  };\n\n  // Get available roles based on organization type using useMemo for proper reactivity\n  const organizationId = form.watch('organizationId');\n  \n  const availableRoles = useMemo(() => {\n    // Return empty array if no organization is selected\n    if (!organizationId) {\n        return [];\n    }\n\n    const selectedOrg = organizations?.find((org) => org.id === organizationId);\n    const isDemoOrg = selectedOrg?.type === 'demo';\n\n\n    if (isDemoOrg) {\n      // For demo organizations, allow both demo roles and regular roles\n      const roles = ['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident'].filter(canInviteRole);\n      return roles;\n    }\n\n    const roles = ['admin', 'manager', 'tenant', 'resident'].filter(canInviteRole);\n    return roles;\n  }, [organizationId, organizations, hasRole]);\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className='max-w-2xl max-h-[90vh] overflow-y-auto'>\n        <DialogHeader>\n          <DialogTitle className='flex items-center gap-2'>\n            <UserPlus className='h-5 w-5' />\n            {t('inviteUser')}\n          </DialogTitle>\n          <DialogDescription>{t('inviteUserDescription')}</DialogDescription>\n        </DialogHeader>\n\n\n        <div className='space-y-4'>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-4'>\n              <FormField\n                control={form.control}\n                name='organizationId'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('organization')} *</FormLabel>\n\n                    <FormControl>\n                      <select\n                        {...field}\n                        onChange={(e) => {\n                          field.onChange(e.target.value);\n                          const selectedOrg = organizations?.find(\n                            (org) => org.id === e.target.value\n                          );\n                          setSelectedOrgType(selectedOrg?.type || '');\n                          // Reset building and residence when organization changes\n                          form.setValue('buildingId', '');\n                          form.setValue('residenceId', '');\n                          // Reset role when switching between demo and regular orgs\n                          form.setValue(\n                            'role',\n                            selectedOrg?.type === 'demo' ? 'demo_tenant' : 'tenant'\n                          );\n                        }}\n                        disabled={currentUser?.role === 'manager'}\n                        className='flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n                      >\n                        <option value=''>{t('selectOrganization')}</option>\n                        {getFilteredOrganizations().map((org) => {\n                          if (!org?.id || !org?.name) {\n                            return null;\n                          }\n\n                          const canInvite = canInviteToOrganization(org.id);\n\n                          return (\n                            <option key={org.id} value={org.id} disabled={!canInvite}>\n                              {org.name} {org.type === 'demo' ? '(Demo)' : ''}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </FormControl>\n                    <FormDescription>\n                      {currentUser?.role === 'manager'\n                        ? 'Managers can only invite to their organization'\n                        : 'Select target organization'}\n                    </FormDescription>\n\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='role'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>{t('role')}</FormLabel>\n                    <Select \n                      key={`role-select-${organizationId}`}\n                      onValueChange={field.onChange} \n                      value={field.value}\n                      disabled={!organizationId}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder={t('selectRole')} />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {organizationId ? availableRoles.map((role) => (\n                          <SelectItem key={role} value={role}>\n                            <div className='flex items-center gap-2'>\n                              <Shield className='h-4 w-4' />\n                              {role === 'admin'\n                                ? t('admin')\n                                : role === 'manager'\n                                  ? t('manager')\n                                  : role === 'resident'\n                                    ? t('resident')\n                                    : role === 'tenant'\n                                      ? t('tenant')\n                                      : role === 'demo_manager'\n                                        ? 'Demo Manager'\n                                        : role === 'demo_tenant'\n                                          ? 'Demo Tenant'\n                                          : 'Demo Resident'}\n                            </div>\n                          </SelectItem>\n                        )) : (\n                          <SelectItem value=\"no-organization\" disabled>\n                            Please select an organization first\n                          </SelectItem>\n                        )}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {/* Conditional fields based on role type */}\n              {['demo_manager', 'demo_tenant', 'demo_resident'].includes(form.watch('role')) ? (\n                <>\n                  <FormField\n                    control={form.control}\n                    name='firstName'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>First Name *</FormLabel>\n                        <FormControl>\n                          <Input placeholder='Enter first name' {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name='lastName'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Last Name *</FormLabel>\n                        <FormControl>\n                          <Input placeholder='Enter last name' {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </>\n              ) : (\n                <FormField\n                  control={form.control}\n                  name='email'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('emailAddress')} *</FormLabel>\n                      <FormControl>\n                        <Input placeholder={t('enterEmailAddress')} type='email' {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              )}\n\n              {form.watch('organizationId') && (\n                <FormField\n                  control={form.control}\n                  name='buildingId'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        {'Building'} ({t('optional')})\n                      </FormLabel>\n                      <FormControl>\n                        <select\n                          {...field}\n                          onChange={(e) => {\n                            field.onChange(e.target.value);\n                            // Reset residence when building changes\n                            form.setValue('residenceId', '');\n                          }}\n                          className='flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n                        >\n                          <option value=''>{'Select building'}</option>\n                          <option value='none'>{'No specific building'}</option>\n                          {getFilteredBuildings(form.watch('organizationId')).map((building) => (\n                            <option key={building.id} value={building.id}>\n                              {building.name} - {building.address}\n                            </option>\n                          ))}\n                        </select>\n                      </FormControl>\n\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              )}\n\n              {['tenant', 'resident', 'demo_tenant', 'demo_resident'].includes(\n                form.watch('role')\n              ) &&\n                form.watch('buildingId') &&\n                form.watch('buildingId') !== 'none' && (\n                  <FormField\n                    control={form.control}\n                    name='residenceId'\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>{'Residence'} *</FormLabel>\n                        <FormControl>\n                          <select\n                            {...field}\n                            onChange={field.onChange}\n                            className='flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n                          >\n                            <option value=''>{'Select residence'}</option>\n                            {getFilteredResidences(form.watch('buildingId'), form.watch('organizationId')).map((residence) => (\n                              <option key={residence.id} value={residence.id}>\n                                {'Unit'} {residence.unitNumber}\n                                {residence.floor && ` - ${'Floor'} ${residence.floor}`}\n                              </option>\n                            ))}\n                          </select>\n                        </FormControl>\n                        <FormDescription>\n                          {'Residence required for tenants and residents'}\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                )}\n\n              {/* Only show expiry for regular invitations, not demo users */}\n              {!['demo_manager', 'demo_tenant', 'demo_resident'].includes(form.watch('role')) && (\n                <FormField\n                  control={form.control}\n                  name='expiryDays'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>{t('expiresIn')}</FormLabel>\n                      <FormControl>\n                        <select\n                          {...field}\n                          onChange={(e) => field.onChange(parseInt(e.target.value))}\n                          value={field.value.toString()}\n                          className='flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n                        >\n                          <option value='1'>1 {t('day')}</option>\n                          <option value='3'>3 {t('days')}</option>\n                          <option value='7'>7 {t('days')}</option>\n                          <option value='14'>14 {t('days')}</option>\n                          <option value='30'>30 {t('days')}</option>\n                        </select>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              )}\n\n              {/* Only show personal message for regular invitations, not demo users */}\n              {!['demo_manager', 'demo_tenant', 'demo_resident'].includes(form.watch('role')) && (\n                <FormField\n                  control={form.control}\n                  name='personalMessage'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>\n                        {t('personalMessage')} ({t('optional')})\n                      </FormLabel>\n                      <FormControl>\n                        <Textarea\n                          placeholder={t('personalMessagePlaceholder')}\n                          className='min-h-[80px]'\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormDescription>{t('personalMessageDescription')}</FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              )}\n\n              <DialogFooter>\n                <Button type='button' variant='outline' onClick={() => onOpenChange(false)}>\n                  {t('cancel')}\n                </Button>\n                <Button \n                  type='submit' \n                  disabled={invitationMutation.isPending}\n                >\n                  {invitationMutation.isPending\n                    ? selectedOrgType === 'Demo'\n                      ? 'Creating User...'\n                      : t('sending')\n                    : selectedOrgType === 'Demo'\n                      ? 'Create Demo User'\n                      : t('sendInvitation')}\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </div>\n\n      </DialogContent>\n    </Dialog>\n  );\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "591fabcd9cccde9135d76c2626c33bed22ba1ab4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_100nd8042b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_100nd8042b();
var __createBinding =
/* istanbul ignore next */
(cov_100nd8042b().s[0]++,
/* istanbul ignore next */
(cov_100nd8042b().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_100nd8042b().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_100nd8042b().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_100nd8042b().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_100nd8042b().f[0]++;
  cov_100nd8042b().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_100nd8042b().b[2][0]++;
    cov_100nd8042b().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_100nd8042b().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_100nd8042b().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_100nd8042b().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_100nd8042b().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_100nd8042b().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_100nd8042b().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_100nd8042b().b[5][1]++,
  /* istanbul ignore next */
  (cov_100nd8042b().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_100nd8042b().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_100nd8042b().b[3][0]++;
    cov_100nd8042b().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_100nd8042b().f[1]++;
        cov_100nd8042b().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_100nd8042b().b[3][1]++;
  }
  cov_100nd8042b().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_100nd8042b().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_100nd8042b().f[2]++;
  cov_100nd8042b().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_100nd8042b().b[7][0]++;
    cov_100nd8042b().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_100nd8042b().b[7][1]++;
  }
  cov_100nd8042b().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_100nd8042b().s[11]++,
/* istanbul ignore next */
(cov_100nd8042b().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_100nd8042b().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_100nd8042b().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_100nd8042b().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_100nd8042b().f[3]++;
  cov_100nd8042b().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_100nd8042b().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_100nd8042b().f[4]++;
  cov_100nd8042b().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_100nd8042b().s[14]++,
/* istanbul ignore next */
(cov_100nd8042b().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_100nd8042b().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_100nd8042b().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_100nd8042b().f[5]++;
  cov_100nd8042b().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_100nd8042b().f[6]++;
    cov_100nd8042b().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_100nd8042b().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_100nd8042b().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_100nd8042b().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_100nd8042b().s[17]++, []);
      /* istanbul ignore next */
      cov_100nd8042b().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_100nd8042b().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_100nd8042b().b[12][0]++;
          cov_100nd8042b().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_100nd8042b().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_100nd8042b().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_100nd8042b().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_100nd8042b().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_100nd8042b().f[8]++;
    cov_100nd8042b().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_100nd8042b().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_100nd8042b().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_100nd8042b().b[13][0]++;
      cov_100nd8042b().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_100nd8042b().s[26]++, {});
    /* istanbul ignore next */
    cov_100nd8042b().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_100nd8042b().b[15][0]++;
      cov_100nd8042b().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_100nd8042b().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_100nd8042b().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_100nd8042b().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_100nd8042b().b[16][0]++;
          cov_100nd8042b().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_100nd8042b().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[15][1]++;
    }
    cov_100nd8042b().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_100nd8042b().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_100nd8042b().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_100nd8042b().s[36]++;
exports.SendInvitationDialog = SendInvitationDialog;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[37]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[38]++, __importStar(require("react")));
const react_query_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[39]++, require("@tanstack/react-query"));
const queryClient_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[40]++, require("@/lib/queryClient"));
const use_language_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[41]++, require("@/hooks/use-language"));
const use_auth_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[42]++, require("@/hooks/use-auth"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[43]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[44]++, require("@hookform/resolvers/zod"));
const zod_2 =
/* istanbul ignore next */
(cov_100nd8042b().s[45]++, require("zod"));
const dialog_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[46]++, require("@/components/ui/dialog"));
const button_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[47]++, require("@/components/ui/button"));
const input_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[48]++, require("@/components/ui/input"));
const textarea_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[49]++, require("@/components/ui/textarea"));
const select_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[50]++, require("@/components/ui/select"));
const form_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[51]++, require("@/components/ui/form"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[52]++, require("lucide-react"));
const use_toast_1 =
/* istanbul ignore next */
(cov_100nd8042b().s[53]++, require("@/hooks/use-toast"));
// Form validation schema
const invitationSchema =
/* istanbul ignore next */
(cov_100nd8042b().s[54]++, zod_2.z.object({
  email: zod_2.z.string().email('invalidEmailFormat').optional(),
  firstName: zod_2.z.string().max(50, 'firstNameTooLong').regex(/^[a-zA-ZÀ-ÿ\s'-]*$/, 'firstNameInvalidCharacters').optional(),
  lastName: zod_2.z.string().max(50, 'lastNameTooLong').regex(/^[a-zA-ZÀ-ÿ\s'-]*$/, 'lastNameInvalidCharacters').optional(),
  role: zod_2.z.enum(['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident']),
  organizationId: zod_2.z.string().min(1, 'organizationRequired'),
  buildingId: zod_2.z.string().optional(),
  residenceId: zod_2.z.string().optional(),
  personalMessage: zod_2.z.string().max(500, 'personalMessageTooLong').optional(),
  expiryDays: zod_2.z.number().min(1, 'expiryDaysInvalid').max(30, 'expiryDaysInvalid')
}).refine(data => {
  /* istanbul ignore next */
  cov_100nd8042b().f[9]++;
  cov_100nd8042b().s[55]++;
  // For demo roles, first and last name are required instead of email
  if (['demo_manager', 'demo_tenant', 'demo_resident'].includes(data.role)) {
    /* istanbul ignore next */
    cov_100nd8042b().b[17][0]++;
    cov_100nd8042b().s[56]++;
    return /* istanbul ignore next */(cov_100nd8042b().b[18][0]++, !!data.firstName) &&
    /* istanbul ignore next */
    (cov_100nd8042b().b[18][1]++, !!data.lastName);
  } else
  /* istanbul ignore next */
  {
    cov_100nd8042b().b[17][1]++;
  }
  // For regular roles, email is required
  cov_100nd8042b().s[57]++;
  return !!data.email;
}, {
  message: 'Email address is required for regular invitations (example: user@domain.com). For demo users, provide first and last name instead.',
  path: ['email']
}).refine(data => {
  /* istanbul ignore next */
  cov_100nd8042b().f[10]++;
  cov_100nd8042b().s[58]++;
  // If role is tenant or resident and a specific building is selected, residence must be assigned
  if (
  /* istanbul ignore next */
  (cov_100nd8042b().b[20][0]++, ['tenant', 'resident', 'demo_tenant', 'demo_resident'].includes(data.role)) &&
  /* istanbul ignore next */
  (cov_100nd8042b().b[20][1]++, data.buildingId) &&
  /* istanbul ignore next */
  (cov_100nd8042b().b[20][2]++, data.buildingId !== 'none') &&
  /* istanbul ignore next */
  (cov_100nd8042b().b[20][3]++, data.buildingId !== '')) {
    /* istanbul ignore next */
    cov_100nd8042b().b[19][0]++;
    cov_100nd8042b().s[59]++;
    return /* istanbul ignore next */(cov_100nd8042b().b[21][0]++, !!data.residenceId) &&
    /* istanbul ignore next */
    (cov_100nd8042b().b[21][1]++, data.residenceId !== '');
  } else
  /* istanbul ignore next */
  {
    cov_100nd8042b().b[19][1]++;
  }
  cov_100nd8042b().s[60]++;
  return true;
}, {
  message: 'Please select a specific residence unit for tenants and residents when a building is selected',
  path: ['residenceId']
}));
/**
 * Send Invitation Dialog Component.
 *
 * Allows sending single invitations with comprehensive options
 * including role selection, organization/building assignment, and custom messages.
 * @param props - Component props.
 * @param props.open - Whether dialog is open.
 * @param props.onOpenChange - Handler for dialog open state changes.
 * @param props.onSuccess - Handler called when invitation is sent successfully.
 * @returns JSX element for the invitation dialog.
 */
function SendInvitationDialog({
  open,
  onOpenChange,
  onSuccess
}) {
  /* istanbul ignore next */
  cov_100nd8042b().f[11]++;
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_100nd8042b().s[61]++, (0, use_language_1.useLanguage)());
  const {
    user: currentUser,
    hasRole
  } =
  /* istanbul ignore next */
  (cov_100nd8042b().s[62]++, (0, use_auth_1.useAuth)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_100nd8042b().s[63]++, (0, use_toast_1.useToast)());
  const [selectedOrgType, setSelectedOrgType] =
  /* istanbul ignore next */
  (cov_100nd8042b().s[64]++, (0, react_1.useState)(''));
  // Single invitation form
  const form =
  /* istanbul ignore next */
  (cov_100nd8042b().s[65]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(invitationSchema),
    defaultValues: {
      email: '',
      firstName: '',
      lastName: '',
      role: 'tenant',
      organizationId: '',
      buildingId: '',
      residenceId: '',
      expiryDays: 7,
      personalMessage: ''
    }
  }));
  // Fetch organizations (filtered by user access)
  const {
    data: organizations
  } =
  /* istanbul ignore next */
  (cov_100nd8042b().s[66]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/organizations'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_100nd8042b().f[12]++;
      const response =
      /* istanbul ignore next */
      (cov_100nd8042b().s[67]++, await (0, queryClient_1.apiRequest)('GET', '/api/organizations'));
      /* istanbul ignore next */
      cov_100nd8042b().s[68]++;
      return response.json();
    },
    enabled: open
  }));
  // Fetch buildings
  const {
    data: buildings,
    error: buildingsError,
    isLoading: buildingsLoading
  } =
  /* istanbul ignore next */
  (cov_100nd8042b().s[69]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/manager/buildings'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_100nd8042b().f[13]++;
      const response =
      /* istanbul ignore next */
      (cov_100nd8042b().s[70]++, await (0, queryClient_1.apiRequest)('GET', '/api/manager/buildings'));
      const data =
      /* istanbul ignore next */
      (cov_100nd8042b().s[71]++, await response.json());
      // The API returns { buildings: [...], meta: {...} } but we need just the buildings array
      /* istanbul ignore next */
      cov_100nd8042b().s[72]++;
      return /* istanbul ignore next */(cov_100nd8042b().b[22][0]++, data.buildings) ||
      /* istanbul ignore next */
      (cov_100nd8042b().b[22][1]++, data);
    },
    enabled: open
  }));
  // Fetch residences  
  const {
    data: residences
  } =
  /* istanbul ignore next */
  (cov_100nd8042b().s[73]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/residences'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_100nd8042b().f[14]++;
      const response =
      /* istanbul ignore next */
      (cov_100nd8042b().s[74]++, await (0, queryClient_1.apiRequest)('GET', '/api/residences'));
      const data =
      /* istanbul ignore next */
      (cov_100nd8042b().s[75]++, await response.json());
      // Handle both direct array and wrapped response formats
      /* istanbul ignore next */
      cov_100nd8042b().s[76]++;
      return /* istanbul ignore next */(cov_100nd8042b().b[23][0]++, data.residences) ||
      /* istanbul ignore next */
      (cov_100nd8042b().b[23][1]++, data);
    },
    enabled: open
  }));
  // Helper functions for filtering data based on selections
  /* istanbul ignore next */
  cov_100nd8042b().s[77]++;
  const getFilteredOrganizations = () => {
    /* istanbul ignore next */
    cov_100nd8042b().f[15]++;
    cov_100nd8042b().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_100nd8042b().b[25][0]++, !organizations) ||
    /* istanbul ignore next */
    (cov_100nd8042b().b[25][1]++, !Array.isArray(organizations))) {
      /* istanbul ignore next */
      cov_100nd8042b().b[24][0]++;
      cov_100nd8042b().s[79]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[24][1]++;
    }
    // Filter out any invalid organizations with detailed logging
    const validOrgs =
    /* istanbul ignore next */
    (cov_100nd8042b().s[80]++, organizations.filter(org => {
      /* istanbul ignore next */
      cov_100nd8042b().f[16]++;
      const isValid =
      /* istanbul ignore next */
      (cov_100nd8042b().s[81]++,
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][0]++, org) &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][1]++, typeof org === 'object') &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][2]++, org.id) &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][3]++, typeof org.id === 'string') &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][4]++, org.id.trim() !== '') &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][5]++, org.name) &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][6]++, typeof org.name === 'string') &&
      /* istanbul ignore next */
      (cov_100nd8042b().b[26][7]++, org.name.trim() !== ''));
      /* istanbul ignore next */
      cov_100nd8042b().s[82]++;
      return isValid;
    }));
    /* istanbul ignore next */
    cov_100nd8042b().s[83]++;
    if (currentUser?.role === 'admin') {
      /* istanbul ignore next */
      cov_100nd8042b().b[27][0]++;
      cov_100nd8042b().s[84]++;
      // Admins can add users to any organization
      return validOrgs;
    } else {
      /* istanbul ignore next */
      cov_100nd8042b().b[27][1]++;
      cov_100nd8042b().s[85]++;
      if (currentUser?.role === 'manager') {
        /* istanbul ignore next */
        cov_100nd8042b().b[28][0]++;
        cov_100nd8042b().s[86]++;
        // Managers can only add users to their own organization
        return validOrgs;
      } else
      /* istanbul ignore next */
      {
        cov_100nd8042b().b[28][1]++;
      }
    }
    // Default: show all valid organizations for now
    /* istanbul ignore next */
    cov_100nd8042b().s[87]++;
    return validOrgs;
  };
  // Check if user can access a specific organization for invitations
  /* istanbul ignore next */
  cov_100nd8042b().s[88]++;
  const canInviteToOrganization = orgId => {
    /* istanbul ignore next */
    cov_100nd8042b().f[17]++;
    cov_100nd8042b().s[89]++;
    if (
    /* istanbul ignore next */
    (cov_100nd8042b().b[30][0]++, !orgId) ||
    /* istanbul ignore next */
    (cov_100nd8042b().b[30][1]++, !organizations)) {
      /* istanbul ignore next */
      cov_100nd8042b().b[29][0]++;
      cov_100nd8042b().s[90]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[29][1]++;
    }
    const targetOrg =
    /* istanbul ignore next */
    (cov_100nd8042b().s[91]++, organizations.find(org => {
      /* istanbul ignore next */
      cov_100nd8042b().f[18]++;
      cov_100nd8042b().s[92]++;
      return org.id === orgId;
    }));
    const currentUserOrg =
    /* istanbul ignore next */
    (cov_100nd8042b().s[93]++, organizations[0]); // Use first organization for access control
    // Organization filtering for user access control
    /* istanbul ignore next */
    cov_100nd8042b().s[94]++;
    if (targetOrg?.name?.toLowerCase() === 'demo') {
      /* istanbul ignore next */
      cov_100nd8042b().b[31][0]++;
      cov_100nd8042b().s[95]++;
      return currentUser?.role === 'admin';
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[31][1]++;
    }
    // Koveo organization users can add to any organization (override all restrictions)
    cov_100nd8042b().s[96]++;
    if (currentUserOrg?.name?.toLowerCase() === 'koveo') {
      /* istanbul ignore next */
      cov_100nd8042b().b[32][0]++;
      cov_100nd8042b().s[97]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[32][1]++;
    }
    // Simplified access control for now
    // Admins can add to organizations they have access to
    cov_100nd8042b().s[98]++;
    if (currentUser?.role === 'admin') {
      /* istanbul ignore next */
      cov_100nd8042b().b[33][0]++;
      cov_100nd8042b().s[99]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[33][1]++;
    }
    // Others can only add to their own organization - simplified for now
    cov_100nd8042b().s[100]++;
    return true;
  };
  /* istanbul ignore next */
  cov_100nd8042b().s[101]++;
  const getFilteredBuildings = selectedOrgId => {
    /* istanbul ignore next */
    cov_100nd8042b().f[19]++;
    cov_100nd8042b().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_100nd8042b().b[35][0]++, !buildings) ||
    /* istanbul ignore next */
    (cov_100nd8042b().b[35][1]++, !selectedOrgId)) {
      /* istanbul ignore next */
      cov_100nd8042b().b[34][0]++;
      cov_100nd8042b().s[103]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[34][1]++;
    }
    cov_100nd8042b().s[104]++;
    return buildings.filter(building => {
      /* istanbul ignore next */
      cov_100nd8042b().f[20]++;
      cov_100nd8042b().s[105]++;
      return building.organizationId === selectedOrgId;
    });
  };
  /* istanbul ignore next */
  cov_100nd8042b().s[106]++;
  const getFilteredResidences = (selectedBuildingId, selectedOrgId) => {
    /* istanbul ignore next */
    cov_100nd8042b().f[21]++;
    cov_100nd8042b().s[107]++;
    if (!residences) {
      /* istanbul ignore next */
      cov_100nd8042b().b[36][0]++;
      cov_100nd8042b().s[108]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[36][1]++;
    }
    // If a specific building is selected, show only residences from that building
    cov_100nd8042b().s[109]++;
    if (
    /* istanbul ignore next */
    (cov_100nd8042b().b[38][0]++, selectedBuildingId) &&
    /* istanbul ignore next */
    (cov_100nd8042b().b[38][1]++, selectedBuildingId !== 'none')) {
      /* istanbul ignore next */
      cov_100nd8042b().b[37][0]++;
      cov_100nd8042b().s[110]++;
      return residences.filter(residence => {
        /* istanbul ignore next */
        cov_100nd8042b().f[22]++;
        cov_100nd8042b().s[111]++;
        return residence.buildingId === selectedBuildingId;
      });
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[37][1]++;
    }
    // If no building selected but organization is selected, show all residences from that organization
    cov_100nd8042b().s[112]++;
    if (
    /* istanbul ignore next */
    (cov_100nd8042b().b[40][0]++, selectedOrgId) && (
    /* istanbul ignore next */
    (cov_100nd8042b().b[40][1]++, !selectedBuildingId) ||
    /* istanbul ignore next */
    (cov_100nd8042b().b[40][2]++, selectedBuildingId === 'none'))) {
      /* istanbul ignore next */
      cov_100nd8042b().b[39][0]++;
      const orgBuildings =
      /* istanbul ignore next */
      (cov_100nd8042b().s[113]++,
      /* istanbul ignore next */
      (cov_100nd8042b().b[41][0]++, buildings?.filter(building => {
        /* istanbul ignore next */
        cov_100nd8042b().f[23]++;
        cov_100nd8042b().s[114]++;
        return building.organizationId === selectedOrgId;
      })) ||
      /* istanbul ignore next */
      (cov_100nd8042b().b[41][1]++, []));
      const orgBuildingIds =
      /* istanbul ignore next */
      (cov_100nd8042b().s[115]++, orgBuildings.map(building => {
        /* istanbul ignore next */
        cov_100nd8042b().f[24]++;
        cov_100nd8042b().s[116]++;
        return building.id;
      }));
      /* istanbul ignore next */
      cov_100nd8042b().s[117]++;
      return residences.filter(residence => {
        /* istanbul ignore next */
        cov_100nd8042b().f[25]++;
        cov_100nd8042b().s[118]++;
        return orgBuildingIds.includes(residence.buildingId);
      });
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[39][1]++;
    }
    cov_100nd8042b().s[119]++;
    return [];
  };
  // Single invitation mutation
  const invitationMutation =
  /* istanbul ignore next */
  (cov_100nd8042b().s[120]++, (0, react_query_1.useMutation)({
    mutationFn: async data => {
      /* istanbul ignore next */
      cov_100nd8042b().f[26]++;
      const expiresAt =
      /* istanbul ignore next */
      (cov_100nd8042b().s[121]++, new Date());
      /* istanbul ignore next */
      cov_100nd8042b().s[122]++;
      expiresAt.setDate(expiresAt.getDate() + data.expiryDays);
      // For demo roles, create user directly instead of sending invitation
      /* istanbul ignore next */
      cov_100nd8042b().s[123]++;
      if (['demo_manager', 'demo_tenant', 'demo_resident'].includes(data.role)) {
        /* istanbul ignore next */
        cov_100nd8042b().b[42][0]++;
        const response =
        /* istanbul ignore next */
        (cov_100nd8042b().s[124]++, await (0, queryClient_1.apiRequest)('POST', '/api/users/demo', {
          firstName: data.firstName,
          lastName: data.lastName,
          role: data.role,
          organizationId: data.organizationId,
          residenceId:
          /* istanbul ignore next */
          (cov_100nd8042b().b[43][0]++, data.residenceId) ||
          /* istanbul ignore next */
          (cov_100nd8042b().b[43][1]++, null)
        }));
        /* istanbul ignore next */
        cov_100nd8042b().s[125]++;
        return response.json();
      } else
      /* istanbul ignore next */
      {
        cov_100nd8042b().b[42][1]++;
      }
      // Regular invitation flow
      const response =
      /* istanbul ignore next */
      (cov_100nd8042b().s[126]++, await (0, queryClient_1.apiRequest)('POST', '/api/invitations', {
        organizationId: data.organizationId,
        residenceId:
        /* istanbul ignore next */
        (cov_100nd8042b().b[44][0]++, data.residenceId) ||
        /* istanbul ignore next */
        (cov_100nd8042b().b[44][1]++, null),
        email: data.email,
        role: data.role,
        invitedByUserId: currentUser?.id,
        expiresAt: expiresAt.toISOString(),
        personalMessage:
        /* istanbul ignore next */
        (cov_100nd8042b().b[45][0]++, data.personalMessage) ||
        /* istanbul ignore next */
        (cov_100nd8042b().b[45][1]++, null)
      }));
      /* istanbul ignore next */
      cov_100nd8042b().s[127]++;
      return response.json();
    },
    onSuccess: (_, variables) => {
      /* istanbul ignore next */
      cov_100nd8042b().f[27]++;
      const isDemoRole =
      /* istanbul ignore next */
      (cov_100nd8042b().s[128]++, ['demo_manager', 'demo_tenant', 'demo_resident'].includes(variables.role));
      /* istanbul ignore next */
      cov_100nd8042b().s[129]++;
      toast({
        title: isDemoRole ?
        /* istanbul ignore next */
        (cov_100nd8042b().b[46][0]++, 'Demo User Created') :
        /* istanbul ignore next */
        (cov_100nd8042b().b[46][1]++, t('invitationSent')),
        description: isDemoRole ?
        /* istanbul ignore next */
        (cov_100nd8042b().b[47][0]++, 'Demo user has been created successfully') :
        /* istanbul ignore next */
        (cov_100nd8042b().b[47][1]++, t('invitationSentSuccessfully'))
      });
      /* istanbul ignore next */
      cov_100nd8042b().s[130]++;
      form.reset();
      /* istanbul ignore next */
      cov_100nd8042b().s[131]++;
      onSuccess();
      /* istanbul ignore next */
      cov_100nd8042b().s[132]++;
      onOpenChange(false);
    },
    onError: error => {
      /* istanbul ignore next */
      cov_100nd8042b().f[28]++;
      cov_100nd8042b().s[133]++;
      toast({
        title: 'Error',
        description: error.message,
        variant: 'destructive'
      });
    }
  }));
  /* istanbul ignore next */
  cov_100nd8042b().s[134]++;
  const onSubmit = _data => {
    /* istanbul ignore next */
    cov_100nd8042b().f[29]++;
    cov_100nd8042b().s[135]++;
    invitationMutation.mutate(_data);
  };
  /* istanbul ignore next */
  cov_100nd8042b().s[136]++;
  const canInviteRole = role => {
    /* istanbul ignore next */
    cov_100nd8042b().f[30]++;
    cov_100nd8042b().s[137]++;
    if (hasRole(['admin'])) {
      /* istanbul ignore next */
      cov_100nd8042b().b[48][0]++;
      cov_100nd8042b().s[138]++;
      // Only admin can invite an admin, admin can invite to any organization
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[48][1]++;
    }
    cov_100nd8042b().s[139]++;
    if (hasRole(['manager'])) {
      /* istanbul ignore next */
      cov_100nd8042b().b[49][0]++;
      cov_100nd8042b().s[140]++;
      // Manager can invite regular and demo roles (but not admin)
      if (['resident', 'tenant', 'manager', 'demo_manager', 'demo_tenant', 'demo_resident'].includes(role)) {
        /* istanbul ignore next */
        cov_100nd8042b().b[50][0]++;
        cov_100nd8042b().s[141]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_100nd8042b().b[50][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[49][1]++;
    }
    // Residents and tenants cannot invite anyone
    cov_100nd8042b().s[142]++;
    return false;
  };
  // Get available roles based on organization type using useMemo for proper reactivity
  const organizationId =
  /* istanbul ignore next */
  (cov_100nd8042b().s[143]++, form.watch('organizationId'));
  const availableRoles =
  /* istanbul ignore next */
  (cov_100nd8042b().s[144]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_100nd8042b().f[31]++;
    cov_100nd8042b().s[145]++;
    // Return empty array if no organization is selected
    if (!organizationId) {
      /* istanbul ignore next */
      cov_100nd8042b().b[51][0]++;
      cov_100nd8042b().s[146]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[51][1]++;
    }
    const selectedOrg =
    /* istanbul ignore next */
    (cov_100nd8042b().s[147]++, organizations?.find(org => {
      /* istanbul ignore next */
      cov_100nd8042b().f[32]++;
      cov_100nd8042b().s[148]++;
      return org.id === organizationId;
    }));
    const isDemoOrg =
    /* istanbul ignore next */
    (cov_100nd8042b().s[149]++, selectedOrg?.type === 'demo');
    /* istanbul ignore next */
    cov_100nd8042b().s[150]++;
    if (isDemoOrg) {
      /* istanbul ignore next */
      cov_100nd8042b().b[52][0]++;
      // For demo organizations, allow both demo roles and regular roles
      const roles =
      /* istanbul ignore next */
      (cov_100nd8042b().s[151]++, ['admin', 'manager', 'tenant', 'resident', 'demo_manager', 'demo_tenant', 'demo_resident'].filter(canInviteRole));
      /* istanbul ignore next */
      cov_100nd8042b().s[152]++;
      return roles;
    } else
    /* istanbul ignore next */
    {
      cov_100nd8042b().b[52][1]++;
    }
    const roles =
    /* istanbul ignore next */
    (cov_100nd8042b().s[153]++, ['admin', 'manager', 'tenant', 'resident'].filter(canInviteRole));
    /* istanbul ignore next */
    cov_100nd8042b().s[154]++;
    return roles;
  }, [organizationId, organizations, hasRole]));
  /* istanbul ignore next */
  cov_100nd8042b().s[155]++;
  return (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
    open: open,
    onOpenChange: onOpenChange,
    children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
      className: 'max-w-2xl max-h-[90vh] overflow-y-auto',
      children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
        children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogTitle, {
          className: 'flex items-center gap-2',
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.UserPlus, {
            className: 'h-5 w-5'
          }), t('inviteUser')]
        }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, {
          children: t('inviteUserDescription')
        })]
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'space-y-4',
        children: (0, jsx_runtime_1.jsx)(form_1.Form, {
          ...form,
          children: (0, jsx_runtime_1.jsxs)("form", {
            onSubmit: form.handleSubmit(onSubmit),
            className: 'space-y-4',
            children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'organizationId',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[33]++;
                cov_100nd8042b().s[156]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsxs)(form_1.FormLabel, {
                    children: [t('organization'), " *"]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsxs)("select", {
                      ...field,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[34]++;
                        cov_100nd8042b().s[157]++;
                        field.onChange(e.target.value);
                        const selectedOrg =
                        /* istanbul ignore next */
                        (cov_100nd8042b().s[158]++, organizations?.find(org => {
                          /* istanbul ignore next */
                          cov_100nd8042b().f[35]++;
                          cov_100nd8042b().s[159]++;
                          return org.id === e.target.value;
                        }));
                        /* istanbul ignore next */
                        cov_100nd8042b().s[160]++;
                        setSelectedOrgType(
                        /* istanbul ignore next */
                        (cov_100nd8042b().b[53][0]++, selectedOrg?.type) ||
                        /* istanbul ignore next */
                        (cov_100nd8042b().b[53][1]++, ''));
                        // Reset building and residence when organization changes
                        /* istanbul ignore next */
                        cov_100nd8042b().s[161]++;
                        form.setValue('buildingId', '');
                        /* istanbul ignore next */
                        cov_100nd8042b().s[162]++;
                        form.setValue('residenceId', '');
                        // Reset role when switching between demo and regular orgs
                        /* istanbul ignore next */
                        cov_100nd8042b().s[163]++;
                        form.setValue('role', selectedOrg?.type === 'demo' ?
                        /* istanbul ignore next */
                        (cov_100nd8042b().b[54][0]++, 'demo_tenant') :
                        /* istanbul ignore next */
                        (cov_100nd8042b().b[54][1]++, 'tenant'));
                      },
                      disabled: currentUser?.role === 'manager',
                      className: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',
                      children: [(0, jsx_runtime_1.jsx)("option", {
                        value: '',
                        children: t('selectOrganization')
                      }), getFilteredOrganizations().map(org => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[36]++;
                        cov_100nd8042b().s[164]++;
                        if (
                        /* istanbul ignore next */
                        (cov_100nd8042b().b[56][0]++, !org?.id) ||
                        /* istanbul ignore next */
                        (cov_100nd8042b().b[56][1]++, !org?.name)) {
                          /* istanbul ignore next */
                          cov_100nd8042b().b[55][0]++;
                          cov_100nd8042b().s[165]++;
                          return null;
                        } else
                        /* istanbul ignore next */
                        {
                          cov_100nd8042b().b[55][1]++;
                        }
                        const canInvite =
                        /* istanbul ignore next */
                        (cov_100nd8042b().s[166]++, canInviteToOrganization(org.id));
                        /* istanbul ignore next */
                        cov_100nd8042b().s[167]++;
                        return (0, jsx_runtime_1.jsxs)("option", {
                          value: org.id,
                          disabled: !canInvite,
                          children: [org.name, " ", org.type === 'demo' ?
                          /* istanbul ignore next */
                          (cov_100nd8042b().b[57][0]++, '(Demo)') :
                          /* istanbul ignore next */
                          (cov_100nd8042b().b[57][1]++, '')]
                        }, org.id);
                      })]
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormDescription, {
                    children: currentUser?.role === 'manager' ?
                    /* istanbul ignore next */
                    (cov_100nd8042b().b[58][0]++, 'Managers can only invite to their organization') :
                    /* istanbul ignore next */
                    (cov_100nd8042b().b[58][1]++, 'Select target organization')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'role',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[37]++;
                cov_100nd8042b().s[168]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('role')
                  }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    onValueChange: field.onChange,
                    value: field.value,
                    disabled: !organizationId,
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                        children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                          placeholder: t('selectRole')
                        })
                      })
                    }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                      children: organizationId ?
                      /* istanbul ignore next */
                      (cov_100nd8042b().b[59][0]++, availableRoles.map(role => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[38]++;
                        cov_100nd8042b().s[169]++;
                        return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                          value: role,
                          children: (0, jsx_runtime_1.jsxs)("div", {
                            className: 'flex items-center gap-2',
                            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Shield, {
                              className: 'h-4 w-4'
                            }), role === 'admin' ?
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[60][0]++, t('admin')) :
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[60][1]++, role === 'manager' ?
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[61][0]++, t('manager')) :
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[61][1]++, role === 'resident' ?
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[62][0]++, t('resident')) :
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[62][1]++, role === 'tenant' ?
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[63][0]++, t('tenant')) :
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[63][1]++, role === 'demo_manager' ?
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[64][0]++, 'Demo Manager') :
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[64][1]++, role === 'demo_tenant' ?
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[65][0]++, 'Demo Tenant') :
                            /* istanbul ignore next */
                            (cov_100nd8042b().b[65][1]++, 'Demo Resident'))))))]
                          })
                        }, role);
                      })) :
                      /* istanbul ignore next */
                      (cov_100nd8042b().b[59][1]++, (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: "no-organization",
                        disabled: true,
                        children: "Please select an organization first"
                      }))
                    })]
                  }, `role-select-${organizationId}`), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            }), ['demo_manager', 'demo_tenant', 'demo_resident'].includes(form.watch('role')) ?
            /* istanbul ignore next */
            (cov_100nd8042b().b[66][0]++, (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {
              children: [(0, jsx_runtime_1.jsx)(form_1.FormField, {
                control: form.control,
                name: 'firstName',
                render: ({
                  field
                }) => {
                  /* istanbul ignore next */
                  cov_100nd8042b().f[39]++;
                  cov_100nd8042b().s[170]++;
                  return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                      children: "First Name *"
                    }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                        placeholder: 'Enter first name',
                        ...field
                      })
                    }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                  });
                }
              }), (0, jsx_runtime_1.jsx)(form_1.FormField, {
                control: form.control,
                name: 'lastName',
                render: ({
                  field
                }) => {
                  /* istanbul ignore next */
                  cov_100nd8042b().f[40]++;
                  cov_100nd8042b().s[171]++;
                  return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                    children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                      children: "Last Name *"
                    }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                      children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                        placeholder: 'Enter last name',
                        ...field
                      })
                    }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                  });
                }
              })]
            })) :
            /* istanbul ignore next */
            (cov_100nd8042b().b[66][1]++, (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'email',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[41]++;
                cov_100nd8042b().s[172]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsxs)(form_1.FormLabel, {
                    children: [t('emailAddress'), " *"]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(input_1.Input, {
                      placeholder: t('enterEmailAddress'),
                      type: 'email',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })),
            /* istanbul ignore next */
            (cov_100nd8042b().b[67][0]++, form.watch('organizationId')) &&
            /* istanbul ignore next */
            (cov_100nd8042b().b[67][1]++, (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'buildingId',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[42]++;
                cov_100nd8042b().s[173]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsxs)(form_1.FormLabel, {
                    children: ['Building', " (", t('optional'), ")"]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsxs)("select", {
                      ...field,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[43]++;
                        cov_100nd8042b().s[174]++;
                        field.onChange(e.target.value);
                        // Reset residence when building changes
                        /* istanbul ignore next */
                        cov_100nd8042b().s[175]++;
                        form.setValue('residenceId', '');
                      },
                      className: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',
                      children: [(0, jsx_runtime_1.jsx)("option", {
                        value: '',
                        children: 'Select building'
                      }), (0, jsx_runtime_1.jsx)("option", {
                        value: 'none',
                        children: 'No specific building'
                      }), getFilteredBuildings(form.watch('organizationId')).map(building => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[44]++;
                        cov_100nd8042b().s[176]++;
                        return (0, jsx_runtime_1.jsxs)("option", {
                          value: building.id,
                          children: [building.name, " - ", building.address]
                        }, building.id);
                      })]
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })),
            /* istanbul ignore next */
            (cov_100nd8042b().b[68][0]++, ['tenant', 'resident', 'demo_tenant', 'demo_resident'].includes(form.watch('role'))) &&
            /* istanbul ignore next */
            (cov_100nd8042b().b[68][1]++, form.watch('buildingId')) &&
            /* istanbul ignore next */
            (cov_100nd8042b().b[68][2]++, form.watch('buildingId') !== 'none') &&
            /* istanbul ignore next */
            (cov_100nd8042b().b[68][3]++, (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'residenceId',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[45]++;
                cov_100nd8042b().s[177]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsxs)(form_1.FormLabel, {
                    children: ['Residence', " *"]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsxs)("select", {
                      ...field,
                      onChange: field.onChange,
                      className: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',
                      children: [(0, jsx_runtime_1.jsx)("option", {
                        value: '',
                        children: 'Select residence'
                      }), getFilteredResidences(form.watch('buildingId'), form.watch('organizationId')).map(residence => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[46]++;
                        cov_100nd8042b().s[178]++;
                        return (0, jsx_runtime_1.jsxs)("option", {
                          value: residence.id,
                          children: ['Unit', " ", residence.unitNumber,
                          /* istanbul ignore next */
                          (cov_100nd8042b().b[69][0]++, residence.floor) &&
                          /* istanbul ignore next */
                          (cov_100nd8042b().b[69][1]++, ` - ${'Floor'} ${residence.floor}`)]
                        }, residence.id);
                      })]
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormDescription, {
                    children: 'Residence required for tenants and residents'
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })),
            /* istanbul ignore next */
            (cov_100nd8042b().b[70][0]++, !['demo_manager', 'demo_tenant', 'demo_resident'].includes(form.watch('role'))) &&
            /* istanbul ignore next */
            (cov_100nd8042b().b[70][1]++, (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'expiryDays',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[47]++;
                cov_100nd8042b().s[179]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsx)(form_1.FormLabel, {
                    children: t('expiresIn')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsxs)("select", {
                      ...field,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_100nd8042b().f[48]++;
                        cov_100nd8042b().s[180]++;
                        return field.onChange(parseInt(e.target.value));
                      },
                      value: field.value.toString(),
                      className: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',
                      children: [(0, jsx_runtime_1.jsxs)("option", {
                        value: '1',
                        children: ["1 ", t('day')]
                      }), (0, jsx_runtime_1.jsxs)("option", {
                        value: '3',
                        children: ["3 ", t('days')]
                      }), (0, jsx_runtime_1.jsxs)("option", {
                        value: '7',
                        children: ["7 ", t('days')]
                      }), (0, jsx_runtime_1.jsxs)("option", {
                        value: '14',
                        children: ["14 ", t('days')]
                      }), (0, jsx_runtime_1.jsxs)("option", {
                        value: '30',
                        children: ["30 ", t('days')]
                      })]
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })),
            /* istanbul ignore next */
            (cov_100nd8042b().b[71][0]++, !['demo_manager', 'demo_tenant', 'demo_resident'].includes(form.watch('role'))) &&
            /* istanbul ignore next */
            (cov_100nd8042b().b[71][1]++, (0, jsx_runtime_1.jsx)(form_1.FormField, {
              control: form.control,
              name: 'personalMessage',
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_100nd8042b().f[49]++;
                cov_100nd8042b().s[181]++;
                return (0, jsx_runtime_1.jsxs)(form_1.FormItem, {
                  children: [(0, jsx_runtime_1.jsxs)(form_1.FormLabel, {
                    children: [t('personalMessage'), " (", t('optional'), ")"]
                  }), (0, jsx_runtime_1.jsx)(form_1.FormControl, {
                    children: (0, jsx_runtime_1.jsx)(textarea_1.Textarea, {
                      placeholder: t('personalMessagePlaceholder'),
                      className: 'min-h-[80px]',
                      ...field
                    })
                  }), (0, jsx_runtime_1.jsx)(form_1.FormDescription, {
                    children: t('personalMessageDescription')
                  }), (0, jsx_runtime_1.jsx)(form_1.FormMessage, {})]
                });
              }
            })), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, {
              children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
                type: 'button',
                variant: 'outline',
                onClick: () => {
                  /* istanbul ignore next */
                  cov_100nd8042b().f[50]++;
                  cov_100nd8042b().s[182]++;
                  return onOpenChange(false);
                },
                children: t('cancel')
              }), (0, jsx_runtime_1.jsx)(button_1.Button, {
                type: 'submit',
                disabled: invitationMutation.isPending,
                children: invitationMutation.isPending ?
                /* istanbul ignore next */
                (cov_100nd8042b().b[72][0]++, selectedOrgType === 'Demo' ?
                /* istanbul ignore next */
                (cov_100nd8042b().b[73][0]++, 'Creating User...') :
                /* istanbul ignore next */
                (cov_100nd8042b().b[73][1]++, t('sending'))) :
                /* istanbul ignore next */
                (cov_100nd8042b().b[72][1]++, selectedOrgType === 'Demo' ?
                /* istanbul ignore next */
                (cov_100nd8042b().b[74][0]++, 'Create Demo User') :
                /* istanbul ignore next */
                (cov_100nd8042b().b[74][1]++, t('sendInvitation')))
              })]
            })]
          })
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,