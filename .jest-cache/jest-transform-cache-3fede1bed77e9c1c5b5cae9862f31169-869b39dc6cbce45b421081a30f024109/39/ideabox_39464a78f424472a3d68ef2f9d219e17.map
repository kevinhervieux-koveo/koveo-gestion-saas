{"version":3,"names":["cov_1dia6uj66m","actualCoverage","s","exports","default","IdeaBox","react_1","require","react_query_1","header_1","card_1","badge_1","button_1","input_1","textarea_1","select_1","label_1","dialog_1","collapsible_1","lucide_react_1","react_hook_form_1","zod_1","zod_2","queryClient_1","use_toast_1","use_auth_1","document_management_1","AttachedFileSection_1","featureRequestFormSchema","z","object","title","string","min","max","description","need","category","enum","page","editFormSchema","extend","status","optional","adminNotes","categoryLabels","dashboard","property_management","resident_management","financial_management","maintenance","document_management","communication","reports","mobile_app","integrations","security","performance","other","statusColors","submitted","under_review","planned","in_progress","completed","rejected","categoryIcons","IdeaCard","idea","onView","onEdit","onUpvote","canEdit","canUpvote","f","formatDate","dateString","date","Date","now","diffMs","getTime","diffDays","Math","floor","b","toLocaleDateString","jsx_runtime_1","jsxs","Card","className","onClick","id","children","jsx","CardHeader","Button","variant","size","e","stopPropagation","Edit2","filePath","window","open","Paperclip","CardContent","Badge","replace","disabled","ThumbsUp","upvoteCount","createdAt","isCreateDialogOpen","setIsCreateDialogOpen","useState","isEditDialogOpen","setIsEditDialogOpen","isViewDialogOpen","setIsViewDialogOpen","viewingFeatureRequest","setViewingFeatureRequest","editingFeatureRequest","setEditingFeatureRequest","searchTerm","setSearchTerm","statusFilter","setStatusFilter","categoryFilter","setCategoryFilter","sortBy","setSortBy","expandedCategories","setExpandedCategories","Set","attachmentMode","setAttachmentMode","attachmentText","setAttachmentText","editAttachmentMode","setEditAttachmentMode","editAttachmentText","setEditAttachmentText","uploadedFiles","setUploadedFiles","toast","useToast","user","useAuth","queryClient","useQueryClient","uploadContext","type","organizationId","userRole","role","userId","form","useForm","resolver","zodResolver","defaultValues","editForm","data","featureRequests","isLoading","useQuery","queryKey","enabled","canEditIdea","createdBy","canUpvoteIdea","filteredIdeas","useMemo","filtered","filter","matchesSearch","toLowerCase","includes","matchesStatus","matchesCategory","sort","a","ideasByCategory","grouped","forEach","push","createMutation","useMutation","mutationFn","formData","FormData","Object","entries","key","value","undefined","append","toString","file","fetch","method","body","then","res","json","onSuccess","invalidateQueries","reset","onError","error","message","updateMutation","upvoteMutation","apiRequest","deleteMutation","handleSubmit","mutate","enhancedData","file_content","handleEditSubmit","fileInput","document","querySelector","files","handleViewIdea","handleEditIdea","handleUpvoteIdea","handleDeleteIdea","confirm","toggleCategory","newExpanded","has","delete","add","map","i","Header","subtitle","Plus","CardTitle","Search","Input","placeholder","onChange","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","label","categoryKey","categoryLabel","categoryIdeas","length","isExpanded","Collapsible","onOpenChange","CollapsibleTrigger","ChevronDown","ChevronRight","CollapsibleContent","Dialog","DialogContent","DialogHeader","DialogTitle","onSubmit","Label","htmlFor","register","formState","errors","Textarea","rows","watch","setValue","SharedUploader","onDocumentChange","text","formType","showAiToggle","isPending","Fragment","AttachedFileSection","entityType","entityId","fileName","fileSize","accept","updatedAt"],"sources":["/home/runner/workspace/client/src/pages/settings/idea-box.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport {\n  Plus,\n  Search,\n  Filter,\n  ThumbsUp,\n  Calendar,\n  User,\n  Tag,\n  Edit2,\n  Eye,\n  Trash2,\n  MoreHorizontal,\n  TrendingUp,\n  Paperclip,\n  ChevronDown,\n  ChevronRight,\n} from 'lucide-react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/hooks/use-auth';\nimport { SharedUploader } from '@/components/document-management';\nimport { AttachedFileSection } from '@/components/common/AttachedFileSection';\nimport type { UploadContext } from '@shared/config/upload-config';\n\n// Feature request form schema\nconst featureRequestFormSchema = z.object({\n  title: z.string().min(1, 'Feature title is required').max(200, 'Title must be less than 200 characters'),\n  description: z\n    .string()\n    .min(10, 'Description must be at least 10 characters long')\n    .max(2000, 'Description must be less than 2000 characters'),\n  need: z\n    .string()\n    .min(5, 'Need explanation must be at least 5 characters long')\n    .max(500, 'Need explanation must be less than 500 characters'),\n  category: z.enum([\n    'dashboard',\n    'property_management',\n    'resident_management',\n    'financial_management',\n    'maintenance',\n    'document_management',\n    'communication',\n    'reports',\n    'mobile_app',\n    'integrations',\n    'security',\n    'performance',\n    'other',\n  ]),\n  page: z.string().min(1, 'Page location is required').max(100, 'Page location must be less than 100 characters'),\n});\n\n// Enhanced edit form schema for role-based editing\nconst editFormSchema = featureRequestFormSchema.extend({\n  status: z.enum(['submitted', 'under_review', 'planned', 'in_progress', 'completed', 'rejected']).optional(),\n  adminNotes: z.string().max(1000, 'Admin notes must be less than 1000 characters').optional(),\n});\n\ntype FeatureRequestFormData = z.infer<typeof featureRequestFormSchema>;\ntype EditFormData = z.infer<typeof editFormSchema>;\n\ninterface FeatureRequest {\n  id: string;\n  title: string;\n  description: string;\n  need: string;\n  category: string;\n  page: string;\n  status: string;\n  upvoteCount: number;\n  createdBy: string | null;\n  reviewedBy: string | null;\n  reviewedAt: string | null;\n  adminNotes: string | null;\n  mergedIntoId: string | null;\n  createdAt: string;\n  updatedAt: string;\n  // File attachment fields\n  filePath?: string | null;\n  fileName?: string | null;\n  fileSize?: number | null;\n  file_content?: string | null; // Text content for text-only documents\n}\n\nconst categoryLabels = {\n  dashboard: 'Dashboard',\n  property_management: 'Property Management',\n  resident_management: 'Resident Management',\n  financial_management: 'Financial Management',\n  maintenance: 'Maintenance',\n  document_management: 'Document Management',\n  communication: 'Communication',\n  reports: 'Reports',\n  mobile_app: 'Mobile App',\n  integrations: 'Integrations',\n  security: 'Security',\n  performance: 'Performance',\n  other: 'Other',\n};\n\nconst statusColors = {\n  submitted: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n  under_review: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',\n  planned: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',\n  in_progress: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\n  completed: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n  rejected: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',\n};\n\nconst categoryIcons = {\n  dashboard: '📊',\n  property_management: '🏢',\n  resident_management: '👥',\n  financial_management: '💰',\n  maintenance: '🔧',\n  document_management: '📁',\n  communication: '💬',\n  reports: '📈',\n  mobile_app: '📱',\n  integrations: '🔗',\n  security: '🔒',\n  performance: '⚡',\n  other: '❓',\n};\n\n// Idea Card Component\nfunction IdeaCard({ idea, onView, onEdit, onUpvote, canEdit, canUpvote }: {\n  idea: FeatureRequest;\n  onView: (idea: FeatureRequest) => void;\n  onEdit: (idea: FeatureRequest) => void;\n  onUpvote: (idea: FeatureRequest) => void;\n  canEdit: boolean;\n  canUpvote: boolean;\n}) {\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) return 'Today';\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays} days ago`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;\n    return date.toLocaleDateString();\n  };\n\n  return (\n    <Card \n      className=\"cursor-pointer hover:shadow-md transition-all duration-200 hover:border-blue-200 dark:hover:border-blue-700\"\n      onClick={() => onView(idea)}\n      data-testid={`card-idea-${idea.id}`}\n    >\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between gap-2\">\n          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n            <h3 className=\"font-semibold text-sm line-clamp-2 flex-1 break-words\" data-testid={`text-title-${idea.id}`}>\n              {idea.title}\n            </h3>\n          </div>\n          <div className=\"flex items-center gap-1 flex-shrink-0\">\n            {canEdit && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onEdit(idea);\n                }}\n                data-testid={`button-edit-${idea.id}`}\n                className=\"h-7 w-7 p-0 hover:bg-blue-100 dark:hover:bg-blue-900\"\n              >\n                <Edit2 className=\"h-3 w-3\" />\n              </Button>\n            )}\n            {idea.filePath && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  window.open(`/api/feature-requests/${idea.id}/file`, '_blank');\n                }}\n                data-testid={`button-file-${idea.id}`}\n                className=\"h-7 w-7 p-0 hover:bg-gray-100 dark:hover:bg-gray-800\"\n              >\n                <Paperclip className=\"h-3 w-3\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"pt-0\">\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 line-clamp-2 mb-3\" data-testid={`text-description-${idea.id}`}>\n          {idea.description}\n        </p>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Badge className={statusColors[idea.status as keyof typeof statusColors]} data-testid={`badge-status-${idea.id}`}>\n              {idea.status.replace('_', ' ')}\n            </Badge>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\" data-testid={`text-page-${idea.id}`}>\n              {idea.page}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={(e) => {\n                e.stopPropagation();\n                if (canUpvote) onUpvote(idea);\n              }}\n              disabled={!canUpvote}\n              data-testid={`button-upvote-${idea.id}`}\n              className=\"h-7 px-2 gap-1 hover:bg-green-100 dark:hover:bg-green-900\"\n            >\n              <ThumbsUp className=\"h-3 w-3\" />\n              <span className=\"text-xs font-medium\">{idea.upvoteCount}</span>\n            </Button>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\" data-testid={`text-date-${idea.id}`}>\n              {formatDate(idea.createdAt)}\n            </span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default function IdeaBox() {\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);\n  const [viewingFeatureRequest, setViewingFeatureRequest] = useState<FeatureRequest | null>(null);\n  const [editingFeatureRequest, setEditingFeatureRequest] = useState<FeatureRequest | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [categoryFilter, setCategoryFilter] = useState<string>('all');\n  const [sortBy, setSortBy] = useState<string>('newest');\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set(['dashboard']));\n  \n  // Attachment states\n  const [attachmentMode, setAttachmentMode] = useState<'file' | 'text'>('file');\n  const [attachmentText, setAttachmentText] = useState('');\n  const [editAttachmentMode, setEditAttachmentMode] = useState<'file' | 'text'>('file');\n  const [editAttachmentText, setEditAttachmentText] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n  \n  const { toast } = useToast();\n  const { user } = useAuth();\n  const queryClient = useQueryClient();\n  \n  // Upload context for secure storage\n  const uploadContext: UploadContext = {\n    type: 'features',\n    organizationId: 'default',\n    userRole: user?.role || 'resident',\n    userId: user?.id\n  };\n\n  const form = useForm<FeatureRequestFormData>({\n    resolver: zodResolver(featureRequestFormSchema),\n    defaultValues: {\n      title: '',\n      description: '',\n      need: '',\n      category: 'dashboard',\n      page: '',\n    }\n  });\n\n  const editForm = useForm<EditFormData>({\n    resolver: zodResolver(editFormSchema),\n  });\n\n  // Fetch feature requests\n  const { data: featureRequests = [], isLoading } = useQuery({\n    queryKey: ['/api/feature-requests'],\n    enabled: !!user,\n  });\n\n  // Helper functions\n  const canEditIdea = (idea: FeatureRequest) => {\n    if (!user) return false;\n    return user.role === 'admin' || \n           (user.role === 'manager' && idea.createdBy === user.id) ||\n           idea.createdBy === user.id;\n  };\n\n  const canUpvoteIdea = (idea: FeatureRequest) => {\n    return !!user && user.id !== idea.createdBy;\n  };\n\n  // Filter and sort ideas\n  const filteredIdeas = useMemo(() => {\n    let filtered = (featureRequests as FeatureRequest[]).filter((idea: FeatureRequest) => {\n      const matchesSearch = searchTerm === '' || \n        idea.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        idea.description.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesStatus = statusFilter === 'all' || idea.status === statusFilter;\n      const matchesCategory = categoryFilter === 'all' || idea.category === categoryFilter;\n      \n      return matchesSearch && matchesStatus && matchesCategory;\n    });\n\n    // Sort ideas\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'upvotes':\n          return b.upvoteCount - a.upvoteCount;\n        case 'oldest':\n          return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n        case 'newest':\n        default:\n          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n      }\n    });\n\n    return filtered;\n  }, [featureRequests, searchTerm, statusFilter, categoryFilter, sortBy]);\n\n  // Group ideas by category\n  const ideasByCategory = useMemo(() => {\n    const grouped: Record<string, FeatureRequest[]> = {};\n    filteredIdeas.forEach((idea) => {\n      if (!grouped[idea.category]) {\n        grouped[idea.category] = [];\n      }\n      grouped[idea.category].push(idea);\n    });\n    return grouped;\n  }, [filteredIdeas]);\n\n  // Create feature request mutation with file upload support\n  const createMutation = useMutation({\n    mutationFn: async (data: FeatureRequestFormData & { file?: File }) => {\n      const formData = new FormData();\n      Object.entries(data).forEach(([key, value]) => {\n        if (key !== 'file' && value !== undefined) {\n          formData.append(key, value.toString());\n        }\n      });\n      \n      if (data.file) {\n        formData.append('file', data.file);\n      }\n      \n      return fetch('/api/feature-requests', {\n        method: 'POST',\n        body: formData,\n      }).then(res => res.json());\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/feature-requests'] });\n      setIsCreateDialogOpen(false);\n      form.reset();\n      setAttachmentText('');\n      setAttachmentMode('file');\n      setUploadedFiles([]); // Clear uploaded files\n      toast({\n        title: 'Idea submitted!',\n        description: 'Your feature idea has been submitted successfully.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to submit idea',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Update feature request mutation with file upload support  \n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: EditFormData & { file?: File } }) => {\n      const formData = new FormData();\n      Object.entries(data).forEach(([key, value]) => {\n        if (key !== 'file' && value !== undefined && value !== null) {\n          formData.append(key, value.toString());\n        }\n      });\n      \n      if (data.file) {\n        formData.append('file', data.file);\n      }\n      \n      return fetch(`/api/feature-requests/${id}`, {\n        method: 'PATCH',\n        body: formData,\n      }).then(res => res.json());\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/feature-requests'] });\n      setIsEditDialogOpen(false);\n      setEditingFeatureRequest(null);\n      editForm.reset();\n      setEditAttachmentText('');\n      setEditAttachmentMode('file');\n      toast({\n        title: 'Idea updated!',\n        description: 'Feature idea has been updated successfully.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to update idea',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Upvote mutation\n  const upvoteMutation = useMutation({\n    mutationFn: (id: string) => apiRequest('POST', `/api/feature-requests/${id}/upvote`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/feature-requests'] });\n      toast({\n        title: 'Upvoted!',\n        description: 'Your upvote has been recorded.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to upvote',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Delete mutation (admin only)\n  const deleteMutation = useMutation({\n    mutationFn: (id: string) => apiRequest('DELETE', `/api/feature-requests/${id}`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/feature-requests'] });\n      setIsEditDialogOpen(false);\n      setEditingFeatureRequest(null);\n      toast({\n        title: 'Idea deleted!',\n        description: 'The feature idea has been deleted successfully.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to delete idea',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleSubmit = (data: FeatureRequestFormData) => {\n    // Use the uploaded file from SharedUploader component\n    const file = uploadedFiles[0];\n    \n    if (file) {\n      createMutation.mutate({\n        ...data,\n        file,\n      });\n    } else if (attachmentText) {\n      // For text mode, store text content separately in file_content field\n      const enhancedData = {\n        ...data,\n        file_content: attachmentText || null,\n      };\n      \n      createMutation.mutate(enhancedData);\n    } else {\n      // No file or text attachment\n      createMutation.mutate(data);\n    }\n  };\n\n  const handleEditSubmit = (data: EditFormData) => {\n    if (!editingFeatureRequest) return;\n    \n    if (editAttachmentMode === 'file') {\n      const fileInput = document.querySelector('#edit-file-upload') as HTMLInputElement;\n      const file = fileInput?.files?.[0];\n      \n      updateMutation.mutate({\n        id: editingFeatureRequest.id,\n        data: {\n          ...data,\n          file,\n        },\n      });\n    } else {\n      // For text mode, append to description\n      const enhancedData = {\n        ...data,\n        description: editAttachmentText ? `${data.description}\\n\\n**Additional Notes:**\\n${editAttachmentText}` : data.description,\n      };\n      \n      updateMutation.mutate({\n        id: editingFeatureRequest.id,\n        data: enhancedData,\n      });\n    }\n  };\n\n  const handleViewIdea = (idea: FeatureRequest) => {\n    setViewingFeatureRequest(idea);\n    setIsViewDialogOpen(true);\n  };\n\n  const handleEditIdea = (idea: FeatureRequest) => {\n    setEditingFeatureRequest(idea);\n    editForm.reset({\n      title: idea.title,\n      description: idea.description,\n      need: idea.need,\n      category: idea.category as any,\n      page: idea.page,\n      status: idea.status as any,\n      adminNotes: idea.adminNotes || '',\n    });\n    setEditAttachmentMode('file');\n    setEditAttachmentText('');\n    setIsEditDialogOpen(true);\n  };\n\n  const handleUpvoteIdea = (idea: FeatureRequest) => {\n    upvoteMutation.mutate(idea.id);\n  };\n\n  const handleDeleteIdea = (idea: FeatureRequest) => {\n    if (window.confirm(`Are you sure you want to delete \"${idea.title}\"? This action cannot be undone.`)) {\n      deleteMutation.mutate(idea.id);\n    }\n  };\n\n  const toggleCategory = (category: string) => {\n    const newExpanded = new Set(expandedCategories);\n    if (newExpanded.has(category)) {\n      newExpanded.delete(category);\n    } else {\n      newExpanded.add(category);\n    }\n    setExpandedCategories(newExpanded);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex-1 space-y-4 p-4 md:p-8 pt-6\">\n        <div className=\"flex items-center justify-between space-y-2\">\n          <h2 className=\"text-3xl font-bold tracking-tight\">Idea Box</h2>\n        </div>\n        <div className=\"grid gap-4\">\n          {[1, 2, 3].map(i => (\n            <div key={i} className=\"h-32 bg-gray-100 dark:bg-gray-800 rounded-lg animate-pulse\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      <Header title=\"Idea Box\" subtitle=\"Share your ideas to improve our platform\" />\n      \n      <div className=\"flex-1 overflow-auto p-6\">\n        <div className=\"max-w-7xl mx-auto space-y-6\">\n          {/* Action and Search Section */}\n          <div className=\"flex items-center justify-between\">\n            <div></div>\n            <Button onClick={() => setIsCreateDialogOpen(true)} data-testid=\"button-create-idea\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Submit New Idea\n            </Button>\n          </div>\n\n          {/* Search and Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Search className=\"w-5 h-5\" />\n                Search & Filters\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Search</label>\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\n                    <Input\n                      placeholder=\"Search ideas...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"pl-10\"\n                      data-testid=\"input-search\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Status</label>\n                  <Select value={statusFilter} onValueChange={setStatusFilter}>\n                    <SelectTrigger data-testid=\"select-status-filter\">\n                      <SelectValue placeholder=\"All Statuses\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Statuses</SelectItem>\n                      <SelectItem value=\"submitted\">Submitted</SelectItem>\n                      <SelectItem value=\"under_review\">Under Review</SelectItem>\n                      <SelectItem value=\"planned\">Planned</SelectItem>\n                      <SelectItem value=\"in_progress\">In Progress</SelectItem>\n                      <SelectItem value=\"completed\">Completed</SelectItem>\n                      <SelectItem value=\"rejected\">Rejected</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Category & Sort</label>\n                  <div className=\"flex gap-2\">\n                    <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n                      <SelectTrigger data-testid=\"select-category-filter\">\n                        <SelectValue placeholder=\"All Categories\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Categories</SelectItem>\n                        {Object.entries(categoryLabels).map(([key, label]) => (\n                          <SelectItem key={key} value={key}>\n                            {label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <Select value={sortBy} onValueChange={setSortBy}>\n                      <SelectTrigger className=\"w-32\" data-testid=\"select-sort\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"newest\">Newest</SelectItem>\n                        <SelectItem value=\"oldest\">Oldest</SelectItem>\n                        <SelectItem value=\"upvotes\">Most Upvoted</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Category-grouped cards */}\n          <div className=\"space-y-6\">\n            {Object.entries(categoryLabels).map(([categoryKey, categoryLabel]) => {\n              const categoryIdeas = ideasByCategory[categoryKey] || [];\n              if (categoryIdeas.length === 0) return null;\n              \n              const isExpanded = expandedCategories.has(categoryKey);\n              \n              return (\n                <div key={categoryKey} className=\"space-y-3\">\n                  <Collapsible open={isExpanded} onOpenChange={() => toggleCategory(categoryKey)}>\n                    <CollapsibleTrigger className=\"flex items-center gap-2 p-2 w-full text-left hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-colors\">\n                      {isExpanded ? (\n                        <ChevronDown className=\"h-4 w-4\" />\n                      ) : (\n                        <ChevronRight className=\"h-4 w-4\" />\n                      )}\n                      <span className=\"text-lg font-semibold\">\n                        {categoryLabel}\n                      </span>\n                      <Badge variant=\"secondary\" className=\"ml-2\">\n                        {categoryIdeas.length}\n                      </Badge>\n                    </CollapsibleTrigger>\n                    \n                    <CollapsibleContent className=\"space-y-3\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 pl-6\">\n                        {categoryIdeas.map((idea) => (\n                          <IdeaCard\n                            key={idea.id}\n                            idea={idea}\n                            onView={handleViewIdea}\n                            onEdit={handleEditIdea}\n                            onUpvote={handleUpvoteIdea}\n                            canEdit={canEditIdea(idea)}\n                            canUpvote={canUpvoteIdea(idea)}\n                          />\n                        ))}\n                      </div>\n                    </CollapsibleContent>\n                  </Collapsible>\n                </div>\n              );\n            })}\n            \n            {filteredIdeas.length === 0 && (\n              <div className=\"text-center py-12\">\n                <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-gray-100\">No ideas found</h3>\n                <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                  {searchTerm || statusFilter !== 'all' || categoryFilter !== 'all'\n                    ? 'Try adjusting your search or filters.'\n                    : 'Get started by submitting your first idea.'}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Create Dialog */}\n      <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n        <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Submit New Idea</DialogTitle>\n          </DialogHeader>\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"title\">Feature Title *</Label>\n              <Input\n                id=\"title\"\n                {...form.register('title')}\n                placeholder=\"e.g. Add bulk export for documents\"\n                data-testid=\"input-title\"\n              />\n              {form.formState.errors.title && (\n                <p className=\"text-sm text-red-600\">{form.formState.errors.title.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"description\">Description *</Label>\n              <Textarea\n                id=\"description\"\n                {...form.register('description')}\n                placeholder=\"Describe your feature idea in detail...\"\n                rows={4}\n                data-testid=\"textarea-description\"\n              />\n              {form.formState.errors.description && (\n                <p className=\"text-sm text-red-600\">{form.formState.errors.description.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"need\">Why is this needed? *</Label>\n              <Textarea\n                id=\"need\"\n                {...form.register('need')}\n                placeholder=\"Explain the specific need this feature addresses...\"\n                rows={3}\n                data-testid=\"textarea-need\"\n              />\n              {form.formState.errors.need && (\n                <p className=\"text-sm text-red-600\">{form.formState.errors.need.message}</p>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"category\">Category *</Label>\n                <Select value={form.watch('category')} onValueChange={(value) => form.setValue('category', value as any)}>\n                  <SelectTrigger data-testid=\"select-category\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {Object.entries(categoryLabels).map(([key, label]) => (\n                      <SelectItem key={key} value={key}>\n                        {label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {form.formState.errors.category && (\n                  <p className=\"text-sm text-red-600\">{form.formState.errors.category.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"page\">Page/Location *</Label>\n                <Input\n                  id=\"page\"\n                  {...form.register('page')}\n                  placeholder=\"e.g. Document Management\"\n                  data-testid=\"input-page\"\n                />\n                {form.formState.errors.page && (\n                  <p className=\"text-sm text-red-600\">{form.formState.errors.page.message}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Choose Document Type Section */}\n            <div className=\"space-y-4 border-t pt-4\">\n              <Label className=\"text-sm font-medium\">Attach Documents (Optional)</Label>\n              <SharedUploader\n                onDocumentChange={(file, text) => {\n                  if (file) {\n                    setUploadedFiles([file]);\n                  }\n                  if (text) {\n                    setAttachmentText(text);\n                  }\n                }}\n                formType=\"features\"\n                uploadContext={uploadContext}\n                showAiToggle={false} // No toggle, use config-based AI enablement\n              />\n            </div>\n\n            <div className=\"flex justify-end space-x-2 pt-4\">\n              <Button type=\"button\" variant=\"outline\" onClick={() => setIsCreateDialogOpen(false)}>\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={createMutation.isPending} data-testid=\"button-submit\">\n                {createMutation.isPending ? 'Submitting...' : 'Submit Idea'}\n              </Button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Edit Idea</DialogTitle>\n          </DialogHeader>\n          <form onSubmit={editForm.handleSubmit(handleEditSubmit)} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"edit-title\">Feature Title *</Label>\n              <Input\n                id=\"edit-title\"\n                {...editForm.register('title')}\n                data-testid=\"input-edit-title\"\n              />\n              {editForm.formState.errors.title && (\n                <p className=\"text-sm text-red-600\">{editForm.formState.errors.title.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"edit-description\">Description *</Label>\n              <Textarea\n                id=\"edit-description\"\n                {...editForm.register('description')}\n                rows={4}\n                data-testid=\"textarea-edit-description\"\n              />\n              {editForm.formState.errors.description && (\n                <p className=\"text-sm text-red-600\">{editForm.formState.errors.description.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"edit-need\">Why is this needed? *</Label>\n              <Textarea\n                id=\"edit-need\"\n                {...editForm.register('need')}\n                rows={3}\n                data-testid=\"textarea-edit-need\"\n              />\n              {editForm.formState.errors.need && (\n                <p className=\"text-sm text-red-600\">{editForm.formState.errors.need.message}</p>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"edit-category\">Category *</Label>\n                <Select value={editForm.watch('category')} onValueChange={(value) => editForm.setValue('category', value as any)}>\n                  <SelectTrigger data-testid=\"select-edit-category\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {Object.entries(categoryLabels).map(([key, label]) => (\n                      <SelectItem key={key} value={key}>\n                        {label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {editForm.formState.errors.category && (\n                  <p className=\"text-sm text-red-600\">{editForm.formState.errors.category.message}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"edit-page\">Page/Location *</Label>\n                <Input\n                  id=\"edit-page\"\n                  {...editForm.register('page')}\n                  data-testid=\"input-edit-page\"\n                />\n                {editForm.formState.errors.page && (\n                  <p className=\"text-sm text-red-600\">{editForm.formState.errors.page.message}</p>\n                )}\n              </div>\n            </div>\n\n            {user?.role === 'admin' && (\n              <>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"edit-status\">Status</Label>\n                  <Select value={editForm.watch('status')} onValueChange={(value) => editForm.setValue('status', value as any)}>\n                    <SelectTrigger data-testid=\"select-edit-status\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"submitted\">Submitted</SelectItem>\n                      <SelectItem value=\"under_review\">Under Review</SelectItem>\n                      <SelectItem value=\"planned\">Planned</SelectItem>\n                      <SelectItem value=\"in_progress\">In Progress</SelectItem>\n                      <SelectItem value=\"completed\">Completed</SelectItem>\n                      <SelectItem value=\"rejected\">Rejected</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"edit-admin-notes\">Admin Notes</Label>\n                  <Textarea\n                    id=\"edit-admin-notes\"\n                    {...editForm.register('adminNotes')}\n                    placeholder=\"Internal notes (visible to admins only)\"\n                    rows={2}\n                    data-testid=\"textarea-admin-notes\"\n                  />\n                </div>\n              </>\n            )}\n\n            {/* Choose Document Type Section for Edit */}\n            <div className=\"space-y-4 border-t pt-4\">\n              <Label className=\"text-sm font-medium\">Choose Document Type</Label>\n              <div className=\"flex space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => setEditAttachmentMode('file')}\n                  className={`flex-1 p-3 rounded-lg border text-sm font-medium transition-colors ${\n                    editAttachmentMode === 'file'\n                      ? 'border-blue-500 bg-blue-50 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                      : 'border-gray-200 hover:border-gray-300 dark:border-gray-700 dark:hover:border-gray-600'\n                  }`}\n                  data-testid=\"button-edit-file-mode\"\n                >\n                  📁 Upload File\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setEditAttachmentMode('text')}\n                  className={`flex-1 p-3 rounded-lg border text-sm font-medium transition-colors ${\n                    editAttachmentMode === 'text'\n                      ? 'border-blue-500 bg-blue-50 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                      : 'border-gray-200 hover:border-gray-300 dark:border-gray-700 dark:hover:border-gray-600'\n                  }`}\n                  data-testid=\"button-edit-text-mode\"\n                >\n                  📝 Text Document\n                </button>\n              </div>\n\n              {/* Dynamic Content Based on Selection */}\n              {editAttachmentMode === 'file' ? (\n                <div>\n                  {editingFeatureRequest?.filePath && (\n                    <div className=\"space-y-2 mb-4\">\n                      <Label>Current Attachment</Label>\n                      <AttachedFileSection\n                        entityType=\"feature-request\"\n                        entityId={editingFeatureRequest.id}\n                        filePath={editingFeatureRequest.filePath}\n                        fileName={editingFeatureRequest.fileName}\n                        fileSize={editingFeatureRequest.fileSize}\n                      />\n                    </div>\n                  )}\n                  <Label htmlFor=\"edit-file-upload\">Select File to Upload</Label>\n                  <Input\n                    id=\"edit-file-upload\"\n                    type=\"file\"\n                    accept=\".pdf,.doc,.docx,.txt,.jpg,.jpeg,.png,.gif\"\n                    data-testid=\"input-edit-file\"\n                    className=\"mt-1\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    {editingFeatureRequest?.filePath ? 'Upload a new file to replace the current attachment' : 'Attach a screenshot, mockup, or document'}\n                  </p>\n                </div>\n              ) : (\n                <div>\n                  <Label htmlFor=\"edit-text-content\">Document Content</Label>\n                  <Textarea\n                    id=\"edit-text-content\"\n                    value={editAttachmentText}\n                    onChange={(e) => setEditAttachmentText(e.target.value)}\n                    rows={5}\n                    className=\"w-full mt-1\"\n                    placeholder=\"Add detailed notes, specifications, or any additional information...\"\n                    data-testid=\"textarea-edit-text-content\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    This will show as additional notes with your idea\n                  </p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"flex justify-between items-center pt-4\">\n              <div>\n                {user?.role === 'admin' && editingFeatureRequest && (\n                  <Button \n                    type=\"button\" \n                    variant=\"destructive\" \n                    onClick={() => handleDeleteIdea(editingFeatureRequest)}\n                    disabled={deleteMutation.isPending}\n                    data-testid=\"button-delete-idea\"\n                  >\n                    {deleteMutation.isPending ? 'Deleting...' : 'Delete Idea'}\n                  </Button>\n                )}\n              </div>\n              <div className=\"flex space-x-2\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setIsEditDialogOpen(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={updateMutation.isPending} data-testid=\"button-update\">\n                  {updateMutation.isPending ? 'Updating...' : 'Update Idea'}\n                </Button>\n              </div>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n\n      {/* View Dialog */}\n      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n        <DialogContent className=\"sm:max-w-[700px] max-h-[90vh] overflow-y-auto\">\n          {viewingFeatureRequest && (\n            <>\n              <DialogHeader>\n                <div className=\"flex items-start justify-between gap-4\">\n                  <div className=\"flex-1\">\n                    <DialogTitle className=\"text-xl\">{viewingFeatureRequest.title}</DialogTitle>\n                    <div className=\"flex items-center gap-2 mt-2\">\n                      <Badge className={statusColors[viewingFeatureRequest.status as keyof typeof statusColors]}>\n                        {viewingFeatureRequest.status.replace('_', ' ')}\n                      </Badge>\n                      <span className=\"text-sm text-gray-500\">\n                        {categoryLabels[viewingFeatureRequest.category as keyof typeof categoryLabels]}\n                      </span>\n                      <span className=\"text-sm text-gray-500\">•</span>\n                      <span className=\"text-sm text-gray-500\">{viewingFeatureRequest.page}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleUpvoteIdea(viewingFeatureRequest)}\n                      disabled={!canUpvoteIdea(viewingFeatureRequest)}\n                    >\n                      <ThumbsUp className=\"h-4 w-4 mr-1\" />\n                      {viewingFeatureRequest.upvoteCount}\n                    </Button>\n                    {canEditIdea(viewingFeatureRequest) && (\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => {\n                          setIsViewDialogOpen(false);\n                          handleEditIdea(viewingFeatureRequest);\n                        }}\n                      >\n                        <Edit2 className=\"h-4 w-4 mr-1\" />\n                        Edit\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </DialogHeader>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Description</h4>\n                  <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-wrap\">\n                    {viewingFeatureRequest.description}\n                  </p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-semibold mb-2\">Why is this needed?</h4>\n                  <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-wrap\">\n                    {viewingFeatureRequest.need}\n                  </p>\n                </div>\n                \n                {/* Show file attachment if exists */}\n                {viewingFeatureRequest.filePath && (\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Attachment</h4>\n                    <AttachedFileSection\n                      entityType=\"feature-request\"\n                      entityId={viewingFeatureRequest.id}\n                      filePath={viewingFeatureRequest.filePath}\n                      fileName={viewingFeatureRequest.fileName}\n                      fileSize={viewingFeatureRequest.fileSize}\n                    />\n                  </div>\n                )}\n                \n                {/* Show text content if exists */}\n                {viewingFeatureRequest.file_content && (\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Document Content</h4>\n                    <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n                      <pre className=\"whitespace-pre-wrap text-sm text-gray-700 dark:text-gray-300 font-mono\">\n                        {viewingFeatureRequest.file_content}\n                      </pre>\n                    </div>\n                  </div>\n                )}\n                \n                {user?.role === 'admin' && viewingFeatureRequest.adminNotes && (\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Admin Notes</h4>\n                    <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-wrap bg-gray-50 dark:bg-gray-800 p-3 rounded\">\n                      {viewingFeatureRequest.adminNotes}\n                    </p>\n                  </div>\n                )}\n                \n                <div className=\"text-sm text-gray-500 pt-2 border-t\">\n                  <p>Submitted on {new Date(viewingFeatureRequest.createdAt).toLocaleDateString()}</p>\n                  {viewingFeatureRequest.updatedAt !== viewingFeatureRequest.createdAt && (\n                    <p>Last updated on {new Date(viewingFeatureRequest.updatedAt).toLocaleDateString()}</p>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}"],"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","ignoreList":[]}