ae75213ac50b6b5bba7031971627cce9
"use strict";

/* istanbul ignore next */
function cov_10xmqudfs1() {
  var path = "/home/runner/workspace/shared/schemas/documents.ts";
  var hash = "0572a63f2b27e0ed83dd91272cf2f5cf4d76357b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/shared/schemas/documents.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 148
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 28
        }
      },
      "5": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 40
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "7": {
        start: {
          line: 26,
          column: 73
        },
        end: {
          line: 26,
          column: 97
        }
      },
      "8": {
        start: {
          line: 27,
          column: 71
        },
        end: {
          line: 27,
          column: 94
        }
      },
      "9": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "10": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "11": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 84,
          column: 2
        }
      },
      "12": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 91,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 67
          },
          end: {
            line: 26,
            column: 68
          }
        },
        loc: {
          start: {
            line: 26,
            column: 73
          },
          end: {
            line: 26,
            column: 97
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 65
          },
          end: {
            line: 27,
            column: 66
          }
        },
        loc: {
          start: {
            line: 27,
            column: 71
          },
          end: {
            line: 27,
            column: 94
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/runner/workspace/shared/schemas/documents.ts",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/shared/schemas/documents.ts"],
      sourcesContent: ["import { sql } from 'drizzle-orm';\nimport { pgTable, text, timestamp, boolean, varchar, uuid, integer } from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { buildings, residences } from './property';\n\n\n// Unified documents table\n/**\n * Unified documents table for all document types across the system.\n * Stores documents that can be associated with either residences, buildings, or neither.\n * Enhanced with file metadata, content type, and attachment relationships.\n */\nexport const documents = pgTable('documents', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  name: text('name').notNull(),\n  description: text('description'),\n  documentType: text('document_type').notNull(),\n  filePath: text('file_path').notNull().unique(),\n  fileName: text('file_name'), // Original filename\n  fileSize: integer('file_size'), // File size in bytes\n  mimeType: text('mime_type'), // MIME type for proper handling\n  isVisibleToTenants: boolean('is_visible_to_tenants').default(false).notNull(),\n  residenceId: varchar('residence_id').references(() => residences.id),\n  buildingId: varchar('building_id').references(() => buildings.id),\n  uploadedById: varchar('uploaded_by_id').notNull(),\n  // Support for document attachments to forms\n  attachedToType: text('attached_to_type'), // 'bill', 'feature_request', 'bug_report', etc.\n  attachedToId: varchar('attached_to_id'), // ID of the entity this document is attached to\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n});\n\n// Enhanced document schema with file metadata\nexport const insertDocumentSchema = z.object({\n  name: z.string().min(1, 'Document name is required'),\n  description: z.string().optional(),\n  documentType: z.string().min(1, 'Document type is required'),\n  filePath: z.string().min(1, 'File path is required'),\n  fileName: z.string().optional(),\n  fileSize: z.number().int().optional(),\n  mimeType: z.string().optional(),\n  isVisibleToTenants: z.boolean().default(false),\n  residenceId: z.string().uuid().optional(),\n  buildingId: z.string().uuid().optional(),\n  uploadedById: z.string().uuid().min(1, 'Uploaded by user ID is required'),\n  attachedToType: z.string().optional(),\n  attachedToId: z.string().uuid().optional(),\n});\n\n// Schema for form-attached documents\nexport const attachDocumentSchema = z.object({\n  name: z.string().min(1, 'Document name is required'),\n  description: z.string().optional(),\n  documentType: z.enum(['attachment', 'screenshot', 'evidence', 'supporting_document']).default('attachment'),\n  fileName: z.string().min(1, 'File name is required'),\n  fileSize: z.number().int().optional(),\n  mimeType: z.string().optional(),\n  attachedToType: z.enum(['bill', 'feature_request', 'bug_report', 'maintenance_request']),\n  attachedToId: z.string().uuid().min(1, 'Attached entity ID is required'),\n  uploadedById: z.string().uuid().min(1, 'Uploaded by user ID is required'),\n});\n\n/**\n * Insert type for unified documents\n */\nexport type InsertDocument = z.infer<typeof insertDocumentSchema>;\n\n/**\n * Insert type for form-attached documents\n */\nexport type AttachDocument = z.infer<typeof attachDocumentSchema>;\n\n/**\n * Select type for unified documents\n */\nexport type Document = typeof documents.$inferSelect;\n\n// Enhanced types for modular document management components\nexport interface DocumentWithMetadata extends Document {\n  uploadedBy?: {\n    id: string;\n    firstName?: string;\n    lastName?: string;\n    email: string;\n  };\n  residence?: {\n    id: string;\n    unitNumber?: string;\n    address?: string;\n  };\n  building?: {\n    id: string;\n    name?: string;\n    address?: string;\n  };\n}\n\n// User permissions for document access control\nexport interface DocumentPermissions {\n  canView: boolean;\n  canDownload: boolean;\n  canEdit: boolean;\n  canDelete: boolean;\n  canCreate: boolean;\n}\n\n// Document display preferences\nexport interface DocumentDisplayOptions {\n  showMetadata?: boolean;\n  compact?: boolean;\n  showFileSize?: boolean;\n  showUploadDate?: boolean;\n  showUploader?: boolean;\n  showEntityInfo?: boolean;\n}\n\n// Document type constants for consistency\nexport const DOCUMENT_TYPES = {\n  // Building/Residence documents\n  BYLAW: 'bylaw',\n  FINANCIAL: 'financial', \n  MAINTENANCE: 'maintenance',\n  LEGAL: 'legal',\n  MEETING_MINUTES: 'meeting_minutes',\n  INSURANCE: 'insurance',\n  CONTRACTS: 'contracts',\n  PERMITS: 'permits',\n  INSPECTION: 'inspection',\n  LEASE: 'lease',\n  CORRESPONDENCE: 'correspondence',\n  UTILITIES: 'utilities',\n  OTHER: 'other',\n  \n  // Form attachments\n  ATTACHMENT: 'attachment',\n  SCREENSHOT: 'screenshot', \n  EVIDENCE: 'evidence',\n  SUPPORTING_DOCUMENT: 'supporting_document'\n} as const;\n\n// Entity types that can have attached documents\nexport const ATTACHABLE_ENTITY_TYPES = {\n  BILL: 'bill',\n  FEATURE_REQUEST: 'feature_request',\n  BUG_REPORT: 'bug_report', \n  MAINTENANCE_REQUEST: 'maintenance_request'\n} as const;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0572a63f2b27e0ed83dd91272cf2f5cf4d76357b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10xmqudfs1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10xmqudfs1();
cov_10xmqudfs1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10xmqudfs1().s[1]++;
exports.ATTACHABLE_ENTITY_TYPES = exports.DOCUMENT_TYPES = exports.attachDocumentSchema = exports.insertDocumentSchema = exports.documents = void 0;
const drizzle_orm_1 =
/* istanbul ignore next */
(cov_10xmqudfs1().s[2]++, require("drizzle-orm"));
const pg_core_1 =
/* istanbul ignore next */
(cov_10xmqudfs1().s[3]++, require("drizzle-orm/pg-core"));
const zod_1 =
/* istanbul ignore next */
(cov_10xmqudfs1().s[4]++, require("zod"));
const property_1 =
/* istanbul ignore next */
(cov_10xmqudfs1().s[5]++, require("./property"));
// Unified documents table
/**
 * Unified documents table for all document types across the system.
 * Stores documents that can be associated with either residences, buildings, or neither.
 * Enhanced with file metadata, content type, and attachment relationships.
 */
/* istanbul ignore next */
cov_10xmqudfs1().s[6]++;
exports.documents = (0, pg_core_1.pgTable)('documents', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  name: (0, pg_core_1.text)('name').notNull(),
  description: (0, pg_core_1.text)('description'),
  documentType: (0, pg_core_1.text)('document_type').notNull(),
  filePath: (0, pg_core_1.text)('file_path').notNull().unique(),
  fileName: (0, pg_core_1.text)('file_name'),
  // Original filename
  fileSize: (0, pg_core_1.integer)('file_size'),
  // File size in bytes
  mimeType: (0, pg_core_1.text)('mime_type'),
  // MIME type for proper handling
  isVisibleToTenants: (0, pg_core_1.boolean)('is_visible_to_tenants').default(false).notNull(),
  residenceId: (0, pg_core_1.varchar)('residence_id').references(() => {
    /* istanbul ignore next */
    cov_10xmqudfs1().f[0]++;
    cov_10xmqudfs1().s[7]++;
    return property_1.residences.id;
  }),
  buildingId: (0, pg_core_1.varchar)('building_id').references(() => {
    /* istanbul ignore next */
    cov_10xmqudfs1().f[1]++;
    cov_10xmqudfs1().s[8]++;
    return property_1.buildings.id;
  }),
  uploadedById: (0, pg_core_1.varchar)('uploaded_by_id').notNull(),
  // Support for document attachments to forms
  attachedToType: (0, pg_core_1.text)('attached_to_type'),
  // 'bill', 'feature_request', 'bug_report', etc.
  attachedToId: (0, pg_core_1.varchar)('attached_to_id'),
  // ID of the entity this document is attached to
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow().notNull()
});
// Enhanced document schema with file metadata
/* istanbul ignore next */
cov_10xmqudfs1().s[9]++;
exports.insertDocumentSchema = zod_1.z.object({
  name: zod_1.z.string().min(1, 'Document name is required'),
  description: zod_1.z.string().optional(),
  documentType: zod_1.z.string().min(1, 'Document type is required'),
  filePath: zod_1.z.string().min(1, 'File path is required'),
  fileName: zod_1.z.string().optional(),
  fileSize: zod_1.z.number().int().optional(),
  mimeType: zod_1.z.string().optional(),
  isVisibleToTenants: zod_1.z.boolean().default(false),
  residenceId: zod_1.z.string().uuid().optional(),
  buildingId: zod_1.z.string().uuid().optional(),
  uploadedById: zod_1.z.string().uuid().min(1, 'Uploaded by user ID is required'),
  attachedToType: zod_1.z.string().optional(),
  attachedToId: zod_1.z.string().uuid().optional()
});
// Schema for form-attached documents
/* istanbul ignore next */
cov_10xmqudfs1().s[10]++;
exports.attachDocumentSchema = zod_1.z.object({
  name: zod_1.z.string().min(1, 'Document name is required'),
  description: zod_1.z.string().optional(),
  documentType: zod_1.z.enum(['attachment', 'screenshot', 'evidence', 'supporting_document']).default('attachment'),
  fileName: zod_1.z.string().min(1, 'File name is required'),
  fileSize: zod_1.z.number().int().optional(),
  mimeType: zod_1.z.string().optional(),
  attachedToType: zod_1.z.enum(['bill', 'feature_request', 'bug_report', 'maintenance_request']),
  attachedToId: zod_1.z.string().uuid().min(1, 'Attached entity ID is required'),
  uploadedById: zod_1.z.string().uuid().min(1, 'Uploaded by user ID is required')
});
// Document type constants for consistency
/* istanbul ignore next */
cov_10xmqudfs1().s[11]++;
exports.DOCUMENT_TYPES = {
  // Building/Residence documents
  BYLAW: 'bylaw',
  FINANCIAL: 'financial',
  MAINTENANCE: 'maintenance',
  LEGAL: 'legal',
  MEETING_MINUTES: 'meeting_minutes',
  INSURANCE: 'insurance',
  CONTRACTS: 'contracts',
  PERMITS: 'permits',
  INSPECTION: 'inspection',
  LEASE: 'lease',
  CORRESPONDENCE: 'correspondence',
  UTILITIES: 'utilities',
  OTHER: 'other',
  // Form attachments
  ATTACHMENT: 'attachment',
  SCREENSHOT: 'screenshot',
  EVIDENCE: 'evidence',
  SUPPORTING_DOCUMENT: 'supporting_document'
};
// Entity types that can have attached documents
/* istanbul ignore next */
cov_10xmqudfs1().s[12]++;
exports.ATTACHABLE_ENTITY_TYPES = {
  BILL: 'bill',
  FEATURE_REQUEST: 'feature_request',
  BUG_REPORT: 'bug_report',
  MAINTENANCE_REQUEST: 'maintenance_request'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,