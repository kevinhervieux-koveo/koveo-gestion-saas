{"version":3,"names":["cov_10xmqudfs1","actualCoverage","s","drizzle_orm_1","require","pg_core_1","zod_1","property_1","exports","documents","pgTable","id","varchar","primaryKey","default","sql","name","text","notNull","description","documentType","filePath","unique","fileName","fileSize","integer","mimeType","isVisibleToTenants","boolean","residenceId","references","f","residences","buildingId","buildings","uploadedById","attachedToType","attachedToId","createdAt","timestamp","defaultNow","updatedAt","insertDocumentSchema","z","object","string","min","optional","number","int","uuid","attachDocumentSchema","enum","DOCUMENT_TYPES","BYLAW","FINANCIAL","MAINTENANCE","LEGAL","MEETING_MINUTES","INSURANCE","CONTRACTS","PERMITS","INSPECTION","LEASE","CORRESPONDENCE","UTILITIES","OTHER","ATTACHMENT","SCREENSHOT","EVIDENCE","SUPPORTING_DOCUMENT","ATTACHABLE_ENTITY_TYPES","BILL","FEATURE_REQUEST","BUG_REPORT","MAINTENANCE_REQUEST"],"sources":["/home/runner/workspace/shared/schemas/documents.ts"],"sourcesContent":["import { sql } from 'drizzle-orm';\nimport { pgTable, text, timestamp, boolean, varchar, uuid, integer } from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { buildings, residences } from './property';\n\n\n// Unified documents table\n/**\n * Unified documents table for all document types across the system.\n * Stores documents that can be associated with either residences, buildings, or neither.\n * Enhanced with file metadata, content type, and attachment relationships.\n */\nexport const documents = pgTable('documents', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  name: text('name').notNull(),\n  description: text('description'),\n  documentType: text('document_type').notNull(),\n  filePath: text('file_path').notNull().unique(),\n  fileName: text('file_name'), // Original filename\n  fileSize: integer('file_size'), // File size in bytes\n  mimeType: text('mime_type'), // MIME type for proper handling\n  isVisibleToTenants: boolean('is_visible_to_tenants').default(false).notNull(),\n  residenceId: varchar('residence_id').references(() => residences.id),\n  buildingId: varchar('building_id').references(() => buildings.id),\n  uploadedById: varchar('uploaded_by_id').notNull(),\n  // Support for document attachments to forms\n  attachedToType: text('attached_to_type'), // 'bill', 'feature_request', 'bug_report', etc.\n  attachedToId: varchar('attached_to_id'), // ID of the entity this document is attached to\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n});\n\n// Enhanced document schema with file metadata\nexport const insertDocumentSchema = z.object({\n  name: z.string().min(1, 'Document name is required'),\n  description: z.string().optional(),\n  documentType: z.string().min(1, 'Document type is required'),\n  filePath: z.string().min(1, 'File path is required'),\n  fileName: z.string().optional(),\n  fileSize: z.number().int().optional(),\n  mimeType: z.string().optional(),\n  isVisibleToTenants: z.boolean().default(false),\n  residenceId: z.string().uuid().optional(),\n  buildingId: z.string().uuid().optional(),\n  uploadedById: z.string().uuid().min(1, 'Uploaded by user ID is required'),\n  attachedToType: z.string().optional(),\n  attachedToId: z.string().uuid().optional(),\n});\n\n// Schema for form-attached documents\nexport const attachDocumentSchema = z.object({\n  name: z.string().min(1, 'Document name is required'),\n  description: z.string().optional(),\n  documentType: z.enum(['attachment', 'screenshot', 'evidence', 'supporting_document']).default('attachment'),\n  fileName: z.string().min(1, 'File name is required'),\n  fileSize: z.number().int().optional(),\n  mimeType: z.string().optional(),\n  attachedToType: z.enum(['bill', 'feature_request', 'bug_report', 'maintenance_request']),\n  attachedToId: z.string().uuid().min(1, 'Attached entity ID is required'),\n  uploadedById: z.string().uuid().min(1, 'Uploaded by user ID is required'),\n});\n\n/**\n * Insert type for unified documents\n */\nexport type InsertDocument = z.infer<typeof insertDocumentSchema>;\n\n/**\n * Insert type for form-attached documents\n */\nexport type AttachDocument = z.infer<typeof attachDocumentSchema>;\n\n/**\n * Select type for unified documents\n */\nexport type Document = typeof documents.$inferSelect;\n\n// Enhanced types for modular document management components\nexport interface DocumentWithMetadata extends Document {\n  uploadedBy?: {\n    id: string;\n    firstName?: string;\n    lastName?: string;\n    email: string;\n  };\n  residence?: {\n    id: string;\n    unitNumber?: string;\n    address?: string;\n  };\n  building?: {\n    id: string;\n    name?: string;\n    address?: string;\n  };\n}\n\n// User permissions for document access control\nexport interface DocumentPermissions {\n  canView: boolean;\n  canDownload: boolean;\n  canEdit: boolean;\n  canDelete: boolean;\n  canCreate: boolean;\n}\n\n// Document display preferences\nexport interface DocumentDisplayOptions {\n  showMetadata?: boolean;\n  compact?: boolean;\n  showFileSize?: boolean;\n  showUploadDate?: boolean;\n  showUploader?: boolean;\n  showEntityInfo?: boolean;\n}\n\n// Document type constants for consistency\nexport const DOCUMENT_TYPES = {\n  // Building/Residence documents\n  BYLAW: 'bylaw',\n  FINANCIAL: 'financial', \n  MAINTENANCE: 'maintenance',\n  LEGAL: 'legal',\n  MEETING_MINUTES: 'meeting_minutes',\n  INSURANCE: 'insurance',\n  CONTRACTS: 'contracts',\n  PERMITS: 'permits',\n  INSPECTION: 'inspection',\n  LEASE: 'lease',\n  CORRESPONDENCE: 'correspondence',\n  UTILITIES: 'utilities',\n  OTHER: 'other',\n  \n  // Form attachments\n  ATTACHMENT: 'attachment',\n  SCREENSHOT: 'screenshot', \n  EVIDENCE: 'evidence',\n  SUPPORTING_DOCUMENT: 'supporting_document'\n} as const;\n\n// Entity types that can have attached documents\nexport const ATTACHABLE_ENTITY_TYPES = {\n  BILL: 'bill',\n  FEATURE_REQUEST: 'feature_request',\n  BUG_REPORT: 'bug_report', \n  MAINTENANCE_REQUEST: 'maintenance_request'\n} as const;\n"],"mappings":"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","ignoreList":[]}