{"file":"/home/runner/workspace/client/src/components/document-management/DocumentCreateForm.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/document-management/DocumentCreateForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { FileText, Upload } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { SharedUploader } from './SharedUploader';\nimport type { UploadContext } from '@shared/config/upload-config';\n\n// Document categories matching the ones used in ModularDocumentPageWrapper\nconst DOCUMENT_CATEGORIES = [\n  { value: 'bylaw', label: 'Bylaws' },\n  { value: 'financial', label: 'Financial' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'legal', label: 'Legal' },\n  { value: 'meeting_minutes', label: 'Meeting Minutes' },\n  { value: 'insurance', label: 'Insurance' },\n  { value: 'contracts', label: 'Contracts' },\n  { value: 'permits', label: 'Permits' },\n  { value: 'inspection', label: 'Inspection' },\n  { value: 'other', label: 'Other' },\n];\n\n// Form schema for document creation\nconst documentCreateSchema = z.object({\n  name: z.string().min(1, 'Document name is required').max(255, 'Name must be less than 255 characters'),\n  description: z.string().max(1000, 'Description must be less than 1000 characters').optional(),\n  category: z.enum([\n    'bylaw',\n    'financial', \n    'maintenance',\n    'legal',\n    'meeting_minutes',\n    'insurance',\n    'contracts',\n    'permits',\n    'inspection',\n    'other'\n  ]),\n});\n\ntype DocumentCreateData = z.infer<typeof documentCreateSchema>;\n\ninterface DocumentCreateFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess?: (documentId: string) => void;\n  entityType: 'building' | 'residence';\n  entityId: string;\n  entityName?: string;\n}\n\nexport function DocumentCreateForm({\n  isOpen,\n  onClose,\n  onSuccess,\n  entityType,\n  entityId,\n  entityName,\n}: DocumentCreateFormProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  // State for file upload\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [textContent, setTextContent] = useState<string | null>(null);\n\n  // Upload context for secure storage\n  const uploadContext: UploadContext = {\n    type: entityType === 'building' ? 'buildings' : 'residences',\n    buildingId: entityType === 'building' ? entityId : undefined,\n    residenceId: entityType === 'residence' ? entityId : undefined,\n    userRole: 'admin', // This would be dynamic based on current user\n    userId: 'current-user' // This would be dynamic based on current user\n  };\n\n  // Form setup\n  const form = useForm<DocumentCreateData>({\n    resolver: zodResolver(documentCreateSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      category: 'other',\n    }\n  });\n\n  // Create document mutation\n  const createDocumentMutation = useMutation({\n    mutationFn: async (data: DocumentCreateData) => {\n      const formData = new FormData();\n      \n      // Add document metadata\n      formData.append('name', data.name);\n      formData.append('documentType', data.category);\n      if (data.description) {\n        formData.append('description', data.description);\n      }\n      \n      // Add entity association\n      if (entityType === 'building') {\n        formData.append('buildingId', entityId);\n      } else {\n        formData.append('residenceId', entityId);\n      }\n\n      // Add file or text content\n      if (selectedFile) {\n        formData.append('file', selectedFile);\n      } else if (textContent) {\n        formData.append('textContent', textContent);\n      }\n\n      // Make the API request\n      const response = await fetch('/api/documents', {\n        method: 'POST',\n        credentials: 'include',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        let errorData = {};\n        try {\n          errorData = JSON.parse(errorText);\n        } catch (e) {\n          console.error('Failed to parse error response as JSON');\n        }\n        \n        throw new Error(errorData.error || errorData.message || `Failed to create document: ${response.status}`);\n      }\n\n      return response.json();\n    },\n    onSuccess: (data) => {\n      // Invalidate documents cache to refresh the list\n      queryClient.invalidateQueries({ queryKey: ['/api/documents'] });\n      \n      toast({\n        title: 'Document Created',\n        description: `\"${data.name}\" has been created successfully`,\n      });\n      \n      // Reset form and close dialog\n      form.reset();\n      setSelectedFile(null);\n      setTextContent(null);\n      onClose();\n      onSuccess?.(data.id);\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error Creating Document',\n        description: error.message || 'Failed to create document',\n        variant: 'destructive',\n      });\n    }\n  });\n\n  // Handle file/text changes from SharedUploader\n  const handleDocumentChange = (file: File | null, text: string | null) => {\n    setSelectedFile(file);\n    setTextContent(text);\n    \n    // Auto-populate name if file was uploaded and name is empty\n    if (file && !form.getValues('name')) {\n      const nameWithoutExtension = file.name.replace(/\\.[^/.]+$/, '');\n      form.setValue('name', nameWithoutExtension);\n    }\n  };\n\n  const onSubmit = (data: DocumentCreateData) => {\n    // Validate that we have either a file or text content\n    if (!selectedFile && !textContent) {\n      toast({\n        title: 'Missing Content',\n        description: 'Please either upload a file or enter text content for the document.',\n        variant: 'destructive',\n      });\n      return;\n    }\n    \n    createDocumentMutation.mutate(data);\n  };\n\n  const handleClose = () => {\n    if (!createDocumentMutation.isPending) {\n      form.reset();\n      setSelectedFile(null);\n      setTextContent(null);\n      onClose();\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <FileText className=\"w-5 h-5\" />\n            Create New Document\n          </DialogTitle>\n          <DialogDescription>\n            Create a new document for {entityName || `this ${entityType}`}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Document Information Section */}\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {/* Document Name */}\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Document Name *</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Building Bylaws 2024\"\n                          {...field}\n                          data-testid=\"input-document-name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                {/* Category */}\n                <FormField\n                  control={form.control}\n                  name=\"category\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Category *</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <FormControl>\n                          <SelectTrigger data-testid=\"select-document-category\">\n                            <SelectValue placeholder=\"Select category\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {DOCUMENT_CATEGORIES.map((category) => (\n                            <SelectItem key={category.value} value={category.value}>\n                              {category.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              {/* Description */}\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description (Optional)</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Describe the document content and purpose...\"\n                        className=\"min-h-[80px]\"\n                        {...field}\n                        data-testid=\"textarea-document-description\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* File Upload Section */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Upload className=\"w-5 h-5\" />\n                  Document Content\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <SharedUploader\n                  onDocumentChange={handleDocumentChange}\n                  formType=\"documents\"\n                  uploadContext={uploadContext}\n                  showAiToggle={false} // Use config-based AI enablement\n                  allowedFileTypes={[\n                    'application/pdf',\n                    'application/msword',\n                    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n                    'application/vnd.ms-excel',\n                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    'text/plain',\n                    'image/*'\n                  ]}\n                  maxFileSize={25}\n                  defaultTab=\"file\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  Upload a file or create a text document. Maximum file size: 25MB.\n                </p>\n              </CardContent>\n            </Card>\n\n            <DialogFooter>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={handleClose}\n                disabled={createDocumentMutation.isPending}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={createDocumentMutation.isPending}\n                data-testid=\"button-create-document\"\n              >\n                {createDocumentMutation.isPending ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Creating...\n                  </>\n                ) : (\n                  <>\n                    <FileText className=\"w-4 h-4 mr-2\" />\n                    Create Document\n                  </>\n                )}\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"version":3}