{"file":"/home/runner/workspace/client/src/components/bill-management/ModularBillForm.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/bill-management/ModularBillForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  FormDescription,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { FileText, Sparkles, Plus, X, Calendar } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\nimport { cn } from '@/lib/utils';\nimport { SharedUploader } from '@/components/document-management';\nimport { GeminiBillExtractor } from './GeminiBillExtractor';\nimport type { Bill } from '@shared/schema';\nimport type { UploadContext } from '@shared/config/upload-config';\n\n// Unified form schema (simplified from original)\nconst billFormSchema = z.object({\n  title: z.string().min(1, 'Bill title is required').max(200, 'Title must be less than 200 characters'),\n  description: z.string().max(1000, 'Description must be less than 1000 characters').optional(),\n  category: z.enum([\n    'insurance',\n    'maintenance',\n    'salary',\n    'utilities',\n    'cleaning',\n    'security',\n    'landscaping',\n    'professional_services',\n    'administration',\n    'repairs',\n    'supplies',\n    'taxes',\n    'technology',\n    'reserves',\n    'other',\n  ]),\n  vendor: z.string().max(150, 'Vendor name must be less than 150 characters').optional(),\n  paymentType: z.enum(['unique', 'recurrent']),\n  schedulePayment: z.enum(['weekly', 'monthly', 'quarterly', 'yearly', 'custom']).optional(),\n  customPayments: z.array(z.object({\n    amount: z.string().min(1, 'Amount is required').refine((val) => {\n      const num = parseFloat(val);\n      return !isNaN(num) && num > 0 && num <= 999999.99;\n    }, 'Amount must be between $0.01 and $999,999.99'),\n    date: z.string().min(1, 'Date is required').refine((val) => {\n      return !isNaN(Date.parse(val));\n    }, 'Date must be a valid date'),\n    description: z.string().optional()\n  })).optional(),\n  totalAmount: z.string().min(1, 'Amount is required and must be a valid number').refine((val) => {\n    const num = parseFloat(val);\n    return !isNaN(num) && num > 0 && num <= 999999.99;\n  }, 'Amount must be between $0.01 and $999,999.99'),\n  startDate: z.string().min(1, 'Start date is required').refine((val) => {\n    return !isNaN(Date.parse(val));\n  }, 'Start date must be a valid date'),\n  endDate: z.string().optional().refine((val) => {\n    if (!val) return true;\n    return !isNaN(Date.parse(val));\n  }, 'End date must be a valid date'),\n  status: z.enum(['draft', 'sent', 'overdue', 'paid', 'cancelled']),\n  notes: z.string().max(2000, 'Notes must be less than 2000 characters').optional(),\n});\n\ntype BillFormData = z.infer<typeof billFormSchema>;\n\ntype CustomPayment = {\n  amount: string;\n  date: string;\n  description?: string;\n};\n\ninterface ModularBillFormProps {\n  bill?: Bill | null;\n  onSuccess?: (billId: string, action: 'created' | 'updated') => void;\n  onCancel?: () => void;\n  buildingId?: string;\n}\n\nconst BILL_CATEGORIES = [\n  { value: 'utilities', label: 'Utilities' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'insurance', label: 'Insurance' },\n  { value: 'cleaning', label: 'Cleaning' },\n  { value: 'security', label: 'Security' },\n  { value: 'landscaping', label: 'Landscaping' },\n  { value: 'professional_services', label: 'Professional Services' },\n  { value: 'administration', label: 'Administration' },\n  { value: 'repairs', label: 'Repairs' },\n  { value: 'supplies', label: 'Supplies' },\n  { value: 'taxes', label: 'Taxes' },\n  { value: 'technology', label: 'Technology' },\n  { value: 'salary', label: 'Salary' },\n  { value: 'reserves', label: 'Reserves' },\n  { value: 'other', label: 'Other' },\n];\n\nexport default function ModularBillForm({ bill, onSuccess, onCancel, buildingId }: ModularBillFormProps) {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  // State for AI extraction\n  const [aiFile, setAiFile] = useState<File | null>(null);\n  const [isAiMode, setIsAiMode] = useState(false);\n  const [aiExtractionData, setAiExtractionData] = useState<any>(null);\n  const [isExtracting, setIsExtracting] = useState(false);\n  const [aiEnabled, setAiEnabled] = useState(true); // AI enabled by default for bills\n  \n  // State for manual document upload\n  const [manualFile, setManualFile] = useState<File | null>(null);\n  const [customPayments, setCustomPayments] = useState<CustomPayment[]>([]);\n  \n  // Upload context for secure storage\n  const uploadContext: UploadContext = {\n    type: 'bills',\n    organizationId: 'default', // Would be dynamic based on user's org\n    buildingId,\n    userRole: 'admin', // Would be dynamic based on user's role\n    userId: 'current-user' // Would be dynamic based on current user\n  };\n\n  // Form setup\n  const form = useForm<BillFormData>({\n    resolver: zodResolver(billFormSchema),\n    defaultValues: {\n      title: bill?.title || '',\n      description: bill?.description || '',\n      category: bill?.category || 'other',\n      vendor: bill?.vendor || '',\n      paymentType: bill?.paymentType || 'unique',\n      schedulePayment: 'monthly',\n      customPayments: [],\n      totalAmount: bill?.totalAmount?.toString() || '',\n      startDate: bill?.startDate || '',\n      endDate: bill?.endDate || '',\n      status: bill?.status || 'draft',\n      notes: bill?.notes || '',\n    }\n  });\n\n  const paymentType = form.watch('paymentType');\n  const schedulePayment = form.watch('schedulePayment');\n\n  // Handle AI extraction results\n  const handleAiExtractionComplete = (data: any) => {\n    // Handle loading state\n    if (data.isLoading) {\n      setIsExtracting(true);\n      toast({\n        title: 'AI Extraction Started',\n        description: 'Processing your document... This may take a few seconds.',\n      });\n      return;\n    }\n    \n    // Clear loading state\n    setIsExtracting(false);\n    \n    if (data.success && data.formData) {\n      setAiExtractionData(data.formData);\n      \n      // Auto-fill form with AI data\n      Object.entries(data.formData).forEach(([key, value]) => {\n        if (key === 'customPayments' && Array.isArray(value)) {\n          setCustomPayments(value);\n          form.setValue('customPayments', value);\n        } else if (value && typeof value === 'string') {\n          form.setValue(key as keyof BillFormData, value);\n        }\n      });\n\n      toast({\n        title: 'AI Extraction Complete',\n        description: `Successfully extracted bill data with ${Math.round((data.confidence || 0.9) * 100)}% confidence`,\n      });\n    } else {\n      toast({\n        title: 'AI Extraction Failed',\n        description: data.error || 'Failed to extract bill data',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Handle AI toggle\n  const handleAiToggle = (enabled: boolean) => {\n    setAiEnabled(enabled);\n    if (!enabled) {\n      setAiExtractionData(null);\n      setIsExtracting(false);\n    }\n  };\n  \n  // Handle AI analysis completion\n  const handleAiAnalysisComplete = (analysisData: any) => {\n    if (analysisData.success) {\n      setAiExtractionData(analysisData.extractedData);\n      setIsExtracting(false);\n      \n      // Auto-populate form with extracted data\n      if (analysisData.extractedData) {\n        const data = analysisData.extractedData;\n        if (data.title) form.setValue('title', data.title);\n        if (data.vendor) form.setValue('vendor', data.vendor);\n        if (data.amount) form.setValue('totalAmount', data.amount.toString());\n        if (data.category) form.setValue('category', data.category);\n        if (data.date) form.setValue('startDate', data.date);\n        if (data.description) form.setValue('description', data.description);\n      }\n      \n      toast({\n        title: 'AI Analysis Complete',\n        description: 'Bill data has been extracted and populated in the form.',\n      });\n    } else {\n      setIsExtracting(false);\n      toast({\n        title: 'AI Analysis Failed',\n        description: analysisData.error || 'Failed to analyze document',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Handle file upload from SharedUploader\n  const handleFileUpload = (file: File | null, extractedText?: string | null) => {\n    if (file) {\n      if (aiEnabled) {\n        setAiFile(file);\n        setIsAiMode(true);\n        setIsExtracting(true);\n      } else {\n        setManualFile(file);\n      }\n    }\n  };\n\n  // Create/Update bill mutation\n  const billMutation = useMutation({\n    mutationFn: async (data: BillFormData) => {\n      const endpoint = bill ? `/api/bills/${bill.id}` : '/api/bills';\n      const method = bill ? 'PUT' : 'POST';\n      \n      const billData = {\n        ...data,\n        buildingId: buildingId || bill?.buildingId,\n        costs: [data.totalAmount], // Convert single amount to costs array\n      };\n\n      const response = await apiRequest(method, endpoint, billData);\n      const billResponse = await response.json();\n      \n      // Upload document if one was attached (either from AI extraction or manual entry)\n      const fileToUpload = aiFile || manualFile;\n      if (!bill && fileToUpload) {\n        try {\n          console.log('[BILL FORM] Uploading document:', fileToUpload.name, 'for bill:', billResponse.id);\n          const formData = new FormData();\n          formData.append('document', fileToUpload);\n          \n          const uploadResponse = await fetch(`/api/bills/${billResponse.id}/upload-document`, {\n            method: 'POST',\n            credentials: 'include',\n            body: formData,\n          });\n          \n          if (!uploadResponse.ok) {\n            const errorText = await uploadResponse.text();\n            console.error('[BILL FORM] Upload failed with status:', uploadResponse.status, errorText);\n            throw new Error(`Upload failed: ${uploadResponse.status} ${errorText}`);\n          }\n          \n          const uploadResult = await uploadResponse.json();\n          console.log('[BILL FORM] Document upload successful:', uploadResult);\n          \n          // Update the bill response with the document information from the upload\n          if (uploadResult.bill) {\n            billResponse.filePath = uploadResult.bill.filePath;\n            billResponse.fileName = uploadResult.bill.fileName;\n            billResponse.fileSize = uploadResult.bill.fileSize;\n            billResponse.isAiAnalyzed = uploadResult.bill.isAiAnalyzed;\n            billResponse.aiAnalysisData = uploadResult.bill.aiAnalysisData;\n          }\n          \n          // Show success toast for document upload\n          toast({\n            title: 'Document Uploaded',\n            description: `${fileToUpload.name} has been attached to the bill`,\n          });\n        } catch (uploadError) {\n          console.error('[BILL FORM] Failed to upload document:', uploadError);\n          toast({\n            title: 'Document Upload Failed',\n            description: `Failed to upload ${fileToUpload.name}. The bill was created but without the document.`,\n            variant: 'destructive',\n          });\n          // Don't fail the bill creation if document upload fails\n        }\n      }\n      \n      return billResponse;\n    },\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      toast({\n        title: 'Success',\n        description: `Bill ${bill ? 'updated' : 'created'} successfully`,\n      });\n      onSuccess?.(data.id, bill ? 'updated' : 'created');\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || `Failed to ${bill ? 'update' : 'create'} bill`,\n        variant: 'destructive',\n      });\n    }\n  });\n\n  // Delete bill mutation\n  const deleteBillMutation = useMutation({\n    mutationFn: async () => {\n      if (!bill?.id) throw new Error('No bill ID provided for deletion');\n      return apiRequest('DELETE', `/api/bills/${bill.id}`, null);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      toast({\n        title: 'Success',\n        description: 'Bill deleted successfully',\n      });\n      onSuccess?.(bill!.id, 'updated'); // Trigger parent refresh\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to delete bill',\n        variant: 'destructive',\n      });\n    }\n  });\n\n  const onSubmit = (data: BillFormData) => {\n    billMutation.mutate(data);\n  };\n\n  const handleDelete = () => {\n    if (!bill) return;\n    \n    if (confirm(`Are you sure you want to delete bill \"${bill.title}\"? This action cannot be undone.`)) {\n      deleteBillMutation.mutate();\n    }\n  };\n\n  // Custom Payment Management\n  const addCustomPayment = () => {\n    const newPayment: CustomPayment = { amount: '', date: '', description: '' };\n    setCustomPayments([...customPayments, newPayment]);\n  };\n\n  const removeCustomPayment = (index: number) => {\n    const updated = customPayments.filter((_, i) => i !== index);\n    setCustomPayments(updated);\n    form.setValue('customPayments', updated);\n  };\n\n  const updateCustomPayment = (index: number, field: keyof CustomPayment, value: string) => {\n    const updated = customPayments.map((payment, i) => \n      i === index ? { ...payment, [field]: value } : payment\n    );\n    setCustomPayments(updated);\n    form.setValue('customPayments', updated);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-semibold\">\n          {bill ? 'Edit Bill' : 'Create New Bill'}\n        </h2>\n        {aiExtractionData && (\n          <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n            <Sparkles className=\"w-3 h-3\" />\n            AI Extracted\n          </Badge>\n        )}\n      </div>\n\n      {!bill && (\n        <Tabs defaultValue=\"manual\" className=\"space-y-4\">\n          <TabsList className={cn(\"grid w-full\", aiEnabled ? \"grid-cols-2\" : \"grid-cols-1\")}>\n            <TabsTrigger value=\"manual\" data-testid=\"tab-manual\">\n              <FileText className=\"w-4 h-4 mr-2\" />\n              Manual Entry\n            </TabsTrigger>\n            {aiEnabled && (\n              <TabsTrigger value=\"ai\" data-testid=\"tab-ai\">\n                <Sparkles className=\"w-4 h-4 mr-2\" />\n                AI Extraction\n              </TabsTrigger>\n            )}\n          </TabsList>\n\n          {aiEnabled && (\n            <TabsContent value=\"ai\" className=\"space-y-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Sparkles className=\"w-5 h-5\" />\n                    Upload Bill Document\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <SharedUploader\n                    onDocumentChange={handleFileUpload}\n                    formType=\"bills\"\n                    uploadContext={uploadContext}\n                    aiAnalysisEnabled={aiEnabled}\n                    onAiToggle={handleAiToggle}\n                    onAiAnalysisComplete={handleAiAnalysisComplete}\n                    showAiToggle={false}\n                    allowedFileTypes={['image/*', 'application/pdf']}\n                    maxFileSize={25}\n                  />\n                  \n                  {isExtracting && (\n                    <div className=\"mt-4 p-4 bg-blue-50 dark:bg-blue-950 rounded-lg border border-blue-200 dark:border-blue-800\">\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                        <span className=\"text-blue-700 dark:text-blue-300 font-medium\">\n                          Extracting data from your document...\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-blue-600 dark:text-blue-400 mt-1\">\n                        This may take a few seconds depending on document complexity.\n                      </p>\n                    </div>\n                  )}\n                  \n                  {aiFile && (\n                    <GeminiBillExtractor\n                      file={aiFile}\n                      onExtractionComplete={handleAiExtractionComplete}\n                    />\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          )}\n\n          <TabsContent value=\"manual\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FileText className=\"w-5 h-5\" />\n                  Upload Document (Optional)\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <SharedUploader\n                  onDocumentChange={handleFileUpload}\n                  formType=\"bills\"\n                  uploadContext={uploadContext}\n                  aiAnalysisEnabled={false} // Disabled in manual entry\n                  showAiToggle={false} // Don't show toggle in manual entry\n                  allowedFileTypes={['image/*', 'application/pdf']}\n                  maxFileSize={25}\n                />\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      )}\n\n      {/* Bill Form */}\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* Title */}\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Title *</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Monthly Electricity Bill\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Vendor */}\n            <FormField\n              control={form.control}\n              name=\"vendor\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Vendor</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Hydro Quebec\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Category */}\n            <FormField\n              control={form.control}\n              name=\"category\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Category *</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select category\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {BILL_CATEGORIES.map((category) => (\n                        <SelectItem key={category.value} value={category.value}>\n                          {category.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Payment Type */}\n            <FormField\n              control={form.control}\n              name=\"paymentType\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Payment Type *</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select payment type\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"unique\">One-time Payment</SelectItem>\n                      <SelectItem value=\"recurrent\">Recurring Payment</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Total Amount */}\n            <FormField\n              control={form.control}\n              name=\"totalAmount\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Total Amount *</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"0.00\" type=\"number\" step=\"0.01\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Start Date */}\n            <FormField\n              control={form.control}\n              name=\"startDate\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Start Date *</FormLabel>\n                  <FormControl>\n                    <Input type=\"date\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          {/* Recurring Payment Schedule */}\n          {paymentType === 'recurrent' && (\n            <div className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"schedulePayment\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Payment Schedule</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select schedule\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"weekly\">Weekly</SelectItem>\n                        <SelectItem value=\"monthly\">Monthly</SelectItem>\n                        <SelectItem value=\"quarterly\">Quarterly</SelectItem>\n                        <SelectItem value=\"yearly\">Yearly</SelectItem>\n                        <SelectItem value=\"custom\">Custom Schedule</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {/* End Date for Recurrent Bills */}\n              <FormField\n                control={form.control}\n                name=\"endDate\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Recurrence End Date (Optional)</FormLabel>\n                    <FormControl>\n                      <Input type=\"date\" {...field} />\n                    </FormControl>\n                    <FormDescription>\n                      Setting an end date will stop auto-generation of future bills after this date.\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {schedulePayment === 'custom' && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <span>Custom Payment Schedule</span>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={addCustomPayment}\n                      >\n                        <Plus className=\"w-4 h-4 mr-2\" />\n                        Add Payment\n                      </Button>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    {customPayments.map((payment, index) => (\n                      <div key={index} className=\"flex gap-2 items-end\">\n                        <div className=\"flex-1\">\n                          <Input\n                            placeholder=\"Amount\"\n                            type=\"number\"\n                            step=\"0.01\"\n                            value={payment.amount}\n                            onChange={(e) => updateCustomPayment(index, 'amount', e.target.value)}\n                          />\n                        </div>\n                        <div className=\"flex-1\">\n                          <Input\n                            type=\"date\"\n                            value={payment.date}\n                            onChange={(e) => updateCustomPayment(index, 'date', e.target.value)}\n                          />\n                        </div>\n                        <div className=\"flex-1\">\n                          <Input\n                            placeholder=\"Description\"\n                            value={payment.description || ''}\n                            onChange={(e) => updateCustomPayment(index, 'description', e.target.value)}\n                          />\n                        </div>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => removeCustomPayment(index)}\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    ))}\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          )}\n\n          {/* Description */}\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"Additional details about this bill...\"\n                    className=\"min-h-[100px]\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Notes */}\n          <FormField\n            control={form.control}\n            name=\"notes\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Notes</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"Internal notes...\"\n                    className=\"min-h-[80px]\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Form Actions */}\n          <div className=\"flex justify-between items-center\">\n            {/* Delete button on the left (only for existing bills) */}\n            <div>\n              {bill && (\n                <Button \n                  type=\"button\" \n                  variant=\"destructive\" \n                  onClick={handleDelete} \n                  disabled={deleteBillMutation.isPending}\n                >\n                  {deleteBillMutation.isPending ? 'Deleting...' : 'Delete Bill'}\n                </Button>\n              )}\n            </div>\n            \n            {/* Cancel and Save/Update buttons on the right */}\n            <div className=\"flex gap-2\">\n              {onCancel && (\n                <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n                  Cancel\n                </Button>\n              )}\n              <Button type=\"submit\" disabled={billMutation.isPending}>\n                {billMutation.isPending ? 'Processing...' : (bill ? 'Update Bill' : 'Create Bill')}\n              </Button>\n            </div>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n}"],"version":3}