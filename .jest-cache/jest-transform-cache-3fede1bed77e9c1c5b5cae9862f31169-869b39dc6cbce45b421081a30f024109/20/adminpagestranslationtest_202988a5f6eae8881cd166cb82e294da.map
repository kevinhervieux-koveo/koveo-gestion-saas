{"file":"/home/runner/workspace/tests/unit/admin-pages-translation.test.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/admin-pages-translation.test.ts"],"sourcesContent":["/**\n * ADMIN PAGES TRANSLATION TEST\n * \n * This test validates that all admin pages have proper translation coverage\n * and Quebec Law 25 compliance for bilingual support.\n */\n\nimport { describe, it, expect } from '@jest/globals';\nimport { translations, type Language } from '../../client/src/lib/i18n.ts';\n\ndescribe('Admin Pages Translation Coverage', () => {\n  const languages: Language[] = ['en', 'fr'];\n\n  describe('Admin Page Headers and Titles', () => {\n    const adminPageKeys = [\n      // Organizations page\n      'organizationsManagement',\n      'organizationsManagementDesc',\n      'createEditDeleteOrganizations',\n      \n      // Permissions page\n      'permissionsManagement',\n      'permissionsManagementDesc',\n      'roleBasedAccessControl',\n      'systemPermissions',\n      'userRoles',\n      'permissionSettings',\n      \n      // Compliance page\n      'quebecLaw25Compliance',\n      'privacyComplianceMonitoring',\n      'violationTracking',\n      'scanCommand',\n      'semgrepCli',\n      \n      // Quality page\n      'qualityAssurance',\n      'qualityMetricsTracking',\n      'refreshCommand',\n      \n      // Documentation page\n      'documentationCenter',\n      'generateManageDocumentation',\n      'projectOverview',\n      'technicalComponents',\n      'apiSpecifications',\n      'databaseSchema',\n      'dependencyInformation',\n      \n      // Roadmap page\n      'productRoadmap',\n      'featurePlanningCapabilities',\n      'roadmapManagement',\n      'featureStatus',\n      'priorityManagement',\n      \n      // Pillars page\n      'pillarFramework',\n      'developmentFrameworkMethodology',\n      'validateCommand',\n      \n      // Suggestions page\n      'suggestionsManagement',\n      'userFeedbackSuggestions',\n      'suggestionReview',\n    ];\n\n    languages.forEach((lang) => {\n      describe(`${lang.toUpperCase()} translations`, () => {\n        adminPageKeys.forEach((key) => {\n          it(`should have translation for admin key: ${key}`, () => {\n            const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n            expect(translation).toBeDefined();\n            expect(typeof translation).toBe('string');\n            expect(translation.length).toBeGreaterThan(0);\n            \n            // Quebec compliance: French translations should be different from English\n            if (lang === 'fr') {\n              const englishTranslation = translations['en'][key as keyof typeof translations['en']];\n              if (englishTranslation) {\n                expect(translation).not.toBe(englishTranslation);\n              }\n            }\n          });\n        });\n      });\n    });\n  });\n\n  describe('Admin Actions and Buttons', () => {\n    const adminActionKeys = [\n      // Common admin actions\n      'createNew',\n      'editSelected',\n      'deleteSelected',\n      'bulkActions',\n      'exportData',\n      'importData',\n      'manageUsers',\n      'assignRoles',\n      'revokePermissions',\n      'grantPermissions',\n      'activateAccount',\n      'deactivateAccount',\n      'resetPassword',\n      'sendInvitation',\n      'cancelInvitation',\n      'resendInvitation',\n      \n      // System administration\n      'systemSettings',\n      'securitySettings',\n      'auditLogs',\n      'systemBackup',\n      'dataExport',\n      'complianceReport',\n      'performanceMetrics',\n      'systemHealth',\n      \n      // Quebec Law 25 specific\n      'privacyAudit',\n      'dataRetentionPolicy',\n      'consentManagement',\n      'rightToErasure',\n      'dataPortability',\n      'privacyImpactAssessment',\n    ];\n\n    languages.forEach((lang) => {\n      describe(`${lang.toUpperCase()} admin action translations`, () => {\n        adminActionKeys.forEach((key) => {\n          it(`should have translation for admin action: ${key}`, () => {\n            const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n            expect(translation).toBeDefined();\n            expect(typeof translation).toBe('string');\n            expect(translation.length).toBeGreaterThan(0);\n          });\n        });\n      });\n    });\n  });\n\n  describe('Admin Error Messages and Validation', () => {\n    const adminErrorKeys = [\n      // Permission errors\n      'insufficientPermissions',\n      'accessDenied',\n      'roleAssignmentFailed',\n      'permissionRevocationFailed',\n      'unauthorized',\n      \n      // System errors\n      'systemError',\n      'configurationError',\n      'validationFailed',\n      'operationFailed',\n      'connectionError',\n      'timeoutError',\n      \n      // Quebec Law 25 compliance errors\n      'privacyViolation',\n      'dataRetentionViolation',\n      'consentRequired',\n      'dataProcessingError',\n      'complianceCheckFailed',\n    ];\n\n    languages.forEach((lang) => {\n      describe(`${lang.toUpperCase()} admin error translations`, () => {\n        adminErrorKeys.forEach((key) => {\n          it(`should have translation for admin error: ${key}`, () => {\n            const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n            expect(translation).toBeDefined();\n            expect(typeof translation).toBe('string');\n            expect(translation.length).toBeGreaterThan(0);\n          });\n        });\n      });\n    });\n  });\n\n  describe('Admin Status and Notifications', () => {\n    const adminStatusKeys = [\n      // User statuses\n      'userActive',\n      'userInactive',\n      'userPending',\n      'userSuspended',\n      'userDeleted',\n      \n      // System statuses\n      'systemOnline',\n      'systemOffline',\n      'maintenanceMode',\n      'backupInProgress',\n      'updateAvailable',\n      'securityAlert',\n      \n      // Compliance statuses\n      'compliant',\n      'nonCompliant',\n      'pendingReview',\n      'requiresAction',\n      'auditRequired',\n    ];\n\n    languages.forEach((lang) => {\n      describe(`${lang.toUpperCase()} admin status translations`, () => {\n        adminStatusKeys.forEach((key) => {\n          it(`should have translation for admin status: ${key}`, () => {\n            const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n            expect(translation).toBeDefined();\n            expect(typeof translation).toBe('string');\n            expect(translation.length).toBeGreaterThan(0);\n          });\n        });\n      });\n    });\n  });\n\n  describe('Quebec Law 25 Specific Admin Terms', () => {\n    const quebecLaw25Keys = [\n      // Legal terms in French and English\n      'donneesPersonnelles', // Personal data\n      'consentementEclaire', // Informed consent\n      'droitALOubli', // Right to be forgotten\n      'portabiliteDonnees', // Data portability\n      'evaluationImpactViePrivee', // Privacy impact assessment\n      'responsableTraitement', // Data controller\n      'sousTraitant', // Data processor\n      'violationDonnees', // Data breach\n      'notificationViolation', // Breach notification\n      'registreTraitement', // Processing registry\n      \n      // Administrative terms\n      'auditConformite', // Compliance audit\n      'mesuresSecurite', // Security measures\n      'conservationDonnees', // Data retention\n      'suppressionDonnees', // Data deletion\n      'rectificationDonnees', // Data rectification\n    ];\n\n    languages.forEach((lang) => {\n      describe(`${lang.toUpperCase()} Quebec Law 25 admin translations`, () => {\n        quebecLaw25Keys.forEach((key) => {\n          it(`should have translation for Quebec Law 25 term: ${key}`, () => {\n            const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n            expect(translation).toBeDefined();\n            expect(typeof translation).toBe('string');\n            expect(translation.length).toBeGreaterThan(0);\n            \n            // For French, ensure Quebec French terminology is used\n            if (lang === 'fr' && key.includes('donnees')) {\n              expect(translation.toLowerCase()).toMatch(/donn[ée]es/);\n            }\n          });\n        });\n      });\n    });\n  });\n\n  describe('Admin Interface Consistency', () => {\n    it('should have consistent admin navigation terms', () => {\n      const adminNavKeys = [\n        'adminDashboard',\n        'userManagement',\n        'systemSettings',\n        'reports',\n        'analytics',\n        'compliance',\n        'security',\n      ];\n\n      languages.forEach((lang) => {\n        adminNavKeys.forEach((key) => {\n          const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n          expect(translation).toBeDefined();\n          expect(typeof translation).toBe('string');\n          expect(translation.length).toBeGreaterThan(0);\n        });\n      });\n    });\n\n    it('should have consistent table headers for admin lists', () => {\n      const tableHeaderKeys = [\n        'name',\n        'email',\n        'role',\n        'status',\n        'lastLogin',\n        'createdAt',\n        'updatedAt',\n        'actions',\n      ];\n\n      languages.forEach((lang) => {\n        tableHeaderKeys.forEach((key) => {\n          const translation = translations[lang][key as keyof typeof translations[typeof lang]];\n          expect(translation).toBeDefined();\n          expect(typeof translation).toBe('string');\n          expect(translation.length).toBeGreaterThan(0);\n        });\n      });\n    });\n  });\n});"],"version":3}