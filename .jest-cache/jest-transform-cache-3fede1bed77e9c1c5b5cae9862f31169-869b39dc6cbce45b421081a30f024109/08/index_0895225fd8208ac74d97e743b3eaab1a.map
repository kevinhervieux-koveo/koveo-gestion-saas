{"file":"/home/runner/workspace/client/src/components/document-management/index.ts","mappings":";AAAA;;;;;;;;;;;GAWG;;;;;;AAEH,sCAAsC;AACtC,mDAAkD;AAAzC,gHAAA,cAAc,OAAA;AACvB,+CAA8C;AAArC,4GAAA,YAAY,OAAA;AACrB,2FAA2F;AAE3F,gCAAgC;AAChC,uDAAiE;AAAxD,2HAAA,OAAO,OAAe;AAC/B,6EAAuF;AAA9E,iJAAA,OAAO,OAA0B;AAE1C,6BAA6B;AAC7B,sEAAgF;AAAvE,mIAAA,OAAO,OAAmB;AACnC,8EAA6E;AAApE,0HAAA,mBAAmB,OAAA;AAO5B,kBAAkB;AAClB,EAAE;AACF,qBAAqB;AACrB,mBAAmB;AACnB,+DAA+D;AAC/D,sDAAsD;AACtD,qBAAqB;AACrB,KAAK;AACL,EAAE;AACF,oBAAoB;AACpB,gBAAgB;AAChB,iCAAiC;AACjC,yBAAyB;AACzB,yCAAyC;AACzC,yBAAyB;AACzB,2BAA2B;AAC3B,KAAK;AACL,EAAE;AACF,iDAAiD;AACjD,mBAAmB;AACnB,qBAAqB;AACrB,iEAAiE;AACjE,6BAA6B;AAC7B,wBAAwB;AACxB,+DAA+D;AAC/D,wEAAwE;AACxE,sDAAsD;AACtD,qBAAqB;AACrB,KAAK","names":[],"sources":["/home/runner/workspace/client/src/components/document-management/index.ts"],"sourcesContent":["/**\n * Document Management Components\n * \n * A comprehensive set of reusable React components for document management\n * Built with TypeScript, Tailwind CSS, and Shadcn/ui\n * \n * Features:\n * - Mobile-first design with camera integration\n * - Role-based access control and permissions\n * - Secure file upload and validation\n * - Law 25 compliance for Quebec property management\n */\n\n// Core Document Management Components\nexport { SharedUploader } from './SharedUploader';\nexport { DocumentCard } from './DocumentCard';\n// Note: DocumentViewModal and DocumentEditModal were temporarily removed but may be needed\n\n// Invoice Management Components\nexport { default as InvoiceForm } from '../invoices/InvoiceForm';\nexport { default as GeminiInvoiceExtractor } from '../invoices/GeminiInvoiceExtractor';\n\n// Bill Management Components\nexport { default as ModularBillForm } from '../bill-management/ModularBillForm';\nexport { GeminiBillExtractor } from '../bill-management/GeminiBillExtractor';\n\n// Re-export useful types that consumers might need\nexport type {\n  // Types that might be useful for consumers\n} from './SharedUploader';\n\n// Usage Examples:\n//\n// Basic file upload:\n// <SharedUploader \n//   onDocumentChange={(file, text) => console.log(file, text)}\n//   allowedFileTypes={['application/pdf', 'image/*']}\n//   maxFileSize={25}\n// />\n//\n// Document display:\n// <DocumentCard\n//   title=\"Building Bylaws 2024\"\n//   documentId=\"doc-123\"\n//   onViewClick={(id) => handleView(id)}\n//   documentType=\"bylaw\"\n//   createdAt=\"2024-01-15\"\n// />\n//\n// AI-enhanced upload with form-specific context:\n// <SharedUploader \n//   formType=\"bills\"\n//   uploadContext={{ type: 'bills', organizationId: 'org-123' }}\n//   aiAnalysisEnabled={true}\n//   showAiToggle={true}\n//   onDocumentChange={(file, text) => console.log(file, text)}\n//   onAiAnalysisComplete={(data) => console.log('AI extracted:', data)}\n//   allowedFileTypes={['application/pdf', 'image/*']}\n//   maxFileSize={25}\n// />"],"version":3}