{"file":"/home/runner/workspace/client/src/components/common/DocumentPageWrapper.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/common/DocumentPageWrapper.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { useLocation, useParams } from 'wouter';\nimport { apiRequest } from '@/lib/queryClient';\nimport DocumentManager from '@/components/common/DocumentManager';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\n\ninterface DocumentPageWrapperProps {\n  type: 'building' | 'residence';\n  userRole: 'manager' | 'resident';\n  backPath: string;\n  backLabel?: string;\n  entityIdParam: string;\n}\n\nexport default function DocumentPageWrapper({\n  type,\n  userRole,\n  backPath,\n  backLabel,\n  entityIdParam,\n}: DocumentPageWrapperProps) {\n  const [, navigate] = useLocation();\n  const params = useParams();\n  const { t } = useLanguage();\n\n  // Get entityId from URL (both path param and query param)\n  const urlParams = new URLSearchParams(window.location.search);\n  const entityId = (params as any)[entityIdParam] || urlParams.get(entityIdParam);\n\n  // Get current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // Get entity info based on type\n  const entityApiPath = type === 'building' ? '/api/manager/buildings' : '/api/residences';\n  const { data: entity, isError: entityError, error } = useQuery({\n    queryKey: [entityApiPath, entityId],\n    queryFn: async () => {\n      if (type === 'residence') {\n        const response = await fetch(`/api/residences/${entityId}`, {\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new Error('ENTITY_NOT_FOUND');\n          }\n          throw new Error(`Failed to fetch ${type}`);\n        }\n        return response.json();\n      } else {\n        return apiRequest('GET', `${entityApiPath}/${entityId}`) as Promise<any>;\n      }\n    },\n    enabled: !!entityId,\n    retry: false, // Don't retry on 404s\n  });\n\n  if (!entityId) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <p className='text-gray-500 mb-4'>{type} ID is required</p>\n            <Button\n              variant='outline'\n              onClick={() => navigate(backPath)}\n              data-testid='button-back-to-list'\n            >\n              <ArrowLeft className='w-4 h-4 mr-2' />\n              {backLabel || `Back to ${type}s`}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Handle entity not found (specific to residence pages that had this logic)\n  if (entityError && error?.message === 'ENTITY_NOT_FOUND' && type === 'residence') {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center max-w-md'>\n            <h2 className='text-xl font-semibold mb-4'>Residence Not Found</h2>\n            <p className='text-gray-500 mb-4'>\n              The residence ID \"{entityId}\" doesn't exist in the development database.\n            </p>\n            <p className='text-sm text-gray-400 mb-6'>\n              This might be a production database ID. Please use a valid development residence ID.\n            </p>\n            <div className='space-y-2'>\n              <Button\n                variant='default'\n                onClick={() => navigate(backPath)}\n                data-testid='button-back-to-list'\n                className='w-full'\n              >\n                <ArrowLeft className='w-4 h-4 mr-2' />\n                {backLabel || 'Back to Residences'}\n              </Button>\n              <Button\n                variant='outline'\n                onClick={() =>\n                  navigate('/residents/residences/e27ac924-8120-4904-a791-d1e9db544d58/documents')\n                }\n                data-testid='button-go-to-valid-residence'\n                className='w-full'\n              >\n                Go to Unit 101 (Test Residence)\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Determine permissions based on user role and type\n  const isUserTenant = user?.role === 'tenant';\n  const isManager = user?.role === 'manager' || user?.role === 'admin';\n  \n  const permissions = userRole === 'manager' \n    ? {\n        allowCreate: isManager,\n        allowEdit: isManager,\n        allowDelete: isManager,\n        showVisibilityToggle: isManager,\n      }\n    : {\n        allowCreate: !isUserTenant,\n        allowEdit: !isUserTenant,\n        allowDelete: !isUserTenant,\n        showVisibilityToggle: !isUserTenant,\n      };\n\n  // Generate entity name based on type\n  const entityName = type === 'residence' \n    ? (entity?.unitNumber || entity?.unit_number ? `Unit ${entity.unitNumber || entity.unit_number}` : 'Residence')\n    : entity?.name;\n\n  const defaultBackLabel = backLabel || (type === 'building' ? 'Back to Buildings' : t('backToResidences'));\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      {/* Back button */}\n      <div className='p-6 pb-0'>\n        <Button\n          variant='outline'\n          onClick={() => navigate(backPath)}\n          className='mb-4'\n          data-testid='button-back'\n        >\n          <ArrowLeft className='w-4 h-4 mr-2' />\n          {defaultBackLabel}\n        </Button>\n      </div>\n\n      <DocumentManager\n        config={{\n          type,\n          userRole,\n          entityId,\n          entityName,\n          entityAddress: entity?.address,\n          ...permissions,\n        }}\n      />\n    </div>\n  );\n}"],"version":3}