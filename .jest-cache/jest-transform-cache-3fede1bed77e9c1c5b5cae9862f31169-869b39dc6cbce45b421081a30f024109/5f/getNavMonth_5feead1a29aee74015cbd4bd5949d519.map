{"file":"/home/runner/workspace/node_modules/react-day-picker/dist/cjs/helpers/getNavMonth.js","mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC;;;;;;GAMG;AACH,SAAS,YAAY,CAAC,KAAK,EAAE,OAAO;IAChC,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IACrC,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,GAAG,GAAG,OAAO,CAAC;IAC5G,yBAAyB;IACzB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IACvD,IAAI,CAAC,UAAU,IAAI,SAAS,EAAE,CAAC;QAC3B,UAAU,GAAG,SAAS,CAAC;IAC3B,CAAC;IACD,IAAI,CAAC,UAAU,IAAI,QAAQ,EAAE,CAAC;QAC1B,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE,CAAC;QACvB,QAAQ,GAAG,OAAO,CAAC;IACvB,CAAC;IACD,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE,CAAC;QACtB,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC;IACD,MAAM,eAAe,GAAG,KAAK,CAAC,aAAa,KAAK,UAAU;QACtD,KAAK,CAAC,aAAa,KAAK,gBAAgB,CAAC;IAC7C,IAAI,UAAU,EAAE,CAAC;QACb,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;SACI,IAAI,QAAQ,EAAE,CAAC;QAChB,UAAU,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;SACI,IAAI,CAAC,UAAU,IAAI,eAAe,EAAE,CAAC;QACtC,UAAU,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IACD,IAAI,QAAQ,EAAE,CAAC;QACX,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;SACI,IAAI,MAAM,EAAE,CAAC;QACd,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC;SACI,IAAI,CAAC,QAAQ,IAAI,eAAe,EAAE,CAAC;QACpC,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC,CAAC;IACjD,CAAC;IACD,OAAO;QACH,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU;QAChD,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;KAC7C,CAAC;AACN,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/react-day-picker/dist/cjs/helpers/getNavMonth.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNavMonths = getNavMonths;\n/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nfunction getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today, } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth,\n    ];\n}\n"],"version":3}