c48a376692ba576108e6cf00413078b8
"use strict";

/* istanbul ignore next */
function cov_7m5tvqzdi() {
  var path = "/home/runner/workspace/client/src/pages/manager/bills.tsx";
  var hash = "a06386d3326964d7f1c26c79879e004c10bc15f5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/pages/manager/bills.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 24
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 54
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 46
        }
      },
      "8": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "9": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "10": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "11": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "12": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "13": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "14": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 54
        }
      },
      "15": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "16": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "17": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 77
        }
      },
      "18": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 98
        }
      },
      "19": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "20": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 50
        }
      },
      "21": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "22": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "23": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "24": {
        start: {
          line: 41,
          column: 15
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "25": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "26": {
        start: {
          line: 57,
          column: 36
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "27": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 60
        }
      },
      "28": {
        start: {
          line: 78,
          column: 18
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "29": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "30": {
        start: {
          line: 85,
          column: 52
        },
        end: {
          line: 85,
          column: 80
        }
      },
      "31": {
        start: {
          line: 86,
          column: 44
        },
        end: {
          line: 86,
          column: 72
        }
      },
      "32": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 59
        }
      },
      "33": {
        start: {
          line: 89,
          column: 90
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "34": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 89
        }
      },
      "35": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "36": {
        start: {
          line: 97,
          column: 44
        },
        end: {
          line: 174,
          column: 6
        }
      },
      "37": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 100,
          column: 48
        }
      },
      "38": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "39": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "40": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "41": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 57
        }
      },
      "42": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "43": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 49
        }
      },
      "44": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "45": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 63
        }
      },
      "46": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 87
        }
      },
      "47": {
        start: {
          line: 138,
          column: 29
        },
        end: {
          line: 138,
          column: 73
        }
      },
      "48": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "49": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 81
        }
      },
      "50": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 35
        }
      },
      "51": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 189,
          column: 10
        }
      },
      "52": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 49
        }
      },
      "53": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "54": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 31
        }
      },
      "55": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "56": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 19
        }
      },
      "57": {
        start: {
          line: 190,
          column: 31
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "58": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 58
        }
      },
      "59": {
        start: {
          line: 191,
          column: 30
        },
        end: {
          line: 191,
          column: 55
        }
      },
      "60": {
        start: {
          line: 193,
          column: 30
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "61": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 199,
          column: 12
        }
      },
      "62": {
        start: {
          line: 194,
          column: 30
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "63": {
        start: {
          line: 197,
          column: 44
        },
        end: {
          line: 197,
          column: 60
        }
      },
      "64": {
        start: {
          line: 201,
          column: 34
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "65": {
        start: {
          line: 202,
          column: 31
        },
        end: {
          line: 202,
          column: 57
        }
      },
      "66": {
        start: {
          line: 202,
          column: 49
        },
        end: {
          line: 202,
          column: 56
        }
      },
      "67": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 206,
          column: 12
        }
      },
      "68": {
        start: {
          line: 203,
          column: 30
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "69": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "70": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "71": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 32
        }
      },
      "72": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "73": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 32
        }
      },
      "74": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "75": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 75
        }
      },
      "76": {
        start: {
          line: 235,
          column: 45
        },
        end: {
          line: 235,
          column: 74
        }
      },
      "77": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 48
        }
      },
      "78": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 49
        }
      },
      "79": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 243,
          column: 19
        }
      },
      "80": {
        start: {
          line: 242,
          column: 32
        },
        end: {
          line: 242,
          column: 59
        }
      },
      "81": {
        start: {
          line: 244,
          column: 37
        },
        end: {
          line: 244,
          column: 92
        }
      },
      "82": {
        start: {
          line: 245,
          column: 24
        },
        end: {
          line: 245,
          column: 48
        }
      },
      "83": {
        start: {
          line: 247,
          column: 27
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "84": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "85": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 257,
          column: 54
        }
      },
      "86": {
        start: {
          line: 258,
          column: 28
        },
        end: {
          line: 258,
          column: 44
        }
      },
      "87": {
        start: {
          line: 259,
          column: 31
        },
        end: {
          line: 259,
          column: 54
        }
      },
      "88": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 79
        }
      },
      "89": {
        start: {
          line: 260,
          column: 64
        },
        end: {
          line: 260,
          column: 77
        }
      },
      "90": {
        start: {
          line: 264,
          column: 30
        },
        end: {
          line: 264,
          column: 45
        }
      },
      "91": {
        start: {
          line: 265,
          column: 28
        },
        end: {
          line: 265,
          column: 43
        }
      },
      "92": {
        start: {
          line: 266,
          column: 31
        },
        end: {
          line: 266,
          column: 54
        }
      },
      "93": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 79
        }
      },
      "94": {
        start: {
          line: 267,
          column: 64
        },
        end: {
          line: 267,
          column: 77
        }
      },
      "95": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "96": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 609
        }
      },
      "97": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "98": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 669
        }
      },
      "99": {
        start: {
          line: 276,
          column: 534
        },
        end: {
          line: 276,
          column: 558
        }
      },
      "100": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 283,
          column: 313
        }
      },
      "101": {
        start: {
          line: 278,
          column: 1196
        },
        end: {
          line: 278,
          column: 1235
        }
      },
      "102": {
        start: {
          line: 279,
          column: 97
        },
        end: {
          line: 279,
          column: 202
        }
      },
      "103": {
        start: {
          line: 279,
          column: 586
        },
        end: {
          line: 279,
          column: 623
        }
      },
      "104": {
        start: {
          line: 279,
          column: 993
        },
        end: {
          line: 279,
          column: 1108
        }
      },
      "105": {
        start: {
          line: 279,
          column: 1552
        },
        end: {
          line: 279,
          column: 1585
        }
      },
      "106": {
        start: {
          line: 279,
          column: 1866
        },
        end: {
          line: 279,
          column: 2088
        }
      },
      "107": {
        start: {
          line: 279,
          column: 2342
        },
        end: {
          line: 279,
          column: 2363
        }
      },
      "108": {
        start: {
          line: 279,
          column: 2710
        },
        end: {
          line: 279,
          column: 2732
        }
      },
      "109": {
        start: {
          line: 279,
          column: 4258
        },
        end: {
          line: 279,
          column: 4730
        }
      },
      "110": {
        start: {
          line: 279,
          column: 4488
        },
        end: {
          line: 279,
          column: 4518
        }
      },
      "111": {
        start: {
          line: 279,
          column: 5590
        },
        end: {
          line: 279,
          column: 5616
        }
      },
      "112": {
        start: {
          line: 280,
          column: 76
        },
        end: {
          line: 280,
          column: 103
        }
      },
      "113": {
        start: {
          line: 281,
          column: 76
        },
        end: {
          line: 281,
          column: 136
        }
      },
      "114": {
        start: {
          line: 282,
          column: 284
        },
        end: {
          line: 282,
          column: 328
        }
      },
      "115": {
        start: {
          line: 282,
          column: 1237
        },
        end: {
          line: 282,
          column: 1262
        }
      },
      "116": {
        start: {
          line: 282,
          column: 1411
        },
        end: {
          line: 283,
          column: 69
        }
      },
      "117": {
        start: {
          line: 283,
          column: 90
        },
        end: {
          line: 283,
          column: 294
        }
      },
      "118": {
        start: {
          line: 283,
          column: 216
        },
        end: {
          line: 283,
          column: 275
        }
      },
      "119": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 302,
          column: 779
        }
      },
      "120": {
        start: {
          line: 302,
          column: 684
        },
        end: {
          line: 302,
          column: 765
        }
      },
      "121": {
        start: {
          line: 319,
          column: 18
        },
        end: {
          line: 319,
          column: 51
        }
      },
      "122": {
        start: {
          line: 320,
          column: 52
        },
        end: {
          line: 320,
          column: 80
        }
      },
      "123": {
        start: {
          line: 321,
          column: 48
        },
        end: {
          line: 321,
          column: 76
        }
      },
      "124": {
        start: {
          line: 322,
          column: 25
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "125": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 338,
          column: 111
        }
      },
      "126": {
        start: {
          line: 329,
          column: 189
        },
        end: {
          line: 329,
          column: 214
        }
      },
      "127": {
        start: {
          line: 330,
          column: 32
        },
        end: {
          line: 330,
          column: 59
        }
      },
      "128": {
        start: {
          line: 331,
          column: 32
        },
        end: {
          line: 331,
          column: 43
        }
      },
      "129": {
        start: {
          line: 332,
          column: 47
        },
        end: {
          line: 332,
          column: 73
        }
      },
      "130": {
        start: {
          line: 333,
          column: 32
        },
        end: {
          line: 333,
          column: 59
        }
      },
      "131": {
        start: {
          line: 334,
          column: 32
        },
        end: {
          line: 334,
          column: 56
        }
      },
      "132": {
        start: {
          line: 336,
          column: 28
        },
        end: {
          line: 336,
          column: 53
        }
      },
      "133": {
        start: {
          line: 337,
          column: 28
        },
        end: {
          line: 337,
          column: 39
        }
      },
      "134": {
        start: {
          line: 338,
          column: 43
        },
        end: {
          line: 338,
          column: 67
        }
      },
      "135": {
        start: {
          line: 342,
          column: 24
        },
        end: {
          line: 342,
          column: 59
        }
      },
      "136": {
        start: {
          line: 344,
          column: 84
        },
        end: {
          line: 355,
          column: 6
        }
      },
      "137": {
        start: {
          line: 347,
          column: 29
        },
        end: {
          line: 349,
          column: 14
        }
      },
      "138": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 352,
          column: 13
        }
      },
      "139": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 64
        }
      },
      "140": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 35
        }
      },
      "141": {
        start: {
          line: 357,
          column: 70
        },
        end: {
          line: 370,
          column: 6
        }
      },
      "142": {
        start: {
          line: 360,
          column: 29
        },
        end: {
          line: 362,
          column: 14
        }
      },
      "143": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "144": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 110
        }
      },
      "145": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 66
        }
      },
      "146": {
        start: {
          line: 367,
          column: 25
        },
        end: {
          line: 367,
          column: 46
        }
      },
      "147": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 40
        }
      },
      "148": {
        start: {
          line: 372,
          column: 24
        },
        end: {
          line: 372,
          column: 41
        }
      },
      "149": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "150": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 111
        }
      },
      "151": {
        start: {
          line: 377,
          column: 34
        },
        end: {
          line: 377,
          column: 82
        }
      },
      "152": {
        start: {
          line: 378,
          column: 31
        },
        end: {
          line: 397,
          column: 6
        }
      },
      "153": {
        start: {
          line: 380,
          column: 29
        },
        end: {
          line: 387,
          column: 14
        }
      },
      "154": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "155": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 57
        }
      },
      "156": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 35
        }
      },
      "157": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 72
        }
      },
      "158": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 24
        }
      },
      "159": {
        start: {
          line: 398,
          column: 29
        },
        end: {
          line: 402,
          column: 5
        }
      },
      "160": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "161": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 51
        }
      },
      "162": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 462,
          column: 714
        }
      },
      "163": {
        start: {
          line: 403,
          column: 3195
        },
        end: {
          line: 403,
          column: 3221
        }
      },
      "164": {
        start: {
          line: 403,
          column: 3933
        },
        end: {
          line: 403,
          column: 4191
        }
      },
      "165": {
        start: {
          line: 405,
          column: 52
        },
        end: {
          line: 405,
          column: 124
        }
      },
      "166": {
        start: {
          line: 408,
          column: 65
        },
        end: {
          line: 408,
          column: 92
        }
      },
      "167": {
        start: {
          line: 409,
          column: 52
        },
        end: {
          line: 409,
          column: 113
        }
      },
      "168": {
        start: {
          line: 410,
          column: 52
        },
        end: {
          line: 410,
          column: 108
        }
      },
      "169": {
        start: {
          line: 411,
          column: 52
        },
        end: {
          line: 411,
          column: 84
        }
      },
      "170": {
        start: {
          line: 412,
          column: 52
        },
        end: {
          line: 412,
          column: 65
        }
      },
      "171": {
        start: {
          line: 413,
          column: 52
        },
        end: {
          line: 413,
          column: 84
        }
      },
      "172": {
        start: {
          line: 414,
          column: 289
        },
        end: {
          line: 462,
          column: 258
        }
      },
      "173": {
        start: {
          line: 415,
          column: 52
        },
        end: {
          line: 436,
          column: 53
        }
      },
      "174": {
        start: {
          line: 417,
          column: 73
        },
        end: {
          line: 420,
          column: 58
        }
      },
      "175": {
        start: {
          line: 421,
          column: 56
        },
        end: {
          line: 423,
          column: 57
        }
      },
      "176": {
        start: {
          line: 422,
          column: 60
        },
        end: {
          line: 422,
          column: 134
        }
      },
      "177": {
        start: {
          line: 425,
          column: 69
        },
        end: {
          line: 425,
          column: 90
        }
      },
      "178": {
        start: {
          line: 426,
          column: 68
        },
        end: {
          line: 426,
          column: 100
        }
      },
      "179": {
        start: {
          line: 428,
          column: 56
        },
        end: {
          line: 428,
          column: 83
        }
      },
      "180": {
        start: {
          line: 430,
          column: 56
        },
        end: {
          line: 432,
          column: 65
        }
      },
      "181": {
        start: {
          line: 431,
          column: 60
        },
        end: {
          line: 431,
          column: 92
        }
      },
      "182": {
        start: {
          line: 435,
          column: 56
        },
        end: {
          line: 435,
          column: 93
        }
      },
      "183": {
        start: {
          line: 438,
          column: 52
        },
        end: {
          line: 461,
          column: 53
        }
      },
      "184": {
        start: {
          line: 440,
          column: 73
        },
        end: {
          line: 443,
          column: 58
        }
      },
      "185": {
        start: {
          line: 444,
          column: 56
        },
        end: {
          line: 446,
          column: 57
        }
      },
      "186": {
        start: {
          line: 445,
          column: 60
        },
        end: {
          line: 445,
          column: 138
        }
      },
      "187": {
        start: {
          line: 448,
          column: 69
        },
        end: {
          line: 448,
          column: 90
        }
      },
      "188": {
        start: {
          line: 449,
          column: 68
        },
        end: {
          line: 449,
          column: 100
        }
      },
      "189": {
        start: {
          line: 450,
          column: 69
        },
        end: {
          line: 450,
          column: 96
        }
      },
      "190": {
        start: {
          line: 451,
          column: 56
        },
        end: {
          line: 451,
          column: 72
        }
      },
      "191": {
        start: {
          line: 452,
          column: 56
        },
        end: {
          line: 452,
          column: 111
        }
      },
      "192": {
        start: {
          line: 453,
          column: 56
        },
        end: {
          line: 453,
          column: 88
        }
      },
      "193": {
        start: {
          line: 454,
          column: 56
        },
        end: {
          line: 454,
          column: 69
        }
      },
      "194": {
        start: {
          line: 456,
          column: 56
        },
        end: {
          line: 456,
          column: 88
        }
      },
      "195": {
        start: {
          line: 457,
          column: 56
        },
        end: {
          line: 457,
          column: 88
        }
      },
      "196": {
        start: {
          line: 460,
          column: 56
        },
        end: {
          line: 460,
          column: 97
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 26
          }
        },
        loc: {
          start: {
            line: 56,
            column: 42
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 56
      },
      "2": {
        name: "Bills",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 14
          }
        },
        loc: {
          start: {
            line: 77,
            column: 17
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 77
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 91,
            column: 18
          }
        },
        loc: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 17
          },
          end: {
            line: 99,
            column: 18
          }
        },
        loc: {
          start: {
            line: 99,
            column: 29
          },
          end: {
            line: 173,
            column: 9
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 176,
            column: 42
          }
        },
        loc: {
          start: {
            line: 176,
            column: 56
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 176
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 190,
            column: 31
          },
          end: {
            line: 190,
            column: 32
          }
        },
        loc: {
          start: {
            line: 190,
            column: 47
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 190
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 191,
            column: 20
          }
        },
        loc: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 55
          }
        },
        line: 191
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 31
          }
        },
        loc: {
          start: {
            line: 193,
            column: 46
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 193
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 194,
            column: 19
          },
          end: {
            line: 194,
            column: 20
          }
        },
        loc: {
          start: {
            line: 194,
            column: 30
          },
          end: {
            line: 199,
            column: 9
          }
        },
        line: 194
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 197,
            column: 37
          },
          end: {
            line: 197,
            column: 38
          }
        },
        loc: {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 197,
            column: 60
          }
        },
        line: 197
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 201,
            column: 34
          },
          end: {
            line: 201,
            column: 35
          }
        },
        loc: {
          start: {
            line: 201,
            column: 40
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 201
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 202,
            column: 42
          },
          end: {
            line: 202,
            column: 43
          }
        },
        loc: {
          start: {
            line: 202,
            column: 49
          },
          end: {
            line: 202,
            column: 56
          }
        },
        line: 202
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 203,
            column: 19
          },
          end: {
            line: 203,
            column: 20
          }
        },
        loc: {
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 203
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 208,
            column: 34
          }
        },
        loc: {
          start: {
            line: 208,
            column: 39
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 208
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 235,
            column: 38
          },
          end: {
            line: 235,
            column: 39
          }
        },
        loc: {
          start: {
            line: 235,
            column: 45
          },
          end: {
            line: 235,
            column: 74
          }
        },
        line: 235
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 242,
            column: 25
          },
          end: {
            line: 242,
            column: 26
          }
        },
        loc: {
          start: {
            line: 242,
            column: 32
          },
          end: {
            line: 242,
            column: 59
          }
        },
        line: 242
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 247,
            column: 27
          },
          end: {
            line: 247,
            column: 28
          }
        },
        loc: {
          start: {
            line: 247,
            column: 33
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 247
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 260,
            column: 54
          },
          end: {
            line: 260,
            column: 55
          }
        },
        loc: {
          start: {
            line: 260,
            column: 64
          },
          end: {
            line: 260,
            column: 77
          }
        },
        line: 260
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 267,
            column: 54
          },
          end: {
            line: 267,
            column: 55
          }
        },
        loc: {
          start: {
            line: 267,
            column: 64
          },
          end: {
            line: 267,
            column: 77
          }
        },
        line: 267
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 276,
            column: 528
          },
          end: {
            line: 276,
            column: 529
          }
        },
        loc: {
          start: {
            line: 276,
            column: 534
          },
          end: {
            line: 276,
            column: 558
          }
        },
        line: 276
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 278,
            column: 1185
          },
          end: {
            line: 278,
            column: 1186
          }
        },
        loc: {
          start: {
            line: 278,
            column: 1196
          },
          end: {
            line: 278,
            column: 1235
          }
        },
        line: 278
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 279,
            column: 82
          },
          end: {
            line: 279,
            column: 83
          }
        },
        loc: {
          start: {
            line: 279,
            column: 97
          },
          end: {
            line: 279,
            column: 202
          }
        },
        line: 279
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 279,
            column: 575
          },
          end: {
            line: 279,
            column: 576
          }
        },
        loc: {
          start: {
            line: 279,
            column: 586
          },
          end: {
            line: 279,
            column: 623
          }
        },
        line: 279
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 279,
            column: 978
          },
          end: {
            line: 279,
            column: 979
          }
        },
        loc: {
          start: {
            line: 279,
            column: 993
          },
          end: {
            line: 279,
            column: 1108
          }
        },
        line: 279
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 279,
            column: 1541
          },
          end: {
            line: 279,
            column: 1542
          }
        },
        loc: {
          start: {
            line: 279,
            column: 1552
          },
          end: {
            line: 279,
            column: 1585
          }
        },
        line: 279
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 279,
            column: 1855
          },
          end: {
            line: 279,
            column: 1856
          }
        },
        loc: {
          start: {
            line: 279,
            column: 1866
          },
          end: {
            line: 279,
            column: 2088
          }
        },
        line: 279
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 279,
            column: 2336
          },
          end: {
            line: 279,
            column: 2337
          }
        },
        loc: {
          start: {
            line: 279,
            column: 2342
          },
          end: {
            line: 279,
            column: 2363
          }
        },
        line: 279
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 279,
            column: 2704
          },
          end: {
            line: 279,
            column: 2705
          }
        },
        loc: {
          start: {
            line: 279,
            column: 2710
          },
          end: {
            line: 279,
            column: 2732
          }
        },
        line: 279
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 279,
            column: 4246
          },
          end: {
            line: 279,
            column: 4247
          }
        },
        loc: {
          start: {
            line: 279,
            column: 4258
          },
          end: {
            line: 279,
            column: 4730
          }
        },
        line: 279
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 279,
            column: 4482
          },
          end: {
            line: 279,
            column: 4483
          }
        },
        loc: {
          start: {
            line: 279,
            column: 4488
          },
          end: {
            line: 279,
            column: 4518
          }
        },
        line: 279
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 279,
            column: 5584
          },
          end: {
            line: 279,
            column: 5585
          }
        },
        loc: {
          start: {
            line: 279,
            column: 5590
          },
          end: {
            line: 279,
            column: 5616
          }
        },
        line: 279
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 279,
            column: 5629
          },
          end: {
            line: 279,
            column: 5630
          }
        },
        loc: {
          start: {
            line: 279,
            column: 5635
          },
          end: {
            line: 282,
            column: 73
          }
        },
        line: 279
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 282,
            column: 268
          },
          end: {
            line: 282,
            column: 269
          }
        },
        loc: {
          start: {
            line: 282,
            column: 284
          },
          end: {
            line: 282,
            column: 328
          }
        },
        line: 282
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 282,
            column: 1231
          },
          end: {
            line: 282,
            column: 1232
          }
        },
        loc: {
          start: {
            line: 282,
            column: 1237
          },
          end: {
            line: 282,
            column: 1262
          }
        },
        line: 282
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 282,
            column: 1397
          },
          end: {
            line: 282,
            column: 1398
          }
        },
        loc: {
          start: {
            line: 282,
            column: 1411
          },
          end: {
            line: 283,
            column: 69
          }
        },
        line: 282
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 283,
            column: 75
          },
          end: {
            line: 283,
            column: 76
          }
        },
        loc: {
          start: {
            line: 283,
            column: 90
          },
          end: {
            line: 283,
            column: 294
          }
        },
        line: 283
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 283,
            column: 210
          },
          end: {
            line: 283,
            column: 211
          }
        },
        loc: {
          start: {
            line: 283,
            column: 216
          },
          end: {
            line: 283,
            column: 275
          }
        },
        line: 283
      },
      "38": {
        name: "BillCategorySection",
        decl: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 28
          }
        },
        loc: {
          start: {
            line: 301,
            column: 68
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 301
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 302,
            column: 673
          },
          end: {
            line: 302,
            column: 674
          }
        },
        loc: {
          start: {
            line: 302,
            column: 684
          },
          end: {
            line: 302,
            column: 765
          }
        },
        line: 302
      },
      "40": {
        name: "BillCard",
        decl: {
          start: {
            line: 318,
            column: 9
          },
          end: {
            line: 318,
            column: 17
          }
        },
        loc: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 318
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 329,
            column: 183
          },
          end: {
            line: 329,
            column: 184
          }
        },
        loc: {
          start: {
            line: 329,
            column: 189
          },
          end: {
            line: 329,
            column: 214
          }
        },
        line: 329
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 329,
            column: 2459
          },
          end: {
            line: 329,
            column: 2460
          }
        },
        loc: {
          start: {
            line: 329,
            column: 2465
          },
          end: {
            line: 332,
            column: 29
          }
        },
        line: 329
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 332,
            column: 41
          },
          end: {
            line: 332,
            column: 42
          }
        },
        loc: {
          start: {
            line: 332,
            column: 47
          },
          end: {
            line: 332,
            column: 73
          }
        },
        line: 332
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 332,
            column: 87
          },
          end: {
            line: 332,
            column: 88
          }
        },
        loc: {
          start: {
            line: 332,
            column: 93
          },
          end: {
            line: 335,
            column: 29
          }
        },
        line: 332
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 335,
            column: 394
          },
          end: {
            line: 335,
            column: 395
          }
        },
        loc: {
          start: {
            line: 335,
            column: 400
          },
          end: {
            line: 338,
            column: 25
          }
        },
        line: 335
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 338,
            column: 37
          },
          end: {
            line: 338,
            column: 38
          }
        },
        loc: {
          start: {
            line: 338,
            column: 43
          },
          end: {
            line: 338,
            column: 67
          }
        },
        line: 338
      },
      "47": {
        name: "BillDetail",
        decl: {
          start: {
            line: 341,
            column: 9
          },
          end: {
            line: 341,
            column: 19
          }
        },
        loc: {
          start: {
            line: 341,
            column: 64
          },
          end: {
            line: 463,
            column: 1
          }
        },
        line: 341
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 346,
            column: 17
          },
          end: {
            line: 346,
            column: 18
          }
        },
        loc: {
          start: {
            line: 346,
            column: 29
          },
          end: {
            line: 354,
            column: 9
          }
        },
        line: 346
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 359,
            column: 17
          },
          end: {
            line: 359,
            column: 18
          }
        },
        loc: {
          start: {
            line: 359,
            column: 29
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 359
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 379,
            column: 20
          },
          end: {
            line: 379,
            column: 21
          }
        },
        loc: {
          start: {
            line: 379,
            column: 39
          },
          end: {
            line: 392,
            column: 9
          }
        },
        line: 379
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 393,
            column: 19
          },
          end: {
            line: 393,
            column: 20
          }
        },
        loc: {
          start: {
            line: 393,
            column: 25
          },
          end: {
            line: 396,
            column: 9
          }
        },
        line: 393
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 398,
            column: 29
          },
          end: {
            line: 398,
            column: 30
          }
        },
        loc: {
          start: {
            line: 398,
            column: 35
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 398
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 403,
            column: 3188
          },
          end: {
            line: 403,
            column: 3189
          }
        },
        loc: {
          start: {
            line: 403,
            column: 3195
          },
          end: {
            line: 403,
            column: 3221
          }
        },
        line: 403
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 403,
            column: 3915
          },
          end: {
            line: 403,
            column: 3916
          }
        },
        loc: {
          start: {
            line: 403,
            column: 3933
          },
          end: {
            line: 403,
            column: 4191
          }
        },
        line: 403
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 403,
            column: 5226
          },
          end: {
            line: 403,
            column: 5227
          }
        },
        loc: {
          start: {
            line: 403,
            column: 5232
          },
          end: {
            line: 406,
            column: 49
          }
        },
        line: 403
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 406,
            column: 328
          },
          end: {
            line: 406,
            column: 329
          }
        },
        loc: {
          start: {
            line: 406,
            column: 334
          },
          end: {
            line: 414,
            column: 49
          }
        },
        line: 406
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 414,
            column: 279
          },
          end: {
            line: 414,
            column: 280
          }
        },
        loc: {
          start: {
            line: 414,
            column: 289
          },
          end: {
            line: 462,
            column: 258
          }
        },
        line: 414
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 414,
            column: 953
          },
          end: {
            line: 414,
            column: 954
          }
        },
        loc: {
          start: {
            line: 414,
            column: 965
          },
          end: {
            line: 437,
            column: 49
          }
        },
        line: 414
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 430,
            column: 67
          },
          end: {
            line: 430,
            column: 68
          }
        },
        loc: {
          start: {
            line: 430,
            column: 73
          },
          end: {
            line: 432,
            column: 57
          }
        },
        line: 430
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 437,
            column: 320
          },
          end: {
            line: 437,
            column: 321
          }
        },
        loc: {
          start: {
            line: 437,
            column: 332
          },
          end: {
            line: 462,
            column: 49
          }
        },
        line: 437
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 72,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 72,
            column: 46
          }
        }, {
          start: {
            line: 72,
            column: 50
          },
          end: {
            line: 72,
            column: 58
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 32
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 18
          },
          end: {
            line: 97,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 28
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "8": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 32
          }
        }, {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 62
          }
        }],
        line: 116
      },
      "9": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 137,
            column: 37
          },
          end: {
            line: 137,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 57
          },
          end: {
            line: 137,
            column: 80
          }
        }, {
          start: {
            line: 137,
            column: 83
          },
          end: {
            line: 137,
            column: 85
          }
        }],
        line: 137
      },
      "12": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "13": {
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 177,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 177,
            column: 38
          }
        }, {
          start: {
            line: 177,
            column: 42
          },
          end: {
            line: 177,
            column: 49
          }
        }],
        line: 177
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "15": {
        loc: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 198,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 18
          },
          end: {
            line: 197,
            column: 61
          }
        }, {
          start: {
            line: 198,
            column: 18
          },
          end: {
            line: 198,
            column: 46
          }
        }],
        line: 196
      },
      "16": {
        loc: {
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 205,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 67
          },
          end: {
            line: 205,
            column: 69
          }
        }, {
          start: {
            line: 205,
            column: 72
          },
          end: {
            line: 205,
            column: 86
          }
        }],
        line: 205
      },
      "17": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "18": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "19": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 236,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 236,
            column: 31
          }
        }, {
          start: {
            line: 236,
            column: 35
          },
          end: {
            line: 236,
            column: 47
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 29
          },
          end: {
            line: 243,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 10
          },
          end: {
            line: 242,
            column: 60
          }
        }, {
          start: {
            line: 243,
            column: 10
          },
          end: {
            line: 243,
            column: 19
          }
        }],
        line: 241
      },
      "22": {
        loc: {
          start: {
            line: 244,
            column: 37
          },
          end: {
            line: 244,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 37
          },
          end: {
            line: 244,
            column: 64
          }
        }, {
          start: {
            line: 244,
            column: 68
          },
          end: {
            line: 244,
            column: 92
          }
        }],
        line: 244
      },
      "23": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: 262,
            column: 13
          },
          end: {
            line: 268,
            column: 9
          }
        }],
        line: 255
      },
      "24": {
        loc: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "25": {
        loc: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "26": {
        loc: {
          start: {
            line: 278,
            column: 1476
          },
          end: {
            line: 279,
            column: 204
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 1476
          },
          end: {
            line: 278,
            column: 1500
          }
        }, {
          start: {
            line: 279,
            column: 68
          },
          end: {
            line: 279,
            column: 204
          }
        }],
        line: 278
      },
      "27": {
        loc: {
          start: {
            line: 279,
            column: 1954
          },
          end: {
            line: 279,
            column: 2078
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 1954
          },
          end: {
            line: 279,
            column: 1974
          }
        }, {
          start: {
            line: 279,
            column: 1979
          },
          end: {
            line: 279,
            column: 2077
          }
        }],
        line: 279
      },
      "28": {
        loc: {
          start: {
            line: 279,
            column: 2092
          },
          end: {
            line: 279,
            column: 2459
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 2092
          },
          end: {
            line: 279,
            column: 2105
          }
        }, {
          start: {
            line: 279,
            column: 2110
          },
          end: {
            line: 279,
            column: 2458
          }
        }],
        line: 279
      },
      "29": {
        loc: {
          start: {
            line: 279,
            column: 2461
          },
          end: {
            line: 279,
            column: 2819
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 2461
          },
          end: {
            line: 279,
            column: 2473
          }
        }, {
          start: {
            line: 279,
            column: 2478
          },
          end: {
            line: 279,
            column: 2818
          }
        }],
        line: 279
      },
      "30": {
        loc: {
          start: {
            line: 279,
            column: 3334
          },
          end: {
            line: 279,
            column: 3388
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 3334
          },
          end: {
            line: 279,
            column: 3361
          }
        }, {
          start: {
            line: 279,
            column: 3365
          },
          end: {
            line: 279,
            column: 3388
          }
        }],
        line: 279
      },
      "31": {
        loc: {
          start: {
            line: 282,
            column: 101
          },
          end: {
            line: 283,
            column: 300
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 124
          },
          end: {
            line: 282,
            column: 331
          }
        }, {
          start: {
            line: 282,
            column: 335
          },
          end: {
            line: 283,
            column: 300
          }
        }],
        line: 282
      },
      "32": {
        loc: {
          start: {
            line: 282,
            column: 207
          },
          end: {
            line: 282,
            column: 248
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 234
          },
          end: {
            line: 282,
            column: 243
          }
        }, {
          start: {
            line: 282,
            column: 246
          },
          end: {
            line: 282,
            column: 248
          }
        }],
        line: 282
      },
      "33": {
        loc: {
          start: {
            line: 282,
            column: 335
          },
          end: {
            line: 283,
            column: 300
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 348
          },
          end: {
            line: 282,
            column: 719
          }
        }, {
          start: {
            line: 282,
            column: 723
          },
          end: {
            line: 283,
            column: 300
          }
        }],
        line: 282
      },
      "34": {
        loc: {
          start: {
            line: 282,
            column: 723
          },
          end: {
            line: 283,
            column: 300
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 768
          },
          end: {
            line: 282,
            column: 1303
          }
        }, {
          start: {
            line: 282,
            column: 1308
          },
          end: {
            line: 283,
            column: 299
          }
        }],
        line: 282
      },
      "35": {
        loc: {
          start: {
            line: 282,
            column: 1411
          },
          end: {
            line: 283,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 1412
          },
          end: {
            line: 282,
            column: 1429
          }
        }, {
          start: {
            line: 282,
            column: 1433
          },
          end: {
            line: 282,
            column: 1462
          }
        }, {
          start: {
            line: 283,
            column: 32
          },
          end: {
            line: 283,
            column: 69
          }
        }],
        line: 282
      },
      "36": {
        loc: {
          start: {
            line: 283,
            column: 163
          },
          end: {
            line: 283,
            column: 194
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 163
          },
          end: {
            line: 283,
            column: 188
          }
        }, {
          start: {
            line: 283,
            column: 192
          },
          end: {
            line: 283,
            column: 194
          }
        }],
        line: 283
      },
      "37": {
        loc: {
          start: {
            line: 329,
            column: 810
          },
          end: {
            line: 329,
            column: 940
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 810
          },
          end: {
            line: 329,
            column: 826
          }
        }, {
          start: {
            line: 329,
            column: 831
          },
          end: {
            line: 329,
            column: 939
          }
        }],
        line: 329
      },
      "38": {
        loc: {
          start: {
            line: 329,
            column: 1261
          },
          end: {
            line: 329,
            column: 1381
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 1261
          },
          end: {
            line: 329,
            column: 1272
          }
        }, {
          start: {
            line: 329,
            column: 1276
          },
          end: {
            line: 329,
            column: 1381
          }
        }],
        line: 329
      },
      "39": {
        loc: {
          start: {
            line: 329,
            column: 1470
          },
          end: {
            line: 329,
            column: 1677
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 1470
          },
          end: {
            line: 329,
            column: 1483
          }
        }, {
          start: {
            line: 329,
            column: 1488
          },
          end: {
            line: 329,
            column: 1676
          }
        }],
        line: 329
      },
      "40": {
        loc: {
          start: {
            line: 329,
            column: 1679
          },
          end: {
            line: 329,
            column: 1810
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 1679
          },
          end: {
            line: 329,
            column: 1696
          }
        }, {
          start: {
            line: 329,
            column: 1701
          },
          end: {
            line: 329,
            column: 1809
          }
        }],
        line: 329
      },
      "41": {
        loc: {
          start: {
            line: 329,
            column: 1812
          },
          end: {
            line: 329,
            column: 1973
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 1812
          },
          end: {
            line: 329,
            column: 1856
          }
        }, {
          start: {
            line: 329,
            column: 1861
          },
          end: {
            line: 329,
            column: 1972
          }
        }],
        line: 329
      },
      "42": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 352,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 352,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "43": {
        loc: {
          start: {
            line: 357,
            column: 18
          },
          end: {
            line: 357,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 34
          },
          end: {
            line: 357,
            column: 36
          }
        }],
        line: 357
      },
      "44": {
        loc: {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "45": {
        loc: {
          start: {
            line: 368,
            column: 19
          },
          end: {
            line: 368,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 19
          },
          end: {
            line: 368,
            column: 33
          }
        }, {
          start: {
            line: 368,
            column: 37
          },
          end: {
            line: 368,
            column: 39
          }
        }],
        line: 368
      },
      "46": {
        loc: {
          start: {
            line: 372,
            column: 24
          },
          end: {
            line: 372,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 24
          },
          end: {
            line: 372,
            column: 33
          }
        }, {
          start: {
            line: 372,
            column: 37
          },
          end: {
            line: 372,
            column: 41
          }
        }],
        line: 372
      },
      "47": {
        loc: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "48": {
        loc: {
          start: {
            line: 377,
            column: 56
          },
          end: {
            line: 377,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 56
          },
          end: {
            line: 377,
            column: 75
          }
        }, {
          start: {
            line: 377,
            column: 79
          },
          end: {
            line: 377,
            column: 81
          }
        }],
        line: 377
      },
      "49": {
        loc: {
          start: {
            line: 388,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "50": {
        loc: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "51": {
        loc: {
          start: {
            line: 403,
            column: 1979
          },
          end: {
            line: 403,
            column: 2260
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 1979
          },
          end: {
            line: 403,
            column: 2002
          }
        }, {
          start: {
            line: 403,
            column: 2007
          },
          end: {
            line: 403,
            column: 2259
          }
        }],
        line: 403
      },
      "52": {
        loc: {
          start: {
            line: 403,
            column: 2262
          },
          end: {
            line: 403,
            column: 2528
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 2262
          },
          end: {
            line: 403,
            column: 2280
          }
        }, {
          start: {
            line: 403,
            column: 2285
          },
          end: {
            line: 403,
            column: 2527
          }
        }],
        line: 403
      },
      "53": {
        loc: {
          start: {
            line: 403,
            column: 2530
          },
          end: {
            line: 403,
            column: 2793
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 2530
          },
          end: {
            line: 403,
            column: 2547
          }
        }, {
          start: {
            line: 403,
            column: 2552
          },
          end: {
            line: 403,
            column: 2792
          }
        }],
        line: 403
      },
      "54": {
        loc: {
          start: {
            line: 403,
            column: 2795
          },
          end: {
            line: 403,
            column: 3614
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 2795
          },
          end: {
            line: 403,
            column: 2834
          }
        }, {
          start: {
            line: 403,
            column: 2839
          },
          end: {
            line: 403,
            column: 3613
          }
        }],
        line: 403
      },
      "55": {
        loc: {
          start: {
            line: 403,
            column: 3376
          },
          end: {
            line: 403,
            column: 3436
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 3407
          },
          end: {
            line: 403,
            column: 3419
          }
        }, {
          start: {
            line: 403,
            column: 3422
          },
          end: {
            line: 403,
            column: 3436
          }
        }],
        line: 403
      },
      "56": {
        loc: {
          start: {
            line: 403,
            column: 3616
          },
          end: {
            line: 403,
            column: 4201
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 3616
          },
          end: {
            line: 403,
            column: 3633
          }
        }, {
          start: {
            line: 403,
            column: 3637
          },
          end: {
            line: 403,
            column: 3665
          }
        }, {
          start: {
            line: 403,
            column: 3670
          },
          end: {
            line: 403,
            column: 4200
          }
        }],
        line: 403
      },
      "57": {
        loc: {
          start: {
            line: 403,
            column: 4203
          },
          end: {
            line: 462,
            column: 269
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 4204
          },
          end: {
            line: 403,
            column: 4224
          }
        }, {
          start: {
            line: 403,
            column: 4228
          },
          end: {
            line: 403,
            column: 4252
          }
        }, {
          start: {
            line: 403,
            column: 4258
          },
          end: {
            line: 462,
            column: 268
          }
        }],
        line: 403
      },
      "58": {
        loc: {
          start: {
            line: 403,
            column: 4512
          },
          end: {
            line: 414,
            column: 259
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 4512
          },
          end: {
            line: 403,
            column: 4532
          }
        }, {
          start: {
            line: 403,
            column: 4537
          },
          end: {
            line: 414,
            column: 258
          }
        }],
        line: 403
      },
      "59": {
        loc: {
          start: {
            line: 403,
            column: 4916
          },
          end: {
            line: 403,
            column: 5054
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 4916
          },
          end: {
            line: 403,
            column: 4940
          }
        }, {
          start: {
            line: 403,
            column: 4945
          },
          end: {
            line: 403,
            column: 5053
          }
        }],
        line: 403
      },
      "60": {
        loc: {
          start: {
            line: 410,
            column: 68
          },
          end: {
            line: 410,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 410,
            column: 68
          },
          end: {
            line: 410,
            column: 88
          }
        }, {
          start: {
            line: 410,
            column: 92
          },
          end: {
            line: 410,
            column: 107
          }
        }],
        line: 410
      },
      "61": {
        loc: {
          start: {
            line: 414,
            column: 748
          },
          end: {
            line: 414,
            column: 778
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 748
          },
          end: {
            line: 414,
            column: 764
          }
        }, {
          start: {
            line: 414,
            column: 768
          },
          end: {
            line: 414,
            column: 778
          }
        }],
        line: 414
      },
      "62": {
        loc: {
          start: {
            line: 421,
            column: 56
          },
          end: {
            line: 423,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 56
          },
          end: {
            line: 423,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "63": {
        loc: {
          start: {
            line: 444,
            column: 56
          },
          end: {
            line: 446,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 56
          },
          end: {
            line: 446,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "64": {
        loc: {
          start: {
            line: 452,
            column: 72
          },
          end: {
            line: 452,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 72
          },
          end: {
            line: 452,
            column: 84
          }
        }, {
          start: {
            line: 452,
            column: 88
          },
          end: {
            line: 452,
            column: 96
          }
        }, {
          start: {
            line: 452,
            column: 100
          },
          end: {
            line: 452,
            column: 110
          }
        }],
        line: 452
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0, 0],
      "57": [0, 0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/pages/manager/bills.tsx",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/client/src/pages/manager/bills.tsx"],
      sourcesContent: ["import { useState, useEffect } from 'react';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport {\n  FileText,\n  Plus,\n  Upload,\n  Filter,\n  Calendar,\n  Building as BuildingIcon,\n  Tag,\n  ChevronDown,\n} from 'lucide-react';\nimport { BuildingSelectionGrid } from '@/components/BuildingSelectionGrid';\nimport ModularBillForm from '@/components/bill-management/ModularBillForm';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { cn } from '@/lib/utils';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { Building, Bill } from '@shared/schema';\n\nconst BILL_CATEGORIES = [\n  'insurance',\n  'maintenance',\n  'salary',\n  'utilities',\n  'cleaning',\n  'security',\n  'landscaping',\n  'professional_services',\n  'administration',\n  'repairs',\n  'supplies',\n  'taxes',\n  'other',\n] as const;\n\nconst MONTHS = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\n\n// Category labels using translation keys\nconst getCategoryLabel = (category: string, t: (key: string) => string) => {\n  const categoryTranslationKeys: Record<string, string> = {\n    insurance: 'insurance',\n    maintenance: 'maintenance', \n    salary: 'salary',\n    utilities: 'utilities',\n    cleaning: 'cleaning',\n    security: 'security',\n    landscaping: 'landscaping',\n    professional_services: 'professionalServices',\n    administration: 'administration',\n    repairs: 'repairs',\n    supplies: 'supplies',\n    taxes: 'taxes',\n    other: 'other'\n  };\n  return t(categoryTranslationKeys[category] || category);\n};\n\n/**\n *\n */\ninterface BillFilters {\n  buildingId: string;\n  category: string;\n  year: string;\n  months: string[];\n}\n\n/**\n *\n */\nexport default function /**\n * Bills function.\n */ /**\n * Bills function.\n */\n\nBills() {\n  const { t } = useLanguage();\n  const [filters, setFilters] = useState<BillFilters>({\n    buildingId: '',\n    category: '',\n    year: new Date().getFullYear().toString(),\n    months: [],\n  });\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\n  const [showAllYears, setShowAllYears] = useState(false);\n  const queryClient = useQueryClient();\n\n  // Fetch buildings for filter dropdown\n  const {\n    data: buildings = [],\n    isLoading: buildingsLoading,\n    error: buildingsError,\n  } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/buildings');\n      return await response.json();\n    },\n  });\n\n  // Fetch bills based on filters\n  const { data: bills = [], isLoading } = useQuery<Bill[]>({\n    queryKey: ['/api/bills', filters],\n    queryFn: async () => {\n      const params = new URLSearchParams(); /**\n       * If function.\n       * @param filters.buildingId - Filters.buildingId parameter.\n       */ /**\n       * If function.\n       * @param filters.buildingId - Filters.buildingId parameter.\n       */\n\n      if (filters.buildingId) {\n        params.set('buildingId', filters.buildingId);\n      } /**\n       * If function.\n       * @param filters.category && filters.category !== 'all' - filters.category && filters.category !== 'all' parameter.\n       */ /**\n       * If function.\n       * @param filters.category && filters.category !== 'all' - filters.category && filters.category !== 'all' parameter.\n       */\n\n      if (filters.category && filters.category !== 'all') {\n        params.set('category', filters.category);\n      } /**\n       * If function.\n       * @param filters.year - Filters.year parameter.\n       */ /**\n       * If function.\n       * @param filters.year - Filters.year parameter.\n       */\n\n      if (filters.year) {\n        params.set('year', filters.year);\n      } /**\n       * If function.\n       * @param filters.months.length > 0 - filters.months.length > 0 parameter.\n       */ /**\n       * If function.\n       * @param filters.months.length > 0 - filters.months.length > 0 parameter.\n       */\n\n      if (filters.months.length > 0) {\n        params.set('months', filters.months.join(','));\n      }\n\n      const url = `/api/bills${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await fetch(url, { credentials: 'include' }); /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */ /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n      /**\n       * If function.\n       * @param !response.ok - !response.ok parameter.\n       */\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch bills: ${response.statusText}`);\n      }\n\n      return response.json();\n    },\n  });\n\n  // Group bills by category\n  const billsByCategory = bills.reduce((acc: Record<string, Bill[]>, bill: Bill) => {\n    const category = bill.category || 'other'; /**\n     * If function.\n     * @param !acc[category] - !acc[category] parameter.\n     */ /**\n     * If function.\n     * @param !acc[category] - !acc[category] parameter.\n     */\n\n    if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(bill);\n    return acc;\n  }, {});\n\n  const handleFilterChange = (key: keyof BillFilters, value: string | string[]) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleMonthToggle = (monthValue: string) => {\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.includes(monthValue)\n        ? prev.months.filter((m) => m !== monthValue)\n        : [...prev.months, monthValue],\n    }));\n  };\n\n  const handleAllMonthsToggle = () => {\n    const allMonthValues = MONTHS.map((m) => m.value);\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.length === allMonthValues.length ? [] : allMonthValues,\n    }));\n  };\n\n  const getMonthsDisplayText = () => {\n    /**\n     * If function.\n     * @param filters.months.length === 0 - filters.months.length === 0 parameter.\n     */ /**\n     * If function.\n     * @param filters.months.length === 0 - filters.months.length === 0 parameter.\n     */\n\n    if (filters.months.length === 0) {\n      return 'All months';\n    } /**\n     * If function.\n     * @param filters.months.length === MONTHS.length - filters.months.length === MONTHS.length parameter.\n     */ /**\n     * If function.\n     * @param filters.months.length === MONTHS.length - filters.months.length === MONTHS.length parameter.\n     */\n\n    if (filters.months.length === MONTHS.length) {\n      return 'All months';\n    } /**\n     * If function.\n     * @param filters.months.length === 1 - filters.months.length === 1 parameter.\n     */ /**\n     * If function.\n     * @param filters.months.length === 1 - filters.months.length === 1 parameter.\n     */\n\n    if (filters.months.length === 1) {\n      const month = MONTHS.find((m) => m.value === filters.months[0]);\n      return month?.label || 'All months';\n    }\n    return `${filters.months.length} months`;\n  };\n\n  // Get building construction year for minimum year calculation\n  const selectedBuilding = Array.isArray(buildings)\n    ? buildings.find((b) => b.id === filters.buildingId)\n    : undefined;\n  const buildingConstructionYear = selectedBuilding?.yearBuilt || new Date().getFullYear();\n  const currentYear = new Date().getFullYear();\n\n  // Generate year options based on show all years state\n  const getYearOptions = () => {\n    /**\n     * If function.\n     * @param showAllYears - ShowAllYears parameter.\n     */ /**\n     * If function.\n     * @param showAllYears - ShowAllYears parameter.\n     */\n\n    if (showAllYears) {\n      // Show all years from building construction year to 25 years forward\n      const startYear = buildingConstructionYear;\n      const endYear = currentYear + 25;\n      const totalYears = endYear - startYear + 1;\n      return Array.from({ length: totalYears }, (_, i) => startYear + i);\n    } else {\n      // Show current year \xB13 years\n      const startYear = currentYear - 3;\n      const endYear = currentYear + 3;\n      const totalYears = endYear - startYear + 1;\n      return Array.from({ length: totalYears }, (_, i) => startYear + i);\n    }\n  };\n\n  // Show loading state while buildings are loading\n  if (buildingsLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('billsManagement')} subtitle={t('billsSubtitle')} />\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4'></div>\n            <p className='text-gray-500'>{t('loadingBuildings')}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state if buildings failed to load\n  if (buildingsError) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('billsManagement')} subtitle={t('billsSubtitle')} />\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <p className='text-red-500 mb-4'>{t('failedToLoadBuildings')}</p>\n            <button\n              onClick={() => window.location.reload()}\n              className='px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700'\n            >\n              {t('retry')}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('billsManagement')} subtitle={t('billsSubtitle')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Filters Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <Filter className='w-5 h-5' />\n                {t('filters')}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className='grid grid-cols-1 md:grid-cols-5 gap-4'>\n                <div className='space-y-2'>\n                  <Label htmlFor='building-filter' className='flex items-center gap-2'>\n                    <BuildingIcon className='w-4 h-4' />\n                    {t('building')}\n                  </Label>\n                  <Select\n                    value={filters.buildingId}\n                    onValueChange={(value) => handleFilterChange('buildingId', value)}\n                  >\n                    <SelectTrigger id='building-filter'>\n                      <SelectValue placeholder={t('selectBuilding')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Array.isArray(buildings) &&\n                        buildings.map((building: Building) => (\n                          <SelectItem key={building.id} value={building.id}>\n                            {building.name}\n                          </SelectItem>\n                        ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label htmlFor='category-filter' className='flex items-center gap-2'>\n                    <Tag className='w-4 h-4' />\n                    {t('category')}\n                  </Label>\n                  <Select\n                    value={filters.category}\n                    onValueChange={(value) => handleFilterChange('category', value)}\n                  >\n                    <SelectTrigger id='category-filter'>\n                      <SelectValue placeholder={t('allCategories')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value='all'>{t('allCategories')}</SelectItem>\n                      {BILL_CATEGORIES.map((category) => (\n                        <SelectItem key={category} value={category}>\n                          {getCategoryLabel(category, t)}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label htmlFor='year-filter' className='flex items-center gap-2'>\n                    <Calendar className='w-4 h-4' />\n                    {t('year')}\n                  </Label>\n                  <div className='space-y-2'>\n                    <Select\n                      value={filters.year}\n                      onValueChange={(value) => handleFilterChange('year', value)}\n                    >\n                      <SelectTrigger id='year-filter'>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent className='max-h-[300px] overflow-y-auto'>\n                        {getYearOptions().map((year) => (\n                          <SelectItem key={year} value={year.toString()}>\n                            {year}\n                            {year === currentYear && (\n                              <span className='ml-2 text-xs text-blue-500'>(Current)</span>\n                            )}\n                          </SelectItem>\n                        ))}\n                        {!showAllYears && (\n                          <div className='border-t border-gray-200 mt-2 pt-2'>\n                            <Button\n                              variant='ghost'\n                              size='sm'\n                              className='w-full text-left justify-start text-xs'\n                              onClick={() => setShowAllYears(true)}\n                            >\n                              Show more years ({buildingConstructionYear} - {currentYear + 25})\n                            </Button>\n                          </div>\n                        )}\n                        {showAllYears && (\n                          <div className='border-t border-gray-200 mt-2 pt-2'>\n                            <Button\n                              variant='ghost'\n                              size='sm'\n                              className='w-full text-left justify-start text-xs'\n                              onClick={() => setShowAllYears(false)}\n                            >\n                              Show fewer years ({currentYear - 3} - {currentYear + 3})\n                            </Button>\n                          </div>\n                        )}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label className='flex items-center gap-2'>\n                    <Calendar className='w-4 h-4' />\n                    {t('months')}\n                  </Label>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant='outline'\n                        className={cn(\n                          'w-full justify-between',\n                          filters.months.length === 0 && 'text-muted-foreground'\n                        )}\n                      >\n                        {getMonthsDisplayText()}\n                        <ChevronDown className='ml-2 h-4 w-4 shrink-0 opacity-50' />\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className='w-64 p-0' align='start'>\n                      <div className='border-b p-3'>\n                        <div className='flex items-center space-x-2'>\n                          <Checkbox\n                            id='all-months'\n                            checked={filters.months.length === MONTHS.length}\n                            onCheckedChange={handleAllMonthsToggle}\n                          />\n                          <Label\n                            htmlFor='all-months'\n                            className='text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n                          >\n                            All Months\n                          </Label>\n                        </div>\n                      </div>\n                      <div className='grid grid-cols-2 gap-2 p-3'>\n                        {MONTHS.map((month) => (\n                          <div key={month.value} className='flex items-center space-x-2'>\n                            <Checkbox\n                              id={`month-${month.value}`}\n                              checked={filters.months.includes(month.value)}\n                              onCheckedChange={() => handleMonthToggle(month.value)}\n                            />\n                            <Label\n                              htmlFor={`month-${month.value}`}\n                              className='text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n                            >\n                              {month.label}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                </div>\n\n                <div className='space-y-2'>\n                  <Label className='invisible'>Actions</Label>\n                  <Dialog open={showCreateDialog} onOpenChange={setShowCreateDialog}>\n                    <DialogTrigger asChild>\n                      <Button className='w-full' disabled={!filters.buildingId}>\n                        {t('createBill')}\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className='max-w-4xl max-h-[90vh] overflow-y-auto'>\n                      <DialogHeader>\n                        <DialogTitle>{t('createNewBill')}</DialogTitle>\n                      </DialogHeader>\n                      <ModularBillForm\n                        mode=\"create\"\n                        buildingId={filters.buildingId}\n                        onCancel={() => setShowCreateDialog(false)}\n                        onSuccess={() => {\n                          setShowCreateDialog(false);\n                          queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n                        }}\n                      />\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Bills Display */}\n          {!filters.buildingId ? (\n            <BuildingSelectionGrid\n              buildings={Array.isArray(buildings) ? buildings : []}\n              onBuildingSelect={(buildingId) => handleFilterChange('buildingId', buildingId)}\n            />\n          ) : isLoading ? (\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <div className='animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4'></div>\n                <p className='text-gray-500'>{t('loadingBills')}</p>\n              </CardContent>\n            </Card>\n          ) : Object.keys(billsByCategory).length === 0 ? (\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <h3 className='text-lg font-semibold text-gray-600 mb-2'>{t('noBillsFound')}</h3>\n                <p className='text-gray-500 mb-4'>\n                  No bills found for the selected filters. Create your first bill to get started.\n                </p>\n                <Button onClick={() => setShowCreateDialog(true)}>\n                  Create First Bill\n                </Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className='space-y-6'>\n              {BILL_CATEGORIES.filter(\n                (category) =>\n                  (!filters.category || filters.category === category) &&\n                  billsByCategory[category]?.length > 0\n              ).map((category) => (\n                <BillCategorySection\n                  key={category}\n                  category={category}\n                  bills={billsByCategory[category] || []}\n                  onBillUpdate={() => queryClient.invalidateQueries({ queryKey: ['/api/bills'] })}\n                  t={t}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Component for displaying bills in a category\n/**\n *\n * @param root0\n * @param root0.category\n * @param root0.bills\n * @param root0.onBillUpdate\n */\n/**\n * BillCategorySection function.\n * @param root0\n * @param root0.category\n * @param root0.bills\n * @param root0.onBillUpdate\n * @returns Function result.\n */\nfunction BillCategorySection({\n  category,\n  bills,\n  onBillUpdate,\n  t,\n}: {\n  category: string;\n  bills: Bill[];\n  onBillUpdate: () => void;\n  t: (key: string) => string;\n}) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className='flex items-center justify-between'>\n          <div className='flex items-center gap-2'>\n            <Tag className='w-5 h-5' />\n            {getCategoryLabel(category, t)}\n            <Badge variant='secondary'>{bills.length}</Badge>\n          </div>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>\n          {bills.map((bill) => (\n            <BillCard key={bill.id} bill={bill} onUpdate={onBillUpdate} />\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Component for individual bill cards\n/**\n *\n * @param root0\n * @param root0.bill\n * @param root0.onUpdate\n */\n/**\n * BillCard function.\n * @param root0\n * @param root0.bill\n * @param root0.onUpdate\n * @returns Function result.\n */\nfunction BillCard({ bill, onUpdate }: { bill: Bill; onUpdate: () => void }) {\n  const { t } = useLanguage();\n  const [showDetailDialog, setShowDetailDialog] = useState(false);\n  const [showEditDialog, setShowEditDialog] = useState(false);\n\n  const statusColors = {\n    draft: 'bg-gray-100 text-gray-800',\n    sent: 'bg-blue-100 text-blue-800',\n    overdue: 'bg-red-100 text-red-800',\n    paid: 'bg-green-100 text-green-800',\n    cancelled: 'bg-gray-100 text-gray-800',\n  };\n\n  return (\n    <>\n      <Card\n        className='hover:shadow-md transition-shadow cursor-pointer'\n        onClick={() => setShowDetailDialog(true)}\n      >\n        <CardContent className='p-4'>\n          <div className='space-y-3'>\n            <div className='flex items-start justify-between'>\n              <div>\n                <h4 className='font-semibold text-sm'>{bill.title}</h4>\n                <p className='text-xs text-gray-500'>#{bill.billNumber}</p>\n              </div>\n              <Badge className={statusColors[bill.status as keyof typeof statusColors]}>\n                {bill.status}\n              </Badge>\n            </div>\n\n            {bill.description && (\n              <p className='text-sm text-gray-600 line-clamp-2'>{bill.description}</p>\n            )}\n\n            <div className='flex items-center justify-between text-sm'>\n              <span className='font-medium'>${Number(bill.totalAmount).toLocaleString()}</span>\n              <span className='text-gray-500'>{bill.paymentType}</span>\n            </div>\n\n            {bill.vendor && <p className='text-xs text-gray-500'>Vendor: {bill.vendor}</p>}\n\n            <div className='flex items-center gap-2 pt-2'>\n              {bill.filePath && (\n                <Badge variant='outline' className='text-xs'>\n                  <FileText className='w-3 h-3 mr-1' />\n                  Document\n                </Badge>\n              )}\n              {bill.isAiAnalyzed && (\n                <Badge variant='outline' className='text-xs'>\n                  AI Analyzed\n                </Badge>\n              )}\n              {bill.notes?.includes('Auto-generated from:') && (\n                <Badge variant='outline' className='text-xs'>\n                  Auto-Generated\n                </Badge>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Bill Detail Dialog */}\n      <Dialog open={showDetailDialog} onOpenChange={setShowDetailDialog}>\n        <DialogContent className='max-w-2xl max-h-[95vh] overflow-y-auto' aria-describedby=\"bill-details-description\">\n          <DialogHeader>\n            <DialogTitle>Bill Details</DialogTitle>\n          </DialogHeader>\n          <BillDetail\n            bill={bill}\n            onSuccess={() => {\n              setShowDetailDialog(false);\n              onUpdate();\n            }}\n            onCancel={() => setShowDetailDialog(false)}\n            onEditBill={() => {\n              setShowDetailDialog(false);\n              setShowEditDialog(true);\n            }}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Bill Edit Dialog */}\n      <Dialog open={showEditDialog} onOpenChange={setShowEditDialog}>\n        <DialogContent className='max-w-4xl max-h-[95vh] overflow-y-auto' aria-describedby=\"edit-bill-description\">\n          <ModularBillForm\n            mode=\"edit\"\n            bill={bill}\n            onSuccess={() => {\n              setShowEditDialog(false);\n              onUpdate();\n            }}\n            onCancel={() => setShowEditDialog(false)}\n            buildingId={bill.buildingId}\n          />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\n// Bill detail component\nfunction BillDetail({\n  bill,\n  onSuccess,\n  onCancel,\n  onEditBill,\n}: {\n  bill: Bill;\n  onSuccess: () => void;\n  onCancel: () => void;\n  onEditBill: () => void;\n}) {\n  const queryClient = useQueryClient();\n\n  // Fetch fresh bill data to ensure we have updated document information\n  const { data: freshBill, error: freshBillError, isLoading: freshBillLoading } = useQuery({\n    queryKey: ['/api/bills', bill.id],\n    queryFn: async () => {\n      const response = await fetch(`/api/bills/${bill.id}`, {\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch bill details');\n      }\n      return response.json();\n    },\n  });\n\n  // Fetch documents attached to this bill\n  const { data: billDocuments = [], isLoading: documentsLoading } = useQuery({\n    queryKey: ['/api/documents', 'bill', bill.id],\n    queryFn: async () => {\n      const response = await fetch(`/api/documents?attachedToType=bill&attachedToId=${bill.id}`, {\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        console.error('[BILL DOCS] Failed to fetch documents:', response.status, response.statusText);\n        throw new Error('Failed to fetch bill documents');\n      }\n      const data = await response.json();\n      return data.documents || [];\n    },\n  });\n\n  // Use fresh bill data if available, fallback to props bill data\n  const currentBill = freshBill || bill;\n  \n  // Keep basic logging for bills\n  if (billDocuments.length > 0) {\n    console.log('[BILL DOCS] Found documents:', billDocuments.length, 'for bill:', currentBill.billNumber);\n  }\n  \n  const [endDate, setEndDate] = useState(currentBill.endDate || '');\n\n  const updateBillMutation = useMutation({\n    mutationFn: async (updates: Partial<Bill>) => {\n      const response = await fetch(`/api/bills/${bill.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updates),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update bill');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      onSuccess();\n    },\n  });\n\n  const handleSetEndDate = () => {\n    if (endDate) {\n      updateBillMutation.mutate({ endDate });\n    }\n  };\n\n\n  return (\n    <div className='space-y-6'>\n      {/* Bill Information */}\n      <div className='grid grid-cols-2 gap-4'>\n        <div>\n          <Label className='text-sm font-medium'>Bill Number</Label>\n          <p className='text-sm text-gray-600'>{currentBill.billNumber}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Status</Label>\n          <p className='text-sm text-gray-600 capitalize'>{currentBill.status}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Category</Label>\n          <p className='text-sm text-gray-600 capitalize'>{currentBill.category}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Payment Type</Label>\n          <p className='text-sm text-gray-600 capitalize'>{currentBill.paymentType}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Total Amount</Label>\n          <p className='text-sm text-gray-600'>${Number(currentBill.totalAmount).toLocaleString()}</p>\n        </div>\n        <div>\n          <Label className='text-sm font-medium'>Start Date</Label>\n          <p className='text-sm text-gray-600'>{currentBill.startDate}</p>\n        </div>\n      </div>\n\n      {/* Title and Description */}\n      <div>\n        <Label className='text-sm font-medium'>Title</Label>\n        <p className='text-sm text-gray-600'>{currentBill.title}</p>\n      </div>\n\n      {currentBill.description && (\n        <div>\n          <Label className='text-sm font-medium'>Description</Label>\n          <p className='text-sm text-gray-600'>{currentBill.description}</p>\n        </div>\n      )}\n\n      {currentBill.vendor && (\n        <div>\n          <Label className='text-sm font-medium'>Vendor</Label>\n          <p className='text-sm text-gray-600'>{currentBill.vendor}</p>\n        </div>\n      )}\n\n      {currentBill.notes && (\n        <div>\n          <Label className='text-sm font-medium'>Notes</Label>\n          <p className='text-sm text-gray-600'>{currentBill.notes}</p>\n        </div>\n      )}\n\n      {/* End Date Management for Recurrent Bills */}\n      {currentBill.paymentType === 'recurrent' && (\n        <div className='border-t pt-4'>\n          <Label className='text-sm font-medium'>Recurrence End Date</Label>\n          <div className='flex items-center gap-2 mt-2'>\n            <Input\n              type='date'\n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n              className='w-48'\n            />\n            <Button onClick={handleSetEndDate} disabled={updateBillMutation.isPending} size='sm'>\n              {updateBillMutation.isPending ? 'Setting...' : 'Set End Date'}\n            </Button>\n          </div>\n          <p className='text-xs text-gray-500 mt-1'>\n            Setting an end date will stop auto-generation of future bills after this date.\n          </p>\n        </div>\n      )}\n\n      {/* Costs Breakdown */}\n      {currentBill.costs && currentBill.costs.length > 1 && (\n        <div>\n          <Label className='text-sm font-medium'>Payment Breakdown</Label>\n          <div className='space-y-1 mt-1'>\n            {currentBill.costs.map((cost, index) => (\n              <div key={index} className='flex justify-between text-sm'>\n                <span>Payment {index + 1}:</span>\n                <span>${Number(cost).toLocaleString()}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Uploaded Documents Section */}\n      {(currentBill.filePath || billDocuments.length > 0) && (\n        <div className='border-t pt-4'>\n          <Label className='text-sm font-medium'>Uploaded Documents</Label>\n          <div className='mt-2 space-y-2'>\n            {/* Direct bill upload */}\n            {currentBill.filePath && (\n              <div className='flex items-center justify-between p-3 bg-gray-50 rounded-lg'>\n                <div className='flex items-center gap-2'>\n                  <FileText className='w-4 h-4 text-blue-600' />\n                  <span className='text-sm'>{currentBill.fileName}</span>\n                  {currentBill.isAiAnalyzed && (\n                    <Badge variant='outline' className='text-xs'>\n                      AI Analyzed\n                    </Badge>\n                  )}\n                </div>\n                <div className='flex items-center gap-2'>\n                  <Button\n                    variant='outline'\n                    size='sm'\n                    onClick={() => {\n                      // View the document (open in new tab)\n                      window.open(`/api/bills/${currentBill.id}/download-document`, '_blank');\n                    }}\n                    className='flex items-center gap-1'\n                    data-testid={`button-view-document-${currentBill.id}`}\n                  >\n                    <FileText className='w-3 h-3' />\n                    View\n                  </Button>\n                  <Button\n                    variant='outline'\n                    size='sm'\n                    onClick={() => {\n                      // Download the document\n                      const link = document.createElement('a');\n                      link.href = `/api/bills/${currentBill.id}/download-document`;\n                      link.download = currentBill.fileName || 'bill-document';\n                      document.body.appendChild(link);\n                      link.click();\n                      document.body.removeChild(link);\n                    }}\n                    className='flex items-center gap-1'\n                    data-testid={`button-download-document-${currentBill.id}`}\n                  >\n                    <FileText className='w-3 h-3' />\n                    Download\n                  </Button>\n                </div>\n              </div>\n            )}\n            \n            {/* Attached documents from documents table */}\n            {billDocuments.map((doc: any) => (\n              <div key={doc.id} className='flex items-center justify-between p-3 bg-blue-50 rounded-lg'>\n                <div className='flex items-center gap-2'>\n                  <FileText className='w-4 h-4 text-blue-600' />\n                  <span className='text-sm'>{doc.name}</span>\n                  <Badge variant='outline' className='text-xs'>\n                    {doc.documentType || 'Document'}\n                  </Badge>\n                </div>\n                <div className='flex items-center gap-2'>\n                  <Button\n                    variant='outline'\n                    size='sm'\n                    onClick={async () => {\n                      try {\n                        // Use fetch with credentials to ensure authentication\n                        const response = await fetch(`/api/documents/${doc.id}/file`, {\n                          method: 'GET',\n                          credentials: 'include', // Include authentication cookies\n                        });\n\n                        if (!response.ok) {\n                          throw new Error(`View failed: ${response.status} ${response.statusText}`);\n                        }\n\n                        // Convert response to blob and open in new tab\n                        const blob = await response.blob();\n                        const url = window.URL.createObjectURL(blob);\n                        \n                        // Open in new tab\n                        window.open(url, '_blank');\n                        \n                        // Clean up the URL after a delay to allow the tab to load\n                        setTimeout(() => {\n                          window.URL.revokeObjectURL(url);\n                        }, 1000);\n                        \n                      } catch (error) {\n                        console.error('View failed:', error);\n                      }\n                    }}\n                    className='flex items-center gap-1'\n                    data-testid={`button-view-document-${doc.id}`}\n                  >\n                    <FileText className='w-3 h-3' />\n                    View\n                  </Button>\n                  <Button\n                    variant='outline'\n                    size='sm'\n                    onClick={async () => {\n                      try {\n                        // Use fetch with credentials to ensure authentication\n                        const response = await fetch(`/api/documents/${doc.id}/file?download=true`, {\n                          method: 'GET',\n                          credentials: 'include', // Include authentication cookies\n                        });\n\n                        if (!response.ok) {\n                          throw new Error(`Download failed: ${response.status} ${response.statusText}`);\n                        }\n\n                        // Convert response to blob and create download\n                        const blob = await response.blob();\n                        const url = window.URL.createObjectURL(blob);\n                        \n                        const link = document.createElement('a');\n                        link.href = url;\n                        link.download = doc.fileName || doc.name || 'document';\n                        document.body.appendChild(link);\n                        link.click();\n                        \n                        // Clean up\n                        document.body.removeChild(link);\n                        window.URL.revokeObjectURL(url);\n                        \n                      } catch (error) {\n                        console.error('Download failed:', error);\n                      }\n                    }}\n                    className='flex items-center gap-1'\n                    data-testid={`button-download-document-${doc.id}`}\n                  >\n                    <FileText className='w-3 h-3' />\n                    Download\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className='flex justify-between items-center pt-4 border-t'>\n        <Button\n          onClick={onEditBill}\n          className='flex items-center gap-1'\n          data-testid={`button-edit-bill-${bill.id}`}\n        >\n          Edit Bill\n        </Button>\n        <Button variant='outline' onClick={onCancel} data-testid={`button-close-bill-modal-${bill.id}`}>\n          Close\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a06386d3326964d7f1c26c79879e004c10bc15f5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7m5tvqzdi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7m5tvqzdi();
var __importDefault =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[0]++,
/* istanbul ignore next */
(cov_7m5tvqzdi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_7m5tvqzdi().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_7m5tvqzdi().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_7m5tvqzdi().f[0]++;
  cov_7m5tvqzdi().s[1]++;
  return /* istanbul ignore next */(cov_7m5tvqzdi().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_7m5tvqzdi().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7m5tvqzdi().s[3]++;
exports.default = Bills;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[5]++, require("react"));
const header_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[6]++, require("@/components/layout/header"));
const card_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[7]++, require("@/components/ui/card"));
const badge_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[8]++, require("@/components/ui/badge"));
const button_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[9]++, require("@/components/ui/button"));
const select_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[10]++, require("@/components/ui/select"));
const input_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[11]++, require("@/components/ui/input"));
const label_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[12]++, require("@/components/ui/label"));
const dialog_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[13]++, require("@/components/ui/dialog"));
const checkbox_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[14]++, require("@/components/ui/checkbox"));
const popover_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[15]++, require("@/components/ui/popover"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[16]++, require("lucide-react"));
const BuildingSelectionGrid_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[17]++, require("@/components/BuildingSelectionGrid"));
const ModularBillForm_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[18]++, __importDefault(require("@/components/bill-management/ModularBillForm")));
const react_query_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[19]++, require("@tanstack/react-query"));
const queryClient_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[20]++, require("@/lib/queryClient"));
const utils_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[21]++, require("@/lib/utils"));
const use_language_1 =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[22]++, require("@/hooks/use-language"));
const BILL_CATEGORIES =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[23]++, ['insurance', 'maintenance', 'salary', 'utilities', 'cleaning', 'security', 'landscaping', 'professional_services', 'administration', 'repairs', 'supplies', 'taxes', 'other']);
const MONTHS =
/* istanbul ignore next */
(cov_7m5tvqzdi().s[24]++, [{
  value: '1',
  label: 'January'
}, {
  value: '2',
  label: 'February'
}, {
  value: '3',
  label: 'March'
}, {
  value: '4',
  label: 'April'
}, {
  value: '5',
  label: 'May'
}, {
  value: '6',
  label: 'June'
}, {
  value: '7',
  label: 'July'
}, {
  value: '8',
  label: 'August'
}, {
  value: '9',
  label: 'September'
}, {
  value: '10',
  label: 'October'
}, {
  value: '11',
  label: 'November'
}, {
  value: '12',
  label: 'December'
}]);
// Category labels using translation keys
/* istanbul ignore next */
cov_7m5tvqzdi().s[25]++;
const getCategoryLabel = (category, t) => {
  /* istanbul ignore next */
  cov_7m5tvqzdi().f[1]++;
  const categoryTranslationKeys =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[26]++, {
    insurance: 'insurance',
    maintenance: 'maintenance',
    salary: 'salary',
    utilities: 'utilities',
    cleaning: 'cleaning',
    security: 'security',
    landscaping: 'landscaping',
    professional_services: 'professionalServices',
    administration: 'administration',
    repairs: 'repairs',
    supplies: 'supplies',
    taxes: 'taxes',
    other: 'other'
  });
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[27]++;
  return t(
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[3][0]++, categoryTranslationKeys[category]) ||
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[3][1]++, category));
};
/**
 *
 */
function Bills() {
  /* istanbul ignore next */
  cov_7m5tvqzdi().f[2]++;
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[28]++, (0, use_language_1.useLanguage)());
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[29]++, (0, react_1.useState)({
    buildingId: '',
    category: '',
    year: new Date().getFullYear().toString(),
    months: []
  }));
  const [showCreateDialog, setShowCreateDialog] =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[30]++, (0, react_1.useState)(false));
  const [showAllYears, setShowAllYears] =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[31]++, (0, react_1.useState)(false));
  const queryClient =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[32]++, (0, react_query_1.useQueryClient)());
  // Fetch buildings for filter dropdown
  const {
    data: buildings =
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[4][0]++, []),
    isLoading: buildingsLoading,
    error: buildingsError
  } =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[33]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/buildings'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[3]++;
      const response =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[34]++, await (0, queryClient_1.apiRequest)('GET', '/api/buildings'));
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[35]++;
      return await response.json();
    }
  }));
  // Fetch bills based on filters
  const {
    data: bills =
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[5][0]++, []),
    isLoading
  } =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[36]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/bills', filters],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[4]++;
      const params =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[37]++, new URLSearchParams()); /**
                                                        * If function.
                                                        * @param filters.buildingId - Filters.buildingId parameter.
                                                        */ /**
                                                           * If function.
                                                           * @param filters.buildingId - Filters.buildingId parameter.
                                                           */
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[38]++;
      if (filters.buildingId) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[6][0]++;
        cov_7m5tvqzdi().s[39]++;
        params.set('buildingId', filters.buildingId);
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[6][1]++;
      } /**
        * If function.
        * @param filters.category && filters.category !== 'all' - filters.category && filters.category !== 'all' parameter.
        */ /**
           * If function.
           * @param filters.category && filters.category !== 'all' - filters.category && filters.category !== 'all' parameter.
           */
      cov_7m5tvqzdi().s[40]++;
      if (
      /* istanbul ignore next */
      (cov_7m5tvqzdi().b[8][0]++, filters.category) &&
      /* istanbul ignore next */
      (cov_7m5tvqzdi().b[8][1]++, filters.category !== 'all')) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[7][0]++;
        cov_7m5tvqzdi().s[41]++;
        params.set('category', filters.category);
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[7][1]++;
      } /**
        * If function.
        * @param filters.year - Filters.year parameter.
        */ /**
           * If function.
           * @param filters.year - Filters.year parameter.
           */
      cov_7m5tvqzdi().s[42]++;
      if (filters.year) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[9][0]++;
        cov_7m5tvqzdi().s[43]++;
        params.set('year', filters.year);
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[9][1]++;
      } /**
        * If function.
        * @param filters.months.length > 0 - filters.months.length > 0 parameter.
        */ /**
           * If function.
           * @param filters.months.length > 0 - filters.months.length > 0 parameter.
           */
      cov_7m5tvqzdi().s[44]++;
      if (filters.months.length > 0) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[10][0]++;
        cov_7m5tvqzdi().s[45]++;
        params.set('months', filters.months.join(','));
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[10][1]++;
      }
      const url =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[46]++, `/api/bills${params.toString() ?
      /* istanbul ignore next */
      (cov_7m5tvqzdi().b[11][0]++, '?' + params.toString()) :
      /* istanbul ignore next */
      (cov_7m5tvqzdi().b[11][1]++, '')}`);
      const response =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[47]++, await fetch(url, {
        credentials: 'include'
      })); /**
           * If function.
           * @param !response.ok - !response.ok parameter.
           */
      /**
       * If function.
       * @param !response.ok - !response.ok parameter.
       */
      /**
       * If function.
       * @param !response.ok - !response.ok parameter.
       */
      /**
       * If function.
       * @param !response.ok - !response.ok parameter.
       */ /**
          * If function.
          * @param !response.ok - !response.ok parameter.
          */
      /**
       * If function.
       * @param !response.ok - !response.ok parameter.
       */
      /**
       * If function.
       * @param !response.ok - !response.ok parameter.
       */
      /**
       * If function.
       * @param !response.ok - !response.ok parameter.
       */
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[48]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[12][0]++;
        cov_7m5tvqzdi().s[49]++;
        throw new Error(`Failed to fetch bills: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[12][1]++;
      }
      cov_7m5tvqzdi().s[50]++;
      return response.json();
    }
  }));
  // Group bills by category
  const billsByCategory =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[51]++, bills.reduce((acc, bill) => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[5]++;
    const category =
    /* istanbul ignore next */
    (cov_7m5tvqzdi().s[52]++,
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[13][0]++, bill.category) ||
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[13][1]++, 'other')); /**
                                            * If function.
                                            * @param !acc[category] - !acc[category] parameter.
                                            */ /**
                                               * If function.
                                               * @param !acc[category] - !acc[category] parameter.
                                               */
    /* istanbul ignore next */
    cov_7m5tvqzdi().s[53]++;
    if (!acc[category]) {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[14][0]++;
      cov_7m5tvqzdi().s[54]++;
      acc[category] = [];
    } else
    /* istanbul ignore next */
    {
      cov_7m5tvqzdi().b[14][1]++;
    }
    cov_7m5tvqzdi().s[55]++;
    acc[category].push(bill);
    /* istanbul ignore next */
    cov_7m5tvqzdi().s[56]++;
    return acc;
  }, {}));
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[57]++;
  const handleFilterChange = (key, value) => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[6]++;
    cov_7m5tvqzdi().s[58]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[7]++;
      cov_7m5tvqzdi().s[59]++;
      return {
        ...prev,
        [key]: value
      };
    });
  };
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[60]++;
  const handleMonthToggle = monthValue => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[8]++;
    cov_7m5tvqzdi().s[61]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[9]++;
      cov_7m5tvqzdi().s[62]++;
      return {
        ...prev,
        months: prev.months.includes(monthValue) ?
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[15][0]++, prev.months.filter(m => {
          /* istanbul ignore next */
          cov_7m5tvqzdi().f[10]++;
          cov_7m5tvqzdi().s[63]++;
          return m !== monthValue;
        })) :
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[15][1]++, [...prev.months, monthValue])
      };
    });
  };
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[64]++;
  const handleAllMonthsToggle = () => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[11]++;
    const allMonthValues =
    /* istanbul ignore next */
    (cov_7m5tvqzdi().s[65]++, MONTHS.map(m => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[12]++;
      cov_7m5tvqzdi().s[66]++;
      return m.value;
    }));
    /* istanbul ignore next */
    cov_7m5tvqzdi().s[67]++;
    setFilters(prev => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[13]++;
      cov_7m5tvqzdi().s[68]++;
      return {
        ...prev,
        months: prev.months.length === allMonthValues.length ?
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[16][0]++, []) :
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[16][1]++, allMonthValues)
      };
    });
  };
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[69]++;
  const getMonthsDisplayText = () => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[14]++;
    cov_7m5tvqzdi().s[70]++;
    /**
     * If function.
     * @param filters.months.length === 0 - filters.months.length === 0 parameter.
     */ /**
        * If function.
        * @param filters.months.length === 0 - filters.months.length === 0 parameter.
        */
    if (filters.months.length === 0) {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[17][0]++;
      cov_7m5tvqzdi().s[71]++;
      return 'All months';
    } else
    /* istanbul ignore next */
    {
      cov_7m5tvqzdi().b[17][1]++;
    } /**
      * If function.
      * @param filters.months.length === MONTHS.length - filters.months.length === MONTHS.length parameter.
      */ /**
         * If function.
         * @param filters.months.length === MONTHS.length - filters.months.length === MONTHS.length parameter.
         */
    cov_7m5tvqzdi().s[72]++;
    if (filters.months.length === MONTHS.length) {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[18][0]++;
      cov_7m5tvqzdi().s[73]++;
      return 'All months';
    } else
    /* istanbul ignore next */
    {
      cov_7m5tvqzdi().b[18][1]++;
    } /**
      * If function.
      * @param filters.months.length === 1 - filters.months.length === 1 parameter.
      */ /**
         * If function.
         * @param filters.months.length === 1 - filters.months.length === 1 parameter.
         */
    cov_7m5tvqzdi().s[74]++;
    if (filters.months.length === 1) {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[19][0]++;
      const month =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[75]++, MONTHS.find(m => {
        /* istanbul ignore next */
        cov_7m5tvqzdi().f[15]++;
        cov_7m5tvqzdi().s[76]++;
        return m.value === filters.months[0];
      }));
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[77]++;
      return /* istanbul ignore next */(cov_7m5tvqzdi().b[20][0]++, month?.label) ||
      /* istanbul ignore next */
      (cov_7m5tvqzdi().b[20][1]++, 'All months');
    } else
    /* istanbul ignore next */
    {
      cov_7m5tvqzdi().b[19][1]++;
    }
    cov_7m5tvqzdi().s[78]++;
    return `${filters.months.length} months`;
  };
  // Get building construction year for minimum year calculation
  const selectedBuilding =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[79]++, Array.isArray(buildings) ?
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[21][0]++, buildings.find(b => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[16]++;
    cov_7m5tvqzdi().s[80]++;
    return b.id === filters.buildingId;
  })) :
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[21][1]++, undefined));
  const buildingConstructionYear =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[81]++,
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[22][0]++, selectedBuilding?.yearBuilt) ||
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[22][1]++, new Date().getFullYear()));
  const currentYear =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[82]++, new Date().getFullYear());
  // Generate year options based on show all years state
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[83]++;
  const getYearOptions = () => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[17]++;
    cov_7m5tvqzdi().s[84]++;
    /**
     * If function.
     * @param showAllYears - ShowAllYears parameter.
     */ /**
        * If function.
        * @param showAllYears - ShowAllYears parameter.
        */
    if (showAllYears) {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[23][0]++;
      // Show all years from building construction year to 25 years forward
      const startYear =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[85]++, buildingConstructionYear);
      const endYear =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[86]++, currentYear + 25);
      const totalYears =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[87]++, endYear - startYear + 1);
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[88]++;
      return Array.from({
        length: totalYears
      }, (_, i) => {
        /* istanbul ignore next */
        cov_7m5tvqzdi().f[18]++;
        cov_7m5tvqzdi().s[89]++;
        return startYear + i;
      });
    } else {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[23][1]++;
      // Show current year ±3 years
      const startYear =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[90]++, currentYear - 3);
      const endYear =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[91]++, currentYear + 3);
      const totalYears =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[92]++, endYear - startYear + 1);
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[93]++;
      return Array.from({
        length: totalYears
      }, (_, i) => {
        /* istanbul ignore next */
        cov_7m5tvqzdi().f[19]++;
        cov_7m5tvqzdi().s[94]++;
        return startYear + i;
      });
    }
  };
  // Show loading state while buildings are loading
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[95]++;
  if (buildingsLoading) {
    /* istanbul ignore next */
    cov_7m5tvqzdi().b[24][0]++;
    cov_7m5tvqzdi().s[96]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: t('billsManagement'),
        subtitle: t('billsSubtitle')
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 flex items-center justify-center',
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: 'text-center',
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: 'animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4'
          }), (0, jsx_runtime_1.jsx)("p", {
            className: 'text-gray-500',
            children: t('loadingBuildings')
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_7m5tvqzdi().b[24][1]++;
  }
  // Show error state if buildings failed to load
  cov_7m5tvqzdi().s[97]++;
  if (buildingsError) {
    /* istanbul ignore next */
    cov_7m5tvqzdi().b[25][0]++;
    cov_7m5tvqzdi().s[98]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: t('billsManagement'),
        subtitle: t('billsSubtitle')
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 flex items-center justify-center',
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: 'text-center',
          children: [(0, jsx_runtime_1.jsx)("p", {
            className: 'text-red-500 mb-4',
            children: t('failedToLoadBuildings')
          }), (0, jsx_runtime_1.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_7m5tvqzdi().f[20]++;
              cov_7m5tvqzdi().s[99]++;
              return window.location.reload();
            },
            className: 'px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700',
            children: t('retry')
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_7m5tvqzdi().b[25][1]++;
  }
  cov_7m5tvqzdi().s[100]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: 'flex-1 flex flex-col overflow-hidden',
    children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
      title: t('billsManagement'),
      subtitle: t('billsSubtitle')
    }), (0, jsx_runtime_1.jsx)("div", {
      className: 'flex-1 overflow-auto p-6',
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'max-w-7xl mx-auto space-y-6',
        children: [(0, jsx_runtime_1.jsxs)(card_1.Card, {
          children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
            children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
              className: 'flex items-center gap-2',
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Filter, {
                className: 'w-5 h-5'
              }), t('filters')]
            })
          }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
            children: (0, jsx_runtime_1.jsxs)("div", {
              className: 'grid grid-cols-1 md:grid-cols-5 gap-4',
              children: [(0, jsx_runtime_1.jsxs)("div", {
                className: 'space-y-2',
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  htmlFor: 'building-filter',
                  className: 'flex items-center gap-2',
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, {
                    className: 'w-4 h-4'
                  }), t('building')]
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: filters.buildingId,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().f[21]++;
                    cov_7m5tvqzdi().s[101]++;
                    return handleFilterChange('buildingId', value);
                  },
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    id: 'building-filter',
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                      placeholder: t('selectBuilding')
                    })
                  }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                    children:
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().b[26][0]++, Array.isArray(buildings)) &&
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().b[26][1]++, buildings.map(building => {
                      /* istanbul ignore next */
                      cov_7m5tvqzdi().f[22]++;
                      cov_7m5tvqzdi().s[102]++;
                      return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: building.id,
                        children: building.name
                      }, building.id);
                    }))
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: 'space-y-2',
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  htmlFor: 'category-filter',
                  className: 'flex items-center gap-2',
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Tag, {
                    className: 'w-4 h-4'
                  }), t('category')]
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: filters.category,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().f[23]++;
                    cov_7m5tvqzdi().s[103]++;
                    return handleFilterChange('category', value);
                  },
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    id: 'category-filter',
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                      placeholder: t('allCategories')
                    })
                  }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                    children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                      value: 'all',
                      children: t('allCategories')
                    }), BILL_CATEGORIES.map(category => {
                      /* istanbul ignore next */
                      cov_7m5tvqzdi().f[24]++;
                      cov_7m5tvqzdi().s[104]++;
                      return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                        value: category,
                        children: getCategoryLabel(category, t)
                      }, category);
                    })]
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: 'space-y-2',
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  htmlFor: 'year-filter',
                  className: 'flex items-center gap-2',
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Calendar, {
                    className: 'w-4 h-4'
                  }), t('year')]
                }), (0, jsx_runtime_1.jsx)("div", {
                  className: 'space-y-2',
                  children: (0, jsx_runtime_1.jsxs)(select_1.Select, {
                    value: filters.year,
                    onValueChange: value => {
                      /* istanbul ignore next */
                      cov_7m5tvqzdi().f[25]++;
                      cov_7m5tvqzdi().s[105]++;
                      return handleFilterChange('year', value);
                    },
                    children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                      id: 'year-filter',
                      children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {})
                    }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                      className: 'max-h-[300px] overflow-y-auto',
                      children: [getYearOptions().map(year => {
                        /* istanbul ignore next */
                        cov_7m5tvqzdi().f[26]++;
                        cov_7m5tvqzdi().s[106]++;
                        return (0, jsx_runtime_1.jsxs)(select_1.SelectItem, {
                          value: year.toString(),
                          children: [year,
                          /* istanbul ignore next */
                          (cov_7m5tvqzdi().b[27][0]++, year === currentYear) &&
                          /* istanbul ignore next */
                          (cov_7m5tvqzdi().b[27][1]++, (0, jsx_runtime_1.jsx)("span", {
                            className: 'ml-2 text-xs text-blue-500',
                            children: "(Current)"
                          }))]
                        }, year);
                      }),
                      /* istanbul ignore next */
                      (cov_7m5tvqzdi().b[28][0]++, !showAllYears) &&
                      /* istanbul ignore next */
                      (cov_7m5tvqzdi().b[28][1]++, (0, jsx_runtime_1.jsx)("div", {
                        className: 'border-t border-gray-200 mt-2 pt-2',
                        children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                          variant: 'ghost',
                          size: 'sm',
                          className: 'w-full text-left justify-start text-xs',
                          onClick: () => {
                            /* istanbul ignore next */
                            cov_7m5tvqzdi().f[27]++;
                            cov_7m5tvqzdi().s[107]++;
                            return setShowAllYears(true);
                          },
                          children: ["Show more years (", buildingConstructionYear, " - ", currentYear + 25, ")"]
                        })
                      })),
                      /* istanbul ignore next */
                      (cov_7m5tvqzdi().b[29][0]++, showAllYears) &&
                      /* istanbul ignore next */
                      (cov_7m5tvqzdi().b[29][1]++, (0, jsx_runtime_1.jsx)("div", {
                        className: 'border-t border-gray-200 mt-2 pt-2',
                        children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                          variant: 'ghost',
                          size: 'sm',
                          className: 'w-full text-left justify-start text-xs',
                          onClick: () => {
                            /* istanbul ignore next */
                            cov_7m5tvqzdi().f[28]++;
                            cov_7m5tvqzdi().s[108]++;
                            return setShowAllYears(false);
                          },
                          children: ["Show fewer years (", currentYear - 3, " - ", currentYear + 3, ")"]
                        })
                      }))]
                    })]
                  })
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: 'space-y-2',
                children: [(0, jsx_runtime_1.jsxs)(label_1.Label, {
                  className: 'flex items-center gap-2',
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Calendar, {
                    className: 'w-4 h-4'
                  }), t('months')]
                }), (0, jsx_runtime_1.jsxs)(popover_1.Popover, {
                  children: [(0, jsx_runtime_1.jsx)(popover_1.PopoverTrigger, {
                    asChild: true,
                    children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                      variant: 'outline',
                      className: (0, utils_1.cn)('w-full justify-between',
                      /* istanbul ignore next */
                      (cov_7m5tvqzdi().b[30][0]++, filters.months.length === 0) &&
                      /* istanbul ignore next */
                      (cov_7m5tvqzdi().b[30][1]++, 'text-muted-foreground')),
                      children: [getMonthsDisplayText(), (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, {
                        className: 'ml-2 h-4 w-4 shrink-0 opacity-50'
                      })]
                    })
                  }), (0, jsx_runtime_1.jsxs)(popover_1.PopoverContent, {
                    className: 'w-64 p-0',
                    align: 'start',
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: 'border-b p-3',
                      children: (0, jsx_runtime_1.jsxs)("div", {
                        className: 'flex items-center space-x-2',
                        children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, {
                          id: 'all-months',
                          checked: filters.months.length === MONTHS.length,
                          onCheckedChange: handleAllMonthsToggle
                        }), (0, jsx_runtime_1.jsx)(label_1.Label, {
                          htmlFor: 'all-months',
                          className: 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',
                          children: "All Months"
                        })]
                      })
                    }), (0, jsx_runtime_1.jsx)("div", {
                      className: 'grid grid-cols-2 gap-2 p-3',
                      children: MONTHS.map(month => {
                        /* istanbul ignore next */
                        cov_7m5tvqzdi().f[29]++;
                        cov_7m5tvqzdi().s[109]++;
                        return (0, jsx_runtime_1.jsxs)("div", {
                          className: 'flex items-center space-x-2',
                          children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, {
                            id: `month-${month.value}`,
                            checked: filters.months.includes(month.value),
                            onCheckedChange: () => {
                              /* istanbul ignore next */
                              cov_7m5tvqzdi().f[30]++;
                              cov_7m5tvqzdi().s[110]++;
                              return handleMonthToggle(month.value);
                            }
                          }), (0, jsx_runtime_1.jsx)(label_1.Label, {
                            htmlFor: `month-${month.value}`,
                            className: 'text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',
                            children: month.label
                          })]
                        }, month.value);
                      })
                    })]
                  })]
                })]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: 'space-y-2',
                children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                  className: 'invisible',
                  children: "Actions"
                }), (0, jsx_runtime_1.jsxs)(dialog_1.Dialog, {
                  open: showCreateDialog,
                  onOpenChange: setShowCreateDialog,
                  children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTrigger, {
                    asChild: true,
                    children: (0, jsx_runtime_1.jsx)(button_1.Button, {
                      className: 'w-full',
                      disabled: !filters.buildingId,
                      children: t('createBill')
                    })
                  }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
                    className: 'max-w-4xl max-h-[90vh] overflow-y-auto',
                    children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, {
                      children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
                        children: t('createNewBill')
                      })
                    }), (0, jsx_runtime_1.jsx)(ModularBillForm_1.default, {
                      mode: "create",
                      buildingId: filters.buildingId,
                      onCancel: () => {
                        /* istanbul ignore next */
                        cov_7m5tvqzdi().f[31]++;
                        cov_7m5tvqzdi().s[111]++;
                        return setShowCreateDialog(false);
                      },
                      onSuccess: () => {
                        /* istanbul ignore next */
                        cov_7m5tvqzdi().f[32]++;
                        cov_7m5tvqzdi().s[112]++;
                        setShowCreateDialog(false);
                        /* istanbul ignore next */
                        cov_7m5tvqzdi().s[113]++;
                        queryClient.invalidateQueries({
                          queryKey: ['/api/bills']
                        });
                      }
                    })]
                  })]
                })]
              })]
            })
          })]
        }), !filters.buildingId ?
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[31][0]++, (0, jsx_runtime_1.jsx)(BuildingSelectionGrid_1.BuildingSelectionGrid, {
          buildings: Array.isArray(buildings) ?
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[32][0]++, buildings) :
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[32][1]++, []),
          onBuildingSelect: buildingId => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[33]++;
            cov_7m5tvqzdi().s[114]++;
            return handleFilterChange('buildingId', buildingId);
          }
        })) :
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[31][1]++, isLoading ?
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[33][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
          children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
            className: 'p-8 text-center',
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: 'animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4'
            }), (0, jsx_runtime_1.jsx)("p", {
              className: 'text-gray-500',
              children: t('loadingBills')
            })]
          })
        })) :
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[33][1]++, Object.keys(billsByCategory).length === 0 ?
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[34][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
          children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
            className: 'p-8 text-center',
            children: [(0, jsx_runtime_1.jsx)("h3", {
              className: 'text-lg font-semibold text-gray-600 mb-2',
              children: t('noBillsFound')
            }), (0, jsx_runtime_1.jsx)("p", {
              className: 'text-gray-500 mb-4',
              children: "No bills found for the selected filters. Create your first bill to get started."
            }), (0, jsx_runtime_1.jsx)(button_1.Button, {
              onClick: () => {
                /* istanbul ignore next */
                cov_7m5tvqzdi().f[34]++;
                cov_7m5tvqzdi().s[115]++;
                return setShowCreateDialog(true);
              },
              children: "Create First Bill"
            })]
          })
        })) :
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[34][1]++, (0, jsx_runtime_1.jsx)("div", {
          className: 'space-y-6',
          children: BILL_CATEGORIES.filter(category => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[35]++;
            cov_7m5tvqzdi().s[116]++;
            return (
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[35][0]++, !filters.category) ||
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[35][1]++, filters.category === category)) &&
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[35][2]++, billsByCategory[category]?.length > 0);
          }).map(category => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[36]++;
            cov_7m5tvqzdi().s[117]++;
            return (0, jsx_runtime_1.jsx)(BillCategorySection, {
              category: category,
              bills:
              /* istanbul ignore next */
              (cov_7m5tvqzdi().b[36][0]++, billsByCategory[category]) ||
              /* istanbul ignore next */
              (cov_7m5tvqzdi().b[36][1]++, []),
              onBillUpdate: () => {
                /* istanbul ignore next */
                cov_7m5tvqzdi().f[37]++;
                cov_7m5tvqzdi().s[118]++;
                return queryClient.invalidateQueries({
                  queryKey: ['/api/bills']
                });
              },
              t: t
            }, category);
          })
        }))))]
      })
    })]
  });
}
// Component for displaying bills in a category
/**
 *
 * @param root0
 * @param root0.category
 * @param root0.bills
 * @param root0.onBillUpdate
 */
/**
 * BillCategorySection function.
 * @param root0
 * @param root0.category
 * @param root0.bills
 * @param root0.onBillUpdate
 * @returns Function result.
 */
function BillCategorySection({
  category,
  bills,
  onBillUpdate,
  t
}) {
  /* istanbul ignore next */
  cov_7m5tvqzdi().f[38]++;
  cov_7m5tvqzdi().s[119]++;
  return (0, jsx_runtime_1.jsxs)(card_1.Card, {
    children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
      children: (0, jsx_runtime_1.jsx)(card_1.CardTitle, {
        className: 'flex items-center justify-between',
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center gap-2',
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Tag, {
            className: 'w-5 h-5'
          }), getCategoryLabel(category, t), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
            variant: 'secondary',
            children: bills.length
          })]
        })
      })
    }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
      children: (0, jsx_runtime_1.jsx)("div", {
        className: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4',
        children: bills.map(bill => {
          /* istanbul ignore next */
          cov_7m5tvqzdi().f[39]++;
          cov_7m5tvqzdi().s[120]++;
          return (0, jsx_runtime_1.jsx)(BillCard, {
            bill: bill,
            onUpdate: onBillUpdate
          }, bill.id);
        })
      })
    })]
  });
}
// Component for individual bill cards
/**
 *
 * @param root0
 * @param root0.bill
 * @param root0.onUpdate
 */
/**
 * BillCard function.
 * @param root0
 * @param root0.bill
 * @param root0.onUpdate
 * @returns Function result.
 */
function BillCard({
  bill,
  onUpdate
}) {
  /* istanbul ignore next */
  cov_7m5tvqzdi().f[40]++;
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[121]++, (0, use_language_1.useLanguage)());
  const [showDetailDialog, setShowDetailDialog] =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[122]++, (0, react_1.useState)(false));
  const [showEditDialog, setShowEditDialog] =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[123]++, (0, react_1.useState)(false));
  const statusColors =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[124]++, {
    draft: 'bg-gray-100 text-gray-800',
    sent: 'bg-blue-100 text-blue-800',
    overdue: 'bg-red-100 text-red-800',
    paid: 'bg-green-100 text-green-800',
    cancelled: 'bg-gray-100 text-gray-800'
  });
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[125]++;
  return (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {
    children: [(0, jsx_runtime_1.jsx)(card_1.Card, {
      className: 'hover:shadow-md transition-shadow cursor-pointer',
      onClick: () => {
        /* istanbul ignore next */
        cov_7m5tvqzdi().f[41]++;
        cov_7m5tvqzdi().s[126]++;
        return setShowDetailDialog(true);
      },
      children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
        className: 'p-4',
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: 'space-y-3',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-start justify-between',
            children: [(0, jsx_runtime_1.jsxs)("div", {
              children: [(0, jsx_runtime_1.jsx)("h4", {
                className: 'font-semibold text-sm',
                children: bill.title
              }), (0, jsx_runtime_1.jsxs)("p", {
                className: 'text-xs text-gray-500',
                children: ["#", bill.billNumber]
              })]
            }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
              className: statusColors[bill.status],
              children: bill.status
            })]
          }),
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[37][0]++, bill.description) &&
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[37][1]++, (0, jsx_runtime_1.jsx)("p", {
            className: 'text-sm text-gray-600 line-clamp-2',
            children: bill.description
          })), (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center justify-between text-sm',
            children: [(0, jsx_runtime_1.jsxs)("span", {
              className: 'font-medium',
              children: ["$", Number(bill.totalAmount).toLocaleString()]
            }), (0, jsx_runtime_1.jsx)("span", {
              className: 'text-gray-500',
              children: bill.paymentType
            })]
          }),
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[38][0]++, bill.vendor) &&
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[38][1]++, (0, jsx_runtime_1.jsxs)("p", {
            className: 'text-xs text-gray-500',
            children: ["Vendor: ", bill.vendor]
          })), (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center gap-2 pt-2',
            children: [
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[39][0]++, bill.filePath) &&
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[39][1]++, (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
              variant: 'outline',
              className: 'text-xs',
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                className: 'w-3 h-3 mr-1'
              }), "Document"]
            })),
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[40][0]++, bill.isAiAnalyzed) &&
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[40][1]++, (0, jsx_runtime_1.jsx)(badge_1.Badge, {
              variant: 'outline',
              className: 'text-xs',
              children: "AI Analyzed"
            })),
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[41][0]++, bill.notes?.includes('Auto-generated from:')) &&
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[41][1]++, (0, jsx_runtime_1.jsx)(badge_1.Badge, {
              variant: 'outline',
              className: 'text-xs',
              children: "Auto-Generated"
            }))]
          })]
        })
      })
    }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
      open: showDetailDialog,
      onOpenChange: setShowDetailDialog,
      children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
        className: 'max-w-2xl max-h-[95vh] overflow-y-auto',
        "aria-describedby": "bill-details-description",
        children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, {
          children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
            children: "Bill Details"
          })
        }), (0, jsx_runtime_1.jsx)(BillDetail, {
          bill: bill,
          onSuccess: () => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[42]++;
            cov_7m5tvqzdi().s[127]++;
            setShowDetailDialog(false);
            /* istanbul ignore next */
            cov_7m5tvqzdi().s[128]++;
            onUpdate();
          },
          onCancel: () => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[43]++;
            cov_7m5tvqzdi().s[129]++;
            return setShowDetailDialog(false);
          },
          onEditBill: () => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[44]++;
            cov_7m5tvqzdi().s[130]++;
            setShowDetailDialog(false);
            /* istanbul ignore next */
            cov_7m5tvqzdi().s[131]++;
            setShowEditDialog(true);
          }
        })]
      })
    }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
      open: showEditDialog,
      onOpenChange: setShowEditDialog,
      children: (0, jsx_runtime_1.jsx)(dialog_1.DialogContent, {
        className: 'max-w-4xl max-h-[95vh] overflow-y-auto',
        "aria-describedby": "edit-bill-description",
        children: (0, jsx_runtime_1.jsx)(ModularBillForm_1.default, {
          mode: "edit",
          bill: bill,
          onSuccess: () => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[45]++;
            cov_7m5tvqzdi().s[132]++;
            setShowEditDialog(false);
            /* istanbul ignore next */
            cov_7m5tvqzdi().s[133]++;
            onUpdate();
          },
          onCancel: () => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[46]++;
            cov_7m5tvqzdi().s[134]++;
            return setShowEditDialog(false);
          },
          buildingId: bill.buildingId
        })
      })
    })]
  });
}
// Bill detail component
function BillDetail({
  bill,
  onSuccess,
  onCancel,
  onEditBill
}) {
  /* istanbul ignore next */
  cov_7m5tvqzdi().f[47]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[135]++, (0, react_query_1.useQueryClient)());
  // Fetch fresh bill data to ensure we have updated document information
  const {
    data: freshBill,
    error: freshBillError,
    isLoading: freshBillLoading
  } =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[136]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/bills', bill.id],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[48]++;
      const response =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[137]++, await fetch(`/api/bills/${bill.id}`, {
        credentials: 'include'
      }));
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[138]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[42][0]++;
        cov_7m5tvqzdi().s[139]++;
        throw new Error('Failed to fetch bill details');
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[42][1]++;
      }
      cov_7m5tvqzdi().s[140]++;
      return response.json();
    }
  }));
  // Fetch documents attached to this bill
  const {
    data: billDocuments =
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[43][0]++, []),
    isLoading: documentsLoading
  } =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[141]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/documents', 'bill', bill.id],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[49]++;
      const response =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[142]++, await fetch(`/api/documents?attachedToType=bill&attachedToId=${bill.id}`, {
        credentials: 'include'
      }));
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[143]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[44][0]++;
        cov_7m5tvqzdi().s[144]++;
        console.error('[BILL DOCS] Failed to fetch documents:', response.status, response.statusText);
        /* istanbul ignore next */
        cov_7m5tvqzdi().s[145]++;
        throw new Error('Failed to fetch bill documents');
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[44][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[146]++, await response.json());
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[147]++;
      return /* istanbul ignore next */(cov_7m5tvqzdi().b[45][0]++, data.documents) ||
      /* istanbul ignore next */
      (cov_7m5tvqzdi().b[45][1]++, []);
    }
  }));
  // Use fresh bill data if available, fallback to props bill data
  const currentBill =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[148]++,
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[46][0]++, freshBill) ||
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[46][1]++, bill));
  // Keep basic logging for bills
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[149]++;
  if (billDocuments.length > 0) {
    /* istanbul ignore next */
    cov_7m5tvqzdi().b[47][0]++;
    cov_7m5tvqzdi().s[150]++;
    console.log('[BILL DOCS] Found documents:', billDocuments.length, 'for bill:', currentBill.billNumber);
  } else
  /* istanbul ignore next */
  {
    cov_7m5tvqzdi().b[47][1]++;
  }
  const [endDate, setEndDate] =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[151]++, (0, react_1.useState)(
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[48][0]++, currentBill.endDate) ||
  /* istanbul ignore next */
  (cov_7m5tvqzdi().b[48][1]++, '')));
  const updateBillMutation =
  /* istanbul ignore next */
  (cov_7m5tvqzdi().s[152]++, (0, react_query_1.useMutation)({
    mutationFn: async updates => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[50]++;
      const response =
      /* istanbul ignore next */
      (cov_7m5tvqzdi().s[153]++, await fetch(`/api/bills/${bill.id}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include',
        body: JSON.stringify(updates)
      }));
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[154]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_7m5tvqzdi().b[49][0]++;
        cov_7m5tvqzdi().s[155]++;
        throw new Error('Failed to update bill');
      } else
      /* istanbul ignore next */
      {
        cov_7m5tvqzdi().b[49][1]++;
      }
      cov_7m5tvqzdi().s[156]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_7m5tvqzdi().f[51]++;
      cov_7m5tvqzdi().s[157]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/bills']
      });
      /* istanbul ignore next */
      cov_7m5tvqzdi().s[158]++;
      onSuccess();
    }
  }));
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[159]++;
  const handleSetEndDate = () => {
    /* istanbul ignore next */
    cov_7m5tvqzdi().f[52]++;
    cov_7m5tvqzdi().s[160]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_7m5tvqzdi().b[50][0]++;
      cov_7m5tvqzdi().s[161]++;
      updateBillMutation.mutate({
        endDate
      });
    } else
    /* istanbul ignore next */
    {
      cov_7m5tvqzdi().b[50][1]++;
    }
  };
  /* istanbul ignore next */
  cov_7m5tvqzdi().s[162]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: 'space-y-6',
    children: [(0, jsx_runtime_1.jsxs)("div", {
      className: 'grid grid-cols-2 gap-4',
      children: [(0, jsx_runtime_1.jsxs)("div", {
        children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
          className: 'text-sm font-medium',
          children: "Bill Number"
        }), (0, jsx_runtime_1.jsx)("p", {
          className: 'text-sm text-gray-600',
          children: currentBill.billNumber
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
          className: 'text-sm font-medium',
          children: "Status"
        }), (0, jsx_runtime_1.jsx)("p", {
          className: 'text-sm text-gray-600 capitalize',
          children: currentBill.status
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
          className: 'text-sm font-medium',
          children: "Category"
        }), (0, jsx_runtime_1.jsx)("p", {
          className: 'text-sm text-gray-600 capitalize',
          children: currentBill.category
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
          className: 'text-sm font-medium',
          children: "Payment Type"
        }), (0, jsx_runtime_1.jsx)("p", {
          className: 'text-sm text-gray-600 capitalize',
          children: currentBill.paymentType
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
          className: 'text-sm font-medium',
          children: "Total Amount"
        }), (0, jsx_runtime_1.jsxs)("p", {
          className: 'text-sm text-gray-600',
          children: ["$", Number(currentBill.totalAmount).toLocaleString()]
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
          className: 'text-sm font-medium',
          children: "Start Date"
        }), (0, jsx_runtime_1.jsx)("p", {
          className: 'text-sm text-gray-600',
          children: currentBill.startDate
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Title"
      }), (0, jsx_runtime_1.jsx)("p", {
        className: 'text-sm text-gray-600',
        children: currentBill.title
      })]
    }),
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[51][0]++, currentBill.description) &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[51][1]++, (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Description"
      }), (0, jsx_runtime_1.jsx)("p", {
        className: 'text-sm text-gray-600',
        children: currentBill.description
      })]
    })),
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[52][0]++, currentBill.vendor) &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[52][1]++, (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Vendor"
      }), (0, jsx_runtime_1.jsx)("p", {
        className: 'text-sm text-gray-600',
        children: currentBill.vendor
      })]
    })),
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[53][0]++, currentBill.notes) &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[53][1]++, (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Notes"
      }), (0, jsx_runtime_1.jsx)("p", {
        className: 'text-sm text-gray-600',
        children: currentBill.notes
      })]
    })),
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[54][0]++, currentBill.paymentType === 'recurrent') &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[54][1]++, (0, jsx_runtime_1.jsxs)("div", {
      className: 'border-t pt-4',
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Recurrence End Date"
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: 'flex items-center gap-2 mt-2',
        children: [(0, jsx_runtime_1.jsx)(input_1.Input, {
          type: 'date',
          value: endDate,
          onChange: e => {
            /* istanbul ignore next */
            cov_7m5tvqzdi().f[53]++;
            cov_7m5tvqzdi().s[163]++;
            return setEndDate(e.target.value);
          },
          className: 'w-48'
        }), (0, jsx_runtime_1.jsx)(button_1.Button, {
          onClick: handleSetEndDate,
          disabled: updateBillMutation.isPending,
          size: 'sm',
          children: updateBillMutation.isPending ?
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[55][0]++, 'Setting...') :
          /* istanbul ignore next */
          (cov_7m5tvqzdi().b[55][1]++, 'Set End Date')
        })]
      }), (0, jsx_runtime_1.jsx)("p", {
        className: 'text-xs text-gray-500 mt-1',
        children: "Setting an end date will stop auto-generation of future bills after this date."
      })]
    })),
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[56][0]++, currentBill.costs) &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[56][1]++, currentBill.costs.length > 1) &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[56][2]++, (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Payment Breakdown"
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'space-y-1 mt-1',
        children: currentBill.costs.map((cost, index) => {
          /* istanbul ignore next */
          cov_7m5tvqzdi().f[54]++;
          cov_7m5tvqzdi().s[164]++;
          return (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex justify-between text-sm',
            children: [(0, jsx_runtime_1.jsxs)("span", {
              children: ["Payment ", index + 1, ":"]
            }), (0, jsx_runtime_1.jsxs)("span", {
              children: ["$", Number(cost).toLocaleString()]
            })]
          }, index);
        })
      })]
    })), (
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[57][0]++, currentBill.filePath) ||
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[57][1]++, billDocuments.length > 0)) &&
    /* istanbul ignore next */
    (cov_7m5tvqzdi().b[57][2]++, (0, jsx_runtime_1.jsxs)("div", {
      className: 'border-t pt-4',
      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
        className: 'text-sm font-medium',
        children: "Uploaded Documents"
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: 'mt-2 space-y-2',
        children: [
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[58][0]++, currentBill.filePath) &&
        /* istanbul ignore next */
        (cov_7m5tvqzdi().b[58][1]++, (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center justify-between p-3 bg-gray-50 rounded-lg',
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center gap-2',
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
              className: 'w-4 h-4 text-blue-600'
            }), (0, jsx_runtime_1.jsx)("span", {
              className: 'text-sm',
              children: currentBill.fileName
            }),
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[59][0]++, currentBill.isAiAnalyzed) &&
            /* istanbul ignore next */
            (cov_7m5tvqzdi().b[59][1]++, (0, jsx_runtime_1.jsx)(badge_1.Badge, {
              variant: 'outline',
              className: 'text-xs',
              children: "AI Analyzed"
            }))]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center gap-2',
            children: [(0, jsx_runtime_1.jsxs)(button_1.Button, {
              variant: 'outline',
              size: 'sm',
              onClick: () => {
                /* istanbul ignore next */
                cov_7m5tvqzdi().f[55]++;
                cov_7m5tvqzdi().s[165]++;
                // View the document (open in new tab)
                window.open(`/api/bills/${currentBill.id}/download-document`, '_blank');
              },
              className: 'flex items-center gap-1',
              "data-testid": `button-view-document-${currentBill.id}`,
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                className: 'w-3 h-3'
              }), "View"]
            }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
              variant: 'outline',
              size: 'sm',
              onClick: () => {
                /* istanbul ignore next */
                cov_7m5tvqzdi().f[56]++;
                // Download the document
                const link =
                /* istanbul ignore next */
                (cov_7m5tvqzdi().s[166]++, document.createElement('a'));
                /* istanbul ignore next */
                cov_7m5tvqzdi().s[167]++;
                link.href = `/api/bills/${currentBill.id}/download-document`;
                /* istanbul ignore next */
                cov_7m5tvqzdi().s[168]++;
                link.download =
                /* istanbul ignore next */
                (cov_7m5tvqzdi().b[60][0]++, currentBill.fileName) ||
                /* istanbul ignore next */
                (cov_7m5tvqzdi().b[60][1]++, 'bill-document');
                /* istanbul ignore next */
                cov_7m5tvqzdi().s[169]++;
                document.body.appendChild(link);
                /* istanbul ignore next */
                cov_7m5tvqzdi().s[170]++;
                link.click();
                /* istanbul ignore next */
                cov_7m5tvqzdi().s[171]++;
                document.body.removeChild(link);
              },
              className: 'flex items-center gap-1',
              "data-testid": `button-download-document-${currentBill.id}`,
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                className: 'w-3 h-3'
              }), "Download"]
            })]
          })]
        })), billDocuments.map(doc => {
          /* istanbul ignore next */
          cov_7m5tvqzdi().f[57]++;
          cov_7m5tvqzdi().s[172]++;
          return (0, jsx_runtime_1.jsxs)("div", {
            className: 'flex items-center justify-between p-3 bg-blue-50 rounded-lg',
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: 'flex items-center gap-2',
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                className: 'w-4 h-4 text-blue-600'
              }), (0, jsx_runtime_1.jsx)("span", {
                className: 'text-sm',
                children: doc.name
              }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
                variant: 'outline',
                className: 'text-xs',
                children:
                /* istanbul ignore next */
                (cov_7m5tvqzdi().b[61][0]++, doc.documentType) ||
                /* istanbul ignore next */
                (cov_7m5tvqzdi().b[61][1]++, 'Document')
              })]
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: 'flex items-center gap-2',
              children: [(0, jsx_runtime_1.jsxs)(button_1.Button, {
                variant: 'outline',
                size: 'sm',
                onClick: async () => {
                  /* istanbul ignore next */
                  cov_7m5tvqzdi().f[58]++;
                  cov_7m5tvqzdi().s[173]++;
                  try {
                    // Use fetch with credentials to ensure authentication
                    const response =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[174]++, await fetch(`/api/documents/${doc.id}/file`, {
                      method: 'GET',
                      credentials: 'include' // Include authentication cookies
                    }));
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[175]++;
                    if (!response.ok) {
                      /* istanbul ignore next */
                      cov_7m5tvqzdi().b[62][0]++;
                      cov_7m5tvqzdi().s[176]++;
                      throw new Error(`View failed: ${response.status} ${response.statusText}`);
                    } else
                    /* istanbul ignore next */
                    {
                      cov_7m5tvqzdi().b[62][1]++;
                    }
                    // Convert response to blob and open in new tab
                    const blob =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[177]++, await response.blob());
                    const url =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[178]++, window.URL.createObjectURL(blob));
                    // Open in new tab
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[179]++;
                    window.open(url, '_blank');
                    // Clean up the URL after a delay to allow the tab to load
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[180]++;
                    setTimeout(() => {
                      /* istanbul ignore next */
                      cov_7m5tvqzdi().f[59]++;
                      cov_7m5tvqzdi().s[181]++;
                      window.URL.revokeObjectURL(url);
                    }, 1000);
                  } catch (error) {
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[182]++;
                    console.error('View failed:', error);
                  }
                },
                className: 'flex items-center gap-1',
                "data-testid": `button-view-document-${doc.id}`,
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                  className: 'w-3 h-3'
                }), "View"]
              }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
                variant: 'outline',
                size: 'sm',
                onClick: async () => {
                  /* istanbul ignore next */
                  cov_7m5tvqzdi().f[60]++;
                  cov_7m5tvqzdi().s[183]++;
                  try {
                    // Use fetch with credentials to ensure authentication
                    const response =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[184]++, await fetch(`/api/documents/${doc.id}/file?download=true`, {
                      method: 'GET',
                      credentials: 'include' // Include authentication cookies
                    }));
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[185]++;
                    if (!response.ok) {
                      /* istanbul ignore next */
                      cov_7m5tvqzdi().b[63][0]++;
                      cov_7m5tvqzdi().s[186]++;
                      throw new Error(`Download failed: ${response.status} ${response.statusText}`);
                    } else
                    /* istanbul ignore next */
                    {
                      cov_7m5tvqzdi().b[63][1]++;
                    }
                    // Convert response to blob and create download
                    const blob =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[187]++, await response.blob());
                    const url =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[188]++, window.URL.createObjectURL(blob));
                    const link =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().s[189]++, document.createElement('a'));
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[190]++;
                    link.href = url;
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[191]++;
                    link.download =
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().b[64][0]++, doc.fileName) ||
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().b[64][1]++, doc.name) ||
                    /* istanbul ignore next */
                    (cov_7m5tvqzdi().b[64][2]++, 'document');
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[192]++;
                    document.body.appendChild(link);
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[193]++;
                    link.click();
                    // Clean up
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[194]++;
                    document.body.removeChild(link);
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[195]++;
                    window.URL.revokeObjectURL(url);
                  } catch (error) {
                    /* istanbul ignore next */
                    cov_7m5tvqzdi().s[196]++;
                    console.error('Download failed:', error);
                  }
                },
                className: 'flex items-center gap-1',
                "data-testid": `button-download-document-${doc.id}`,
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                  className: 'w-3 h-3'
                }), "Download"]
              })]
            })]
          }, doc.id);
        })]
      })]
    })), (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex justify-between items-center pt-4 border-t',
      children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
        onClick: onEditBill,
        className: 'flex items-center gap-1',
        "data-testid": `button-edit-bill-${bill.id}`,
        children: "Edit Bill"
      }), (0, jsx_runtime_1.jsx)(button_1.Button, {
        variant: 'outline',
        onClick: onCancel,
        "data-testid": `button-close-bill-modal-${bill.id}`,
        children: "Close"
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,