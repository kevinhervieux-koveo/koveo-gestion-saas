{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/utils/edit/maxLength.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,aAAa,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAExD,IAAI,uBAAuB,GAAG,aAAa,CAAC,UAAS,uBAAuB;IACxE,uBAAuB,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;IAC3C,uBAAuB,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;IACjD,uBAAuB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;IAC7C,uBAAuB,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;IACnD,uBAAuB,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IACzC,uBAAuB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IACvC,OAAO,uBAAuB,CAAC;AACnC,CAAC,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC;AACjC,wDAAwD;AACxD,6CAA6C;AAC7C,SAAS,YAAY,CAAC,OAAO;IACzB,IAAI,qBAAqB,CAAC;IAC1B,MAAM,IAAI,GAAG,CAAC,qBAAqB,GAAG,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,IAAI,qBAAqB,KAAK,SAAS,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC;IACtJ,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC9E,CAAC;AACD,SAAS,iBAAiB,CAAC,OAAO;IAC9B,OAAO,aAAa,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,aAAa,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,IAAI,uBAAuB,CAAC;AACxJ,CAAC;AAED,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/utils/edit/maxLength.js"],"sourcesContent":["'use strict';\n\nvar isElementType = require('../misc/isElementType.js');\n\nvar maxLengthSupportedTypes = /*#__PURE__*/ function(maxLengthSupportedTypes) {\n    maxLengthSupportedTypes[\"email\"] = \"email\";\n    maxLengthSupportedTypes[\"password\"] = \"password\";\n    maxLengthSupportedTypes[\"search\"] = \"search\";\n    maxLengthSupportedTypes[\"telephone\"] = \"telephone\";\n    maxLengthSupportedTypes[\"text\"] = \"text\";\n    maxLengthSupportedTypes[\"url\"] = \"url\";\n    return maxLengthSupportedTypes;\n}(maxLengthSupportedTypes || {});\n// can't use .maxLength property because of a jsdom bug:\n// https://github.com/jsdom/jsdom/issues/2927\nfunction getMaxLength(element) {\n    var _element_getAttribute;\n    const attr = (_element_getAttribute = element.getAttribute('maxlength')) !== null && _element_getAttribute !== undefined ? _element_getAttribute : '';\n    return /^\\d+$/.test(attr) && Number(attr) >= 0 ? Number(attr) : undefined;\n}\nfunction supportsMaxLength(element) {\n    return isElementType.isElementType(element, 'textarea') || isElementType.isElementType(element, 'input') && element.type in maxLengthSupportedTypes;\n}\n\nexports.getMaxLength = getMaxLength;\nexports.supportsMaxLength = supportsMaxLength;\n"],"version":3}