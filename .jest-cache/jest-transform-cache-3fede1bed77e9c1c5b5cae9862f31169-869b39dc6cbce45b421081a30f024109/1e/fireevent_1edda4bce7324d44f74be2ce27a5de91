b8cea5115083752990bd52530b4953f0
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fireEvent = void 0;
var _dom = require("@testing-library/dom");
// react-testing-library's version of fireEvent will call
// dom-testing-library's version of fireEvent. The reason
// we make this distinction however is because we have
// a few extra events that work a bit differently
const fireEvent = (...args) => (0, _dom.fireEvent)(...args);
exports.fireEvent = fireEvent;
Object.keys(_dom.fireEvent).forEach(key => {
    fireEvent[key] = (...args) => _dom.fireEvent[key](...args);
});
// React event system tracks native mouseOver/mouseOut events for
// running onMouseEnter/onMouseLeave handlers
// @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/EnterLeaveEventPlugin.js#L24-L31
const mouseEnter = fireEvent.mouseEnter;
const mouseLeave = fireEvent.mouseLeave;
fireEvent.mouseEnter = (...args) => {
    mouseEnter(...args);
    return fireEvent.mouseOver(...args);
};
fireEvent.mouseLeave = (...args) => {
    mouseLeave(...args);
    return fireEvent.mouseOut(...args);
};
const pointerEnter = fireEvent.pointerEnter;
const pointerLeave = fireEvent.pointerLeave;
fireEvent.pointerEnter = (...args) => {
    pointerEnter(...args);
    return fireEvent.pointerOver(...args);
};
fireEvent.pointerLeave = (...args) => {
    pointerLeave(...args);
    return fireEvent.pointerOut(...args);
};
const select = fireEvent.select;
fireEvent.select = (node, init) => {
    select(node, init);
    // React tracks this event only on focused inputs
    node.focus();
    // React creates this event when one of the following native events happens
    // - contextMenu
    // - mouseUp
    // - dragEnd
    // - keyUp
    // - keyDown
    // so we can use any here
    // @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/SelectEventPlugin.js#L203-L224
    fireEvent.keyUp(node, init);
};
// React event system tracks native focusout/focusin events for
// running blur/focus handlers
// @link https://github.com/facebook/react/pull/19186
const blur = fireEvent.blur;
const focus = fireEvent.focus;
fireEvent.blur = (...args) => {
    fireEvent.focusOut(...args);
    return blur(...args);
};
fireEvent.focus = (...args) => {
    fireEvent.focusIn(...args);
    return focus(...args);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQHRlc3RpbmctbGlicmFyeS9yZWFjdC9kaXN0L2ZpcmUtZXZlbnQuanMiLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0lBQzNDLEtBQUssRUFBRSxJQUFJO0NBQ1osQ0FBQyxDQUFDO0FBQ0gsT0FBTyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQztBQUMzQixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztBQUMzQyx5REFBeUQ7QUFDekQseURBQXlEO0FBQ3pELHNEQUFzRDtBQUN0RCxpREFBaUQ7QUFDakQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDNUQsT0FBTyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO0lBQ3hDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDN0QsQ0FBQyxDQUFDLENBQUM7QUFFSCxpRUFBaUU7QUFDakUsNkNBQTZDO0FBQzdDLHVKQUF1SjtBQUN2SixNQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDO0FBQ3hDLE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUM7QUFDeEMsU0FBUyxDQUFDLFVBQVUsR0FBRyxDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUU7SUFDakMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDcEIsT0FBTyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDdEMsQ0FBQyxDQUFDO0FBQ0YsU0FBUyxDQUFDLFVBQVUsR0FBRyxDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUU7SUFDakMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDcEIsT0FBTyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDckMsQ0FBQyxDQUFDO0FBQ0YsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLFlBQVksQ0FBQztBQUM1QyxNQUFNLFlBQVksR0FBRyxTQUFTLENBQUMsWUFBWSxDQUFDO0FBQzVDLFNBQVMsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFO0lBQ25DLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQ3RCLE9BQU8sU0FBUyxDQUFDLFdBQVcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3hDLENBQUMsQ0FBQztBQUNGLFNBQVMsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFO0lBQ25DLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQ3RCLE9BQU8sU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3ZDLENBQUMsQ0FBQztBQUNGLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7QUFDaEMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUNoQyxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25CLGlEQUFpRDtJQUNqRCxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFFYiwyRUFBMkU7SUFDM0UsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osVUFBVTtJQUNWLFlBQVk7SUFDWix5QkFBeUI7SUFDekIscUpBQXFKO0lBQ3JKLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzlCLENBQUMsQ0FBQztBQUVGLCtEQUErRDtBQUMvRCw4QkFBOEI7QUFDOUIscURBQXFEO0FBQ3JELE1BQU0sSUFBSSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUM7QUFDNUIsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQztBQUM5QixTQUFTLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxJQUFJLEVBQUUsRUFBRTtJQUMzQixTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDNUIsT0FBTyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUN2QixDQUFDLENBQUM7QUFDRixTQUFTLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxJQUFJLEVBQUUsRUFBRTtJQUM1QixTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDM0IsT0FBTyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUN4QixDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQHRlc3RpbmctbGlicmFyeS9yZWFjdC9kaXN0L2ZpcmUtZXZlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZpcmVFdmVudCA9IHZvaWQgMDtcbnZhciBfZG9tID0gcmVxdWlyZShcIkB0ZXN0aW5nLWxpYnJhcnkvZG9tXCIpO1xuLy8gcmVhY3QtdGVzdGluZy1saWJyYXJ5J3MgdmVyc2lvbiBvZiBmaXJlRXZlbnQgd2lsbCBjYWxsXG4vLyBkb20tdGVzdGluZy1saWJyYXJ5J3MgdmVyc2lvbiBvZiBmaXJlRXZlbnQuIFRoZSByZWFzb25cbi8vIHdlIG1ha2UgdGhpcyBkaXN0aW5jdGlvbiBob3dldmVyIGlzIGJlY2F1c2Ugd2UgaGF2ZVxuLy8gYSBmZXcgZXh0cmEgZXZlbnRzIHRoYXQgd29yayBhIGJpdCBkaWZmZXJlbnRseVxuY29uc3QgZmlyZUV2ZW50ID0gKC4uLmFyZ3MpID0+ICgwLCBfZG9tLmZpcmVFdmVudCkoLi4uYXJncyk7XG5leHBvcnRzLmZpcmVFdmVudCA9IGZpcmVFdmVudDtcbk9iamVjdC5rZXlzKF9kb20uZmlyZUV2ZW50KS5mb3JFYWNoKGtleSA9PiB7XG4gIGZpcmVFdmVudFtrZXldID0gKC4uLmFyZ3MpID0+IF9kb20uZmlyZUV2ZW50W2tleV0oLi4uYXJncyk7XG59KTtcblxuLy8gUmVhY3QgZXZlbnQgc3lzdGVtIHRyYWNrcyBuYXRpdmUgbW91c2VPdmVyL21vdXNlT3V0IGV2ZW50cyBmb3Jcbi8vIHJ1bm5pbmcgb25Nb3VzZUVudGVyL29uTW91c2VMZWF2ZSBoYW5kbGVyc1xuLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvYjg3YWFiZGZlMWI3NDYxZTczMzFhYmIzNjAxZDllNmJiMjc1NDRiYy9wYWNrYWdlcy9yZWFjdC1kb20vc3JjL2V2ZW50cy9FbnRlckxlYXZlRXZlbnRQbHVnaW4uanMjTDI0LUwzMVxuY29uc3QgbW91c2VFbnRlciA9IGZpcmVFdmVudC5tb3VzZUVudGVyO1xuY29uc3QgbW91c2VMZWF2ZSA9IGZpcmVFdmVudC5tb3VzZUxlYXZlO1xuZmlyZUV2ZW50Lm1vdXNlRW50ZXIgPSAoLi4uYXJncykgPT4ge1xuICBtb3VzZUVudGVyKC4uLmFyZ3MpO1xuICByZXR1cm4gZmlyZUV2ZW50Lm1vdXNlT3ZlciguLi5hcmdzKTtcbn07XG5maXJlRXZlbnQubW91c2VMZWF2ZSA9ICguLi5hcmdzKSA9PiB7XG4gIG1vdXNlTGVhdmUoLi4uYXJncyk7XG4gIHJldHVybiBmaXJlRXZlbnQubW91c2VPdXQoLi4uYXJncyk7XG59O1xuY29uc3QgcG9pbnRlckVudGVyID0gZmlyZUV2ZW50LnBvaW50ZXJFbnRlcjtcbmNvbnN0IHBvaW50ZXJMZWF2ZSA9IGZpcmVFdmVudC5wb2ludGVyTGVhdmU7XG5maXJlRXZlbnQucG9pbnRlckVudGVyID0gKC4uLmFyZ3MpID0+IHtcbiAgcG9pbnRlckVudGVyKC4uLmFyZ3MpO1xuICByZXR1cm4gZmlyZUV2ZW50LnBvaW50ZXJPdmVyKC4uLmFyZ3MpO1xufTtcbmZpcmVFdmVudC5wb2ludGVyTGVhdmUgPSAoLi4uYXJncykgPT4ge1xuICBwb2ludGVyTGVhdmUoLi4uYXJncyk7XG4gIHJldHVybiBmaXJlRXZlbnQucG9pbnRlck91dCguLi5hcmdzKTtcbn07XG5jb25zdCBzZWxlY3QgPSBmaXJlRXZlbnQuc2VsZWN0O1xuZmlyZUV2ZW50LnNlbGVjdCA9IChub2RlLCBpbml0KSA9PiB7XG4gIHNlbGVjdChub2RlLCBpbml0KTtcbiAgLy8gUmVhY3QgdHJhY2tzIHRoaXMgZXZlbnQgb25seSBvbiBmb2N1c2VkIGlucHV0c1xuICBub2RlLmZvY3VzKCk7XG5cbiAgLy8gUmVhY3QgY3JlYXRlcyB0aGlzIGV2ZW50IHdoZW4gb25lIG9mIHRoZSBmb2xsb3dpbmcgbmF0aXZlIGV2ZW50cyBoYXBwZW5zXG4gIC8vIC0gY29udGV4dE1lbnVcbiAgLy8gLSBtb3VzZVVwXG4gIC8vIC0gZHJhZ0VuZFxuICAvLyAtIGtleVVwXG4gIC8vIC0ga2V5RG93blxuICAvLyBzbyB3ZSBjYW4gdXNlIGFueSBoZXJlXG4gIC8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I4N2FhYmRmZTFiNzQ2MWU3MzMxYWJiMzYwMWQ5ZTZiYjI3NTQ0YmMvcGFja2FnZXMvcmVhY3QtZG9tL3NyYy9ldmVudHMvU2VsZWN0RXZlbnRQbHVnaW4uanMjTDIwMy1MMjI0XG4gIGZpcmVFdmVudC5rZXlVcChub2RlLCBpbml0KTtcbn07XG5cbi8vIFJlYWN0IGV2ZW50IHN5c3RlbSB0cmFja3MgbmF0aXZlIGZvY3Vzb3V0L2ZvY3VzaW4gZXZlbnRzIGZvclxuLy8gcnVubmluZyBibHVyL2ZvY3VzIGhhbmRsZXJzXG4vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvcHVsbC8xOTE4NlxuY29uc3QgYmx1ciA9IGZpcmVFdmVudC5ibHVyO1xuY29uc3QgZm9jdXMgPSBmaXJlRXZlbnQuZm9jdXM7XG5maXJlRXZlbnQuYmx1ciA9ICguLi5hcmdzKSA9PiB7XG4gIGZpcmVFdmVudC5mb2N1c091dCguLi5hcmdzKTtcbiAgcmV0dXJuIGJsdXIoLi4uYXJncyk7XG59O1xuZmlyZUV2ZW50LmZvY3VzID0gKC4uLmFyZ3MpID0+IHtcbiAgZmlyZUV2ZW50LmZvY3VzSW4oLi4uYXJncyk7XG4gIHJldHVybiBmb2N1cyguLi5hcmdzKTtcbn07Il0sInZlcnNpb24iOjN9