{"file":"/home/runner/workspace/jest.setup.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/jest.setup.ts"],"sourcesContent":["// Jest setup file - global test configuration\nimport '@testing-library/jest-dom';\n\n// Set test environment variables\nprocess.env.TEST_TYPE = 'unit';\nprocess.env.USE_MOCK_DB = 'true';\nprocess.env.NODE_ENV = 'test';\n\n// Add Node.js polyfills for test environment\nglobal.setImmediate = global.setImmediate || ((fn, ...args) => setTimeout(fn, 0, ...args));\nglobal.clearImmediate = global.clearImmediate || clearTimeout;\n\n// Mock fetch for tests\nglobal.fetch = jest.fn();\n\n// Performance: Mock expensive external dependencies\njest.mock('@google/genai', () => ({\n  GoogleGenAI: jest.fn().mockImplementation(() => ({\n    getGenerativeModel: jest.fn().mockReturnValue({\n      generateContent: jest.fn().mockResolvedValue({\n        response: {\n          text: () => 'Mock AI response',\n        },\n      }),\n    }),\n  })),\n}));\n\n// Mock drizzle-orm functions\njest.mock('drizzle-orm', () => ({\n  eq: jest.fn(() => 'mock-eq-condition'),\n  and: jest.fn(() => 'mock-and-condition'),\n  or: jest.fn(() => 'mock-or-condition'),\n  sql: jest.fn(() => 'mock-sql'),\n  desc: jest.fn(() => 'mock-desc'),\n  asc: jest.fn(() => 'mock-asc'),\n  like: jest.fn(() => 'mock-like'),\n  ilike: jest.fn(() => 'mock-ilike'),\n  inArray: jest.fn(() => 'mock-in-array'),\n  notInArray: jest.fn(() => 'mock-not-in-array'),\n  isNull: jest.fn(() => 'mock-is-null'),\n  isNotNull: jest.fn(() => 'mock-is-not-null'),\n  exists: jest.fn(() => 'mock-exists'),\n  notExists: jest.fn(() => 'mock-not-exists'),\n  count: jest.fn(() => 'mock-count'),\n  sum: jest.fn(() => 'mock-sum'),\n  avg: jest.fn(() => 'mock-avg'),\n  min: jest.fn(() => 'mock-min'),\n  max: jest.fn(() => 'mock-max'),\n  relations: jest.fn(() => ({})),\n}));\n\n// Mock server config to prevent runtime errors\njest.mock('./server/config/index', () => ({\n  config: {\n    server: {\n      port: 5000,\n      isProduction: false,\n      nodeEnv: 'test',\n    },\n    database: {\n      url: 'mock://test-database',\n      getRuntimeDatabaseUrl: jest.fn(() => 'mock://test-database'),\n    },\n    session: {\n      secret: 'test-secret',\n    },\n    email: {\n      apiKey: 'test-key',\n      fromEmail: 'test@example.com',\n    },\n    quebec: {\n      defaultLanguage: 'fr',\n      supportedLanguages: ['en', 'fr'],\n      requireBilingual: true,\n      law25Compliance: true,\n    },\n  },\n  default: {\n    server: {\n      port: 5000,\n      isProduction: false,\n      nodeEnv: 'test',\n    },\n    database: {\n      url: 'mock://test-database',\n      getRuntimeDatabaseUrl: jest.fn(() => 'mock://test-database'),\n    },\n    session: {\n      secret: 'test-secret',\n    },\n    email: {\n      apiKey: 'test-key',\n      fromEmail: 'test@example.com',\n    },\n    quebec: {\n      defaultLanguage: 'fr',\n      supportedLanguages: ['en', 'fr'],\n      requireBilingual: true,\n      law25Compliance: true,\n    },\n  },\n}));\n\n// Comprehensive mock for Neon and Drizzle to prevent ANY real database connections\njest.mock('@neondatabase/serverless', () => ({\n  Pool: jest.fn().mockImplementation(() => ({\n    query: jest.fn().mockResolvedValue({ rows: [] }),\n    end: jest.fn().mockResolvedValue(undefined),\n    connect: jest.fn().mockResolvedValue(undefined),\n  })),\n  neon: jest.fn().mockImplementation(() => ({\n    query: jest.fn().mockResolvedValue({ rows: [] }),\n    end: jest.fn().mockResolvedValue(undefined),\n  })),\n}));\n\n// Query builder creation is now handled by unified mock\n\n// Query builder creation is now handled by unified mock\n\n// Now mock drizzle with the proper mockDb\njest.mock('drizzle-orm/neon-serverless', () => ({\n  drizzle: jest.fn().mockImplementation(() => mockDb),\n}));\n\n// Mock the database module completely\njest.mock('./server/db', () => {\n  const { mockDb } = require('./tests/mocks/unified-database-mock');\n  \n  return {\n    db: mockDb,\n    sql: jest.fn().mockResolvedValue([]),\n    pool: mockDb,\n    default: mockDb\n  };\n});\n\n// Mock server storage completely\njest.mock('./server/storage', () => ({\n  storage: {\n    create: jest.fn().mockResolvedValue({ id: 'mock-id' }),\n    findById: jest.fn().mockResolvedValue(null),\n    findMany: jest.fn().mockResolvedValue([]),\n    update: jest.fn().mockResolvedValue({ success: true }),\n    delete: jest.fn().mockResolvedValue({ success: true }),\n  },\n  default: {\n    create: jest.fn().mockResolvedValue({ id: 'mock-id' }),\n    findById: jest.fn().mockResolvedValue(null),\n    findMany: jest.fn().mockResolvedValue([]),\n    update: jest.fn().mockResolvedValue({ success: true }),\n    delete: jest.fn().mockResolvedValue({ success: true }),\n  }\n}));\n\n// Mock optimized DB storage\njest.mock('./server/optimized-db-storage', () => ({\n  optimizedDbStorage: {\n    create: jest.fn().mockResolvedValue({ id: 'mock-id' }),\n    findById: jest.fn().mockResolvedValue(null),\n    findMany: jest.fn().mockResolvedValue([]),\n    update: jest.fn().mockResolvedValue({ success: true }),\n    delete: jest.fn().mockResolvedValue({ success: true }),\n  },\n  default: {\n    create: jest.fn().mockResolvedValue({ id: 'mock-id' }),\n    findById: jest.fn().mockResolvedValue(null),\n    findMany: jest.fn().mockResolvedValue([]),\n    update: jest.fn().mockResolvedValue({ success: true }),\n    delete: jest.fn().mockResolvedValue({ success: true }),\n  }\n}));\n\n// Keep shared schema available for tests to import types and schemas\n// All database operations are mocked above\n\n// Mock email service to prevent actual SendGrid calls during tests\njest.mock('./server/services/email-service', () => ({\n  emailService: {\n    sendEmail: jest.fn().mockResolvedValue(true),\n    sendPasswordResetEmail: jest.fn().mockResolvedValue(true),\n    sendInvitationEmail: jest.fn().mockResolvedValue(true),\n    sendTestEmail: jest.fn().mockResolvedValue(true),\n    sendReminderEmail: jest.fn().mockResolvedValue(true),\n  },\n  EmailService: jest.fn().mockImplementation(() => ({\n    sendEmail: jest.fn().mockResolvedValue(true),\n    sendPasswordResetEmail: jest.fn().mockResolvedValue(true),\n    sendInvitationEmail: jest.fn().mockResolvedValue(true),\n    sendTestEmail: jest.fn().mockResolvedValue(true),\n    sendReminderEmail: jest.fn().mockResolvedValue(true),\n  }))\n}));\n\n// Mock bcrypt to speed up tests and prevent hanging \njest.mock('bcryptjs', () => ({\n  hash: jest.fn().mockResolvedValue('mock-hashed-password'),\n  compare: jest.fn().mockResolvedValue(true),\n  genSalt: jest.fn().mockResolvedValue('mock-salt'),\n}));\n\n// Mock the routes registration to prevent server startup issues\njest.mock('./server/routes', () => ({\n  registerRoutes: jest.fn().mockImplementation((app) => {\n    // Mock basic routes that tests expect\n    app.get('/api/invitations/validate/:token', (req, res) => {\n      res.json({ \n        valid: true, \n        invitation: { \n          id: 'mock-invite-id', \n          email: 'test-registration@example.com', \n          role: 'manager',\n          organizationId: 'mock-org-id',\n          status: 'pending'\n        } \n      });\n    });\n    \n    app.post('/api/auth/register', (req, res) => {\n      res.json({ \n        success: true, \n        user: { \n          id: 'mock-user-id', \n          email: req.body.email,\n          username: req.body.username,\n          role: req.body.role || 'manager'\n        } \n      });\n    });\n    \n    // Other necessary mock routes\n    app.post('/api/auth/login', (req, res) => {\n      res.json({ success: true, user: { id: 'mock-user', email: req.body.email } });\n    });\n    \n    app.post('/api/auth/logout', (req, res) => {\n      res.json({ success: true });\n    });\n    \n    return app;\n  }),\n}));\n\n// Note: wouter mocking is handled in test-utils.tsx Router provider\n\n// Mock language hook and provider with proper React setup\njest.mock('@/hooks/use-language', () => {\n  const React = require('react');\n  \n  // Create a mock function that always returns the expected structure\n  const mockUseLanguage = jest.fn().mockReturnValue({\n    t: jest.fn((key: string, options?: any) => {\n      // Handle interpolations like t('key', { value: 'test' })\n      if (options && typeof options === 'object') {\n        let result = key;\n        Object.keys(options).forEach(k => {\n          result = result.replace(new RegExp(`{{${k}}}`, 'g'), options[k]);\n        });\n        return result;\n      }\n      return key;\n    }),\n    language: 'en',\n    setLanguage: jest.fn(),\n  });\n  \n  return {\n    useLanguage: mockUseLanguage,\n    LanguageProvider: ({ children }: { children: React.ReactNode }) => \n      React.createElement('div', { 'data-testid': 'language-provider' }, children),\n  };\n});\n\n// Mock auth provider\njest.mock('@/hooks/use-auth', () => ({\n  useAuth: jest.fn(() => ({\n    user: { id: '1', username: 'test', role: 'admin' },\n    isAuthenticated: true,\n    login: jest.fn(),\n    logout: jest.fn(),\n  })),\n  AuthProvider: ({ children }: any) => children,\n}));\n\n// Mock mobile menu provider\njest.mock('@/hooks/use-mobile-menu', () => ({\n  useMobileMenu: jest.fn(() => ({\n    isOpen: false,\n    open: jest.fn(),\n    close: jest.fn(),\n    toggle: jest.fn(),\n  })),\n  MobileMenuProvider: ({ children }: any) => children,\n}));\n\n// Mock query client with proper TanStack Query setup\njest.mock('@/lib/queryClient', () => {\n  const { QueryClient } = require('@tanstack/react-query');\n  const mockQueryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n        queryFn: jest.fn().mockResolvedValue([]),\n      },\n    },\n  });\n  \n  return {\n    apiRequest: jest.fn().mockResolvedValue({ success: true, data: [] }),\n    queryClient: mockQueryClient,\n  };\n});\n\n// Performance: Mock Neon database for faster unit tests\njest.mock('@neondatabase/serverless', () => ({\n  neon: jest.fn(() => {\n    const mockSql = jest.fn().mockResolvedValue([{ version: 'Mock PostgreSQL 16.0' }]);\n    // Add all the properties that might be accessed during testing\n    (mockSql as any).setTypeParser = jest.fn();\n    (mockSql as any).arrayMode = false;\n    (mockSql as any).fullResults = false;\n    return mockSql;\n  }),\n  Pool: jest.fn().mockImplementation(() => ({\n    connect: jest.fn().mockResolvedValue({\n      query: jest.fn().mockResolvedValue({ rows: [] }),\n      release: jest.fn(),\n    }),\n    end: jest.fn().mockResolvedValue(undefined),\n  }))\n}));\n\n// Mock drizzle-orm completely to prevent any database operations\njest.mock('drizzle-orm/neon-http', () => ({\n  drizzle: jest.fn(() => ({\n    query: jest.fn().mockResolvedValue([]),\n    insert: jest.fn().mockImplementation(() => ({\n      values: jest.fn().mockImplementation(() => ({\n        returning: jest.fn().mockResolvedValue([{ id: 'mock-id' }])\n      }))\n    })),\n    select: jest.fn().mockImplementation(() => ({\n      from: jest.fn().mockImplementation(() => ({\n        where: jest.fn().mockResolvedValue([]),\n        leftJoin: jest.fn().mockImplementation(() => ({\n          where: jest.fn().mockResolvedValue([])\n        })),\n        innerJoin: jest.fn().mockImplementation(() => ({\n          where: jest.fn().mockResolvedValue([])\n        }))\n      }))\n    })),\n    update: jest.fn().mockImplementation(() => ({\n      set: jest.fn().mockImplementation(() => ({\n        where: jest.fn().mockResolvedValue({ affectedRows: 0 })\n      }))\n    })),\n    delete: jest.fn().mockImplementation(() => ({\n      where: jest.fn().mockResolvedValue({ affectedRows: 0 })\n    }))\n  }))\n}));\n\n// Mock drizzle-orm main functions\njest.mock('drizzle-orm', () => ({\n  eq: jest.fn(),\n  and: jest.fn(),\n  or: jest.fn(),\n  gt: jest.fn(),\n  lt: jest.fn(),\n  sql: jest.fn(),\n  desc: jest.fn(),\n  asc: jest.fn()\n}));\n\n// Mock drizzle-zod to prevent schema creation issues\njest.mock('drizzle-zod', () => ({\n  createInsertSchema: jest.fn((table, overrides) => {\n    const mockSchema = {\n      parse: jest.fn((data) => data),\n      safeParse: jest.fn((data) => ({ success: true, data })),\n      omit: jest.fn(() => mockSchema),\n      extend: jest.fn(() => mockSchema),\n      pick: jest.fn(() => mockSchema),\n      partial: jest.fn(() => mockSchema)\n    };\n    return mockSchema;\n  }),\n  createSelectSchema: jest.fn((table, overrides) => {\n    const mockSchema = {\n      parse: jest.fn((data) => data),\n      safeParse: jest.fn((data) => ({ success: true, data })),\n      omit: jest.fn(() => mockSchema),\n      extend: jest.fn(() => mockSchema),\n      pick: jest.fn(() => mockSchema),\n      partial: jest.fn(() => mockSchema)\n    };\n    return mockSchema;\n  })\n}));\nimport 'whatwg-fetch';\n\n// Mock fetch for network requests in tests\nglobal.fetch = jest.fn().mockImplementation((url: string, options?: any) => {\n  // Mock successful API responses\n  if (url.includes('/api/')) {\n    return Promise.resolve({\n      ok: true,\n      status: 200,\n      json: async () => ({ success: true, data: [] }),\n      text: async () => '{\"success\": true, \"data\": []}'\n    });\n  }\n  \n  // Default to network request failed for external URLs\n  return Promise.reject(new Error('Network request failed'));\n});\n\n// Add TransformStream polyfill for MSW compatibility\nif (typeof TransformStream === 'undefined') {\n  const { TransformStream } = require('stream/web');\n  (global as any).TransformStream = TransformStream;\n}\n\n// Add ReadableStream polyfill\nif (typeof ReadableStream === 'undefined') {\n  const { ReadableStream } = require('stream/web');\n  (global as any).ReadableStream = ReadableStream;\n}\n\n// Add WritableStream polyfill\nif (typeof WritableStream === 'undefined') {\n  const { WritableStream } = require('stream/web');\n  (global as any).WritableStream = WritableStream;\n}\n\n// Add BroadcastChannel polyfill for MSW\nif (typeof BroadcastChannel === 'undefined') {\n  (global as any).BroadcastChannel = class {\n    constructor(name: string) {}\n    postMessage(message: any) {}\n    addEventListener(event: string, handler: Function) {}\n    removeEventListener(event: string, handler: Function) {}\n    close() {}\n  };\n}\n\n// Mock runQuery function for integration tests\nglobal.runQuery = jest.fn(() => Promise.resolve([]));\n\n// Database URL is now set in global setup, don't override here\n\n// Mock implementations for browser APIs\n(global as any).ResizeObserver = function () {\n  return {\n    observe: function () {},\n    unobserve: function () {},\n    disconnect: function () {},\n  };\n};\n\n(global as any).IntersectionObserver = function () {\n  return {\n    observe: function () {},\n    unobserve: function () {},\n    disconnect: function () {},\n  };\n};\n\n// Add TextEncoder/TextDecoder polyfills for Node.js environment\nif (typeof TextEncoder === 'undefined') {\n  const { TextEncoder, TextDecoder } = require('util');\n  (global as any).TextEncoder = TextEncoder;\n  (global as any).TextDecoder = TextDecoder;\n}\n\n// Mock matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: function (query: string) {\n    return {\n      matches: false,\n      media: query,\n      onchange: null,\n      addListener: function () {}, // deprecated\n      removeListener: function () {}, // deprecated\n      addEventListener: function () {},\n      removeEventListener: function () {},\n      dispatchEvent: function () {},\n    };\n  },\n});\n\n// Mock sessionStorage and localStorage\nconst createMockStorage = () => ({\n  getItem: function () {\n    return null;\n  },\n  setItem: function () {},\n  removeItem: function () {},\n  clear: function () {},\n  length: 0,\n  key: function () {\n    return null;\n  },\n});\n\nObject.defineProperty(window, 'sessionStorage', {\n  value: createMockStorage(),\n});\n\nObject.defineProperty(window, 'localStorage', {\n  value: createMockStorage(),\n});\n\n// Console error suppression will be handled by individual test files if needed\n"],"version":3}