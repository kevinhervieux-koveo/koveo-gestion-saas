{"file":"/home/runner/workspace/client/src/components/common/DocumentManager.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/common/DocumentManager.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { apiRequest } from '@/lib/queryClient';\nimport type { Building as BuildingType, Residence } from '@shared/schemas/property';\nimport {\n  Upload,\n  Download,\n  Edit,\n  Trash2,\n  FileText,\n  Search,\n  Plus,\n  Building,\n  Calendar,\n  ArrowLeft,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { Header } from '@/components/layout/header';\nimport { useLocation } from 'wouter';\n\nimport {\n  getDisplayableFileUrl,\n  BUILDING_DOCUMENT_CATEGORIES,\n  RESIDENCE_DOCUMENT_CATEGORIES,\n  getCategoryLabel,\n} from '@/lib/documents';\nimport TextFileEditor from './TextFileEditor';\n\n// Common document interface\ninterface Document {\n  id: string;\n  name: string;\n  description?: string;\n  documentType: string;\n  dateReference?: string;\n  buildingId?: string;\n  residenceId?: string;\n  filePath: string;\n  fileName?: string;\n  fileSize?: number;\n  isVisibleToTenants?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface DocumentManagerConfig {\n  type: 'building' | 'residence';\n  entityId: string;\n  entityName?: string;\n  entityAddress?: string;\n  userRole: 'manager' | 'resident';\n  allowCreate?: boolean;\n  allowEdit?: boolean;\n  allowDelete?: boolean;\n  allowUpload?: boolean;\n  showVisibilityToggle?: boolean;\n}\n\nconst createDocumentSchema = (type: 'building' | 'residence') => {\n  const documentCategories =\n    type === 'building' ? BUILDING_DOCUMENT_CATEGORIES : RESIDENCE_DOCUMENT_CATEGORIES;\n  const validTypes = documentCategories.map((cat) => cat._value);\n\n  const baseSchema = {\n    name: z.string().min(1, 'Document name is required (example: Monthly Meeting Minutes - January 2025)').max(255, 'Document name must be less than 255 characters'),\n    description: z.string().max(500, 'Description must be less than 500 characters').optional(),\n    documentType: z.enum(validTypes as [string, ...string[]]),\n    isVisibleToTenants: z.boolean().default(false),\n  };\n\n  if (type === 'building') {\n    return z.object({\n      ...baseSchema,\n      buildingId: z.string().min(1, 'Building selection is required'),\n    });\n  } else {\n    return z.object({\n      ...baseSchema,\n      residenceId: z.string().min(1, 'Residence selection is required'),\n    });\n  }\n};\n\nexport default function DocumentManager({ config }: { config: DocumentManagerConfig }) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [, navigate] = useLocation();\n\n  // State management\n  const [isUploadDialogOpen, setIsUploadDialogOpen] = useState(false);\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);\n  const [createMode, setCreateMode] = useState<'file' | 'text'>('file');\n  const [textContent, setTextContent] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<Document | null>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [selectedYear, setSelectedYear] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isTextEditorOpen, setIsTextEditorOpen] = useState(false);\n  const [textEditorDocument, setTextEditorDocument] = useState<Document | null>(null);\n\n  const itemsPerPage = 12;\n  const documentSchema = createDocumentSchema(config.type);\n  const documentCategories =\n    config.type === 'building' ? BUILDING_DOCUMENT_CATEGORIES : RESIDENCE_DOCUMENT_CATEGORIES;\n\n  // Form setup\n  const form = useForm({\n    resolver: zodResolver(documentSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      documentType: 'other',\n      ...(config.type === 'building'\n        ? { buildingId: config.entityId }\n        : { residenceId: config.entityId }),\n      isVisibleToTenants: false,\n    },\n  });\n\n  // API queries and mutations\n  const queryKey =\n    config.type === 'building'\n      ? [`/api/documents?buildingId=${config.entityId}`]\n      : [`/api/documents?residenceId=${config.entityId}`];\n\n  const { data: entity } = useQuery<BuildingType | Residence>({\n    queryKey:\n      config.type === 'building'\n        ? ['/api/manager/buildings', config.entityId]\n        : ['/api/residences', config.entityId],\n    enabled: !!config.entityId,\n  });\n\n  const { data: documents = [], isLoading: documentsLoading } = useQuery<Document[]>({\n    queryKey,\n    enabled: !!config.entityId,\n    queryFn: async () => {\n      const response = await fetch(queryKey[0], {\n        credentials: 'include',\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      // The API returns {documents: Array, total: number, ...} but we need just the documents array\n      return data.documents || [];\n    },\n  });\n\n  // Filter and group documents\n  const filteredDocuments = useMemo(() => {\n    const filtered = documents.filter((doc: Document) => {\n      const matchesSearch = doc.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesCategory = selectedCategory === 'all' || doc.documentType === selectedCategory;\n      const matchesYear =\n        selectedYear === 'all' || new Date(doc.createdAt).getFullYear().toString() === selectedYear;\n      return matchesSearch && matchesCategory && matchesYear;\n    });\n    return filtered;\n  }, [documents, searchTerm, selectedCategory, selectedYear]);\n\n  const documentsByCategory = useMemo(() => {\n    const grouped: Record<string, Document[]> = {};\n    documentCategories.forEach((category) => {\n      grouped[category._value] = filteredDocuments.filter(\n        (doc) => doc.documentType === category._value\n      );\n    });\n    return grouped;\n  }, [filteredDocuments, documentCategories]);\n\n  // Create mutation (supports both file upload and text-only)\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      if (createMode === 'file') {\n        if (!selectedFile) {\n          throw new Error('No file selected');\n        }\n\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n        formData.append('name', data.name);\n        formData.append('description', data.description || '');\n        formData.append('documentType', data.documentType);\n        formData.append('isVisibleToTenants', data.isVisibleToTenants.toString());\n\n        if (data.residenceId) {\n          formData.append('residenceId', data.residenceId);\n        }\n        if (data.buildingId) {\n          formData.append('buildingId', data.buildingId);\n        }\n\n        const response = await fetch('/api/documents/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) {\n          throw new Error('Internal server error');\n        }\n\n        return response.json();\n      } else {\n        // Text-only document creation\n        const payload = {\n          name: data.name,\n          description: data.description || '',\n          documentType: data.documentType,\n          isVisibleToTenants: data.isVisibleToTenants,\n          textContent: textContent,\n          ...( data.residenceId ? { residenceId: data.residenceId } : {}),\n          ...( data.buildingId ? { buildingId: data.buildingId } : {}),\n        };\n\n        return apiRequest('POST', '/api/documents', payload);\n      }\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: createMode === 'file' ? 'Document uploaded successfully' : 'Document created successfully',\n      });\n      queryClient.invalidateQueries({ queryKey });\n      setIsUploadDialogOpen(false);\n      form.reset();\n      setSelectedFile(null);\n      setTextContent('');\n      setCreateMode('file');\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || (createMode === 'file' ? 'Failed to upload document' : 'Failed to create document'),\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Delete mutation\n  const deleteMutation = useMutation({\n    mutationFn: async (documentId: string) => {\n      return apiRequest('DELETE', `/api/documents/${documentId}`);\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: 'Document deleted successfully',\n      });\n      queryClient.invalidateQueries({ queryKey });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to delete document',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Event handlers\n  const handleCreateDocument = async (data: any) => {\n    await createMutation.mutateAsync(data);\n  };\n\n  const handleDeleteDocument = async (document: Document) => {\n    if (window.confirm('Are you sure you want to delete this document?')) {\n      await deleteMutation.mutateAsync(document.id);\n    }\n  };\n\n  const handleViewDocument = (document: Document) => {\n    setSelectedDocument(document);\n    setIsViewDialogOpen(true);\n  };\n\n  const handleDownloadDocument = (document: Document) => {\n    if (document.filePath) {\n      const link = window.document.createElement('a');\n      link.href = `/api/documents/${document.id}/file?download=true`;\n      link.download = document.fileName || document.name;\n      window.document.body.appendChild(link);\n      link.click();\n      window.document.body.removeChild(link);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const formatFileSize = (bytes?: number) => {\n    if (!bytes) return 'Unknown size';\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return Math.round((bytes / Math.pow(1024, i)) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  if (!config.entityId) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header\n          title={`${config.type === 'building' ? 'Building' : 'Residence'} Documents`}\n          subtitle='Entity ID is required'\n        />\n        <div className='flex-1 overflow-auto p-6'>\n          <Card>\n            <CardContent className='flex flex-col items-center justify-center py-12'>\n              <Building className='h-12 w-12 text-gray-400 mb-4' />\n              <h3 className='text-lg font-medium text-gray-900 mb-2'>\n                {config.type === 'building' ? 'Building' : 'Residence'} ID Required\n              </h3>\n              <p className='text-gray-500'>Please provide a {config.type} ID to view documents.</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  const entityNotFound = config.entityId && !entity && !documentsLoading;\n\n  if (entityNotFound) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header\n          title={`${config.type === 'building' ? 'Building' : 'Residence'} Not Found`}\n          subtitle={`The ${config.type} ID provided does not exist`}\n        />\n        <div className='flex-1 overflow-auto p-6'>\n          <Card>\n            <CardContent className='flex flex-col items-center justify-center py-12'>\n              <Building className='h-12 w-12 text-gray-400 mb-4' />\n              <h3 className='text-lg font-medium text-gray-900 mb-2'>\n                {config.type === 'building' ? 'Building' : 'Residence'} Not Found\n              </h3>\n              <p className='text-gray-500'>\n                The {config.type} with ID \"{config.entityId}\" does not exist or you don't have\n                access to it.\n              </p>\n              <Button\n                variant='outline'\n                className='mt-4'\n                onClick={() => navigate(`/${config.userRole}s/${config.type}s`)}\n              >\n                Back to {config.type === 'building' ? 'Buildings' : 'Residences'}\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header\n        title={`${config.type === 'building' ? (entity as BuildingType)?.name || 'Building' : (entity as Residence)?.unitNumber ? `Unit ${(entity as Residence).unitNumber}` : 'Residence'} Documents`}\n        subtitle={`${config.userRole === 'manager' ? 'Manage' : 'View'} documents for ${config.type === 'building' ? (entity as BuildingType)?.name || 'this building' : (entity as Residence)?.unitNumber ? `Unit ${(entity as Residence).unitNumber}` : 'this residence'}`}\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto'>\n          {/* Back Button for residents */}\n          {config.userRole === 'resident' && (\n            <div className='mb-6'>\n              <Button\n                variant='ghost'\n                onClick={() => navigate(`/${config.userRole}s/${config.type}s`)}\n                className='flex items-center gap-2'\n              >\n                <ArrowLeft className='w-4 h-4' />\n                Back to {config.type === 'building' ? 'Building' : 'Residence'}\n              </Button>\n            </div>\n          )}\n\n          {/* Search and Filter Controls */}\n          <div className='mb-6'>\n            <div className='flex flex-col sm:flex-row gap-4 mb-4'>\n              <div className='relative flex-1'>\n                <Search className='absolute left-3 top-3 h-4 w-4 text-gray-400' />\n                <Input\n                  placeholder='Search documents...'\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className='pl-10'\n                  data-testid='input-search'\n                />\n              </div>\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger className='w-full sm:w-48' data-testid='select-category'>\n                  <SelectValue placeholder='All Categories' />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value='all'>All Categories</SelectItem>\n                  {documentCategories.map((category) => (\n                    <SelectItem key={category._value} value={category._value}>\n                      {category.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Upload Button */}\n            {(config.allowUpload || config.allowCreate) && (\n              <div className='flex justify-between items-center'>\n                <div></div>\n                <Dialog open={isUploadDialogOpen} onOpenChange={setIsUploadDialogOpen}>\n                  <DialogTrigger asChild>\n                    <Button data-testid='button-upload'>\n                      <Plus className='w-4 h-4 mr-2' />\n                      Upload Document\n                    </Button>\n                  </DialogTrigger>\n                  <DialogContent className='max-w-md max-h-[90vh] overflow-y-auto'>\n                    <DialogHeader>\n                      <DialogTitle>Create New Document</DialogTitle>\n                      <DialogDescription>\n                        Add a new document to this {config.type}. You can attach a file or create a\n                        text-only document entry.\n                      </DialogDescription>\n                    </DialogHeader>\n                    \n                    {/* Document Creation Mode - Moved to top for visibility */}\n                    <div className='space-y-3 border-b pb-4'>\n                      <Label className='text-sm font-medium'>Choose Document Type</Label>\n                      <div className='flex space-x-3'>\n                        <button\n                          type='button'\n                          onClick={() => setCreateMode('file')}\n                          className={`flex-1 p-3 rounded-lg border text-sm font-medium transition-colors ${\n                            createMode === 'file'\n                              ? 'border-blue-500 bg-blue-50 text-blue-700'\n                              : 'border-gray-200 hover:border-gray-300'\n                          }`}\n                          data-testid='button-file-mode'\n                        >\n                          📁 Upload File\n                        </button>\n                        <button\n                          type='button'\n                          onClick={() => setCreateMode('text')}\n                          className={`flex-1 p-3 rounded-lg border text-sm font-medium transition-colors ${\n                            createMode === 'text'\n                              ? 'border-blue-500 bg-blue-50 text-blue-700'\n                              : 'border-gray-200 hover:border-gray-300'\n                          }`}\n                          data-testid='button-text-mode'\n                        >\n                          📝 Text Document\n                        </button>\n                      </div>\n                    </div>\n                    <Form {...form}>\n                      <form\n                        onSubmit={form.handleSubmit(handleCreateDocument)}\n                        className='space-y-4'\n                      >\n                        <FormField\n                          control={form.control}\n                          name='name'\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Document Name</FormLabel>\n                              <FormControl>\n                                <Input {...field} data-testid='input-document-name' />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name='description'\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Description (Optional)</FormLabel>\n                              <FormControl>\n                                <Input {...field} data-testid='input-description' />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name='documentType'\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Document Category</FormLabel>\n                              <Select onValueChange={field.onChange} value={field.value}>\n                                <FormControl>\n                                  <SelectTrigger data-testid='select-document-type'>\n                                    <SelectValue placeholder='Select category' />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  {documentCategories.map((category) => (\n                                    <SelectItem key={category._value} value={category._value}>\n                                      {category.label}\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        {/* File Upload or Text Content */}\n                        {createMode === 'file' ? (\n                          <div>\n                            <Label htmlFor='file-upload'>Select File to Upload</Label>\n                            <Input\n                              id='file-upload'\n                              type='file'\n                              onChange={(e) => setSelectedFile(e.target.files?.[0] || null)}\n                              className='mt-1'\n                              data-testid='input-file'\n                            />\n                            {selectedFile && (\n                              <p className='text-sm text-gray-500 mt-1'>\n                                Selected: {selectedFile.name} ({Math.round(selectedFile.size / 1024)}{' '}\n                                KB)\n                              </p>\n                            )}\n                          </div>\n                        ) : (\n                          <div>\n                            <Label htmlFor='text-content'>Document Content</Label>\n                            <Textarea\n                              id='text-content'\n                              value={textContent}\n                              onChange={(e) => setTextContent(e.target.value)}\n                              placeholder='Enter the document content here...'\n                              className='mt-1 min-h-[120px]'\n                              data-testid='textarea-content'\n                            />\n                            <p className='text-sm text-gray-500 mt-1'>\n                              This will create a text document that can be viewed and edited online.\n                            </p>\n                          </div>\n                        )}\n\n                        <FormField\n                          control={form.control}\n                          name='isVisibleToTenants'\n                          render={({ field }) => (\n                            <FormItem className='flex flex-row items-center space-x-3 space-y-0'>\n                              <FormControl>\n                                <input\n                                  type='checkbox'\n                                  checked={field.value}\n                                  onChange={(e) => field.onChange(e.target.checked)}\n                                  data-testid='checkbox-visible-tenants'\n                                />\n                              </FormControl>\n                              <div className='space-y-1 leading-none'>\n                                <FormLabel>Visible to Tenants</FormLabel>\n                                <p className='text-sm text-muted-foreground'>\n                                  Allow tenants to view this document\n                                </p>\n                              </div>\n                            </FormItem>\n                          )}\n                        />\n\n                        <DialogFooter>\n                          <Button\n                            type='button'\n                            variant='outline'\n                            onClick={() => setIsUploadDialogOpen(false)}\n                          >\n                            Cancel\n                          </Button>\n                          <Button\n                            type='submit'\n                            disabled={createMutation.isPending || (createMode === 'file' && !selectedFile) || (createMode === 'text' && !textContent.trim())}\n                            data-testid='button-create'\n                          >\n                            {createMutation.isPending \n                              ? (createMode === 'file' ? 'Uploading...' : 'Creating...') \n                              : 'Create'}\n                          </Button>\n                        </DialogFooter>\n                      </form>\n                    </Form>\n                  </DialogContent>\n                </Dialog>\n              </div>\n            )}\n          </div>\n\n          {/* Documents Display - Always grouped by category */}\n          {documentsLoading ? (\n            <div className='text-center py-8'>Loading documents...</div>\n          ) : filteredDocuments.length === 0 ? (\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <FileText className='w-16 h-16 mx-auto text-gray-400 mb-4' />\n                <h3 className='text-lg font-semibold text-gray-600 mb-2'>No Documents Found</h3>\n                <p className='text-gray-500'>\n                  {searchTerm || selectedCategory !== 'all' || selectedYear !== 'all'\n                    ? 'No documents match your current filters.'\n                    : `No documents are available for this ${config.type}.`}\n                </p>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className='space-y-6'>\n              {/* Category View - Always show documents grouped by category */}\n              {documentCategories.map((category) => {\n                const categoryDocuments = documentsByCategory[category._value] || [];\n                if (categoryDocuments.length === 0) {\n                  return null;\n                }\n\n                return (\n                  <Card key={category._value} data-testid={`category-${category._value}`}>\n                    <CardHeader>\n                      <CardTitle className='flex items-center gap-2'>\n                        <FileText className='h-5 w-5' />\n                        {category.label}\n                        <Badge variant='secondary'>{categoryDocuments.length}</Badge>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>\n                        {categoryDocuments.map((document) => (\n                          <Card\n                            key={document.id}\n                            className='cursor-pointer hover:shadow-md transition-shadow'\n                            data-testid={`document-card-${document.id}`}\n                            onClick={() => handleViewDocument(document)}\n                          >\n                            <CardContent className='p-4'>\n                              <div className='flex items-start justify-between mb-2'>\n                                <h4\n                                  className='font-medium text-sm truncate flex-1 mr-2'\n                                  data-testid={`document-name-${document.id}`}\n                                >\n                                  {document.name}\n                                </h4>\n                                <div className='flex gap-1'>\n                                  {config.allowEdit && (\n                                    <Button\n                                      size='sm'\n                                      variant='ghost'\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        setSelectedDocument(document);\n                                        setIsEditMode(true);\n                                        setIsViewDialogOpen(true);\n                                      }}\n                                      data-testid={`button-edit-${document.id}`}\n                                    >\n                                      <Edit className='h-3 w-3' />\n                                    </Button>\n                                  )}\n                                </div>\n                              </div>\n                              <p\n                                className='text-xs text-gray-500 mb-2'\n                                data-testid={`document-date-${document.id}`}\n                              >\n                                {formatDate(document.createdAt)}\n                              </p>\n                              {document.filePath && (\n                                <Badge variant='outline' className='text-xs'>\n                                  {formatFileSize(document.fileSize)}\n                                </Badge>\n                              )}\n                            </CardContent>\n                          </Card>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* View Document Dialog */}\n      <Dialog\n        open={isViewDialogOpen && !isEditMode}\n        onOpenChange={(open) => {\n          setIsViewDialogOpen(open);\n          if (!open) {\n            setSelectedDocument(null);\n          }\n        }}\n      >\n        <DialogContent className='max-w-2xl'>\n          <DialogHeader>\n            <DialogTitle>Document Details</DialogTitle>\n            <DialogDescription>View document information and access options.</DialogDescription>\n          </DialogHeader>\n          {selectedDocument && (\n            <div className='space-y-4'>\n              <div>\n                <h3 className='text-lg font-semibold'>{selectedDocument.name}</h3>\n                {selectedDocument.description && (\n                  <p className='text-gray-600 mt-2'>{selectedDocument.description}</p>\n                )}\n              </div>\n\n              <div className='grid grid-cols-2 gap-4 text-sm'>\n                <div>\n                  <strong>Category:</strong>{' '}\n                  {getCategoryLabel(documentCategories, selectedDocument.documentType) ||\n                    selectedDocument.documentType ||\n                    'Unknown'}\n                </div>\n                <div>\n                  <strong>Date:</strong> {formatDate(selectedDocument.createdAt)}\n                </div>\n                {selectedDocument.fileSize && (\n                  <div>\n                    <strong>Size:</strong> {formatFileSize(selectedDocument.fileSize)}\n                  </div>\n                )}\n                {selectedDocument.fileName && (\n                  <div>\n                    <strong>File:</strong> {selectedDocument.fileName}\n                  </div>\n                )}\n              </div>\n\n              <div className='flex gap-2 pt-4'>\n                <Button\n                  onClick={() => {\n                    if (selectedDocument.filePath) {\n                      const fileUrl = `/api/documents/${selectedDocument.id}/file`;\n                      window.open(fileUrl, '_blank');\n                    }\n                  }}\n                  disabled={!selectedDocument.filePath}\n                  data-testid='button-view'\n                >\n                  <FileText className='w-4 h-4 mr-2' />\n                  View\n                </Button>\n                <Button\n                  variant='outline'\n                  onClick={() => {\n                    if (selectedDocument.filePath) {\n                      const link = window.document.createElement('a');\n                      link.href = `/api/documents/${selectedDocument.id}/file?download=true`;\n                      link.download = selectedDocument.fileName || selectedDocument.name;\n                      window.document.body.appendChild(link);\n                      link.click();\n                      window.document.body.removeChild(link);\n                    }\n                  }}\n                  disabled={!selectedDocument.filePath}\n                  data-testid='button-download'\n                >\n                  <Download className='w-4 h-4 mr-2' />\n                  Download\n                </Button>\n                {config.allowEdit && (\n                  <Button\n                    variant='outline'\n                    onClick={() => {\n                      setIsEditMode(true);\n                    }}\n                  >\n                    <Edit className='w-4 h-4 mr-2' />\n                    Edit\n                  </Button>\n                )}\n                {config.allowDelete && (\n                  <Button\n                    variant='outline'\n                    onClick={() => {\n                      handleDeleteDocument(selectedDocument);\n                      setIsViewDialogOpen(false);\n                    }}\n                    className='text-red-600 hover:text-red-700'\n                  >\n                    <Trash2 className='w-4 h-4 mr-2' />\n                    Delete\n                  </Button>\n                )}\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit Document Dialog */}\n      <Dialog\n        open={isViewDialogOpen && isEditMode}\n        onOpenChange={(open) => {\n          setIsViewDialogOpen(open);\n          if (!open) {\n            setSelectedDocument(null);\n            setIsEditMode(false);\n          }\n        }}\n      >\n        <DialogContent className='max-w-md max-h-[90vh] overflow-y-auto'>\n          <DialogHeader>\n            <DialogTitle>Edit Document</DialogTitle>\n            <DialogDescription>\n              Update the document information. Note: File content cannot be changed, only metadata.\n            </DialogDescription>\n          </DialogHeader>\n          {selectedDocument && (\n            <Form {...form}>\n              <form\n                onSubmit={form.handleSubmit(async (data) => {\n                  try {\n                    const response = await apiRequest('PUT', `/api/documents/${selectedDocument.id}`, data);\n                    toast({\n                      title: 'Success',\n                      description: 'Document updated successfully',\n                    });\n                    queryClient.invalidateQueries({ queryKey });\n                    setIsViewDialogOpen(false);\n                    setIsEditMode(false);\n                    setSelectedDocument(null);\n                  } catch (error: any) {\n                    toast({\n                      title: 'Error',\n                      description: error.message || 'Failed to update document',\n                      variant: 'destructive',\n                    });\n                  }\n                })}\n                className='space-y-4'\n              >\n                <FormField\n                  control={form.control}\n                  name='name'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Document Name</FormLabel>\n                      <FormControl>\n                        <Input {...field} value={field.value || selectedDocument.name} data-testid='input-edit-name' />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name='description'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Description (Optional)</FormLabel>\n                      <FormControl>\n                        <Input {...field} value={field.value || selectedDocument.description || ''} data-testid='input-edit-description' />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name='documentType'\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Document Category</FormLabel>\n                      <Select onValueChange={field.onChange} value={field.value || selectedDocument.documentType}>\n                        <FormControl>\n                          <SelectTrigger data-testid='select-edit-type'>\n                            <SelectValue placeholder='Select category' />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {documentCategories.map((category) => (\n                            <SelectItem key={category._value} value={category._value}>\n                              {category.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name='isVisibleToTenants'\n                  render={({ field }) => (\n                    <FormItem className='flex flex-row items-center space-x-3 space-y-0'>\n                      <FormControl>\n                        <input\n                          type='checkbox'\n                          checked={field.value !== undefined ? field.value : selectedDocument.isVisibleToTenants}\n                          onChange={(e) => field.onChange(e.target.checked)}\n                          data-testid='checkbox-edit-visible-tenants'\n                        />\n                      </FormControl>\n                      <div className='space-y-1 leading-none'>\n                        <FormLabel>Visible to Tenants</FormLabel>\n                        <p className='text-sm text-muted-foreground'>\n                          Allow tenants to view this document\n                        </p>\n                      </div>\n                    </FormItem>\n                  )}\n                />\n\n                <DialogFooter>\n                  <Button\n                    type='button'\n                    variant='outline'\n                    onClick={() => {\n                      setIsEditMode(false);\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  <Button type='submit' data-testid='button-save-edit'>\n                    Save Changes\n                  </Button>\n                </DialogFooter>\n              </form>\n            </Form>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"version":3}