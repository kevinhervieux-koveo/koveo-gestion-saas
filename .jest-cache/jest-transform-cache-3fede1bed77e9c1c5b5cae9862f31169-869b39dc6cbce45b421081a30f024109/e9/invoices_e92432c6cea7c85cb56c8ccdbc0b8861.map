{"file":"/home/runner/workspace/client/src/pages/manager/invoices.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/manager/invoices.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport {\n  FileText,\n  Plus,\n  Filter,\n  Calendar,\n  Building as BuildingIcon,\n  ChevronDown,\n  Receipt,\n} from 'lucide-react';\nimport { BuildingSelectionGrid } from '@/components/BuildingSelectionGrid';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { cn } from '@/lib/utils';\nimport type { Building } from '@shared/schema';\nimport type { Invoice } from '@shared/schemas/invoices';\n\n// Import new modern components\nimport { InvoiceForm, InvoiceCard } from '@/components/invoice-management';\n\ninterface InvoiceFilters {\n  buildingId: string;\n  paymentType: string;\n  year: string;\n  months: string[];\n}\n\nconst MONTHS = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\n\nexport default function Invoices() {\n  const [filters, setFilters] = useState<InvoiceFilters>({\n    buildingId: '',\n    paymentType: '',\n    year: new Date().getFullYear().toString(),\n    months: [],\n  });\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\n  const queryClient = useQueryClient();\n\n  // Fetch buildings for filter dropdown\n  const {\n    data: buildings = [],\n    isLoading: buildingsLoading,\n    error: buildingsError,\n  } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/buildings');\n      return await response.json();\n    },\n  });\n\n  // Fetch invoices based on filters\n  const { data: invoicesResponse = { success: true, data: [], count: 0 }, isLoading } = useQuery<{\n    success: boolean;\n    data: Invoice[];\n    count: number;\n  }>({\n    queryKey: ['/api/invoices', filters],\n    queryFn: async () => {\n      const params = new URLSearchParams();\n      \n      if (filters.buildingId) {\n        params.set('buildingId', filters.buildingId);\n      }\n      if (filters.paymentType && filters.paymentType !== 'all') {\n        params.set('paymentType', filters.paymentType);\n      }\n      if (filters.year) {\n        params.set('year', filters.year);\n      }\n      if (filters.months.length > 0) {\n        params.set('months', filters.months.join(','));\n      }\n\n      const url = `/api/invoices${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await fetch(url, { credentials: 'include' });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch invoices: ${response.statusText}`);\n      }\n\n      return response.json();\n    },\n  });\n\n  const invoices = invoicesResponse.data || [];\n\n  // Group invoices by payment type\n  const invoicesByType = invoices.reduce((acc: Record<string, Invoice[]>, invoice: Invoice) => {\n    const type = invoice.paymentType || 'one-time';\n    if (!acc[type]) {\n      acc[type] = [];\n    }\n    acc[type].push(invoice);\n    return acc;\n  }, {});\n\n  const handleFilterChange = (key: keyof InvoiceFilters, value: string | string[]) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleMonthToggle = (monthValue: string) => {\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.includes(monthValue)\n        ? prev.months.filter((m) => m !== monthValue)\n        : [...prev.months, monthValue],\n    }));\n  };\n\n  const handleAllMonthsToggle = () => {\n    const allMonthValues = MONTHS.map((m) => m.value);\n    setFilters((prev) => ({\n      ...prev,\n      months: prev.months.length === allMonthValues.length ? [] : allMonthValues,\n    }));\n  };\n\n  const getMonthsDisplayText = () => {\n    if (filters.months.length === 0) {\n      return 'All months';\n    }\n    if (filters.months.length === MONTHS.length) {\n      return 'All months';\n    }\n    if (filters.months.length === 1) {\n      const month = MONTHS.find((m) => m.value === filters.months[0]);\n      return month?.label || 'All months';\n    }\n    return `${filters.months.length} months`;\n  };\n\n  const currentYear = new Date().getFullYear();\n  const getYearOptions = () => {\n    const startYear = currentYear - 3;\n    const endYear = currentYear + 3;\n    const totalYears = endYear - startYear + 1;\n    return Array.from({ length: totalYears }, (_, i) => startYear + i);\n  };\n\n  // Show loading state while buildings are loading\n  if (buildingsLoading) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header title=\"Invoice Management\" subtitle=\"Modern AI-powered invoice processing and management\" />\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-500\">Loading buildings...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state if buildings failed to load\n  if (buildingsError) {\n    return (\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header title=\"Invoice Management\" subtitle=\"Modern AI-powered invoice processing and management\" />\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <p className=\"text-red-500 mb-4\">Failed to load buildings</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      <Header title=\"Invoice Management\" subtitle=\"Modern AI-powered invoice processing and management\" />\n\n      <div className=\"flex-1 overflow-auto p-6\">\n        <div className=\"max-w-7xl mx-auto space-y-6\">\n          {/* Filters Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Filter className=\"w-5 h-5\" />\n                Filters\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"building-filter\" className=\"flex items-center gap-2\">\n                    <BuildingIcon className=\"w-4 h-4\" />\n                    Building\n                  </Label>\n                  <Select\n                    value={filters.buildingId}\n                    onValueChange={(value) => handleFilterChange('buildingId', value)}\n                  >\n                    <SelectTrigger id=\"building-filter\" data-testid=\"select-building-filter\">\n                      <SelectValue placeholder=\"Select building\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Array.isArray(buildings) &&\n                        buildings.map((building: Building) => (\n                          <SelectItem key={building.id} value={building.id}>\n                            {building.name}\n                          </SelectItem>\n                        ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"payment-type-filter\" className=\"flex items-center gap-2\">\n                    <Receipt className=\"w-4 h-4\" />\n                    Payment Type\n                  </Label>\n                  <Select\n                    value={filters.paymentType}\n                    onValueChange={(value) => handleFilterChange('paymentType', value)}\n                  >\n                    <SelectTrigger id=\"payment-type-filter\" data-testid=\"select-payment-type-filter\">\n                      <SelectValue placeholder=\"All types\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All types</SelectItem>\n                      <SelectItem value=\"one-time\">One-time</SelectItem>\n                      <SelectItem value=\"recurring\">Recurring</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"year-filter\" className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4\" />\n                    Year\n                  </Label>\n                  <Select\n                    value={filters.year}\n                    onValueChange={(value) => handleFilterChange('year', value)}\n                  >\n                    <SelectTrigger id=\"year-filter\" data-testid=\"select-year-filter\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent className=\"max-h-[300px] overflow-y-auto\">\n                      {getYearOptions().map((year) => (\n                        <SelectItem key={year} value={year.toString()}>\n                          {year}\n                          {year === currentYear && (\n                            <span className=\"ml-2 text-xs text-blue-500\">(Current)</span>\n                          )}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4\" />\n                    Months\n                  </Label>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          'w-full justify-between',\n                          filters.months.length === 0 && 'text-muted-foreground'\n                        )}\n                        data-testid=\"select-months-filter\"\n                      >\n                        {getMonthsDisplayText()}\n                        <ChevronDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-64 p-0\" align=\"start\">\n                      <div className=\"border-b p-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox\n                            id=\"all-months\"\n                            checked={filters.months.length === MONTHS.length}\n                            onCheckedChange={handleAllMonthsToggle}\n                          />\n                          <Label\n                            htmlFor=\"all-months\"\n                            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                          >\n                            All Months\n                          </Label>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-2 p-3\">\n                        {MONTHS.map((month) => (\n                          <div key={month.value} className=\"flex items-center space-x-2\">\n                            <Checkbox\n                              id={`month-${month.value}`}\n                              checked={filters.months.includes(month.value)}\n                              onCheckedChange={() => handleMonthToggle(month.value)}\n                            />\n                            <Label\n                              htmlFor={`month-${month.value}`}\n                              className=\"text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                            >\n                              {month.label}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label className=\"invisible\">Actions</Label>\n                  <Dialog open={showCreateDialog} onOpenChange={setShowCreateDialog}>\n                    <DialogTrigger asChild>\n                      <Button \n                        className=\"w-full\" \n                        disabled={!filters.buildingId}\n                        data-testid=\"button-create-invoice\"\n                      >\n                        <Plus className=\"w-4 h-4 mr-2\" />\n                        Create Invoice\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n                      <DialogHeader>\n                        <DialogTitle>Create New Invoice</DialogTitle>\n                      </DialogHeader>\n                      <InvoiceForm\n                        mode=\"create\"\n                        buildingId={filters.buildingId}\n                        onSuccess={() => {\n                          setShowCreateDialog(false);\n                          queryClient.invalidateQueries({ queryKey: ['/api/invoices'] });\n                        }}\n                        onCancel={() => setShowCreateDialog(false)}\n                      />\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Invoices Display */}\n          {!filters.buildingId ? (\n            <BuildingSelectionGrid\n              buildings={Array.isArray(buildings) ? buildings : []}\n              onBuildingSelect={(buildingId) => handleFilterChange('buildingId', buildingId)}\n            />\n          ) : isLoading ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n                <p className=\"text-gray-500\">Loading invoices...</p>\n              </CardContent>\n            </Card>\n          ) : invoices.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Receipt className=\"w-16 h-16 mx-auto mb-4 text-muted-foreground\" />\n                <h3 className=\"text-lg font-semibold text-gray-600 mb-2\">No Invoices Found</h3>\n                <p className=\"text-gray-500 mb-4\">\n                  No invoices found for the selected filters. Create your first invoice to get started.\n                </p>\n                <Button onClick={() => setShowCreateDialog(true)} data-testid=\"button-create-first-invoice\">\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Create First Invoice\n                </Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"space-y-6\">\n              {/* One-time Invoices */}\n              {invoicesByType['one-time'] && invoicesByType['one-time'].length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <FileText className=\"w-5 h-5\" />\n                        One-time Invoices\n                        <Badge variant=\"secondary\">{invoicesByType['one-time'].length}</Badge>\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {invoicesByType['one-time'].map((invoice) => (\n                        <InvoiceCard \n                          key={invoice.id} \n                          invoice={invoice} \n                          onUpdate={() => queryClient.invalidateQueries({ queryKey: ['/api/invoices'] })}\n                        />\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Recurring Invoices */}\n              {invoicesByType['recurring'] && invoicesByType['recurring'].length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <Receipt className=\"w-5 h-5\" />\n                        Recurring Invoices\n                        <Badge variant=\"default\">{invoicesByType['recurring'].length}</Badge>\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {invoicesByType['recurring'].map((invoice) => (\n                        <InvoiceCard \n                          key={invoice.id} \n                          invoice={invoice} \n                          onUpdate={() => queryClient.invalidateQueries({ queryKey: ['/api/invoices'] })}\n                        />\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"version":3}