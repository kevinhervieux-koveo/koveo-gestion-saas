b8bf592979e77c6a70c8dd4f9de332fd
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HamburgerMenu = HamburgerMenu;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const button_1 = require("@/components/ui/button");
const wouter_1 = require("wouter");
const use_auth_1 = require("@/hooks/use-auth");
const use_language_1 = require("@/hooks/use-language");
const lucide_react_1 = require("lucide-react");
/**
 * Hamburger menu component for mobile navigation.
 */
function HamburgerMenu({ className = '' }) {
    const [isOpen, setIsOpen] = (0, react_1.useState)(false);
    const [isLoggingOut, setIsLoggingOut] = (0, react_1.useState)(false);
    const [, setLocation] = (0, wouter_1.useLocation)();
    const { user, logout } = (0, use_auth_1.useAuth)();
    const { t, language, toggleLanguage } = (0, use_language_1.useLanguage)();
    const toggleMenu = () => setIsOpen(!isOpen);
    const closeMenu = () => setIsOpen(false);
    // Close menu when clicking outside or on navigation
    (0, react_1.useEffect)(() => {
        if (isOpen) {
            document.body.style.overflow = 'hidden';
        }
        else {
            document.body.style.overflow = '';
        }
        return () => {
            document.body.style.overflow = '';
        };
    }, [isOpen]);
    const handleNavigation = (path) => {
        setLocation(path);
        closeMenu();
    };
    const handleLogout = async () => {
        try {
            setIsLoggingOut(true);
            await logout();
            closeMenu();
        }
        finally {
            setIsLoggingOut(false);
        }
    };
    // Navigation items for public pages
    const publicNavItems = [
        { icon: lucide_react_1.Home, label: t('home'), path: '/', testId: 'nav-home' },
        { icon: lucide_react_1.Wrench, label: t('features'), path: '/features', testId: 'nav-features' },
        { icon: lucide_react_1.DollarSign, label: t('pricing'), path: '/pricing', testId: 'nav-pricing' },
        { icon: lucide_react_1.Shield, label: t('security'), path: '/security', testId: 'nav-security' },
        { icon: lucide_react_1.BookOpen, label: t('ourStory'), path: '/story', testId: 'nav-story' },
        { icon: lucide_react_1.FileText, label: t('privacyPolicy'), path: '/privacy-policy', testId: 'nav-privacy' },
        { icon: lucide_react_1.Scale, label: t('termsOfService'), path: '/terms-of-service', testId: 'nav-terms' },
    ];
    return ((0, jsx_runtime_1.jsxs)("div", { className: `relative ${className}`, children: [(0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'icon', onClick: toggleMenu, className: 'relative z-50', "data-testid": 'hamburger-button', "aria-label": isOpen ? t('closeMenu') : t('openMenu'), children: isOpen ? (0, jsx_runtime_1.jsx)(lucide_react_1.X, { className: 'h-6 w-6' }) : (0, jsx_runtime_1.jsx)(lucide_react_1.Menu, { className: 'h-6 w-6' }) }), isOpen && ((0, jsx_runtime_1.jsx)("div", { className: 'fixed inset-0 z-40', onClick: closeMenu, "data-testid": 'menu-overlay' })), (0, jsx_runtime_1.jsx)("div", { className: `fixed top-0 right-0 h-full w-80 max-w-[80vw] shadow-2xl transform transition-transform duration-300 ease-in-out ${isOpen ? 'translate-x-0' : 'translate-x-full'}`, style: {
                    backgroundColor: '#f9fafb',
                    borderLeft: '1px solid #e5e7eb',
                    zIndex: '1000',
                    position: 'fixed',
                }, "data-testid": 'menu-panel', children: (0, jsx_runtime_1.jsxs)("div", { className: 'p-6 h-full flex flex-col bg-gray-50', style: {
                        backgroundColor: '#f9fafb !important',
                        width: '100%',
                        height: '100vh',
                        position: 'relative',
                        zIndex: '1001',
                    }, children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between mb-8', children: [(0, jsx_runtime_1.jsx)("h2", { className: 'text-xl font-semibold', children: "Menu" }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'icon', onClick: closeMenu, className: 'h-8 w-8', "data-testid": 'menu-close-button', children: (0, jsx_runtime_1.jsx)(lucide_react_1.X, { className: 'h-4 w-4' }) })] }), (0, jsx_runtime_1.jsx)("nav", { className: 'flex-1 bg-gray-50', style: { backgroundColor: '#f9fafb !important' }, children: (0, jsx_runtime_1.jsx)("ul", { className: 'space-y-2', children: publicNavItems.map((item) => {
                                    const IconComponent = item.icon;
                                    return ((0, jsx_runtime_1.jsx)("li", { children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'ghost', className: 'w-full justify-start h-12 bg-transparent hover:bg-gray-100', onClick: () => handleNavigation(item.path), "data-testid": item.testId, children: [(0, jsx_runtime_1.jsx)(IconComponent, { className: 'mr-3 h-5 w-5' }), item.label] }) }, item.path));
                                }) }) }), !user && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-auto border-t border-gray-300 pt-4 space-y-3 bg-gray-50', style: { backgroundColor: '#f9fafb !important' }, children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-center space-x-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Globe, { className: 'h-4 w-4 text-gray-500' }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', size: 'sm', className: 'text-sm', onClick: () => {
                                                toggleLanguage();
                                                closeMenu();
                                            }, "data-testid": 'language-toggle', children: language === 'en' ? 'FranÃ§ais' : 'English' })] }), (0, jsx_runtime_1.jsx)("div", { className: 'space-y-2', children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'default', className: 'w-full', onClick: () => handleNavigation('/login'), "data-testid": 'nav-login', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.UserPlus, { className: 'mr-2 h-4 w-4' }), t('login')] }) })] })), user && ((0, jsx_runtime_1.jsxs)("div", { className: 'mt-auto border-t pt-4', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center mb-4 p-3 bg-gray-100 rounded-lg', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.User, { className: 'h-8 w-8 text-gray-500 mr-3' }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("p", { className: 'font-medium text-sm', children: [user.firstName, " ", user.lastName] }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-gray-500', children: user.email })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-1', children: [(0, jsx_runtime_1.jsxs)(button_1.Button, { variant: 'ghost', className: 'w-full justify-start h-10', onClick: () => handleNavigation('/settings/settings'), "data-testid": 'nav-profile', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Settings, { className: 'mr-3 h-4 w-4' }), "Profile Settings"] }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: 'ghost', className: 'w-full justify-start h-10 text-red-600 hover:text-red-700 hover:bg-red-50', onClick: handleLogout, disabled: isLoggingOut, "data-testid": 'nav-logout', children: isLoggingOut ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'mr-3 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent' }), "Logging out..."] })) : ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.LogOut, { className: 'mr-3 h-4 w-4' }), "Logout"] })) })] })] }))] }) })] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,