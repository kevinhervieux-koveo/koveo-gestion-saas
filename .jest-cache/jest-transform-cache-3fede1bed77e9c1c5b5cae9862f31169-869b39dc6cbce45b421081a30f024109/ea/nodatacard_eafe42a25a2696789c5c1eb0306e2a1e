a780883a54786c4ce30cad4bedd03528
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoDataCard = NoDataCard;
const jsx_runtime_1 = require("react/jsx-runtime");
const card_1 = require("@/components/ui/card");
const badge_1 = require("@/components/ui/badge");
const use_language_1 = require("@/hooks/use-language");
/**
 * Reusable NoDataCard component for consistent "no data available" states across the application.
 * Supports both English and French translations automatically based on language context.
 *
 * @example
 * ```tsx
 * <NoDataCard
 *   icon={Building}
 *   titleKey="noBuildingsFound"
 *   descriptionKey="noBuildingsMessage"
 *   badgeKey="noData"
 *   testId="no-buildings-message"
 * />
 * ```
 */
function NoDataCard({ icon: Icon, titleKey, descriptionKey, badgeKey, children, className = '', contentClassName = '', testId, iconSize = 16 }) {
    const { t } = (0, use_language_1.useLanguage)();
    const iconClasses = `w-${iconSize} h-${iconSize} mx-auto text-gray-400 mb-4`;
    return ((0, jsx_runtime_1.jsx)(card_1.Card, { className: className, "data-testid": testId, children: (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: `p-8 text-center ${contentClassName}`, children: [(0, jsx_runtime_1.jsx)(Icon, { className: iconClasses }), (0, jsx_runtime_1.jsx)("h3", { className: 'text-lg font-semibold text-gray-600 mb-2', "data-testid": `${testId}-title`, children: t(titleKey) }), (0, jsx_runtime_1.jsx)("p", { className: 'text-gray-500 mb-4', "data-testid": `${testId}-description`, children: t(descriptionKey) }), badgeKey && ((0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: 'secondary', "data-testid": `${testId}-badge`, children: t(badgeKey) })), children] }) }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9jbGllbnQvc3JjL2NvbXBvbmVudHMvdWkvbm8tZGF0YS1jYXJkLnRzeCIsIm1hcHBpbmdzIjoiOztBQW9FQSxnQ0FrQ0M7O0FBcEdELCtDQUF5RDtBQUN6RCxpREFBOEM7QUFDOUMsdURBQW1EO0FBaURuRDs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILFNBQWdCLFVBQVUsQ0FBQyxFQUN6QixJQUFJLEVBQUUsSUFBSSxFQUNWLFFBQVEsRUFDUixjQUFjLEVBQ2QsUUFBUSxFQUNSLFFBQVEsRUFDUixTQUFTLEdBQUcsRUFBRSxFQUNkLGdCQUFnQixHQUFHLEVBQUUsRUFDckIsTUFBTSxFQUNOLFFBQVEsR0FBRyxFQUFFLEVBQ0c7SUFDaEIsTUFBTSxFQUFFLENBQUMsRUFBRSxHQUFHLElBQUEsMEJBQVcsR0FBRSxDQUFDO0lBRTVCLE1BQU0sV0FBVyxHQUFHLEtBQUssUUFBUSxNQUFNLFFBQVEsNkJBQTZCLENBQUM7SUFFN0UsT0FBTyxDQUNMLHVCQUFDLFdBQUksSUFBQyxTQUFTLEVBQUUsU0FBUyxpQkFBZSxNQUFNLFlBQzdDLHdCQUFDLGtCQUFXLElBQUMsU0FBUyxFQUFFLG1CQUFtQixnQkFBZ0IsRUFBRSxhQUMzRCx1QkFBQyxJQUFJLElBQUMsU0FBUyxFQUFFLFdBQVcsR0FBSSxFQUNoQywrQkFBSSxTQUFTLEVBQUMsMENBQTBDLGlCQUFjLEdBQUcsTUFBTSxRQUFRLFlBQ3BGLENBQUMsQ0FBQyxRQUFlLENBQUMsR0FDaEIsRUFDTCw4QkFBRyxTQUFTLEVBQUMsb0JBQW9CLGlCQUFjLEdBQUcsTUFBTSxjQUFjLFlBQ25FLENBQUMsQ0FBQyxjQUFxQixDQUFDLEdBQ3ZCLEVBQ0gsUUFBUSxJQUFJLENBQ1gsdUJBQUMsYUFBSyxJQUFDLE9BQU8sRUFBQyxXQUFXLGlCQUFjLEdBQUcsTUFBTSxRQUFRLFlBQ3RELENBQUMsQ0FBQyxRQUFlLENBQUMsR0FDYixDQUNULEVBQ0EsUUFBUSxJQUNHLEdBQ1QsQ0FDUixDQUFDO0FBQ0osQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2NsaWVudC9zcmMvY29tcG9uZW50cy91aS9uby1kYXRhLWNhcmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEx1Y2lkZUljb24gfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuaW1wb3J0IHsgQ2FyZCwgQ2FyZENvbnRlbnQgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvY2FyZCc7XG5pbXBvcnQgeyBCYWRnZSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9iYWRnZSc7XG5pbXBvcnQgeyB1c2VMYW5ndWFnZSB9IGZyb20gJ0AvaG9va3MvdXNlLWxhbmd1YWdlJztcblxuaW50ZXJmYWNlIE5vRGF0YUNhcmRQcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgTHVjaWRlIGljb24gY29tcG9uZW50IHRvIGRpc3BsYXlcbiAgICovXG4gIGljb246IEx1Y2lkZUljb247XG4gIFxuICAvKipcbiAgICogVHJhbnNsYXRpb24ga2V5IGZvciB0aGUgdGl0bGUvaGVhZGluZ1xuICAgKi9cbiAgdGl0bGVLZXk6IHN0cmluZztcbiAgXG4gIC8qKlxuICAgKiBUcmFuc2xhdGlvbiBrZXkgZm9yIHRoZSBkZXNjcmlwdGlvbiB0ZXh0XG4gICAqL1xuICBkZXNjcmlwdGlvbktleTogc3RyaW5nO1xuICBcbiAgLyoqXG4gICAqIE9wdGlvbmFsIHRyYW5zbGF0aW9uIGtleSBmb3IgYmFkZ2UgdGV4dCAoZS5nLiwgXCJub0RhdGFcIilcbiAgICovXG4gIGJhZGdlS2V5Pzogc3RyaW5nO1xuICBcbiAgLyoqXG4gICAqIE9wdGlvbmFsIGN1c3RvbSBjb250ZW50IHRvIHJlbmRlciBiZWxvdyB0aGUgc3RhbmRhcmQgY29udGVudFxuICAgKi9cbiAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gIFxuICAvKipcbiAgICogQWRkaXRpb25hbCBDU1MgY2xhc3NlcyBmb3IgdGhlIGNhcmRcbiAgICovXG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgXG4gIC8qKlxuICAgKiBBZGRpdGlvbmFsIENTUyBjbGFzc2VzIGZvciB0aGUgY29udGVudCBhcmVhXG4gICAqL1xuICBjb250ZW50Q2xhc3NOYW1lPzogc3RyaW5nO1xuICBcbiAgLyoqXG4gICAqIFRlc3QgSUQgZm9yIHRlc3RpbmcgcHVycG9zZXNcbiAgICovXG4gIHRlc3RJZD86IHN0cmluZztcbiAgXG4gIC8qKlxuICAgKiBJY29uIHNpemUgKGRlZmF1bHQ6IDE2ID0gdy0xNiBoLTE2KVxuICAgKi9cbiAgaWNvblNpemU/OiBudW1iZXI7XG59XG5cbi8qKlxuICogUmV1c2FibGUgTm9EYXRhQ2FyZCBjb21wb25lbnQgZm9yIGNvbnNpc3RlbnQgXCJubyBkYXRhIGF2YWlsYWJsZVwiIHN0YXRlcyBhY3Jvc3MgdGhlIGFwcGxpY2F0aW9uLlxuICogU3VwcG9ydHMgYm90aCBFbmdsaXNoIGFuZCBGcmVuY2ggdHJhbnNsYXRpb25zIGF1dG9tYXRpY2FsbHkgYmFzZWQgb24gbGFuZ3VhZ2UgY29udGV4dC5cbiAqIFxuICogQGV4YW1wbGVcbiAqIGBgYHRzeFxuICogPE5vRGF0YUNhcmRcbiAqICAgaWNvbj17QnVpbGRpbmd9XG4gKiAgIHRpdGxlS2V5PVwibm9CdWlsZGluZ3NGb3VuZFwiXG4gKiAgIGRlc2NyaXB0aW9uS2V5PVwibm9CdWlsZGluZ3NNZXNzYWdlXCJcbiAqICAgYmFkZ2VLZXk9XCJub0RhdGFcIlxuICogICB0ZXN0SWQ9XCJuby1idWlsZGluZ3MtbWVzc2FnZVwiXG4gKiAvPlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBOb0RhdGFDYXJkKHtcbiAgaWNvbjogSWNvbixcbiAgdGl0bGVLZXksXG4gIGRlc2NyaXB0aW9uS2V5LFxuICBiYWRnZUtleSxcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSA9ICcnLFxuICBjb250ZW50Q2xhc3NOYW1lID0gJycsXG4gIHRlc3RJZCxcbiAgaWNvblNpemUgPSAxNlxufTogTm9EYXRhQ2FyZFByb3BzKSB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlTGFuZ3VhZ2UoKTtcbiAgXG4gIGNvbnN0IGljb25DbGFzc2VzID0gYHctJHtpY29uU2l6ZX0gaC0ke2ljb25TaXplfSBteC1hdXRvIHRleHQtZ3JheS00MDAgbWItNGA7XG4gIFxuICByZXR1cm4gKFxuICAgIDxDYXJkIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBkYXRhLXRlc3RpZD17dGVzdElkfT5cbiAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9e2BwLTggdGV4dC1jZW50ZXIgJHtjb250ZW50Q2xhc3NOYW1lfWB9PlxuICAgICAgICA8SWNvbiBjbGFzc05hbWU9e2ljb25DbGFzc2VzfSAvPlxuICAgICAgICA8aDMgY2xhc3NOYW1lPSd0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTYwMCBtYi0yJyBkYXRhLXRlc3RpZD17YCR7dGVzdElkfS10aXRsZWB9PlxuICAgICAgICAgIHt0KHRpdGxlS2V5IGFzIGFueSl9XG4gICAgICAgIDwvaDM+XG4gICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1ncmF5LTUwMCBtYi00JyBkYXRhLXRlc3RpZD17YCR7dGVzdElkfS1kZXNjcmlwdGlvbmB9PlxuICAgICAgICAgIHt0KGRlc2NyaXB0aW9uS2V5IGFzIGFueSl9XG4gICAgICAgIDwvcD5cbiAgICAgICAge2JhZGdlS2V5ICYmIChcbiAgICAgICAgICA8QmFkZ2UgdmFyaWFudD0nc2Vjb25kYXJ5JyBkYXRhLXRlc3RpZD17YCR7dGVzdElkfS1iYWRnZWB9PlxuICAgICAgICAgICAge3QoYmFkZ2VLZXkgYXMgYW55KX1cbiAgICAgICAgICA8L0JhZGdlPlxuICAgICAgICApfVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0NhcmRDb250ZW50PlxuICAgIDwvQ2FyZD5cbiAgKTtcbn0iXSwidmVyc2lvbiI6M30=