{"file":"/home/runner/workspace/client/src/components/ui/no-data-card.tsx","mappings":";;AAoEA,gCAkCC;;AApGD,+CAAyD;AACzD,iDAA8C;AAC9C,uDAAmD;AAiDnD;;;;;;;;;;;;;;GAcG;AACH,SAAgB,UAAU,CAAC,EACzB,IAAI,EAAE,IAAI,EACV,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,QAAQ,EACR,SAAS,GAAG,EAAE,EACd,gBAAgB,GAAG,EAAE,EACrB,MAAM,EACN,QAAQ,GAAG,EAAE,EACG;IAChB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,0BAAW,GAAE,CAAC;IAE5B,MAAM,WAAW,GAAG,KAAK,QAAQ,MAAM,QAAQ,6BAA6B,CAAC;IAE7E,OAAO,CACL,uBAAC,WAAI,IAAC,SAAS,EAAE,SAAS,iBAAe,MAAM,YAC7C,wBAAC,kBAAW,IAAC,SAAS,EAAE,mBAAmB,gBAAgB,EAAE,aAC3D,uBAAC,IAAI,IAAC,SAAS,EAAE,WAAW,GAAI,EAChC,+BAAI,SAAS,EAAC,0CAA0C,iBAAc,GAAG,MAAM,QAAQ,YACpF,CAAC,CAAC,QAAe,CAAC,GAChB,EACL,8BAAG,SAAS,EAAC,oBAAoB,iBAAc,GAAG,MAAM,cAAc,YACnE,CAAC,CAAC,cAAqB,CAAC,GACvB,EACH,QAAQ,IAAI,CACX,uBAAC,aAAK,IAAC,OAAO,EAAC,WAAW,iBAAc,GAAG,MAAM,QAAQ,YACtD,CAAC,CAAC,QAAe,CAAC,GACb,CACT,EACA,QAAQ,IACG,GACT,CACR,CAAC;AACJ,CAAC","names":[],"sources":["/home/runner/workspace/client/src/components/ui/no-data-card.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport { LucideIcon } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { useLanguage } from '@/hooks/use-language';\n\ninterface NoDataCardProps {\n  /**\n   * The Lucide icon component to display\n   */\n  icon: LucideIcon;\n  \n  /**\n   * Translation key for the title/heading\n   */\n  titleKey: string;\n  \n  /**\n   * Translation key for the description text\n   */\n  descriptionKey: string;\n  \n  /**\n   * Optional translation key for badge text (e.g., \"noData\")\n   */\n  badgeKey?: string;\n  \n  /**\n   * Optional custom content to render below the standard content\n   */\n  children?: ReactNode;\n  \n  /**\n   * Additional CSS classes for the card\n   */\n  className?: string;\n  \n  /**\n   * Additional CSS classes for the content area\n   */\n  contentClassName?: string;\n  \n  /**\n   * Test ID for testing purposes\n   */\n  testId?: string;\n  \n  /**\n   * Icon size (default: 16 = w-16 h-16)\n   */\n  iconSize?: number;\n}\n\n/**\n * Reusable NoDataCard component for consistent \"no data available\" states across the application.\n * Supports both English and French translations automatically based on language context.\n * \n * @example\n * ```tsx\n * <NoDataCard\n *   icon={Building}\n *   titleKey=\"noBuildingsFound\"\n *   descriptionKey=\"noBuildingsMessage\"\n *   badgeKey=\"noData\"\n *   testId=\"no-buildings-message\"\n * />\n * ```\n */\nexport function NoDataCard({\n  icon: Icon,\n  titleKey,\n  descriptionKey,\n  badgeKey,\n  children,\n  className = '',\n  contentClassName = '',\n  testId,\n  iconSize = 16\n}: NoDataCardProps) {\n  const { t } = useLanguage();\n  \n  const iconClasses = `w-${iconSize} h-${iconSize} mx-auto text-gray-400 mb-4`;\n  \n  return (\n    <Card className={className} data-testid={testId}>\n      <CardContent className={`p-8 text-center ${contentClassName}`}>\n        <Icon className={iconClasses} />\n        <h3 className='text-lg font-semibold text-gray-600 mb-2' data-testid={`${testId}-title`}>\n          {t(titleKey as any)}\n        </h3>\n        <p className='text-gray-500 mb-4' data-testid={`${testId}-description`}>\n          {t(descriptionKey as any)}\n        </p>\n        {badgeKey && (\n          <Badge variant='secondary' data-testid={`${testId}-badge`}>\n            {t(badgeKey as any)}\n          </Badge>\n        )}\n        {children}\n      </CardContent>\n    </Card>\n  );\n}"],"version":3}