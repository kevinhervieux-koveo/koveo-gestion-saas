{"file":"/home/runner/workspace/tests/unit/button-functionality/management-buttons.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/button-functionality/management-buttons.test.tsx"],"sourcesContent":["/**\n * Management Button Functionality Tests\n * Tests all management buttons (approve, reject, delete, edit, block, etc.)\n */\n\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport '@testing-library/jest-dom';\nimport userEvent from '@testing-library/user-event';\nimport React from 'react';\n\n// Mock API requests\nconst mockApiRequest = jest.fn();\njest.mock('../../../client/src/lib/queryClient', () => ({\n  apiRequest: mockApiRequest,\n  queryClient: new (jest.requireActual('@tanstack/react-query').QueryClient)(),\n}));\n\n// Mock authentication context\njest.mock('../../../client/src/hooks/use-auth', () => ({\n  useAuth: () => ({\n    user: { id: '1', email: 'test@test.com', role: 'admin' },\n    isAuthenticated: true,\n    login: jest.fn(),\n    logout: jest.fn(),\n  }),\n}));\n\n// Mock toast notifications\nconst mockToast = jest.fn();\njest.mock('../../../client/src/hooks/use-toast', () => ({\n  useToast: () => ({\n    toast: mockToast,\n  }),\n}));\n\ndescribe('Management Buttons Functionality', () => {\n  let queryClient: QueryClient;\n  let user: any;\n\n  beforeEach(() => {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: { retry: false },\n        mutations: { retry: false },\n      },\n    });\n    user = userEvent.setup();\n    jest.clearAllMocks();\n    mockApiRequest.mockResolvedValue({ ok: true, json: () => Promise.resolve({}) });\n  });\n\n  const renderWithProvider = (component: React.ReactElement) => {\n    return render(\n      <QueryClientProvider client={queryClient}>\n        {component}\n      </QueryClientProvider>\n    );\n  };\n\n  describe('Demand Management Buttons', () => {\n    it('should handle demand approval', async () => {\n      const demandId = 'test-demand-id';\n      const MockDemandCard = () => (\n        <div>\n          <button \n            data-testid={`button-approve-${demandId}`}\n            onClick={() => mockApiRequest(`/api/demands/${demandId}/approve`, { method: 'PATCH' })}\n          >\n            Approve\n          </button>\n          <button \n            data-testid={`button-reject-${demandId}`}\n            onClick={() => mockApiRequest(`/api/demands/${demandId}/reject`, { method: 'PATCH' })}\n          >\n            Reject\n          </button>\n          <button \n            data-testid={`button-view-${demandId}`}\n            onClick={() => mockApiRequest(`/api/demands/${demandId}`, { method: 'GET' })}\n          >\n            View\n          </button>\n          <button \n            data-testid={`button-edit-${demandId}`}\n            onClick={() => mockApiRequest(`/api/demands/${demandId}`, { method: 'GET' })}\n          >\n            Edit\n          </button>\n        </div>\n      );\n\n      renderWithProvider(<MockDemandCard />);\n      \n      const approveButton = screen.getByTestId(`button-approve-${demandId}`);\n      const rejectButton = screen.getByTestId(`button-reject-${demandId}`);\n      const viewButton = screen.getByTestId(`button-view-${demandId}`);\n      const editButton = screen.getByTestId(`button-edit-${demandId}`);\n      \n      expect(approveButton).toBeInTheDocument();\n      expect(rejectButton).toBeInTheDocument();\n      expect(viewButton).toBeInTheDocument();\n      expect(editButton).toBeInTheDocument();\n      \n      await user.click(approveButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/demands/${demandId}/approve`, { method: 'PATCH' });\n      \n      await user.click(rejectButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/demands/${demandId}/reject`, { method: 'PATCH' });\n      \n      await user.click(viewButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/demands/${demandId}`, { method: 'GET' });\n      \n      await user.click(editButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/demands/${demandId}`, { method: 'GET' });\n    });\n  });\n\n  describe('User Management Buttons', () => {\n    it('should handle user blocking and unblocking', async () => {\n      const userId = 'test-user-id';\n      const MockUserManagement = () => (\n        <div>\n          <button \n            data-testid={`button-block-${userId}`}\n            onClick={() => mockApiRequest(`/api/users/${userId}/block`, { method: 'POST' })}\n          >\n            Block User\n          </button>\n          <button \n            data-testid={`button-unblock-${userId}`}\n            onClick={() => mockApiRequest(`/api/users/${userId}/unblock`, { method: 'POST' })}\n          >\n            Unblock User\n          </button>\n          <button \n            data-testid={`button-time-limit-${userId}`}\n            onClick={() => mockApiRequest(`/api/users/${userId}/time-limits`, { method: 'POST' })}\n          >\n            Set Time Limit\n          </button>\n        </div>\n      );\n\n      renderWithProvider(<MockUserManagement />);\n      \n      const blockButton = screen.getByTestId(`button-block-${userId}`);\n      const unblockButton = screen.getByTestId(`button-unblock-${userId}`);\n      const timeLimitButton = screen.getByTestId(`button-time-limit-${userId}`);\n      \n      expect(blockButton).toBeInTheDocument();\n      expect(unblockButton).toBeInTheDocument();\n      expect(timeLimitButton).toBeInTheDocument();\n      \n      await user.click(blockButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/users/${userId}/block`, { method: 'POST' });\n      \n      await user.click(unblockButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/users/${userId}/unblock`, { method: 'POST' });\n      \n      await user.click(timeLimitButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/users/${userId}/time-limits`, { method: 'POST' });\n    });\n  });\n\n  describe('Delete and Confirmation Buttons', () => {\n    it('should handle delete confirmation flow', async () => {\n      const bugId = 'test-bug-id';\n      const invitationId = 'test-invitation-id';\n      \n      const MockDeleteFlow = () => {\n        const [showConfirmation, setShowConfirmation] = React.useState(false);\n        \n        return (\n          <div>\n            <button \n              data-testid={`button-delete-${bugId}`}\n              onClick={() => setShowConfirmation(true)}\n            >\n              Delete Bug\n            </button>\n            <button \n              data-testid={`button-delete-invitation-${invitationId}`}\n              onClick={() => setShowConfirmation(true)}\n            >\n              Delete Invitation\n            </button>\n            \n            {showConfirmation && (\n              <div>\n                <button \n                  data-testid=\"button-cancel-delete-invitation\"\n                  onClick={() => setShowConfirmation(false)}\n                >\n                  Cancel\n                </button>\n                <button \n                  data-testid=\"button-confirm-delete-invitation\"\n                  onClick={() => {\n                    mockApiRequest('/api/delete', { method: 'DELETE' });\n                    setShowConfirmation(false);\n                  }}\n                >\n                  Confirm Delete\n                </button>\n              </div>\n            )}\n          </div>\n        );\n      };\n\n      renderWithProvider(<MockDeleteFlow />);\n      \n      const deleteBugButton = screen.getByTestId(`button-delete-${bugId}`);\n      const deleteInvitationButton = screen.getByTestId(`button-delete-invitation-${invitationId}`);\n      \n      expect(deleteBugButton).toBeInTheDocument();\n      expect(deleteInvitationButton).toBeInTheDocument();\n      \n      // Test delete confirmation flow\n      await user.click(deleteInvitationButton);\n      \n      await waitFor(() => {\n        const cancelButton = screen.getByTestId('button-cancel-delete-invitation');\n        const confirmButton = screen.getByTestId('button-confirm-delete-invitation');\n        \n        expect(cancelButton).toBeInTheDocument();\n        expect(confirmButton).toBeInTheDocument();\n      });\n      \n      const confirmButton = screen.getByTestId('button-confirm-delete-invitation');\n      await user.click(confirmButton);\n      \n      expect(mockApiRequest).toHaveBeenCalledWith('/api/delete', { method: 'DELETE' });\n    });\n  });\n\n  describe('Edit and Cancel Buttons', () => {\n    it('should handle edit and cancel actions', async () => {\n      const MockEditForm = () => {\n        const [isEditing, setIsEditing] = React.useState(false);\n        \n        return (\n          <div>\n            {!isEditing ? (\n              <button \n                data-testid=\"button-edit-space\"\n                onClick={() => setIsEditing(true)}\n              >\n                Edit Space\n              </button>\n            ) : (\n              <div>\n                <button \n                  data-testid=\"button-cancel-edit\"\n                  onClick={() => setIsEditing(false)}\n                >\n                  Cancel Edit\n                </button>\n                <button \n                  data-testid=\"button-save-edit\"\n                  onClick={() => {\n                    mockApiRequest('/api/save', { method: 'PATCH' });\n                    setIsEditing(false);\n                  }}\n                >\n                  Save Edit\n                </button>\n              </div>\n            )}\n          </div>\n        );\n      };\n\n      renderWithProvider(<MockEditForm />);\n      \n      const editButton = screen.getByTestId('button-edit-space');\n      expect(editButton).toBeInTheDocument();\n      \n      await user.click(editButton);\n      \n      await waitFor(() => {\n        const cancelButton = screen.getByTestId('button-cancel-edit');\n        const saveButton = screen.getByTestId('button-save-edit');\n        \n        expect(cancelButton).toBeInTheDocument();\n        expect(saveButton).toBeInTheDocument();\n      });\n      \n      const saveButton = screen.getByTestId('button-save-edit');\n      await user.click(saveButton);\n      \n      expect(mockApiRequest).toHaveBeenCalledWith('/api/save', { method: 'PATCH' });\n    });\n  });\n\n  describe('Upvote and Menu Buttons', () => {\n    it('should handle upvote and menu actions', async () => {\n      const requestId = 'test-request-id';\n      \n      const MockFeatureRequest = () => (\n        <div>\n          <button \n            data-testid={`button-upvote-${requestId}`}\n            onClick={() => mockApiRequest(`/api/feature-requests/${requestId}/upvote`, { method: 'POST' })}\n          >\n            Upvote\n          </button>\n          <button \n            data-testid={`button-menu-${requestId}`}\n            onClick={() => console.log('Menu opened')}\n          >\n            Menu\n          </button>\n        </div>\n      );\n\n      renderWithProvider(<MockFeatureRequest />);\n      \n      const upvoteButton = screen.getByTestId(`button-upvote-${requestId}`);\n      const menuButton = screen.getByTestId(`button-menu-${requestId}`);\n      \n      expect(upvoteButton).toBeInTheDocument();\n      expect(menuButton).toBeInTheDocument();\n      \n      await user.click(upvoteButton);\n      expect(mockApiRequest).toHaveBeenCalledWith(`/api/feature-requests/${requestId}/upvote`, { method: 'POST' });\n      \n      await user.click(menuButton);\n      // Menu button functionality would be tested in integration tests\n    });\n  });\n});"],"version":3}