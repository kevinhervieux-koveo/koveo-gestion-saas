{"file":"/home/runner/workspace/client/src/pages/auth/reset-password.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/auth/reset-password.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\nimport { Eye, EyeOff, CheckCircle, ArrowLeft } from 'lucide-react';\n\nconst resetPasswordSchema = z\n  .object({\n    password: z\n      .string()\n      .min(1, 'Le nouveau mot de passe est requis')\n      .min(8, 'Le mot de passe doit contenir au moins 8 caractères (exemple: MonMotDePasse123!)')\n      .max(100, 'Le mot de passe ne peut pas dépasser 100 caractères')\n      .regex(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n        'Le mot de passe doit contenir au moins une minuscule, une majuscule et un chiffre (exemple: MonMotDePasse123!)'\n      ),\n    confirmPassword: z.string().min(1, 'La confirmation du mot de passe est requise'),\n  })\n  .refine((_data) => _data.password === _data.confirmPassword, {\n    message: 'Les mots de passe ne correspondent pas - veuillez saisir le même mot de passe dans les deux champs',\n    path: ['confirmPassword'],\n  });\n\n/**\n *\n */\ntype ResetPasswordForm = z.infer<typeof resetPasswordSchema>;\n\n/**\n *\n */\nexport default function /**\n * Reset password page function.\n */ /**\n * Reset password page function.\n */\n\nResetPasswordPage() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [resetComplete, setResetComplete] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [token, setToken] = useState<string | null>(null);\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n\n  const form = useForm<ResetPasswordForm>({\n    resolver: zodResolver(resetPasswordSchema),\n    defaultValues: {\n      password: '',\n      confirmPassword: '',\n    },\n  });\n\n  // Extract token from URL parameters\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const tokenParam = urlParams.get('token'); /**\n     * If function.\n     * @param !tokenParam - !tokenParam parameter.\n     */ /**\n     * If function.\n     * @param !tokenParam - !tokenParam parameter.\n     */\n\n    if (!tokenParam) {\n      toast({\n        title: 'Token manquant',\n        description: 'Le lien de réinitialisation est invalide ou manquant.',\n        variant: 'destructive',\n      });\n      navigate('/login');\n      return;\n    }\n\n    setToken(tokenParam);\n  }, [navigate, toast]);\n\n  const onSubmit = async (_data: ResetPasswordForm) => {\n    /**\n     * If function.\n     * @param !token - !token parameter.\n     */ /**\n     * If function.\n     * @param !token - !token parameter.\n     */\n\n    if (!token) {\n      toast({\n        title: 'Erreur',\n        description: 'Token de réinitialisation manquant.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      await apiRequest('POST', '/api/auth/reset-password', {\n        token,\n        password: _data.password,\n      });\n\n      setResetComplete(true);\n      toast({\n        title: 'Mot de passe réinitialisé',\n        description: 'Votre mot de passe a été mis à jour avec succès.',\n      });\n    } catch (_error: unknown) {\n      /**\n       * Catch function.\n       * @param error - Error object.\n       */ /**\n       * Catch function.\n       * @param error - Error object.\n       */\n\n      let errorMessage = 'Une erreur est survenue lors de la réinitialisation du mot de passe.'; /**\n       * If function.\n       * @param error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' - error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' parameter.\n       */ /**\n       * If function.\n       * @param error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' - error.code === 'INVALID_TOKEN' || error.code === 'TOKEN_EXPIRED' parameter.\n       */\n\n      if ((_error as any).code === 'INVALID_TOKEN' || (_error as any).code === 'TOKEN_EXPIRED') {\n        errorMessage =\n          'Le lien de réinitialisation est invalide ou expiré. Veuillez demander un nouveau lien.';\n      } else if ((_error as any).code === 'TOKEN_ALREADY_USED') {\n        /**\n         * If function.\n         * @param error.code === 'TOKEN_ALREADY_USED' - error.code === 'TOKEN_ALREADY_USED' parameter.\n         */ /**\n         * If function.\n         * @param error.code === 'TOKEN_ALREADY_USED' - error.code === 'TOKEN_ALREADY_USED' parameter.\n         */\n\n        errorMessage = 'Ce lien de réinitialisation a déjà été utilisé.';\n      } else if ((_error as any).code === 'PASSWORD_TOO_SHORT') {\n        /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_SHORT' - error.code === 'PASSWORD_TOO_SHORT' parameter.\n         */ /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_SHORT' - error.code === 'PASSWORD_TOO_SHORT' parameter.\n         */\n\n        errorMessage = 'Le mot de passe doit contenir au moins 8 caractères.';\n      } else if ((_error as any).code === 'PASSWORD_TOO_WEAK') {\n        /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_WEAK' - error.code === 'PASSWORD_TOO_WEAK' parameter.\n         */ /**\n         * If function.\n         * @param error.code === 'PASSWORD_TOO_WEAK' - error.code === 'PASSWORD_TOO_WEAK' parameter.\n         */\n\n        errorMessage =\n          'Le mot de passe doit contenir au moins une majuscule, une minuscule et un chiffre.';\n      }\n\n      toast({\n        title: 'Erreur',\n        description: errorMessage,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }; /**\n   * If function.\n   * @param resetComplete - ResetComplete parameter.\n   */ /**\n   * If function.\n   * @param resetComplete - ResetComplete parameter.\n   */\n\n  if (resetComplete) {\n    return (\n      <div className='min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800'>\n        <Card className='w-full max-w-md'>\n          <CardHeader className='text-center'>\n            <div className='mx-auto w-12 h-12 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mb-4'>\n              <CheckCircle className='w-6 h-6 text-green-600 dark:text-green-400' />\n            </div>\n            <CardTitle className='text-2xl font-bold'>Mot de passe réinitialisé</CardTitle>\n            <CardDescription>\n              Votre mot de passe a été mis à jour avec succès. Vous pouvez maintenant vous connecter\n              avec votre nouveau mot de passe.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Button asChild className='w-full'>\n              <Link href='/login'>Se connecter</Link>\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } /**\n   * If function.\n   * @param !token - !token parameter.\n   */ /**\n   * If function.\n   * @param !token - !token parameter.\n   */\n\n  if (!token) {\n    return (\n      <div className='min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800'>\n        <Card className='w-full max-w-md'>\n          <CardHeader className='text-center'>\n            <CardTitle className='text-2xl font-bold'>Lien invalide</CardTitle>\n            <CardDescription>Le lien de réinitialisation est invalide ou manquant.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className='space-y-4'>\n              <Button asChild className='w-full'>\n                <Link href='/forgot-password'>Demander un nouveau lien</Link>\n              </Button>\n              <Button variant='ghost' asChild className='w-full'>\n                <Link href='/login'>\n                  <ArrowLeft className='w-4 h-4 mr-2' />\n                  Retour à la connexion\n                </Link>\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className='min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800'>\n      <Card className='w-full max-w-md'>\n        <CardHeader className='text-center'>\n          <CardTitle className='text-2xl font-bold'>Réinitialiser le mot de passe</CardTitle>\n          <CardDescription>Entrez votre nouveau mot de passe</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n              <FormField\n                control={form.control}\n                name='password'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Nouveau mot de passe</FormLabel>\n                    <FormControl>\n                      <div className='relative'>\n                        <Input\n                          type={showPassword ? 'text' : 'password'}\n                          placeholder='Entrez votre nouveau mot de passe'\n                          className='pr-10'\n                          data-testid='input-password'\n                          {...field}\n                        />\n                        <Button\n                          type='button'\n                          variant='ghost'\n                          size='sm'\n                          className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                          onClick={() => setShowPassword(!showPassword)}\n                          data-testid='button-toggle-password'\n                        >\n                          {showPassword ? (\n                            <EyeOff className='h-4 w-4 text-gray-400' />\n                          ) : (\n                            <Eye className='h-4 w-4 text-gray-400' />\n                          )}\n                          <span className='sr-only'>\n                            {showPassword ? 'Masquer le mot de passe' : 'Afficher le mot de passe'}\n                          </span>\n                        </Button>\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name='confirmPassword'\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Confirmer le mot de passe</FormLabel>\n                    <FormControl>\n                      <div className='relative'>\n                        <Input\n                          type={showConfirmPassword ? 'text' : 'password'}\n                          placeholder='Confirmez votre nouveau mot de passe'\n                          className='pr-10'\n                          data-testid='input-confirm-password'\n                          {...field}\n                        />\n                        <Button\n                          type='button'\n                          variant='ghost'\n                          size='sm'\n                          className='absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent'\n                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                          data-testid='button-toggle-confirm-password'\n                        >\n                          {showConfirmPassword ? (\n                            <EyeOff className='h-4 w-4 text-gray-400' />\n                          ) : (\n                            <Eye className='h-4 w-4 text-gray-400' />\n                          )}\n                          <span className='sr-only'>\n                            {showConfirmPassword\n                              ? 'Masquer le mot de passe'\n                              : 'Afficher le mot de passe'}\n                          </span>\n                        </Button>\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <Button type='submit' className='w-full' disabled={isSubmitting}>\n                {isSubmitting ? 'Réinitialisation...' : 'Réinitialiser le mot de passe'}\n              </Button>\n\n              <div className='text-center'>\n                <Button variant='ghost' asChild>\n                  <Link href='/login'>\n                    <ArrowLeft className='w-4 h-4 mr-2' />\n                    Retour à la connexion\n                  </Link>\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"version":3}