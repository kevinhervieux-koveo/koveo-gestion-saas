{"file":"/home/runner/workspace/tests/integration/file-upload-e2e.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/integration/file-upload-e2e.test.tsx"],"sourcesContent":["/**\n * File Upload End-to-End Test Suite\n * \n * Complete end-to-end testing of file upload workflows across all forms.\n * This test suite simulates real user interactions with file uploads:\n * 1. Full form submission workflows with files\n * 2. User interface feedback during upload\n * 3. File viewing and downloading after upload\n * 4. Error handling and user notifications\n * 5. Cross-browser compatibility scenarios\n * 6. Mobile device file selection\n */\n\n/// <reference path=\"../types/jest-dom.d.ts\" />\nimport { describe, it, expect, jest, beforeEach, afterEach } from '@jest/globals';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport userEvent from '@testing-library/user-event';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport React from 'react';\n\n// Test utilities and setup\nconst createTestQueryClient = () => {\n  return new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n};\n\nconst TestWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const queryClient = createTestQueryClient();\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n};\n\n// Mock functions\nconst mockApiRequest = jest.fn();\nconst mockFetch = jest.fn();\nconst mockToast = jest.fn();\n\njest.mock('@/lib/queryClient', () => ({\n  apiRequest: mockApiRequest,\n}));\n\njest.mock('@/hooks/use-toast', () => ({\n  useToast: () => ({ toast: mockToast }),\n}));\n\njest.mock('@/hooks/use-auth', () => ({\n  useAuth: () => ({\n    user: {\n      id: '123e4567-e89b-12d3-a456-426614174000',\n      email: 'test@koveo.com',\n      role: 'admin',\n    },\n    login: jest.fn(),\n    logout: jest.fn(),\n  }),\n}));\n\nglobal.fetch = mockFetch;\n\n// File creation utilities\nconst createMockFile = (name: string, size: number, type: string, content?: string) => {\n  const file = new File([content || 'mock content'], name, { type });\n  Object.defineProperty(file, 'size', { value: size });\n  return file;\n};\n\ndescribe('File Upload End-to-End Workflows', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockApiRequest.mockResolvedValue({ id: 'test-id', success: true });\n    mockFetch.mockResolvedValue({\n      ok: true,\n      json: async () => ({ id: 'test-id', success: true }),\n    });\n  });\n\n  afterEach(() => {\n    jest.resetAllMocks();\n  });\n\n  describe('Complete Bug Report Workflow with Files', () => {\n    it('should complete full bug report submission with multiple attachments', async () => {\n      const BugReportPage = require('../../client/src/pages/settings/bug-reports.tsx').default;\n      \n      // Mock successful responses\n      mockFetch\n        .mockResolvedValueOnce({\n          ok: true,\n          json: async () => ({ \n            id: 'bug-123',\n            title: 'Complete Bug Report',\n            attachmentCount: 3,\n            attachments: [\n              { id: 'att-1', name: 'screenshot.png', size: 50000 },\n              { id: 'att-2', name: 'error-log.txt', size: 2000 },\n              { id: 'att-3', name: 'config.json', size: 1500 }\n            ]\n          })\n        })\n        .mockResolvedValueOnce({\n          ok: true,\n          json: async () => ([\n            { \n              id: 'bug-123',\n              title: 'Complete Bug Report',\n              attachmentCount: 3,\n              attachments: [\n                { id: 'att-1', name: 'screenshot.png', size: 50000 },\n                { id: 'att-2', name: 'error-log.txt', size: 2000 },\n                { id: 'att-3', name: 'config.json', size: 1500 }\n              ]\n            }\n          ])\n        });\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <BugReportPage />\n        </TestWrapper>\n      );\n\n      // Step 1: Open bug report form\n      const reportButton = await screen.findByTestId('button-report-bug');\n      await user.click(reportButton);\n\n      // Step 2: Fill in required form fields\n      const titleInput = screen.getByLabelText(/title/i);\n      const descriptionTextarea = screen.getByLabelText(/description/i);\n      const pageInput = screen.getByLabelText(/page/i);\n      \n      await user.type(titleInput, 'Complete Bug Report');\n      await user.type(descriptionTextarea, 'This is a comprehensive bug report with multiple file attachments including screenshots, logs, and configuration files.');\n      await user.type(pageInput, 'Settings Page');\n\n      // Step 3: Select category and priority\n      const categorySelect = screen.getByLabelText(/category/i);\n      const prioritySelect = screen.getByLabelText(/priority/i);\n      \n      await user.selectOptions(categorySelect, 'functionality');\n      await user.selectOptions(prioritySelect, 'high');\n\n      // Step 4: Add reproduction steps\n      const stepsTextarea = screen.getByLabelText(/steps to reproduce/i);\n      await user.type(stepsTextarea, 'Step 1: Navigate to Settings\\nStep 2: Click on Advanced Options\\nStep 3: Observe the error');\n\n      // Step 5: Attach multiple files\n      const fileInput = screen.getByRole('button', { name: /attach files/i });\n      await user.click(fileInput);\n\n      const hiddenFileInput = screen.getByRole('input', { type: 'file', hidden: true });\n      const mockFiles = [\n        createMockFile('screenshot.png', 50000, 'image/png'),\n        createMockFile('error-log.txt', 2000, 'text/plain'),\n        createMockFile('config.json', 1500, 'application/json')\n      ];\n\n      Object.defineProperty(hiddenFileInput, 'files', {\n        value: mockFiles,\n        writable: false,\n      });\n\n      fireEvent.change(hiddenFileInput, { target: { files: mockFiles } });\n\n      // Step 6: Verify files are displayed\n      await waitFor(() => {\n        expect(screen.getByText('screenshot.png')).toBeInTheDocument();\n        expect(screen.getByText('error-log.txt')).toBeInTheDocument();\n        expect(screen.getByText('config.json')).toBeInTheDocument();\n      });\n\n      // Step 7: Submit the form\n      const submitButton = screen.getByRole('button', { name: /submit bug report/i });\n      await user.click(submitButton);\n\n      // Step 8: Verify submission with multipart form data\n      await waitFor(() => {\n        expect(mockFetch).toHaveBeenCalledWith(\n          '/api/bugs',\n          expect.objectContaining({\n            method: 'POST',\n            body: expect.any(FormData),\n            credentials: 'include',\n          })\n        );\n      });\n\n      // Step 9: Verify success notification\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Bug created',\n            description: expect.stringContaining('successfully'),\n          })\n        );\n      });\n\n      // Step 10: Verify bug appears in list with attachment count\n      await waitFor(() => {\n        expect(screen.getByText('Complete Bug Report')).toBeInTheDocument();\n        expect(screen.getByText('3 files')).toBeInTheDocument();\n      });\n    });\n\n    it('should handle upload progress feedback', async () => {\n      const BugReportPage = require('../../client/src/pages/settings/bug-reports.tsx').default;\n      \n      // Mock XMLHttpRequest for progress tracking\n      const mockXHR = {\n        upload: {\n          addEventListener: jest.fn((event, callback) => {\n            if (event === 'progress') {\n              setTimeout(() => callback({ loaded: 25, total: 100 }), 50);\n              setTimeout(() => callback({ loaded: 50, total: 100 }), 100);\n              setTimeout(() => callback({ loaded: 75, total: 100 }), 150);\n              setTimeout(() => callback({ loaded: 100, total: 100 }), 200);\n            }\n          }),\n        },\n        addEventListener: jest.fn((event, callback) => {\n          if (event === 'load') {\n            setTimeout(() => callback({ target: { response: '{\"success\": true}' } }), 250);\n          }\n        }),\n        open: jest.fn(),\n        send: jest.fn(),\n        setRequestHeader: jest.fn(),\n        readyState: 4,\n        status: 200,\n      };\n\n      global.XMLHttpRequest = jest.fn(() => mockXHR) as any;\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <BugReportPage />\n        </TestWrapper>\n      );\n\n      const reportButton = await screen.findByTestId('button-report-bug');\n      await user.click(reportButton);\n\n      // Fill minimum required fields\n      await user.type(screen.getByLabelText(/title/i), 'Bug with Progress');\n      await user.type(screen.getByLabelText(/description/i), 'Testing upload progress feedback.');\n      await user.type(screen.getByLabelText(/page/i), 'Test Page');\n\n      // Attach a large file\n      const fileInput = screen.getByRole('button', { name: /attach files/i });\n      await user.click(fileInput);\n\n      const hiddenFileInput = screen.getByRole('input', { type: 'file', hidden: true });\n      const largeFile = createMockFile('large-image.png', 10 * 1024 * 1024, 'image/png'); // 10MB\n\n      Object.defineProperty(hiddenFileInput, 'files', {\n        value: [largeFile],\n        writable: false,\n      });\n\n      fireEvent.change(hiddenFileInput, { target: { files: [largeFile] } });\n\n      const submitButton = screen.getByRole('button', { name: /submit bug report/i });\n      await user.click(submitButton);\n\n      // Verify progress indicators appear\n      await waitFor(() => {\n        const progressIndicators = screen.queryAllByText(/uploading|progress|\\d+%/i);\n        expect(progressIndicators.length).toBeGreaterThan(0);\n      }, { timeout: 3000 });\n    });\n  });\n\n  describe('Feature Request with Design Files Workflow', () => {\n    it('should handle feature request with design mockups and documentation', async () => {\n      const IdeaBoxPage = require('../../client/src/pages/settings/idea-box.tsx').default;\n      \n      mockFetch.mockResolvedValue({\n        ok: true,\n        json: async () => ({ \n          id: 'feature-456',\n          title: 'UI Redesign Feature',\n          attachmentCount: 2\n        })\n      });\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <IdeaBoxPage />\n        </TestWrapper>\n      );\n\n      // Open feature request form\n      const requestButton = await screen.findByRole('button', { name: /request feature|suggest idea/i });\n      await user.click(requestButton);\n\n      // Fill form fields\n      await user.type(screen.getByLabelText(/title/i), 'UI Redesign Feature');\n      await user.type(screen.getByLabelText(/description/i), 'Complete UI overhaul with modern design patterns and improved user experience.');\n\n      // Select category\n      const categorySelect = screen.getByLabelText(/category/i);\n      await user.selectOptions(categorySelect, 'ui_ux');\n\n      // Attach design files\n      const fileInput = screen.getByRole('button', { name: /attach files/i });\n      await user.click(fileInput);\n\n      const hiddenInput = screen.getByRole('input', { type: 'file', hidden: true });\n      const designFiles = [\n        createMockFile('mockup.png', 75000, 'image/png'),\n        createMockFile('requirements.pdf', 120000, 'application/pdf')\n      ];\n\n      Object.defineProperty(hiddenInput, 'files', {\n        value: designFiles,\n        writable: false,\n      });\n\n      fireEvent.change(hiddenInput, { target: { files: designFiles } });\n\n      // Submit request\n      const submitButton = screen.getByRole('button', { name: /submit/i });\n      await user.click(submitButton);\n\n      await waitFor(() => {\n        expect(mockFetch).toHaveBeenCalledWith(\n          expect.stringMatching(/\\/api\\/(features|feature-requests)/),\n          expect.objectContaining({\n            method: 'POST',\n            body: expect.any(FormData),\n          })\n        );\n      });\n\n      expect(mockToast).toHaveBeenCalledWith(\n        expect.objectContaining({\n          title: expect.stringMatching(/created|submitted/i),\n        })\n      );\n    });\n  });\n\n  describe('Document Upload and Management Workflow', () => {\n    it('should complete document upload with categorization and permissions', async () => {\n      const DocumentManager = require('../../client/src/components/common/DocumentManager.tsx').default;\n      \n      mockApiRequest.mockResolvedValue({\n        id: 'doc-789',\n        name: 'Policy Document',\n        filePath: 'general/policy-document.pdf',\n        isVisibleToTenants: true\n      });\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <DocumentManager />\n        </TestWrapper>\n      );\n\n      // Open upload dialog\n      const uploadButton = screen.getByRole('button', { name: /upload|add document/i });\n      await user.click(uploadButton);\n\n      // Fill document metadata\n      await user.type(screen.getByLabelText(/name/i), 'Policy Document');\n      await user.type(screen.getByLabelText(/description/i), 'Company policy document for all residents');\n\n      // Set document type\n      const typeSelect = screen.getByLabelText(/type/i);\n      await user.selectOptions(typeSelect, 'policy');\n\n      // Set visibility permissions\n      const visibilityCheckbox = screen.getByLabelText(/visible to tenants/i);\n      await user.click(visibilityCheckbox);\n\n      // Upload file\n      const fileInput = screen.getByRole('input', { type: 'file' });\n      const policyDoc = createMockFile('policy-document.pdf', 500000, 'application/pdf');\n\n      Object.defineProperty(fileInput, 'files', {\n        value: [policyDoc],\n        writable: false,\n      });\n\n      fireEvent.change(fileInput, { target: { files: [policyDoc] } });\n\n      // Submit\n      const submitButton = screen.getByRole('button', { name: /upload|save/i });\n      await user.click(submitButton);\n\n      await waitFor(() => {\n        expect(mockApiRequest).toHaveBeenCalledWith(\n          'POST',\n          '/api/documents',\n          expect.objectContaining({\n            name: 'Policy Document',\n            description: 'Company policy document for all residents',\n            documentType: 'policy',\n            isVisibleToTenants: true\n          })\n        );\n      });\n    });\n\n    it('should handle document viewing after upload', async () => {\n      const DocumentManager = require('../../client/src/components/common/DocumentManager.tsx').default;\n      \n      // Mock document list with uploaded document\n      mockApiRequest.mockResolvedValue([\n        {\n          id: 'doc-123',\n          name: 'Uploaded Document',\n          filePath: 'general/uploaded-document.pdf',\n          fileName: 'uploaded-document.pdf',\n          fileSize: '250000',\n          attachments: [\n            { id: 'att-1', name: 'uploaded-document.pdf', size: 250000 }\n          ]\n        }\n      ]);\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <DocumentManager />\n        </TestWrapper>\n      );\n\n      // Wait for document to appear in list\n      await waitFor(() => {\n        expect(screen.getByText('Uploaded Document')).toBeInTheDocument();\n      });\n\n      // Click view button\n      const viewButton = screen.getByRole('button', { name: /view/i });\n      await user.click(viewButton);\n\n      // Verify view action (opening in new tab/window)\n      expect(window.open).toHaveBeenCalledWith(\n        expect.stringMatching(/\\/api\\/documents\\/doc-123\\/file/),\n        '_blank'\n      );\n    });\n  });\n\n  describe('Error Handling and Recovery', () => {\n    it('should handle network errors during upload', async () => {\n      const BugReportPage = require('../../client/src/pages/settings/bug-reports.tsx').default;\n      \n      mockFetch.mockRejectedValue(new Error('Network error'));\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <BugReportPage />\n        </TestWrapper>\n      );\n\n      const reportButton = await screen.findByTestId('button-report-bug');\n      await user.click(reportButton);\n\n      // Fill form and attach file\n      await user.type(screen.getByLabelText(/title/i), 'Network Error Test');\n      await user.type(screen.getByLabelText(/description/i), 'Testing network error handling.');\n      await user.type(screen.getByLabelText(/page/i), 'Test Page');\n\n      const fileInput = screen.getByRole('button', { name: /attach files/i });\n      await user.click(fileInput);\n\n      const hiddenInput = screen.getByRole('input', { type: 'file', hidden: true });\n      const testFile = createMockFile('test.png', 10000, 'image/png');\n\n      Object.defineProperty(hiddenInput, 'files', {\n        value: [testFile],\n        writable: false,\n      });\n\n      fireEvent.change(hiddenInput, { target: { files: [testFile] } });\n\n      const submitButton = screen.getByRole('button', { name: /submit/i });\n      await user.click(submitButton);\n\n      // Verify error notification\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Error',\n            description: expect.stringContaining('Network error'),\n            variant: 'destructive',\n          })\n        );\n      });\n    });\n\n    it('should handle file corruption detection', async () => {\n      const DocumentManager = require('../../client/src/components/common/DocumentManager.tsx').default;\n      \n      mockApiRequest.mockRejectedValue({\n        message: 'File appears to be corrupted or invalid format'\n      });\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <DocumentManager />\n        </TestWrapper>\n      );\n\n      const uploadButton = screen.getByRole('button', { name: /upload/i });\n      await user.click(uploadButton);\n\n      await user.type(screen.getByLabelText(/name/i), 'Corrupted File Test');\n      \n      const fileInput = screen.getByRole('input', { type: 'file' });\n      const corruptedFile = createMockFile('corrupted.pdf', 50000, 'application/pdf', 'invalid pdf content');\n\n      Object.defineProperty(fileInput, 'files', {\n        value: [corruptedFile],\n        writable: false,\n      });\n\n      fireEvent.change(fileInput, { target: { files: [corruptedFile] } });\n\n      const submitButton = screen.getByRole('button', { name: /upload/i });\n      await user.click(submitButton);\n\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Error',\n            description: expect.stringContaining('corrupted'),\n            variant: 'destructive',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Mobile and Cross-Platform Compatibility', () => {\n    it('should handle mobile file selection', async () => {\n      // Mock mobile user agent\n      Object.defineProperty(navigator, 'userAgent', {\n        value: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15',\n        configurable: true,\n      });\n\n      const BugReportPage = require('../../client/src/pages/settings/bug-reports.tsx').default;\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <BugReportPage />\n        </TestWrapper>\n      );\n\n      const reportButton = await screen.findByTestId('button-report-bug');\n      await user.click(reportButton);\n\n      // Verify mobile-friendly file input\n      const fileButton = screen.getByRole('button', { name: /attach files/i });\n      expect(fileButton).toHaveAttribute('accept', expect.stringMatching(/image|pdf|text/));\n\n      // Test camera integration on mobile\n      const hiddenInput = screen.getByRole('input', { type: 'file', hidden: true });\n      expect(hiddenInput).toHaveAttribute('capture', 'environment'); // Should allow camera capture\n    });\n\n    it('should handle drag and drop file upload', async () => {\n      const DocumentManager = require('../../client/src/components/common/DocumentManager.tsx').default;\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <DocumentManager />\n        </TestWrapper>\n      );\n\n      const uploadButton = screen.getByRole('button', { name: /upload/i });\n      await user.click(uploadButton);\n\n      // Find drag and drop area\n      const dropZone = screen.getByText(/drag.*drop|drop.*files/i).closest('div');\n      expect(dropZone).toBeInTheDocument();\n\n      // Simulate drag and drop\n      const mockFile = createMockFile('dropped-file.pdf', 100000, 'application/pdf');\n      const dataTransfer = new DataTransfer();\n      dataTransfer.items.add(mockFile);\n\n      fireEvent.dragOver(dropZone!, { dataTransfer });\n      fireEvent.drop(dropZone!, { dataTransfer });\n\n      // Verify file was added\n      await waitFor(() => {\n        expect(screen.getByText('dropped-file.pdf')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Accessibility and User Experience', () => {\n    it('should provide proper accessibility attributes for file uploads', async () => {\n      const BugReportPage = require('../../client/src/pages/settings/bug-reports.tsx').default;\n\n      render(\n        <TestWrapper>\n          <BugReportPage />\n        </TestWrapper>\n      );\n\n      const reportButton = await screen.findByTestId('button-report-bug');\n      await userEvent.click(reportButton);\n\n      const fileButton = screen.getByRole('button', { name: /attach files/i });\n      \n      // Check accessibility attributes\n      expect(fileButton).toHaveAttribute('aria-describedby');\n      expect(fileButton).toHaveAttribute('tabindex', '0');\n      \n      // Check for screen reader support\n      const srText = screen.getByText(/screenshots.*error logs.*console outputs/i);\n      expect(srText).toBeInTheDocument();\n    });\n\n    it('should provide clear upload status feedback', async () => {\n      const BugReportPage = require('../../client/src/pages/settings/bug-reports.tsx').default;\n\n      const user = userEvent.setup();\n\n      render(\n        <TestWrapper>\n          <BugReportPage />\n        </TestWrapper>\n      );\n\n      const reportButton = await screen.findByTestId('button-report-bug');\n      await user.click(reportButton);\n\n      // Add required fields\n      await user.type(screen.getByLabelText(/title/i), 'Accessibility Test');\n      await user.type(screen.getByLabelText(/description/i), 'Testing upload feedback.');\n      await user.type(screen.getByLabelText(/page/i), 'Test Page');\n\n      // Attach file\n      const fileButton = screen.getByRole('button', { name: /attach files/i });\n      await user.click(fileButton);\n\n      const hiddenInput = screen.getByRole('input', { type: 'file', hidden: true });\n      const testFile = createMockFile('test.png', 25000, 'image/png');\n\n      Object.defineProperty(hiddenInput, 'files', {\n        value: [testFile],\n        writable: false,\n      });\n\n      fireEvent.change(hiddenInput, { target: { files: [testFile] } });\n\n      // Verify file status display\n      await waitFor(() => {\n        expect(screen.getByText('Selected files (1):')).toBeInTheDocument();\n        expect(screen.getByText('test.png')).toBeInTheDocument();\n      });\n\n      // Submit and check for status updates\n      const submitButton = screen.getByRole('button', { name: /submit/i });\n      expect(submitButton).not.toBeDisabled();\n\n      await user.click(submitButton);\n\n      // Button should show loading state\n      await waitFor(() => {\n        const loadingButton = screen.getByRole('button', { name: /submitting|uploading/i });\n        expect(loadingButton).toBeDisabled();\n      });\n    });\n  });\n});"],"version":3}