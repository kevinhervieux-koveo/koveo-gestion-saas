bf70ae43917139c7513179bea8af9a59
"use strict";

/* istanbul ignore next */
function cov_rgrjhyh38() {
  var path = "/home/runner/workspace/shared/schemas/financial.ts";
  var hash = "930833d8f7e94c57472fe80b91933fcecc4ffddf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/shared/schemas/financial.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 341
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "7": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 17,
          column: 3
        }
      },
      "9": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "10": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "11": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 89
        }
      },
      "12": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 49,
          column: 3
        }
      },
      "13": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "14": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "15": {
        start: {
          line: 82,
          column: 68
        },
        end: {
          line: 82,
          column: 84
        }
      },
      "16": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "17": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 117,
          column: 3
        }
      },
      "18": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "19": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "20": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 144,
          column: 3
        }
      },
      "21": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "22": {
        start: {
          line: 136,
          column: 71
        },
        end: {
          line: 136,
          column: 86
        }
      },
      "23": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 41
        }
      },
      "24": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 169,
          column: 3
        }
      },
      "25": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 49
        }
      },
      "26": {
        start: {
          line: 164,
          column: 71
        },
        end: {
          line: 164,
          column: 86
        }
      },
      "27": {
        start: {
          line: 166,
          column: 84
        },
        end: {
          line: 166,
          column: 109
        }
      },
      "28": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 190,
          column: 3
        }
      },
      "29": {
        start: {
          line: 179,
          column: 86
        },
        end: {
          line: 179,
          column: 185
        }
      },
      "30": {
        start: {
          line: 179,
          column: 138
        },
        end: {
          line: 179,
          column: 184
        }
      },
      "31": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "32": {
        start: {
          line: 207,
          column: 0
        },
        end: {
          line: 216,
          column: 3
        }
      },
      "33": {
        start: {
          line: 217,
          column: 0
        },
        end: {
          line: 221,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 61,
            column: 21
          }
        },
        loc: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 49
          }
        },
        line: 61
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 82,
            column: 62
          },
          end: {
            line: 82,
            column: 63
          }
        },
        loc: {
          start: {
            line: 82,
            column: 68
          },
          end: {
            line: 82,
            column: 84
          }
        },
        line: 82
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 21
          }
        },
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 41
          }
        },
        line: 85
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 21
          }
        },
        loc: {
          start: {
            line: 99,
            column: 26
          },
          end: {
            line: 99,
            column: 50
          }
        },
        line: 99
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        },
        loc: {
          start: {
            line: 114,
            column: 26
          },
          end: {
            line: 114,
            column: 41
          }
        },
        line: 114
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 128,
            column: 21
          }
        },
        loc: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 128,
            column: 49
          }
        },
        line: 128
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 136,
            column: 65
          },
          end: {
            line: 136,
            column: 66
          }
        },
        loc: {
          start: {
            line: 136,
            column: 71
          },
          end: {
            line: 136,
            column: 86
          }
        },
        line: 136
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 141,
            column: 20
          },
          end: {
            line: 141,
            column: 21
          }
        },
        loc: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 141,
            column: 41
          }
        },
        line: 141
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 21
          }
        },
        loc: {
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 49
          }
        },
        line: 156
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 164,
            column: 65
          },
          end: {
            line: 164,
            column: 66
          }
        },
        loc: {
          start: {
            line: 164,
            column: 71
          },
          end: {
            line: 164,
            column: 86
          }
        },
        line: 164
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 166,
            column: 78
          },
          end: {
            line: 166,
            column: 79
          }
        },
        loc: {
          start: {
            line: 166,
            column: 84
          },
          end: {
            line: 166,
            column: 109
          }
        },
        line: 166
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 179,
            column: 75
          },
          end: {
            line: 179,
            column: 76
          }
        },
        loc: {
          start: {
            line: 179,
            column: 86
          },
          end: {
            line: 179,
            column: 185
          }
        },
        line: 179
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 179,
            column: 130
          },
          end: {
            line: 179,
            column: 131
          }
        },
        loc: {
          start: {
            line: 179,
            column: 138
          },
          end: {
            line: 179,
            column: 184
          }
        },
        line: 179
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 179,
            column: 86
          },
          end: {
            line: 179,
            column: 185
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 86
          },
          end: {
            line: 179,
            column: 92
          }
        }, {
          start: {
            line: 179,
            column: 96
          },
          end: {
            line: 179,
            column: 114
          }
        }, {
          start: {
            line: 179,
            column: 118
          },
          end: {
            line: 179,
            column: 185
          }
        }],
        line: 179
      },
      "1": {
        loc: {
          start: {
            line: 179,
            column: 138
          },
          end: {
            line: 179,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 138
          },
          end: {
            line: 179,
            column: 158
          }
        }, {
          start: {
            line: 179,
            column: 162
          },
          end: {
            line: 179,
            column: 184
          }
        }],
        line: 179
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/shared/schemas/financial.ts",
      mappings: "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",
      names: [],
      sources: ["/home/runner/workspace/shared/schemas/financial.ts"],
      sourcesContent: ["import { sql } from 'drizzle-orm';\nimport {\n  pgTable,\n  text,\n  timestamp,\n  uuid,\n  pgEnum,\n  boolean,\n  integer,\n  decimal,\n  date,\n  jsonb,\n  varchar,\n} from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { relations } from 'drizzle-orm';\nimport { users } from './core';\nimport { residences, buildings } from './property';\n\n// Financial enums\nexport const billStatusEnum = pgEnum('bill_status', [\n  'draft',\n  'sent',\n  'overdue',\n  'paid',\n  'cancelled',\n]);\n\nexport const oldBillTypeEnum = pgEnum('old_bill_type', [\n  'condo_fees',\n  'special_assessment',\n  'utility',\n  'maintenance',\n  'other',\n]);\n\nexport const billCategoryEnum = pgEnum('bill_category', [\n  'insurance',\n  'maintenance',\n  'salary',\n  'utilities',\n  'cleaning',\n  'security',\n  'landscaping',\n  'professional_services',\n  'administration',\n  'repairs',\n  'supplies',\n  'taxes',\n  'technology',\n  'reserves',\n  'other',\n]);\n\nexport const paymentTypeEnum = pgEnum('payment_type', ['unique', 'recurrent']);\n\nexport const schedulePaymentEnum = pgEnum('schedule_payment', [\n  'weekly',\n  'monthly',\n  'quarterly',\n  'yearly',\n  'custom',\n]);\n\n// Financial tables\n/**\n * Enhanced bills table for tracking financial obligations with advanced scheduling.\n * Supports unique and recurrent payments with custom scheduling options.\n */\nexport const bills = pgTable('bills', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  buildingId: varchar('building_id')\n    .notNull()\n    .references(() => buildings.id),\n  billNumber: text('bill_number').notNull().unique(),\n  title: text('title').notNull(),\n  description: text('description'),\n  category: billCategoryEnum('category').notNull(),\n  vendor: text('vendor'), // Company or service provider\n  paymentType: paymentTypeEnum('payment_type').notNull(), // unique or recurrent\n  schedulePayment: schedulePaymentEnum('schedule_payment'), // Only for recurrent payments\n  scheduleCustom: date('schedule_custom').array(), // Custom dates for custom schedules\n  costs: decimal('costs', { precision: 12, scale: 2 }).array().notNull(), // Array of costs for payment plan\n  totalAmount: decimal('total_amount', { precision: 12, scale: 2 }).notNull(),\n  startDate: date('start_date').notNull(), // When the bill series starts\n  endDate: date('end_date'), // For recurrent bills, when they end (optional for ongoing)\n  status: billStatusEnum('status').notNull().default('draft'),\n  filePath: text('file_path'), // Path to uploaded bill document\n  fileName: text('file_name'), // Original filename\n  fileSize: integer('file_size'), // File size in bytes\n  isAiAnalyzed: boolean('is_ai_analyzed').default(false),\n  aiAnalysisData: jsonb('ai_analysis_data'), // Store AI-extracted data\n  notes: text('notes'),\n  autoGenerated: boolean('auto_generated').notNull().default(false), // Indicates if this bill was auto-generated\n  reference: varchar('reference').references(() => bills.id), // References the original bill for auto-generated bills\n  createdBy: varchar('created_by')\n    .notNull()\n    .references(() => users.id),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Legacy bills table - keeping for backward compatibility.\n * Will be migrated to new bills table structure.\n */\nexport const oldBills = pgTable('old_bills', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  residenceId: varchar('residence_id')\n    .notNull()\n    .references(() => residences.id),\n  billNumber: text('bill_number').notNull().unique(),\n  type: oldBillTypeEnum('type').notNull(),\n  description: text('description').notNull(),\n  amount: decimal('amount', { precision: 12, scale: 2 }).notNull(),\n  dueDate: date('due_date').notNull(),\n  issueDate: date('issue_date').notNull(),\n  status: billStatusEnum('status').notNull().default('draft'),\n  notes: text('notes'),\n  lateFeeAmount: decimal('late_fee_amount', { precision: 10, scale: 2 }),\n  discountAmount: decimal('discount_amount', { precision: 10, scale: 2 }),\n  finalAmount: decimal('final_amount', { precision: 12, scale: 2 }).notNull(),\n  paymentReceivedDate: date('payment_received_date'),\n  createdBy: varchar('created_by')\n    .notNull()\n    .references(() => users.id),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Budgets table for tracking financial planning by building and category.\n * Supports operational, reserve, and special project budgets.\n */\nexport const budgets = pgTable('budgets', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  buildingId: varchar('building_id')\n    .notNull()\n    .references(() => buildings.id),\n  year: integer('year').notNull(),\n  name: text('name').notNull(),\n  description: text('description'),\n  category: text('category').notNull(), // 'operational', 'reserve', 'special_project'\n  budgetedAmount: decimal('budgeted_amount', { precision: 12, scale: 2 }).notNull(),\n  actualAmount: decimal('actual_amount', { precision: 12, scale: 2 }).default('0'),\n  variance: decimal('variance', { precision: 12, scale: 2 }).default('0'),\n  approvedBy: varchar('approved_by').references(() => users.id),\n  approvedDate: date('approved_date'),\n  isActive: boolean('is_active').notNull().default(true),\n  createdBy: varchar('created_by')\n    .notNull()\n    .references(() => users.id),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Monthly budgets table for detailed monthly tracking of income and spending by building.\n * Automatically populated for each building from construction date to 25 years in the future.\n * Updated monthly on the 1st and supports approval workflow.\n */\nexport const monthlyBudgets = pgTable('monthly_budgets', {\n  id: varchar('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  buildingId: varchar('building_id')\n    .notNull()\n    .references(() => buildings.id),\n  year: integer('year').notNull(),\n  month: integer('month').notNull(), // 1-12\n  incomeTypes: text('income_types').array().notNull(), // Array of income categories from money_flow\n  incomes: decimal('incomes', { precision: 12, scale: 2 }).array().notNull(), // Array of income amounts corresponding to incomeTypes\n  spendingTypes: text('spending_types').array().notNull(), // Array of expense categories from money_flow\n  spendings: decimal('spendings', { precision: 12, scale: 2 }).array().notNull(), // Array of spending amounts corresponding to spendingTypes\n  approved: boolean('approved').notNull().default(false),\n  approvedBy: varchar('approved_by').references(() => users.id),\n  approvedDate: timestamp('approved_date'),\n  originalBudgetId: varchar('original_budget_id').references(() => monthlyBudgets.id), // References the original budget if this is an approved copy\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n// Insert schemas\n// Removed insertMoneyFlowSchema - money flow table deleted\n\nexport const insertBillSchema = createInsertSchema(bills, {\n  // Custom validations for strict schema compliance\n  billNumber: z.string().min(1, \"Bill number is required\"),\n  title: z.string().min(1, \"Title is required\"),\n  category: z.enum(['insurance', 'maintenance', 'salary', 'utilities', 'cleaning', 'security', 'landscaping', 'professional_services', 'administration', 'repairs', 'supplies', 'taxes', 'technology', 'reserves', 'other']),\n  paymentType: z.enum(['unique', 'recurrent']),\n  schedulePayment: z.enum(['weekly', 'monthly', 'quarterly', 'yearly', 'custom']).optional(),\n  scheduleCustom: z.array(z.coerce.date()).optional().refine(\n    (dates) => !dates || dates.length === 0 || dates.every(date => date instanceof Date && !isNaN(date.getTime())),\n    \"All custom schedule dates must be valid dates\"\n  ),\n  costs: z.array(z.coerce.number().positive(\"All costs must be positive\")).min(1, \"At least one cost is required\"),\n  totalAmount: z.coerce.number().positive(\"Total amount must be positive\"),\n  startDate: z.coerce.date(),\n  endDate: z.coerce.date().optional(),\n  status: z.enum(['draft', 'sent', 'overdue', 'paid', 'cancelled']).default('draft'),\n  autoGenerated: z.boolean().default(false),\n}).omit({ \n  id: true, \n  createdAt: true, \n  updatedAt: true \n});\n\nexport const insertOldBillSchema = z.object({\n  residenceId: z.string().uuid(),\n  billNumber: z.string(),\n  type: z.string(),\n  description: z.string().optional(),\n  amount: z.number(),\n  dueDate: z.date(),\n  issueDate: z.date().optional(),\n  status: z.string().default('unpaid'),\n  notes: z.string().optional(),\n  lateFeeAmount: z.number().optional(),\n  discountAmount: z.number().optional(),\n  finalAmount: z.number().optional(),\n  paymentReceivedDate: z.date().optional(),\n  createdBy: z.string().uuid(),\n});\n\nexport const insertBudgetSchema = z.object({\n  buildingId: z.string().uuid(),\n  year: z.number().int(),\n  name: z.string(),\n  description: z.string().optional(),\n  category: z.string(),\n  budgetedAmount: z.number(),\n  actualAmount: z.number().optional(),\n  createdBy: z.string().uuid(),\n});\n\nexport const insertMonthlyBudgetSchema = createInsertSchema(monthlyBudgets).omit({ \n  id: true, \n  createdAt: true, \n  updatedAt: true \n});\n\n// Types\n\n/**\n * Bills insert and select types.\n */\nexport type InsertBill = z.infer<typeof insertBillSchema>;\n/**\n *\n */\nexport type Bill = typeof bills.$inferSelect;\n\n/**\n * Legacy bills types for backward compatibility.\n */\nexport type InsertOldBill = z.infer<typeof insertOldBillSchema>;\n/**\n *\n */\nexport type OldBill = typeof oldBills.$inferSelect;\n\n/**\n * Budget insert and select types.\n */\nexport type InsertBudget = z.infer<typeof insertBudgetSchema>;\n/**\n *\n */\nexport type Budget = typeof budgets.$inferSelect;\n\n/**\n * Monthly budget insert and select types.\n */\nexport type InsertMonthlyBudget = typeof monthlyBudgets.$inferInsert;\n/**\n *\n */\nexport type MonthlyBudget = typeof monthlyBudgets.$inferSelect;\n\n// Relations - temporarily commented out due to drizzle-orm version compatibility\n// Removed moneyFlow relations\n//   }),\n//   residence: one(residences, {\n//   (removed money flow relations)\n//   }),\n// }));\n\n// export const billsRelations = relations(bills, ({ one, many }) => ({\n//   building: one(buildings, {\n//     fields: [bills.buildingId],\n//     references: [buildings.id],\n//   }),\n//   createdBy: one(users, {\n//     fields: [bills.createdBy],\n//     references: [users.id],\n//   }),\n//   originalBill: one(bills, {\n//     fields: [bills.reference],\n//     references: [bills.id],\n//     relationName: 'billReference'\n//   }),\n//   generatedBills: many(bills, {\n//     relationName: 'billReference'\n//   }),\n//   (removed money flow relations),\n// }));\n\n// export const oldBillsRelations = relations(oldBills, ({ one }) => ({\n//   residence: one(residences, {\n//     fields: [oldBills.residenceId],\n//     references: [residences.id],\n//   }),\n//   createdBy: one(users, {\n//     fields: [oldBills.createdBy],\n//     references: [users.id],\n//   }),\n// }));\n\n// export const budgetsRelations = relations(budgets, ({ one }) => ({\n//   building: one(buildings, {\n//     fields: [budgets.buildingId],\n//     references: [buildings.id],\n//   }),\n//   createdBy: one(users, {\n//     fields: [budgets.createdBy],\n//     references: [users.id],\n//   }),\n//   approvedBy: one(users, {\n//     fields: [budgets.approvedBy],\n//     references: [users.id],\n//   }),\n// }));\n\n// export const monthlyBudgetsRelations = relations(monthlyBudgets, ({ one }) => ({\n//   building: one(buildings, {\n//     fields: [monthlyBudgets.buildingId],\n//     references: [buildings.id],\n//   }),\n//   approvedBy: one(users, {\n//     fields: [monthlyBudgets.approvedBy],\n//     references: [users.id],\n//   }),\n//   originalBudget: one(monthlyBudgets, {\n//     fields: [monthlyBudgets.originalBudgetId],\n//     references: [monthlyBudgets.id],\n//     relationName: 'budgetCopy'\n//   }),\n// }));\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "930833d8f7e94c57472fe80b91933fcecc4ffddf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rgrjhyh38 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rgrjhyh38();
cov_rgrjhyh38().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rgrjhyh38().s[1]++;
exports.insertMonthlyBudgetSchema = exports.insertBudgetSchema = exports.insertOldBillSchema = exports.insertBillSchema = exports.monthlyBudgets = exports.budgets = exports.oldBills = exports.bills = exports.schedulePaymentEnum = exports.paymentTypeEnum = exports.billCategoryEnum = exports.oldBillTypeEnum = exports.billStatusEnum = void 0;
const drizzle_orm_1 =
/* istanbul ignore next */
(cov_rgrjhyh38().s[2]++, require("drizzle-orm"));
const pg_core_1 =
/* istanbul ignore next */
(cov_rgrjhyh38().s[3]++, require("drizzle-orm/pg-core"));
const drizzle_zod_1 =
/* istanbul ignore next */
(cov_rgrjhyh38().s[4]++, require("drizzle-zod"));
const zod_1 =
/* istanbul ignore next */
(cov_rgrjhyh38().s[5]++, require("zod"));
const core_1 =
/* istanbul ignore next */
(cov_rgrjhyh38().s[6]++, require("./core"));
const property_1 =
/* istanbul ignore next */
(cov_rgrjhyh38().s[7]++, require("./property"));
// Financial enums
/* istanbul ignore next */
cov_rgrjhyh38().s[8]++;
exports.billStatusEnum = (0, pg_core_1.pgEnum)('bill_status', ['draft', 'sent', 'overdue', 'paid', 'cancelled']);
/* istanbul ignore next */
cov_rgrjhyh38().s[9]++;
exports.oldBillTypeEnum = (0, pg_core_1.pgEnum)('old_bill_type', ['condo_fees', 'special_assessment', 'utility', 'maintenance', 'other']);
/* istanbul ignore next */
cov_rgrjhyh38().s[10]++;
exports.billCategoryEnum = (0, pg_core_1.pgEnum)('bill_category', ['insurance', 'maintenance', 'salary', 'utilities', 'cleaning', 'security', 'landscaping', 'professional_services', 'administration', 'repairs', 'supplies', 'taxes', 'technology', 'reserves', 'other']);
/* istanbul ignore next */
cov_rgrjhyh38().s[11]++;
exports.paymentTypeEnum = (0, pg_core_1.pgEnum)('payment_type', ['unique', 'recurrent']);
/* istanbul ignore next */
cov_rgrjhyh38().s[12]++;
exports.schedulePaymentEnum = (0, pg_core_1.pgEnum)('schedule_payment', ['weekly', 'monthly', 'quarterly', 'yearly', 'custom']);
// Financial tables
/**
 * Enhanced bills table for tracking financial obligations with advanced scheduling.
 * Supports unique and recurrent payments with custom scheduling options.
 */
/* istanbul ignore next */
cov_rgrjhyh38().s[13]++;
exports.bills = (0, pg_core_1.pgTable)('bills', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  buildingId: (0, pg_core_1.varchar)('building_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[0]++;
    cov_rgrjhyh38().s[14]++;
    return property_1.buildings.id;
  }),
  billNumber: (0, pg_core_1.text)('bill_number').notNull().unique(),
  title: (0, pg_core_1.text)('title').notNull(),
  description: (0, pg_core_1.text)('description'),
  category: (0, exports.billCategoryEnum)('category').notNull(),
  vendor: (0, pg_core_1.text)('vendor'),
  // Company or service provider
  paymentType: (0, exports.paymentTypeEnum)('payment_type').notNull(),
  // unique or recurrent
  schedulePayment: (0, exports.schedulePaymentEnum)('schedule_payment'),
  // Only for recurrent payments
  scheduleCustom: (0, pg_core_1.date)('schedule_custom').array(),
  // Custom dates for custom schedules
  costs: (0, pg_core_1.decimal)('costs', {
    precision: 12,
    scale: 2
  }).array().notNull(),
  // Array of costs for payment plan
  totalAmount: (0, pg_core_1.decimal)('total_amount', {
    precision: 12,
    scale: 2
  }).notNull(),
  startDate: (0, pg_core_1.date)('start_date').notNull(),
  // When the bill series starts
  endDate: (0, pg_core_1.date)('end_date'),
  // For recurrent bills, when they end (optional for ongoing)
  status: (0, exports.billStatusEnum)('status').notNull().default('draft'),
  filePath: (0, pg_core_1.text)('file_path'),
  // Path to uploaded bill document
  fileName: (0, pg_core_1.text)('file_name'),
  // Original filename
  fileSize: (0, pg_core_1.integer)('file_size'),
  // File size in bytes
  isAiAnalyzed: (0, pg_core_1.boolean)('is_ai_analyzed').default(false),
  aiAnalysisData: (0, pg_core_1.jsonb)('ai_analysis_data'),
  // Store AI-extracted data
  notes: (0, pg_core_1.text)('notes'),
  autoGenerated: (0, pg_core_1.boolean)('auto_generated').notNull().default(false),
  // Indicates if this bill was auto-generated
  reference: (0, pg_core_1.varchar)('reference').references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[1]++;
    cov_rgrjhyh38().s[15]++;
    return exports.bills.id;
  }),
  // References the original bill for auto-generated bills
  createdBy: (0, pg_core_1.varchar)('created_by').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[2]++;
    cov_rgrjhyh38().s[16]++;
    return core_1.users.id;
  }),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Legacy bills table - keeping for backward compatibility.
 * Will be migrated to new bills table structure.
 */
/* istanbul ignore next */
cov_rgrjhyh38().s[17]++;
exports.oldBills = (0, pg_core_1.pgTable)('old_bills', {
  id: (0, pg_core_1.uuid)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  residenceId: (0, pg_core_1.varchar)('residence_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[3]++;
    cov_rgrjhyh38().s[18]++;
    return property_1.residences.id;
  }),
  billNumber: (0, pg_core_1.text)('bill_number').notNull().unique(),
  type: (0, exports.oldBillTypeEnum)('type').notNull(),
  description: (0, pg_core_1.text)('description').notNull(),
  amount: (0, pg_core_1.decimal)('amount', {
    precision: 12,
    scale: 2
  }).notNull(),
  dueDate: (0, pg_core_1.date)('due_date').notNull(),
  issueDate: (0, pg_core_1.date)('issue_date').notNull(),
  status: (0, exports.billStatusEnum)('status').notNull().default('draft'),
  notes: (0, pg_core_1.text)('notes'),
  lateFeeAmount: (0, pg_core_1.decimal)('late_fee_amount', {
    precision: 10,
    scale: 2
  }),
  discountAmount: (0, pg_core_1.decimal)('discount_amount', {
    precision: 10,
    scale: 2
  }),
  finalAmount: (0, pg_core_1.decimal)('final_amount', {
    precision: 12,
    scale: 2
  }).notNull(),
  paymentReceivedDate: (0, pg_core_1.date)('payment_received_date'),
  createdBy: (0, pg_core_1.varchar)('created_by').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[4]++;
    cov_rgrjhyh38().s[19]++;
    return core_1.users.id;
  }),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Budgets table for tracking financial planning by building and category.
 * Supports operational, reserve, and special project budgets.
 */
/* istanbul ignore next */
cov_rgrjhyh38().s[20]++;
exports.budgets = (0, pg_core_1.pgTable)('budgets', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  buildingId: (0, pg_core_1.varchar)('building_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[5]++;
    cov_rgrjhyh38().s[21]++;
    return property_1.buildings.id;
  }),
  year: (0, pg_core_1.integer)('year').notNull(),
  name: (0, pg_core_1.text)('name').notNull(),
  description: (0, pg_core_1.text)('description'),
  category: (0, pg_core_1.text)('category').notNull(),
  // 'operational', 'reserve', 'special_project'
  budgetedAmount: (0, pg_core_1.decimal)('budgeted_amount', {
    precision: 12,
    scale: 2
  }).notNull(),
  actualAmount: (0, pg_core_1.decimal)('actual_amount', {
    precision: 12,
    scale: 2
  }).default('0'),
  variance: (0, pg_core_1.decimal)('variance', {
    precision: 12,
    scale: 2
  }).default('0'),
  approvedBy: (0, pg_core_1.varchar)('approved_by').references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[6]++;
    cov_rgrjhyh38().s[22]++;
    return core_1.users.id;
  }),
  approvedDate: (0, pg_core_1.date)('approved_date'),
  isActive: (0, pg_core_1.boolean)('is_active').notNull().default(true),
  createdBy: (0, pg_core_1.varchar)('created_by').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[7]++;
    cov_rgrjhyh38().s[23]++;
    return core_1.users.id;
  }),
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
/**
 * Monthly budgets table for detailed monthly tracking of income and spending by building.
 * Automatically populated for each building from construction date to 25 years in the future.
 * Updated monthly on the 1st and supports approval workflow.
 */
/* istanbul ignore next */
cov_rgrjhyh38().s[24]++;
exports.monthlyBudgets = (0, pg_core_1.pgTable)('monthly_budgets', {
  id: (0, pg_core_1.varchar)('id').primaryKey().default((0, drizzle_orm_1.sql)`gen_random_uuid()`),
  buildingId: (0, pg_core_1.varchar)('building_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[8]++;
    cov_rgrjhyh38().s[25]++;
    return property_1.buildings.id;
  }),
  year: (0, pg_core_1.integer)('year').notNull(),
  month: (0, pg_core_1.integer)('month').notNull(),
  // 1-12
  incomeTypes: (0, pg_core_1.text)('income_types').array().notNull(),
  // Array of income categories from money_flow
  incomes: (0, pg_core_1.decimal)('incomes', {
    precision: 12,
    scale: 2
  }).array().notNull(),
  // Array of income amounts corresponding to incomeTypes
  spendingTypes: (0, pg_core_1.text)('spending_types').array().notNull(),
  // Array of expense categories from money_flow
  spendings: (0, pg_core_1.decimal)('spendings', {
    precision: 12,
    scale: 2
  }).array().notNull(),
  // Array of spending amounts corresponding to spendingTypes
  approved: (0, pg_core_1.boolean)('approved').notNull().default(false),
  approvedBy: (0, pg_core_1.varchar)('approved_by').references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[9]++;
    cov_rgrjhyh38().s[26]++;
    return core_1.users.id;
  }),
  approvedDate: (0, pg_core_1.timestamp)('approved_date'),
  originalBudgetId: (0, pg_core_1.varchar)('original_budget_id').references(() => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[10]++;
    cov_rgrjhyh38().s[27]++;
    return exports.monthlyBudgets.id;
  }),
  // References the original budget if this is an approved copy
  createdAt: (0, pg_core_1.timestamp)('created_at').defaultNow(),
  updatedAt: (0, pg_core_1.timestamp)('updated_at').defaultNow()
});
// Insert schemas
// Removed insertMoneyFlowSchema - money flow table deleted
/* istanbul ignore next */
cov_rgrjhyh38().s[28]++;
exports.insertBillSchema = (0, drizzle_zod_1.createInsertSchema)(exports.bills, {
  // Custom validations for strict schema compliance
  billNumber: zod_1.z.string().min(1, "Bill number is required"),
  title: zod_1.z.string().min(1, "Title is required"),
  category: zod_1.z.enum(['insurance', 'maintenance', 'salary', 'utilities', 'cleaning', 'security', 'landscaping', 'professional_services', 'administration', 'repairs', 'supplies', 'taxes', 'technology', 'reserves', 'other']),
  paymentType: zod_1.z.enum(['unique', 'recurrent']),
  schedulePayment: zod_1.z.enum(['weekly', 'monthly', 'quarterly', 'yearly', 'custom']).optional(),
  scheduleCustom: zod_1.z.array(zod_1.z.coerce.date()).optional().refine(dates => {
    /* istanbul ignore next */
    cov_rgrjhyh38().f[11]++;
    cov_rgrjhyh38().s[29]++;
    return /* istanbul ignore next */(cov_rgrjhyh38().b[0][0]++, !dates) ||
    /* istanbul ignore next */
    (cov_rgrjhyh38().b[0][1]++, dates.length === 0) ||
    /* istanbul ignore next */
    (cov_rgrjhyh38().b[0][2]++, dates.every(date => {
      /* istanbul ignore next */
      cov_rgrjhyh38().f[12]++;
      cov_rgrjhyh38().s[30]++;
      return /* istanbul ignore next */(cov_rgrjhyh38().b[1][0]++, date instanceof Date) &&
      /* istanbul ignore next */
      (cov_rgrjhyh38().b[1][1]++, !isNaN(date.getTime()));
    }));
  }, "All custom schedule dates must be valid dates"),
  costs: zod_1.z.array(zod_1.z.coerce.number().positive("All costs must be positive")).min(1, "At least one cost is required"),
  totalAmount: zod_1.z.coerce.number().positive("Total amount must be positive"),
  startDate: zod_1.z.coerce.date(),
  endDate: zod_1.z.coerce.date().optional(),
  status: zod_1.z.enum(['draft', 'sent', 'overdue', 'paid', 'cancelled']).default('draft'),
  autoGenerated: zod_1.z.boolean().default(false)
}).omit({
  id: true,
  createdAt: true,
  updatedAt: true
});
/* istanbul ignore next */
cov_rgrjhyh38().s[31]++;
exports.insertOldBillSchema = zod_1.z.object({
  residenceId: zod_1.z.string().uuid(),
  billNumber: zod_1.z.string(),
  type: zod_1.z.string(),
  description: zod_1.z.string().optional(),
  amount: zod_1.z.number(),
  dueDate: zod_1.z.date(),
  issueDate: zod_1.z.date().optional(),
  status: zod_1.z.string().default('unpaid'),
  notes: zod_1.z.string().optional(),
  lateFeeAmount: zod_1.z.number().optional(),
  discountAmount: zod_1.z.number().optional(),
  finalAmount: zod_1.z.number().optional(),
  paymentReceivedDate: zod_1.z.date().optional(),
  createdBy: zod_1.z.string().uuid()
});
/* istanbul ignore next */
cov_rgrjhyh38().s[32]++;
exports.insertBudgetSchema = zod_1.z.object({
  buildingId: zod_1.z.string().uuid(),
  year: zod_1.z.number().int(),
  name: zod_1.z.string(),
  description: zod_1.z.string().optional(),
  category: zod_1.z.string(),
  budgetedAmount: zod_1.z.number(),
  actualAmount: zod_1.z.number().optional(),
  createdBy: zod_1.z.string().uuid()
});
/* istanbul ignore next */
cov_rgrjhyh38().s[33]++;
exports.insertMonthlyBudgetSchema = (0, drizzle_zod_1.createInsertSchema)(exports.monthlyBudgets).omit({
  id: true,
  createdAt: true,
  updatedAt: true
});
// Relations - temporarily commented out due to drizzle-orm version compatibility
// Removed moneyFlow relations
//   }),
//   residence: one(residences, {
//   (removed money flow relations)
//   }),
// }));
// export const billsRelations = relations(bills, ({ one, many }) => ({
//   building: one(buildings, {
//     fields: [bills.buildingId],
//     references: [buildings.id],
//   }),
//   createdBy: one(users, {
//     fields: [bills.createdBy],
//     references: [users.id],
//   }),
//   originalBill: one(bills, {
//     fields: [bills.reference],
//     references: [bills.id],
//     relationName: 'billReference'
//   }),
//   generatedBills: many(bills, {
//     relationName: 'billReference'
//   }),
//   (removed money flow relations),
// }));
// export const oldBillsRelations = relations(oldBills, ({ one }) => ({
//   residence: one(residences, {
//     fields: [oldBills.residenceId],
//     references: [residences.id],
//   }),
//   createdBy: one(users, {
//     fields: [oldBills.createdBy],
//     references: [users.id],
//   }),
// }));
// export const budgetsRelations = relations(budgets, ({ one }) => ({
//   building: one(buildings, {
//     fields: [budgets.buildingId],
//     references: [buildings.id],
//   }),
//   createdBy: one(users, {
//     fields: [budgets.createdBy],
//     references: [users.id],
//   }),
//   approvedBy: one(users, {
//     fields: [budgets.approvedBy],
//     references: [users.id],
//   }),
// }));
// export const monthlyBudgetsRelations = relations(monthlyBudgets, ({ one }) => ({
//   building: one(buildings, {
//     fields: [monthlyBudgets.buildingId],
//     references: [buildings.id],
//   }),
//   approvedBy: one(users, {
//     fields: [monthlyBudgets.approvedBy],
//     references: [users.id],
//   }),
//   originalBudget: one(monthlyBudgets, {
//     fields: [monthlyBudgets.originalBudgetId],
//     references: [monthlyBudgets.id],
//     relationName: 'budgetCopy'
//   }),
// }));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,