{"file":"/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/document/copySelection.js","mappings":"AAAA,YAAY,CAAC;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACpE,OAAO,CAAC,oCAAoC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACtD,IAAI,SAAS,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AACvD,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAE5B,SAAS,aAAa,CAAC,MAAM;IACzB,MAAM,IAAI,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7C,YAAY,EAAE,0BAA0B,CAAC,MAAM,CAAC;KACnD,CAAC,CAAC,CAAC;QACA,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC5D,CAAC;IACF,MAAM,EAAE,GAAG,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACxE,KAAI,MAAM,IAAI,IAAI,IAAI,EAAC,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACb,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjC,CAAC;IACL,CAAC;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AACD,SAAS,0BAA0B,CAAC,MAAM;IACtC,MAAM,GAAG,GAAG,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACtC,MAAM,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAClC,OAAO,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/user-event/dist/cjs/document/copySelection.js"],"sourcesContent":["'use strict';\n\nvar DataTransfer = require('../utils/dataTransfer/DataTransfer.js');\nrequire('../utils/dataTransfer/Clipboard.js');\nvar getWindow = require('../utils/misc/getWindow.js');\nvar selection = require('../utils/focus/selection.js');\nvar UI = require('./UI.js');\n\nfunction copySelection(target) {\n    const data = selection.hasOwnSelection(target) ? {\n        'text/plain': readSelectedValueFromInput(target)\n    } : {\n        'text/plain': String(target.ownerDocument.getSelection())\n    };\n    const dt = DataTransfer.createDataTransfer(getWindow.getWindow(target));\n    for(const type in data){\n        if (data[type]) {\n            dt.setData(type, data[type]);\n        }\n    }\n    return dt;\n}\nfunction readSelectedValueFromInput(target) {\n    const sel = UI.getUISelection(target);\n    const val = UI.getUIValue(target);\n    return val.substring(sel.startOffset, sel.endOffset);\n}\n\nexports.copySelection = copySelection;\n"],"version":3}