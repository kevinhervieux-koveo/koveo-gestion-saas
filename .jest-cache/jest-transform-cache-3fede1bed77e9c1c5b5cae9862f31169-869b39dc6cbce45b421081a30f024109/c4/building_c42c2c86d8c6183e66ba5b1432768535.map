{"file":"/home/runner/workspace/client/src/pages/residents/building.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/residents/building.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLocation } from 'wouter';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Label } from '@/components/ui/label';\nimport {\n  Building,\n  MapPin,\n  Calendar,\n  Users,\n  Phone,\n  Mail,\n  FileText,\n  Home,\n  Car,\n  Package,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { Building as BuildingType, Contact } from '@shared/schema';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useLanguage } from '@/hooks/use-language';\n\n/**\n *\n */\ninterface BuildingWithStats extends BuildingType {\n  organizationName: string;\n  organizationType: string;\n  totalUnits: number;\n  occupiedUnits: number;\n  occupancyRate: number;\n  vacantUnits: number;\n}\n\n/**\n *\n */\nexport default function MyBuilding() {\n  const [, navigate] = useLocation();\n  const { t } = useLanguage();\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  // Fetch current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // Fetch buildings accessible to the user based on their residences\n  const {\n    data: buildingsData,\n    isLoading: isLoadingBuildings,\n    error: buildingsError,\n  } = useQuery<{\n    buildings: BuildingWithStats[];\n    meta?: any;\n  }>({\n    queryKey: ['/api/users/buildings', user?.id],\n    queryFn: async () => {\n      if (!user?.id) {\n        return { buildings: [] };\n      }\n      const response = await apiRequest('GET', `/api/users/${user.id}/buildings`);\n      return response.json();\n    },\n    enabled: !!user?.id,\n  });\n\n  const buildings: BuildingWithStats[] = buildingsData?.buildings || [];\n\n  // Pagination calculations\n  const totalPages = Math.ceil(buildings.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentBuildings = buildings.slice(startIndex, endIndex);\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prev) => Math.max(1, prev - 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prev) => Math.min(totalPages, prev + 1));\n  };\n\n  const handlePageClick = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleViewDocuments = (buildingId: string) => {\n    navigate(`/residents/building/documents?buildingId=${buildingId}`);\n  };\n\n  if (isLoadingBuildings) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('myBuildings')} subtitle={t('viewBuildingsAccess')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <div className='text-center py-8'>\n              <div className='animate-spin w-6 h-6 border-2 border-primary border-t-transparent rounded-full mx-auto'></div>\n              <p className='text-muted-foreground mt-2'>Loading building information...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (buildings.length === 0) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('myBuildings')} subtitle={t('viewBuildingsAccess')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <Building className='w-16 h-16 mx-auto text-gray-400 mb-4' />\n                <h3 className='text-lg font-semibold text-gray-600 mb-2'>\n                  {t('noBuildingsFound')}\n                </h3>\n                <p className='text-gray-500'>You don't have access to any buildings yet.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title='My Buildings' subtitle='View buildings you have access to' />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Building Cards */}\n          <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\n            {currentBuildings.map((building) => (\n              <Card key={building.id} className='hover:shadow-lg transition-shadow'>\n                <CardHeader>\n                  <CardTitle className='flex items-center gap-2'>\n                    <Building className='w-5 h-5' />\n                    {building.name}\n                  </CardTitle>\n                  <div className='text-sm text-muted-foreground'>{building.organizationName}</div>\n                </CardHeader>\n                <CardContent className='space-y-4'>\n                  <div className='grid grid-cols-1 gap-3'>\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>{t('address')}</Label>\n                      <div className='flex items-start gap-2'>\n                        <MapPin className='w-3 h-3 mt-0.5' />\n                        <div>\n                          <p className='text-sm text-gray-700'>{building.address}</p>\n                          <p className='text-sm text-gray-700'>\n                            {building.city}, {building.province} {building.postalCode}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className='grid grid-cols-2 gap-3'>\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>\n                          {t('buildingType')}\n                        </Label>\n                        <p className='text-sm text-gray-700 capitalize'>{building.buildingType}</p>\n                      </div>\n                      {building.yearBuilt && (\n                        <div>\n                          <Label className='text-xs font-medium text-gray-500'>\n                            {t('yearBuilt')}\n                          </Label>\n                          <div className='flex items-center gap-1'>\n                            <Calendar className='w-3 h-3' />\n                            <span className='text-sm text-gray-700'>{building.yearBuilt}</span>\n                          </div>\n                        </div>\n                      )}\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>\n                          {t('totalUnits')}\n                        </Label>\n                        <div className='flex items-center gap-1'>\n                          <Home className='w-3 h-3' />\n                          <span className='text-sm text-gray-700'>{building.totalUnits}</span>\n                        </div>\n                      </div>\n                      {building.totalFloors && (\n                        <div>\n                          <Label className='text-xs font-medium text-gray-500'>\n                            {t('totalFloors')}\n                          </Label>\n                          <p className='text-sm text-gray-700'>{building.totalFloors}</p>\n                        </div>\n                      )}\n                    </div>\n\n                    {(building.parkingSpaces || building.storageSpaces) && (\n                      <div className='grid grid-cols-2 gap-3'>\n                        {building.parkingSpaces && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('parking')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Car className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {building.parkingSpaces}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                        {building.storageSpaces && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('storage')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Package className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {building.storageSpaces}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n\n                    {building.managementCompany && (\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>\n                          {t('managementCompany')}\n                        </Label>\n                        <p className='text-sm text-gray-700'>{building.managementCompany}</p>\n                      </div>\n                    )}\n\n                    {/* Occupancy Stats */}\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>{t('occupancy')}</Label>\n                      <div className='flex items-center gap-2 text-sm'>\n                        <Badge variant='outline' className='text-xs'>\n                          {building.occupiedUnits}/{building.totalUnits} {t('units')}\n                        </Badge>\n                        <Badge\n                          variant={\n                            building.occupancyRate >= 90\n                              ? 'default'\n                              : building.occupancyRate >= 70\n                                ? 'secondary'\n                                : 'destructive'\n                          }\n                          className='text-xs'\n                        >\n                          {Math.round(building.occupancyRate)}% {t('occupied')}\n                        </Badge>\n                      </div>\n                    </div>\n\n                    {building.amenities && (\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>{t('amenities')}</Label>\n                        <div className='flex flex-wrap gap-1 mt-1'>\n                          {(() => {\n                            try {\n                              const amenities =\n                                typeof building.amenities === 'string'\n                                  ? JSON.parse(building.amenities)\n                                  : building.amenities;\n                              return Array.isArray(amenities)\n                                ? amenities.slice(0, 3).map((amenity: string, index: number) => (\n                                    <Badge key={index} variant='outline' className='text-xs'>\n                                      {amenity}\n                                    </Badge>\n                                  ))\n                                : null;\n                            } catch (_e) {\n                              return (\n                                <span className='text-xs text-muted-foreground'>\n                                  {t('unableToDisplayAmenities')}\n                                </span>\n                              );\n                            }\n                          })()}\n                          {(() => {\n                            try {\n                              const amenities =\n                                typeof building.amenities === 'string'\n                                  ? JSON.parse(building.amenities)\n                                  : building.amenities;\n                              if (Array.isArray(amenities) && amenities.length > 3) {\n                                return (\n                                  <Badge variant='outline' className='text-xs'>\n                                    +{amenities.length - 3} {t('moreAmenities')}\n                                  </Badge>\n                                );\n                              }\n                            } catch (_e) {\n                              // Ignore error\n                            }\n                            return null;\n                          })()}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className='pt-4 border-t'>\n                    <Button\n                      onClick={() => handleViewDocuments(building.id)}\n                      variant='outline'\n                      size='sm'\n                      className='w-full justify-start'\n                    >\n                      <FileText className='w-4 h-4 mr-2' />\n                      {t('viewDocumentsButton')}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className='flex items-center justify-center gap-2 mt-8'>\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handlePreviousPage}\n                disabled={currentPage === 1}\n              >\n                <ChevronLeft className='h-4 w-4' />\n                {t('previous')}\n              </Button>\n\n              <div className='flex gap-1'>\n                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                  let pageNum;\n                  if (totalPages <= 5) {\n                    pageNum = i + 1;\n                  } else if (currentPage <= 3) {\n                    pageNum = i + 1;\n                  } else if (currentPage >= totalPages - 2) {\n                    pageNum = totalPages - 4 + i;\n                  } else {\n                    pageNum = currentPage - 2 + i;\n                  }\n\n                  return (\n                    <Button\n                      key={pageNum}\n                      variant={currentPage === pageNum ? 'default' : 'outline'}\n                      size='sm'\n                      onClick={() => handlePageClick(pageNum)}\n                    >\n                      {pageNum}\n                    </Button>\n                  );\n                })}\n              </div>\n\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handleNextPage}\n                disabled={currentPage === totalPages}\n              >\n                {t('next')}\n                <ChevronRight className='h-4 w-4' />\n              </Button>\n            </div>\n          )}\n\n          {/* Page info */}\n          <div className='text-center text-sm text-muted-foreground mt-4'>\n            {t('showing')} {startIndex + 1} to {Math.min(endIndex, buildings.length)} of {buildings.length}{' '}\n            {t('buildings')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}