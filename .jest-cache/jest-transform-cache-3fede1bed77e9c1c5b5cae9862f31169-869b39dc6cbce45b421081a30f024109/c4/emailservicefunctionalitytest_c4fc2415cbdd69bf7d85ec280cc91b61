9458e3434207503b60dc0affc71ac4e0
"use strict";
/**
 * Email Service Functionality Test
 * Tests email service by sending actual emails to kevin.hervieux@koveo-gestion.com
 */
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const email_service_1 = require("../../server/services/email-service");
(0, globals_1.describe)('Email Service Functionality Test', () => {
    const testEmail = 'kevin.hervieux@koveo-gestion.com';
    (0, globals_1.beforeAll)(async () => {
        // Send summary email about what emails to expect
        const emailList = [
            '1. Password Reset Email - Testing password reset functionality',
            '2. User Invitation Email - Testing invitation system',
            '3. Welcome Email - Testing user onboarding',
            '4. Test Notification - General email service validation'
        ];
        const summaryMessage = `
Email Service Testing for Koveo Gestion

You should receive ${emailList.length} test emails:

${emailList.map((item, index) => `${index + 1}. ${item}`).join('\n')}

These emails are part of the automated testing process to validate the email functionality of the Quebec property management system.

Test initiated at: ${new Date().toISOString()}
    `.trim();
        try {
            await email_service_1.emailService.sendEmail(testEmail, 'Kevin Hervieux', 'Email Service Testing - Expected Emails Summary', summaryMessage, `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #0066cc;">Email Service Testing for Koveo Gestion</h2>
          
          <p>You should receive <strong>${emailList.length} test emails</strong>:</p>
          
          <ol style="line-height: 1.6;">
            ${emailList.map(item => `<li>${item}</li>`).join('')}
          </ol>
          
          <p style="margin-top: 20px; padding: 10px; background-color: #f0f8ff; border-left: 4px solid #0066cc;">
            These emails are part of the automated testing process to validate the email functionality 
            of the Quebec property management system.
          </p>
          
          <p style="color: #666; font-size: 12px;">
            Test initiated at: ${new Date().toISOString()}
          </p>
        </div>
        `);
            console.log('✅ Summary email sent successfully');
        }
        catch (error) {
            console.error('❌ Failed to send summary email:', error);
        }
    });
    (0, globals_1.describe)('Password Reset Email', () => {
        (0, globals_1.it)('should send password reset email successfully', async () => {
            const resetUrl = 'https://koveo-gestion.com/reset-password?token=test-token-123';
            const emailSent = await email_service_1.emailService.sendPasswordResetEmail(testEmail, 'Kevin Hervieux', resetUrl);
            (0, globals_1.expect)(emailSent).toBe(true);
        });
        (0, globals_1.it)('should handle password reset email with French content', async () => {
            const resetUrl = 'https://koveo-gestion.com/reset-password?token=test-token-fr-456';
            const emailSent = await email_service_1.emailService.sendEmail(testEmail, 'Kevin Hervieux', 'Réinitialisation de mot de passe - Koveo Gestion', `
Bonjour Kevin Hervieux,

Vous avez demandé une réinitialisation de votre mot de passe pour votre compte Koveo Gestion.

Cliquez sur le lien suivant pour réinitialiser votre mot de passe:
${resetUrl}

Ce lien expirera dans 1 heure pour votre sécurité.

Si vous n'avez pas demandé cette réinitialisation, ignorez ce courriel.

Cordialement,
L'équipe Koveo Gestion
        `.trim(), `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #0066cc;">Réinitialisation de mot de passe</h2>
          
          <p>Bonjour Kevin Hervieux,</p>
          
          <p>Vous avez demandé une réinitialisation de votre mot de passe pour votre compte Koveo Gestion.</p>
          
          <div style="text-align: center; margin: 20px 0;">
            <a href="${resetUrl}" style="background-color: #0066cc; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
              Réinitialiser le mot de passe
            </a>
          </div>
          
          <p style="color: #666; font-size: 14px;">
            Ce lien expirera dans 1 heure pour votre sécurité.
          </p>
          
          <p style="color: #666; font-size: 12px;">
            Si vous n'avez pas demandé cette réinitialisation, ignorez ce courriel.
          </p>
        </div>
        `);
            (0, globals_1.expect)(emailSent).toBe(true);
        });
    });
    (0, globals_1.describe)('User Invitation Email', () => {
        (0, globals_1.it)('should send user invitation email successfully', async () => {
            const invitationData = {
                email: testEmail,
                recipientName: 'Kevin Hervieux',
                token: 'test-invitation-token-789',
                organizationName: 'Koveo Gestion Test',
                inviterName: 'System Administrator',
                role: 'admin',
                personalMessage: 'Welcome to our Quebec property management system!'
            };
            const emailSent = await email_service_1.emailService.sendInvitationEmail(invitationData.email, invitationData.recipientName, invitationData.token, invitationData.organizationName, invitationData.inviterName, invitationData.role, invitationData.personalMessage);
            (0, globals_1.expect)(emailSent).toBe(true);
        });
    });
    (0, globals_1.describe)('General Email Functionality', () => {
        (0, globals_1.it)('should send welcome email successfully', async () => {
            const welcomeMessage = `
Bienvenue dans Koveo Gestion!

Votre compte administrateur a été configuré avec succès.

Caractéristiques de votre compte:
- Rôle: Administrateur
- Langue: Français
- Accès complet au système de gestion immobilière

Vous pouvez maintenant accéder à toutes les fonctionnalités de la plateforme.

Cordialement,
L'équipe Koveo Gestion
      `.trim();
            const emailSent = await email_service_1.emailService.sendEmail(testEmail, 'Kevin Hervieux', 'Bienvenue dans Koveo Gestion - Compte Configuré', welcomeMessage, `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #0066cc;">Bienvenue dans Koveo Gestion!</h2>
          
          <p>Votre compte administrateur a été configuré avec succès.</p>
          
          <div style="background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0;">
            <h3 style="margin-top: 0; color: #495057;">Caractéristiques de votre compte:</h3>
            <ul style="margin-bottom: 0;">
              <li><strong>Rôle:</strong> Administrateur</li>
              <li><strong>Langue:</strong> Français</li>
              <li><strong>Accès:</strong> Complet au système de gestion immobilière</li>
            </ul>
          </div>
          
          <p>Vous pouvez maintenant accéder à toutes les fonctionnalités de la plateforme.</p>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="https://koveo-gestion.com/login" style="background-color: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
              Se connecter
            </a>
          </div>
        </div>
        `);
            (0, globals_1.expect)(emailSent).toBe(true);
        });
        (0, globals_1.it)('should send general test notification', async () => {
            const testNotification = `
Test de notification - Koveo Gestion

Ce message confirme que le service de courriel fonctionne correctement.

Détails du test:
- Date: ${new Date().toLocaleString('fr-CA')}
- Type: Notification générale
- Système: Gestion immobilière Quebec
- Statut: Service email opérationnel

Tous les tests de courriels sont maintenant terminés.
      `.trim();
            const emailSent = await email_service_1.emailService.sendEmail(testEmail, 'Kevin Hervieux', 'Test Notification - Service Email Opérationnel', testNotification, `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #28a745;">✅ Test de notification - Koveo Gestion</h2>
          
          <p>Ce message confirme que le service de courriel fonctionne correctement.</p>
          
          <div style="background-color: #d4edda; padding: 15px; border-radius: 8px; border-left: 4px solid #28a745; margin: 20px 0;">
            <h3 style="margin-top: 0; color: #155724;">Détails du test:</h3>
            <ul style="margin-bottom: 0; color: #155724;">
              <li><strong>Date:</strong> ${new Date().toLocaleString('fr-CA')}</li>
              <li><strong>Type:</strong> Notification générale</li>
              <li><strong>Système:</strong> Gestion immobilière Quebec</li>
              <li><strong>Statut:</strong> Service email opérationnel</li>
            </ul>
          </div>
          
          <p style="font-weight: bold; color: #28a745;">
            ✅ Tous les tests de courriels sont maintenant terminés.
          </p>
        </div>
        `);
            (0, globals_1.expect)(emailSent).toBe(true);
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,