{"file":"/home/runner/workspace/node_modules/@testing-library/dom/dist/queries/label-text.js","mappings":"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","names":[],"sources":["/home/runner/workspace/node_modules/@testing-library/dom/dist/queries/label-text.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByLabelText = exports.queryAllByLabelText = exports.getByLabelText = exports.getAllByLabelText = exports.findByLabelText = exports.findAllByLabelText = void 0;\nvar _config = require(\"../config\");\nvar _helpers = require(\"../helpers\");\nvar _labelHelpers = require(\"../label-helpers\");\nvar _allUtils = require(\"./all-utils\");\nfunction queryAllLabels(container) {\n  return Array.from(container.querySelectorAll('label,input')).map(node => {\n    return {\n      node,\n      textToMatch: (0, _labelHelpers.getLabelContent)(node)\n    };\n  }).filter(({\n    textToMatch\n  }) => textToMatch !== null);\n}\nconst queryAllLabelsByText = (container, text, {\n  exact = true,\n  trim,\n  collapseWhitespace,\n  normalizer\n} = {}) => {\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const textToMatchByLabels = queryAllLabels(container);\n  return textToMatchByLabels.filter(({\n    node,\n    textToMatch\n  }) => matcher(textToMatch, node, text, matchNormalizer)).map(({\n    node\n  }) => node);\n};\nconst queryAllByLabelText = (container, text, {\n  selector = '*',\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const matchingLabelledElements = Array.from(container.querySelectorAll('*')).filter(element => {\n    return (0, _labelHelpers.getRealLabels)(element).length || element.hasAttribute('aria-labelledby');\n  }).reduce((labelledElements, labelledElement) => {\n    const labelList = (0, _labelHelpers.getLabels)(container, labelledElement, {\n      selector\n    });\n    labelList.filter(label => Boolean(label.formControl)).forEach(label => {\n      if (matcher(label.content, label.formControl, text, matchNormalizer) && label.formControl) {\n        labelledElements.push(label.formControl);\n      }\n    });\n    const labelsValue = labelList.filter(label => Boolean(label.content)).map(label => label.content);\n    if (matcher(labelsValue.join(' '), labelledElement, text, matchNormalizer)) {\n      labelledElements.push(labelledElement);\n    }\n    if (labelsValue.length > 1) {\n      labelsValue.forEach((labelValue, index) => {\n        if (matcher(labelValue, labelledElement, text, matchNormalizer)) {\n          labelledElements.push(labelledElement);\n        }\n        const labelsFiltered = [...labelsValue];\n        labelsFiltered.splice(index, 1);\n        if (labelsFiltered.length > 1) {\n          if (matcher(labelsFiltered.join(' '), labelledElement, text, matchNormalizer)) {\n            labelledElements.push(labelledElement);\n          }\n        }\n      });\n    }\n    return labelledElements;\n  }, []).concat((0, _allUtils.queryAllByAttribute)('aria-label', container, text, {\n    exact,\n    normalizer: matchNormalizer\n  }));\n  return Array.from(new Set(matchingLabelledElements)).filter(element => element.matches(selector));\n};\n\n// the getAll* query would normally look like this:\n// const getAllByLabelText = makeGetAllQuery(\n//   queryAllByLabelText,\n//   (c, text) => `Unable to find a label with the text of: ${text}`,\n// )\n// however, we can give a more helpful error message than the generic one,\n// so we're writing this one out by hand.\nconst getAllByLabelText = (container, text, ...rest) => {\n  const els = queryAllByLabelText(container, text, ...rest);\n  if (!els.length) {\n    const labels = queryAllLabelsByText(container, text, ...rest);\n    if (labels.length) {\n      const tagNames = labels.map(label => getTagNameOfElementAssociatedWithLabelViaFor(container, label)).filter(tagName => !!tagName);\n      if (tagNames.length) {\n        throw (0, _config.getConfig)().getElementError(tagNames.map(tagName => `Found a label with the text of: ${text}, however the element associated with this label (<${tagName} />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <${tagName} />, you can use aria-label or aria-labelledby instead.`).join('\\n\\n'), container);\n      } else {\n        throw (0, _config.getConfig)().getElementError(`Found a label with the text of: ${text}, however no form control was found associated to that label. Make sure you're using the \"for\" attribute or \"aria-labelledby\" attribute correctly.`, container);\n      }\n    } else {\n      throw (0, _config.getConfig)().getElementError(`Unable to find a label with the text of: ${text}`, container);\n    }\n  }\n  return els;\n};\nfunction getTagNameOfElementAssociatedWithLabelViaFor(container, label) {\n  const htmlFor = label.getAttribute('for');\n  if (!htmlFor) {\n    return null;\n  }\n  const element = container.querySelector(`[id=\"${htmlFor}\"]`);\n  return element ? element.tagName.toLowerCase() : null;\n}\n\n// the reason mentioned above is the same reason we're not using buildQueries\nconst getMultipleError = (c, text) => `Found multiple elements with the text of: ${text}`;\nconst queryByLabelText = exports.queryByLabelText = (0, _allUtils.wrapSingleQueryWithSuggestion)((0, _allUtils.makeSingleQuery)(queryAllByLabelText, getMultipleError), queryAllByLabelText.name, 'query');\nconst getByLabelText = (0, _allUtils.makeSingleQuery)(getAllByLabelText, getMultipleError);\nconst findAllByLabelText = exports.findAllByLabelText = (0, _allUtils.makeFindQuery)((0, _allUtils.wrapAllByQueryWithSuggestion)(getAllByLabelText, getAllByLabelText.name, 'findAll'));\nconst findByLabelText = exports.findByLabelText = (0, _allUtils.makeFindQuery)((0, _allUtils.wrapSingleQueryWithSuggestion)(getByLabelText, getAllByLabelText.name, 'find'));\nconst getAllByLabelTextWithSuggestions = exports.getAllByLabelText = (0, _allUtils.wrapAllByQueryWithSuggestion)(getAllByLabelText, getAllByLabelText.name, 'getAll');\nconst getByLabelTextWithSuggestions = exports.getByLabelText = (0, _allUtils.wrapSingleQueryWithSuggestion)(getByLabelText, getAllByLabelText.name, 'get');\nconst queryAllByLabelTextWithSuggestions = exports.queryAllByLabelText = (0, _allUtils.wrapAllByQueryWithSuggestion)(queryAllByLabelText, queryAllByLabelText.name, 'queryAll');"],"version":3}