{"file":"/home/runner/workspace/client/src/components/invoice-management/InvoiceForm.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/invoice-management/InvoiceForm.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { CalendarIcon, FileText, Upload, Sparkles, Save, X } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\n\n// Import new modular components\nimport { SharedUploader } from '@/components/document-management/SharedUploader';\nimport { DocumentCard } from '@/components/document-management/DocumentCard';\n\n// Import invoice schemas\nimport { \n  invoiceFormSchema, \n  type InvoiceFormData, \n  type Invoice \n} from '@shared/schemas/invoices';\n\ninterface InvoiceFormProps {\n  mode: 'create' | 'edit';\n  invoice?: Invoice;\n  buildingId?: string;\n  residenceId?: string;\n  onSuccess: () => void;\n  onCancel: () => void;\n}\n\nexport function InvoiceForm({\n  mode,\n  invoice,\n  buildingId,\n  residenceId,\n  onSuccess,\n  onCancel,\n}: InvoiceFormProps) {\n  const [uploadedDocument, setUploadedDocument] = useState<string | null>(\n    invoice?.documentId || null\n  );\n  const [isAiProcessing, setIsAiProcessing] = useState(false);\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const form = useForm<InvoiceFormData>({\n    resolver: zodResolver(invoiceFormSchema),\n    defaultValues: {\n      vendorName: invoice?.vendorName || '',\n      invoiceNumber: invoice?.invoiceNumber || '',\n      totalAmount: invoice?.totalAmount ? parseFloat(invoice.totalAmount.toString()) : 0,\n      dueDate: invoice?.dueDate || new Date(),\n      paymentType: invoice?.paymentType || 'one-time',\n      frequency: invoice?.frequency || undefined,\n      startDate: invoice?.startDate || undefined,\n      customPaymentDates: invoice?.customPaymentDates || undefined,\n      buildingId: buildingId || invoice?.buildingId || undefined,\n      residenceId: residenceId || invoice?.residenceId || undefined,\n      documentId: invoice?.documentId || undefined,\n      isAiExtracted: invoice?.isAiExtracted || false,\n      extractionConfidence: invoice?.extractionConfidence ? parseFloat(invoice.extractionConfidence.toString()) : undefined,\n    },\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: InvoiceFormData) => {\n      const response = await apiRequest('POST', '/api/invoices', data);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to create invoice');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: 'Invoice created successfully',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/invoices'] });\n      onSuccess();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'Error',\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: InvoiceFormData) => {\n      if (!invoice?.id) throw new Error('Invoice ID is required for update');\n      const response = await apiRequest('PUT', `/api/invoices/${invoice.id}`, data);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to update invoice');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: 'Success',\n        description: 'Invoice updated successfully',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/invoices'] });\n      onSuccess();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: 'Error',\n        description: error.message,\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const onSubmit = useCallback(\n    (data: InvoiceFormData) => {\n      const invoiceData = {\n        ...data,\n        documentId: uploadedDocument || undefined,\n      };\n\n      if (mode === 'create') {\n        createMutation.mutate(invoiceData);\n      } else {\n        updateMutation.mutate(invoiceData);\n      }\n    },\n    [mode, uploadedDocument, createMutation, updateMutation]\n  );\n\n  const handleDocumentUpload = useCallback(\n    (documentId: string, file: File) => {\n      setUploadedDocument(documentId);\n      \n      // Trigger AI extraction if it's a PDF\n      if (file.type === 'application/pdf') {\n        setIsAiProcessing(true);\n        // TODO: Implement AI extraction API call\n        setTimeout(() => {\n          setIsAiProcessing(false);\n          toast({\n            title: 'AI Processing Complete',\n            description: 'Invoice data extracted successfully',\n          });\n        }, 2000);\n      }\n    },\n    [toast]\n  );\n\n  const handleDocumentRemove = useCallback(() => {\n    setUploadedDocument(null);\n    form.setValue('documentId', undefined);\n  }, [form]);\n\n  const paymentType = form.watch('paymentType');\n  const frequency = form.watch('frequency');\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-semibold\">\n            {mode === 'create' ? 'Create New Invoice' : 'Edit Invoice'}\n          </h3>\n          <p className=\"text-sm text-muted-foreground\">\n            {mode === 'create' \n              ? 'Add a new invoice to the system'\n              : 'Update invoice information'\n            }\n          </p>\n        </div>\n        {isAiProcessing && (\n          <Badge variant=\"secondary\" className=\"flex items-center gap-2\">\n            <Sparkles className=\"w-4 h-4 animate-pulse\" />\n            AI Processing...\n          </Badge>\n        )}\n      </div>\n\n      <Tabs defaultValue=\"basic\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"basic\">Basic Information</TabsTrigger>\n          <TabsTrigger value=\"payment\">Payment Details</TabsTrigger>\n          <TabsTrigger value=\"documents\">Documents</TabsTrigger>\n        </TabsList>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <TabsContent value=\"basic\" className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"vendorName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Vendor Name</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., Hydro-Quebec\"\n                          {...field}\n                          data-testid=\"input-vendor-name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"invoiceNumber\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Invoice Number</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"e.g., INV-2024-001\"\n                          {...field}\n                          data-testid=\"input-invoice-number\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"totalAmount\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Total Amount ($)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          placeholder=\"0.00\"\n                          {...field}\n                          onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                          data-testid=\"input-total-amount\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"dueDate\"\n                  render={({ field }) => (\n                    <FormItem className=\"flex flex-col\">\n                      <FormLabel>Due Date</FormLabel>\n                      <Popover>\n                        <PopoverTrigger asChild>\n                          <FormControl>\n                            <Button\n                              variant=\"outline\"\n                              className={cn(\n                                'w-full pl-3 text-left font-normal',\n                                !field.value && 'text-muted-foreground'\n                              )}\n                              data-testid=\"input-due-date\"\n                            >\n                              {field.value ? (\n                                format(field.value, 'PPP')\n                              ) : (\n                                <span>Pick a date</span>\n                              )}\n                              <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                            </Button>\n                          </FormControl>\n                        </PopoverTrigger>\n                        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                          <Calendar\n                            mode=\"single\"\n                            selected={field.value}\n                            onSelect={field.onChange}\n                            disabled={(date) => date < new Date()}\n                            initialFocus\n                          />\n                        </PopoverContent>\n                      </Popover>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"payment\" className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"paymentType\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Payment Type</FormLabel>\n                    <Select value={field.value} onValueChange={field.onChange}>\n                      <FormControl>\n                        <SelectTrigger data-testid=\"select-payment-type\">\n                          <SelectValue placeholder=\"Select payment type\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"one-time\">One-time Payment</SelectItem>\n                        <SelectItem value=\"recurring\">Recurring Payment</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {paymentType === 'recurring' && (\n                <div className=\"space-y-4 p-4 border rounded-lg bg-muted/50\">\n                  <h4 className=\"font-medium\">Recurring Payment Settings</h4>\n                  \n                  <FormField\n                    control={form.control}\n                    name=\"frequency\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Frequency</FormLabel>\n                        <Select value={field.value} onValueChange={field.onChange}>\n                          <FormControl>\n                            <SelectTrigger data-testid=\"select-frequency\">\n                              <SelectValue placeholder=\"Select frequency\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"monthly\">Monthly</SelectItem>\n                            <SelectItem value=\"quarterly\">Quarterly</SelectItem>\n                            <SelectItem value=\"annually\">Annually</SelectItem>\n                            <SelectItem value=\"custom\">Custom</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {frequency && frequency !== 'custom' && (\n                    <FormField\n                      control={form.control}\n                      name=\"startDate\"\n                      render={({ field }) => (\n                        <FormItem className=\"flex flex-col\">\n                          <FormLabel>Start Date</FormLabel>\n                          <Popover>\n                            <PopoverTrigger asChild>\n                              <FormControl>\n                                <Button\n                                  variant=\"outline\"\n                                  className={cn(\n                                    'w-full pl-3 text-left font-normal',\n                                    !field.value && 'text-muted-foreground'\n                                  )}\n                                  data-testid=\"input-start-date\"\n                                >\n                                  {field.value ? (\n                                    format(field.value, 'PPP')\n                                  ) : (\n                                    <span>Pick start date</span>\n                                  )}\n                                  <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                                </Button>\n                              </FormControl>\n                            </PopoverTrigger>\n                            <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                              <Calendar\n                                mode=\"single\"\n                                selected={field.value}\n                                onSelect={field.onChange}\n                                disabled={(date) => date < new Date()}\n                                initialFocus\n                              />\n                            </PopoverContent>\n                          </Popover>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  )}\n\n                  {frequency === 'custom' && (\n                    <div className=\"space-y-2\">\n                      <FormLabel>Custom Payment Dates</FormLabel>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Custom date scheduling coming soon...\n                      </p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"documents\" className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-medium mb-4\">Invoice Document</h4>\n                \n                {uploadedDocument ? (\n                  <DocumentCard\n                    documentId={uploadedDocument}\n                    onRemove={handleDocumentRemove}\n                    showRemove={true}\n                  />\n                ) : (\n                  <SharedUploader\n                    onUploadComplete={handleDocumentUpload}\n                    accept={{\n                      'application/pdf': ['.pdf'],\n                      'image/*': ['.png', '.jpg', '.jpeg'],\n                    }}\n                    maxSizeMB={10}\n                    className=\"border-2 border-dashed border-muted-foreground/25 rounded-lg p-8\"\n                  >\n                    <div className=\"text-center\">\n                      <Upload className=\"w-8 h-8 mx-auto mb-4 text-muted-foreground\" />\n                      <p className=\"text-sm font-medium\">\n                        Upload Invoice Document\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        PDF, PNG, JPG up to 10MB\n                      </p>\n                    </div>\n                  </SharedUploader>\n                )}\n              </div>\n            </TabsContent>\n\n            <div className=\"flex justify-end gap-3 pt-6 border-t\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onCancel}\n                data-testid=\"button-cancel\"\n              >\n                <X className=\"w-4 h-4 mr-2\" />\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={createMutation.isPending || updateMutation.isPending}\n                data-testid=\"button-save-invoice\"\n              >\n                <Save className=\"w-4 h-4 mr-2\" />\n                {mode === 'create' ? 'Create Invoice' : 'Update Invoice'}\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </Tabs>\n    </div>\n  );\n}"],"version":3}