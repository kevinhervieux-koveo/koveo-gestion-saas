9b5108beb44288c81649aea3297608ae
"use strict";
/**
 * User Management Translation Test Suite
 * Validates that ALL user management page elements are properly translated:
 * - Page titles and headers
 * - Filter components and search
 * - Tabs (Users, Invitations)
 * - Table headers and data
 * - Forms (Edit User, Delete User, Invite User)
 * - User assignment tabs (Organizations, Buildings, Residences)
 * - Buttons, actions, and UI elements
 * - Status messages and confirmations
 */
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const i18n_ts_1 = require("../../client/src/lib/i18n.ts");
(0, globals_1.describe)('User Management Translation Coverage', () => {
    const languages = ['en', 'fr'];
    (0, globals_1.describe)('Page Headers and Main Elements', () => {
        const mainPageKeys = [
            'userManagement',
            'manageUsersInvitationsRoles',
            'users',
            'invitations',
            'totalUsers',
            'activeUsers',
            'admin',
            'manager',
            'tenant',
            'resident'
        ];
        (0, globals_1.it)('should have all main page elements translated', () => {
            mainPageKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    (0, globals_1.expect)(t[key]).toBeDefined();
                    (0, globals_1.expect)(typeof t[key]).toBe('string');
                    (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                });
            });
        });
        (0, globals_1.it)('should have proper Quebec French main page terminology', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.userManagement).toBe('Gestion des utilisateurs');
            (0, globals_1.expect)(fr.manageUsersInvitationsRoles).toBe('Gérer les utilisateurs, invitations et rôles');
            (0, globals_1.expect)(fr.users).toBe('utilisateurs');
            (0, globals_1.expect)(fr.admin).toBe('Admin');
            (0, globals_1.expect)(fr.manager).toBe('Gestionnaire');
            (0, globals_1.expect)(fr.tenant).toBe('Locataire');
            (0, globals_1.expect)(fr.resident).toBe('Résident');
        });
    });
    (0, globals_1.describe)('Filter and Search Elements', () => {
        const filterKeys = [
            'searchUsersInvitations',
            'filterByRole',
            'allRoles',
            'filterByStatus',
            'allStatuses',
            'organization',
            'selectOrganization',
            'building',
            'selectBuilding',
            'residence',
            'selectResidence'
        ];
        (0, globals_1.it)('should have all filter components translated', () => {
            filterKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French filter translations', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.searchUsersInvitations).toBe('Rechercher des utilisateurs et invitations...');
            (0, globals_1.expect)(fr.filterByRole).toBe('Filtrer par rôle');
            (0, globals_1.expect)(fr.allRoles).toBe('Tous les rôles');
            (0, globals_1.expect)(fr.filterByStatus).toBe('Filtrer par statut');
            (0, globals_1.expect)(fr.organization).toBe('Organisation');
            (0, globals_1.expect)(fr.building).toBe('Bâtiment');
        });
    });
    (0, globals_1.describe)('Tab Navigation Elements', () => {
        const tabKeys = [
            'users',
            'invitations',
            'pendingInvitations',
            'totalInvitations',
            'inviteUser',
            'bulkActions',
            'moreActions'
        ];
        (0, globals_1.it)('should have all tab navigation elements translated', () => {
            tabKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    (0, globals_1.expect)(t[key]).toBeDefined();
                    (0, globals_1.expect)(typeof t[key]).toBe('string');
                    (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                });
            });
        });
        (0, globals_1.it)('should have proper French tab navigation', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.users).toBe('utilisateurs');
            (0, globals_1.expect)(fr.invitations).toBe('Invitations');
            (0, globals_1.expect)(fr.pendingInvitations).toBe('Invitations en attente');
            (0, globals_1.expect)(fr.inviteUser).toBe('Inviter un utilisateur');
            (0, globals_1.expect)(fr.bulkActions).toBe('Actions groupées');
        });
    });
    (0, globals_1.describe)('User Table Elements', () => {
        const tableKeys = [
            'firstName',
            'lastName',
            'email',
            'role',
            'status',
            'organization',
            'building',
            'residence',
            'activeUser',
            'createdAt',
            'actions'
        ];
        (0, globals_1.it)('should have all table headers translated', () => {
            tableKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French table headers', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.firstName).toBe('Prénom');
            (0, globals_1.expect)(fr.lastName).toBe('Nom de famille');
            (0, globals_1.expect)(fr.email).toBe('Courriel');
            (0, globals_1.expect)(fr.role).toBe('Rôle');
            (0, globals_1.expect)(fr.status).toBe('Statut');
            (0, globals_1.expect)(fr.organization).toBe('Organisation');
            (0, globals_1.expect)(fr.building).toBe('Bâtiment');
        });
    });
    (0, globals_1.describe)('Edit User Form Elements', () => {
        const editFormKeys = [
            'editUser',
            'editUserDescription',
            'firstName',
            'lastName',
            'email',
            'role',
            'status',
            'activeUser',
            'isActive',
            'save',
            'cancel',
            'basicInfo',
            'organizations',
            'buildings',
            'residences'
        ];
        (0, globals_1.it)('should have all edit user form elements translated', () => {
            editFormKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French edit user form', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.editUser).toBe('Modifier l\'utilisateur');
            (0, globals_1.expect)(fr.firstName).toBe('Prénom');
            (0, globals_1.expect)(fr.lastName).toBe('Nom de famille');
            (0, globals_1.expect)(fr.email).toBe('Courriel');
            (0, globals_1.expect)(fr.role).toBe('Rôle');
            (0, globals_1.expect)(fr.cancel).toBe('Annuler');
            // Note: save key may not exist in translations, checking if it exists
            if (fr.save)
                (0, globals_1.expect)(fr.save).toBe('Enregistrer');
        });
    });
    (0, globals_1.describe)('Delete User Form Elements', () => {
        const deleteFormKeys = [
            'deleteUser',
            'confirmDeleteUser',
            'confirmEmail',
            'reason',
            'deleteAccount',
            'thisActionCannotBeUndone',
            'cancel',
            'confirm',
            'deleteFailed',
            'accountDeleted'
        ];
        (0, globals_1.it)('should have all delete user form elements translated', () => {
            deleteFormKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French delete user form', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.deleteUser).toBe('Supprimer l\'utilisateur');
            (0, globals_1.expect)(fr.cancel).toBe('Annuler');
            (0, globals_1.expect)(fr.confirm).toBe('Confirmer');
        });
    });
    (0, globals_1.describe)('Invite User Form Elements', () => {
        const inviteFormKeys = [
            'inviteUser',
            'inviteUserDescription',
            'singleInvitation',
            'bulkInvitations',
            'emailAddress',
            'enterEmailAddress',
            'role',
            'selectRole',
            'organization',
            'selectOrganization',
            'building',
            'selectBuilding',
            'residence',
            'selectResidence',
            'expiresIn',
            'days',
            'securityLevel',
            'standard',
            'enhanced',
            'personalMessage',
            'optional',
            'sendInvitation'
        ];
        (0, globals_1.it)('should have all invite user form elements translated', () => {
            inviteFormKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French invite user form', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.inviteUser).toBe('Inviter un utilisateur');
            (0, globals_1.expect)(fr.inviteUserDescription).toBe('Envoyer des invitations aux nouveaux utilisateurs pour rejoindre votre système de gestion immobilière');
            (0, globals_1.expect)(fr.singleInvitation).toBe('Invitation unique');
            (0, globals_1.expect)(fr.emailAddress).toBe('Adresse courriel');
            (0, globals_1.expect)(fr.selectRole).toBe('Sélectionner le rôle');
            (0, globals_1.expect)(fr.optional).toBe('Optionnel');
        });
    });
    (0, globals_1.describe)('User Assignment Tabs Elements', () => {
        const assignmentKeys = [
            'organizations',
            'buildings',
            'residences',
            'organizationAssignments',
            'buildingAssignments',
            'residenceAssignments',
            'selectOrganization',
            'selectBuilding',
            'selectResidence',
            'relationshipType',
            'tenant',
            'resident',
            'owner',
            'occupant',
            'save',
            'saveAssignments'
        ];
        (0, globals_1.it)('should have all assignment tab elements translated', () => {
            assignmentKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French assignment tabs', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.organizations).toBe('Organisations');
            (0, globals_1.expect)(fr.buildings).toBe('Bâtiments');
            (0, globals_1.expect)(fr.tenant).toBe('Locataire');
            (0, globals_1.expect)(fr.resident).toBe('Résident');
            // Note: save key may not exist in translations, checking if it exists
            if (fr.save)
                (0, globals_1.expect)(fr.save).toBe('Enregistrer');
        });
    });
    (0, globals_1.describe)('Action Buttons and Status Messages', () => {
        const actionKeys = [
            'edit',
            'delete',
            'view',
            'activate',
            'deactivate',
            'activateUser',
            'deactivateUser',
            'activateUsers',
            'deactivateUsers',
            'changeRole',
            'sendPasswordReset',
            'exportUsers',
            'processing',
            'loading',
            'success',
            'error',
            'userUpdated',
            'userUpdatedSuccessfully'
        ];
        (0, globals_1.it)('should have all action buttons translated', () => {
            actionKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French action buttons', () => {
            const fr = i18n_ts_1.translations.fr;
            // Note: edit and delete may not exist as standalone keys
            if (fr.edit)
                (0, globals_1.expect)(fr.edit).toBe('Modifier');
            if (fr.delete)
                (0, globals_1.expect)(fr.delete).toBe('Supprimer');
            (0, globals_1.expect)(fr.loading).toBe('Chargement...');
            (0, globals_1.expect)(fr.userUpdated).toBe('Utilisateur mis à jour');
            (0, globals_1.expect)(fr.userUpdatedSuccessfully).toBe('L\'utilisateur a été mis à jour avec succès');
        });
    });
    (0, globals_1.describe)('Bulk Actions Elements', () => {
        const bulkActionKeys = [
            'bulkActions',
            'selectedUsers',
            'usersSelected',
            'activateSelectedUsers',
            'deactivateSelectedUsers',
            'changeRoleSelectedUsers',
            'sendPasswordResetSelectedUsers',
            'exportSelectedUsersData',
            'deleteSelectedUsers',
            'newRole',
            'applyRoleChange'
        ];
        (0, globals_1.it)('should have all bulk action elements translated', () => {
            bulkActionKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French bulk actions', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.bulkActions).toBe('Actions groupées');
            (0, globals_1.expect)(fr.activateSelectedUsers).toBe('Activer les utilisateurs sélectionnés');
            (0, globals_1.expect)(fr.deactivateSelectedUsers).toBe('Désactiver les utilisateurs sélectionnés');
            (0, globals_1.expect)(fr.deleteSelectedUsers).toBe('Supprimer les utilisateurs sélectionnés');
            (0, globals_1.expect)(fr.exportSelectedUsersData).toBe('Exporter les données des utilisateurs sélectionnés');
        });
    });
    (0, globals_1.describe)('Pagination and Search Results', () => {
        const paginationKeys = [
            'noUsersFound',
            'showingResults',
            'page',
            'of',
            'next',
            'previous',
            'first',
            'last',
            'resultsFound',
            'itemsPerPage'
        ];
        (0, globals_1.it)('should have pagination elements translated', () => {
            paginationKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French pagination', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.noUsersFound).toBe('Aucun utilisateur trouvé');
            (0, globals_1.expect)(fr.showingResults).toBe('Affichage de {start} à {end} sur {total} demandes');
            if (fr.next)
                (0, globals_1.expect)(fr.next).toBe('Suivant');
            if (fr.previous)
                (0, globals_1.expect)(fr.previous).toBe('Précédent');
        });
    });
    (0, globals_1.describe)('Validation Messages for User Management', () => {
        const validationKeys = [
            'firstNameRequired',
            'lastNameRequired',
            'emailRequired',
            'roleRequired',
            'organizationRequired',
            'firstNameTooLong',
            'lastNameTooLong',
            'firstNameInvalidCharacters',
            'lastNameInvalidCharacters',
            'emailInvalid',
            'passwordsNotMatch'
        ];
        (0, globals_1.it)('should have validation messages translated', () => {
            validationKeys.forEach(key => {
                languages.forEach(lang => {
                    const t = i18n_ts_1.translations[lang];
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should have proper French validation messages', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.firstNameRequired).toBe('Le prénom est requis pour l\'inscription');
            (0, globals_1.expect)(fr.lastNameRequired).toBe('Le nom de famille est requis pour l\'inscription');
            (0, globals_1.expect)(fr.organizationRequired).toBe('Veuillez sélectionner une organisation dans le menu déroulant');
            (0, globals_1.expect)(fr.firstNameTooLong).toBe('Le prénom doit contenir moins de 50 caractères');
            (0, globals_1.expect)(fr.lastNameTooLong).toBe('Le nom de famille doit contenir moins de 50 caractères');
        });
    });
    (0, globals_1.describe)('Role-specific Translation Consistency', () => {
        (0, globals_1.it)('should have consistent role translations across contexts', () => {
            const roleKeys = ['admin', 'manager', 'tenant', 'resident'];
            const demoRoles = ['demo_manager', 'demo_tenant', 'demo_resident'];
            languages.forEach(lang => {
                const t = i18n_ts_1.translations[lang];
                roleKeys.forEach(role => {
                    (0, globals_1.expect)(t[role]).toBeDefined();
                    (0, globals_1.expect)(typeof t[role]).toBe('string');
                });
            });
        });
        (0, globals_1.it)('should have Quebec French role terminology', () => {
            const fr = i18n_ts_1.translations.fr;
            (0, globals_1.expect)(fr.admin).toBe('Admin');
            (0, globals_1.expect)(fr.manager).toBe('Gestionnaire');
            (0, globals_1.expect)(fr.tenant).toBe('Locataire');
            (0, globals_1.expect)(fr.resident).toBe('Résident');
        });
    });
    (0, globals_1.describe)('User Management Component Integration', () => {
        (0, globals_1.it)('should support user management workflow translations', () => {
            const workflowKeys = [
                'userManagement',
                'editUser',
                'deleteUser',
                'inviteUser',
                'userUpdatedSuccessfully',
                'invitationSent',
                'accountDeleted'
            ];
            languages.forEach(lang => {
                const t = i18n_ts_1.translations[lang];
                workflowKeys.forEach(key => {
                    if (t[key]) {
                        (0, globals_1.expect)(typeof t[key]).toBe('string');
                        (0, globals_1.expect)(t[key].length).toBeGreaterThan(0);
                    }
                });
            });
        });
        (0, globals_1.it)('should handle dynamic content placeholders', () => {
            const fr = i18n_ts_1.translations.fr;
            // Test dynamic content support for user names, counts, etc.
            if (fr.editUserDescription) {
                (0, globals_1.expect)(fr.editUserDescription).toContain('{name}');
            }
            if (fr.confirmDeleteUser) {
                (0, globals_1.expect)(fr.confirmDeleteUser).toContain('{name}');
            }
            if (fr.selectedUsers) {
                (0, globals_1.expect)(fr.selectedUsers).toContain('{count}');
            }
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,