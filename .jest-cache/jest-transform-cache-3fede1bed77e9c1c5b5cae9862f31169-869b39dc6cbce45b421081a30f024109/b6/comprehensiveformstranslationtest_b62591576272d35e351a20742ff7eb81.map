{"file":"/home/runner/workspace/tests/unit/comprehensive-forms-translation.test.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/comprehensive-forms-translation.test.ts"],"sourcesContent":["/**\n * Comprehensive Forms Translation Test Suite\n * Validates that ALL forms and their validation messages are properly translated:\n * - Login forms\n * - Registration forms\n * - Invitation forms\n * - Settings forms\n * - All form validation messages\n * - All form field labels and placeholders\n */\n\nimport { describe, it, expect } from '@jest/globals';\nimport { translations, type Language } from '../../client/src/lib/i18n.ts';\n\ndescribe('Comprehensive Forms Translation Coverage', () => {\n  const languages: Language[] = ['en', 'fr'];\n\n  describe('Login Form Translation', () => {\n    const loginFormKeys = [\n      'email',\n      'password',\n      'login',\n      'signIn',\n      'forgotPassword',\n      'demoMode',\n      'selectRole'\n    ];\n\n    it('should have all login form elements translated', () => {\n      loginFormKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          expect(t[key]).toBeDefined();\n          expect(typeof t[key]).toBe('string');\n          expect(t[key].length).toBeGreaterThan(0);\n        });\n      });\n    });\n\n    it('should have proper Quebec French login terminology', () => {\n      const fr = translations.fr;\n      expect(fr.email).toBe('Courriel');\n      expect(fr.password).toBe('Mot de passe');\n      expect(fr.login).toBe('Connexion');\n    });\n  });\n\n  describe('Registration and Invitation Form Translation', () => {\n    const registrationKeys = [\n      'firstName',\n      'lastName',\n      'email',\n      'password',\n      'confirmPassword',\n      'organization',\n      'building',\n      'residence',\n      'role',\n      'personalMessage',\n      'expiryDays'\n    ];\n\n    it('should have all registration form fields translated', () => {\n      registrationKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should have proper Quebec French registration terminology', () => {\n      const fr = translations.fr;\n      if (fr.firstName) expect(fr.firstName).toBe('PrÃ©nom');\n      if (fr.lastName) expect(fr.lastName).toBe('Nom de famille');\n      if (fr.confirmPassword) expect(fr.confirmPassword).toBe('Confirmer le mot de passe');\n    });\n  });\n\n  describe('Form Field Labels Translation', () => {\n    const formLabelKeys = [\n      'enterEmailAddress',\n      'enterPassword',\n      'enterFirstName',\n      'enterLastName',\n      'selectOrganization',\n      'selectBuilding',\n      'selectResidence',\n      'selectRole',\n      'optional',\n      'required'\n    ];\n\n    it('should have all form field labels and placeholders translated', () => {\n      formLabelKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n  });\n\n  describe('Form Button Translation', () => {\n    const formButtonKeys = [\n      'submit',\n      'save',\n      'cancel',\n      'close',\n      'send',\n      'sendInvitation',\n      'reset',\n      'clear',\n      'add',\n      'remove',\n      'edit',\n      'delete',\n      'update',\n      'create'\n    ];\n\n    it('should have all form buttons translated', () => {\n      formButtonKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n\n    it('should use proper Quebec French action verbs', () => {\n      const fr = translations.fr;\n      if (fr.save) expect(fr.save).toBe('Enregistrer');\n      if (fr.cancel) expect(fr.cancel).toBe('Annuler');\n      if (fr.send) expect(fr.send).toBe('Envoyer');\n      if (fr.create) expect(fr.create).toBe('CrÃ©er');\n      if (fr.update) expect(fr.update).toBe('Mettre Ã  jour');\n    });\n  });\n\n  describe('Settings and Configuration Forms Translation', () => {\n    const settingsKeys = [\n      'userProfile',\n      'accountSettings',\n      'notifications',\n      'language',\n      'theme',\n      'timezone',\n      'preferences'\n    ];\n\n    it('should have settings form elements translated', () => {\n      settingsKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n  });\n\n  describe('Demands and Management Forms Translation', () => {\n    const demandsKeys = [\n      'title',\n      'description',\n      'priority',\n      'status',\n      'category',\n      'assignedTo',\n      'dueDate',\n      'notes',\n      'attachments'\n    ];\n\n    it('should have demands management form fields translated', () => {\n      demandsKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n  });\n\n  describe('Document Management Forms Translation', () => {\n    const documentKeys = [\n      'documentTitle',\n      'documentType',\n      'documentDescription',\n      'uploadDocument',\n      'selectFile',\n      'fileSize',\n      'allowedFormats'\n    ];\n\n    it('should have document management form fields translated', () => {\n      documentKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n  });\n\n  describe('Search and Filter Forms Translation', () => {\n    const filterKeys = [\n      'search',\n      'filter',\n      'sortBy',\n      'dateRange',\n      'fromDate',\n      'toDate',\n      'clearFilters',\n      'applyFilters'\n    ];\n\n    it('should have search and filter form elements translated', () => {\n      filterKeys.forEach(key => {\n        languages.forEach(lang => {\n          const t = translations[lang] as any;\n          if (t[key]) {\n            expect(typeof t[key]).toBe('string');\n            expect(t[key].length).toBeGreaterThan(0);\n          }\n        });\n      });\n    });\n  });\n});"],"version":3}