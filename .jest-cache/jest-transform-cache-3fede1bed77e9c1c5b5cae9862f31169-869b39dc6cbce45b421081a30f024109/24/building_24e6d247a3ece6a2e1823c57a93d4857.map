{"version":3,"names":["cov_2pnsdoexa5","actualCoverage","s","exports","default","MyBuilding","react_1","require","react_query_1","wouter_1","header_1","card_1","button_1","badge_1","label_1","lucide_react_1","queryClient_1","use_language_1","f","navigate","useLocation","t","useLanguage","currentPage","setCurrentPage","useState","itemsPerPage","data","user","useQuery","queryKey","queryFn","apiRequest","buildingsData","isLoading","isLoadingBuildings","error","buildingsError","id","b","buildings","response","json","enabled","totalPages","Math","ceil","length","startIndex","endIndex","currentBuildings","slice","handlePreviousPage","prev","max","handleNextPage","min","handlePageClick","page","handleViewDocuments","buildingId","jsx_runtime_1","jsxs","className","children","jsx","Header","title","subtitle","Card","CardContent","Building","map","building","CardHeader","CardTitle","name","organizationName","Label","MapPin","address","city","province","postalCode","buildingType","yearBuilt","Calendar","Home","totalUnits","totalFloors","parkingSpaces","storageSpaces","Car","Package","managementCompany","Badge","variant","occupiedUnits","occupancyRate","round","amenities","JSON","parse","Array","isArray","amenity","index","_e","Button","onClick","size","FileText","disabled","ChevronLeft","from","_","i","pageNum","ChevronRight"],"sources":["/home/runner/workspace/client/src/pages/residents/building.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLocation } from 'wouter';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Label } from '@/components/ui/label';\nimport {\n  Building,\n  MapPin,\n  Calendar,\n  Users,\n  Phone,\n  Mail,\n  FileText,\n  Home,\n  Car,\n  Package,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { Building as BuildingType, Contact } from '@shared/schema';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useLanguage } from '@/hooks/use-language';\n\n/**\n *\n */\ninterface BuildingWithStats extends BuildingType {\n  organizationName: string;\n  organizationType: string;\n  totalUnits: number;\n  occupiedUnits: number;\n  occupancyRate: number;\n  vacantUnits: number;\n}\n\n/**\n *\n */\nexport default function MyBuilding() {\n  const [, navigate] = useLocation();\n  const { t } = useLanguage();\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  // Fetch current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // Fetch buildings accessible to the user based on their residences\n  const {\n    data: buildingsData,\n    isLoading: isLoadingBuildings,\n    error: buildingsError,\n  } = useQuery<{\n    buildings: BuildingWithStats[];\n    meta?: any;\n  }>({\n    queryKey: ['/api/users/buildings', user?.id],\n    queryFn: async () => {\n      if (!user?.id) {\n        return { buildings: [] };\n      }\n      const response = await apiRequest('GET', `/api/users/${user.id}/buildings`);\n      return response.json();\n    },\n    enabled: !!user?.id,\n  });\n\n  const buildings: BuildingWithStats[] = buildingsData?.buildings || [];\n\n  // Pagination calculations\n  const totalPages = Math.ceil(buildings.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentBuildings = buildings.slice(startIndex, endIndex);\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prev) => Math.max(1, prev - 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prev) => Math.min(totalPages, prev + 1));\n  };\n\n  const handlePageClick = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleViewDocuments = (buildingId: string) => {\n    navigate(`/residents/building/documents?buildingId=${buildingId}`);\n  };\n\n  if (isLoadingBuildings) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('myBuildings')} subtitle={t('viewBuildingsAccess')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <div className='text-center py-8'>\n              <div className='animate-spin w-6 h-6 border-2 border-primary border-t-transparent rounded-full mx-auto'></div>\n              <p className='text-muted-foreground mt-2'>Loading building information...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (buildings.length === 0) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('myBuildings')} subtitle={t('viewBuildingsAccess')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='max-w-4xl mx-auto'>\n            <Card>\n              <CardContent className='p-8 text-center'>\n                <Building className='w-16 h-16 mx-auto text-gray-400 mb-4' />\n                <h3 className='text-lg font-semibold text-gray-600 mb-2'>\n                  {t('noBuildingsFound')}\n                </h3>\n                <p className='text-gray-500'>You don't have access to any buildings yet.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title='My Buildings' subtitle='View buildings you have access to' />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Building Cards */}\n          <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\n            {currentBuildings.map((building) => (\n              <Card key={building.id} className='hover:shadow-lg transition-shadow'>\n                <CardHeader>\n                  <CardTitle className='flex items-center gap-2'>\n                    <Building className='w-5 h-5' />\n                    {building.name}\n                  </CardTitle>\n                  <div className='text-sm text-muted-foreground'>{building.organizationName}</div>\n                </CardHeader>\n                <CardContent className='space-y-4'>\n                  <div className='grid grid-cols-1 gap-3'>\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>{t('address')}</Label>\n                      <div className='flex items-start gap-2'>\n                        <MapPin className='w-3 h-3 mt-0.5' />\n                        <div>\n                          <p className='text-sm text-gray-700'>{building.address}</p>\n                          <p className='text-sm text-gray-700'>\n                            {building.city}, {building.province} {building.postalCode}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className='grid grid-cols-2 gap-3'>\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>\n                          {t('buildingType')}\n                        </Label>\n                        <p className='text-sm text-gray-700 capitalize'>{building.buildingType}</p>\n                      </div>\n                      {building.yearBuilt && (\n                        <div>\n                          <Label className='text-xs font-medium text-gray-500'>\n                            {t('yearBuilt')}\n                          </Label>\n                          <div className='flex items-center gap-1'>\n                            <Calendar className='w-3 h-3' />\n                            <span className='text-sm text-gray-700'>{building.yearBuilt}</span>\n                          </div>\n                        </div>\n                      )}\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>\n                          {t('totalUnits')}\n                        </Label>\n                        <div className='flex items-center gap-1'>\n                          <Home className='w-3 h-3' />\n                          <span className='text-sm text-gray-700'>{building.totalUnits}</span>\n                        </div>\n                      </div>\n                      {building.totalFloors && (\n                        <div>\n                          <Label className='text-xs font-medium text-gray-500'>\n                            {t('totalFloors')}\n                          </Label>\n                          <p className='text-sm text-gray-700'>{building.totalFloors}</p>\n                        </div>\n                      )}\n                    </div>\n\n                    {(building.parkingSpaces || building.storageSpaces) && (\n                      <div className='grid grid-cols-2 gap-3'>\n                        {building.parkingSpaces && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('parking')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Car className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {building.parkingSpaces}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                        {building.storageSpaces && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('storage')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Package className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {building.storageSpaces}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n\n                    {building.managementCompany && (\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>\n                          {t('managementCompany')}\n                        </Label>\n                        <p className='text-sm text-gray-700'>{building.managementCompany}</p>\n                      </div>\n                    )}\n\n                    {/* Occupancy Stats */}\n                    <div>\n                      <Label className='text-xs font-medium text-gray-500'>{t('occupancy')}</Label>\n                      <div className='flex items-center gap-2 text-sm'>\n                        <Badge variant='outline' className='text-xs'>\n                          {building.occupiedUnits}/{building.totalUnits} {t('units')}\n                        </Badge>\n                        <Badge\n                          variant={\n                            building.occupancyRate >= 90\n                              ? 'default'\n                              : building.occupancyRate >= 70\n                                ? 'secondary'\n                                : 'destructive'\n                          }\n                          className='text-xs'\n                        >\n                          {Math.round(building.occupancyRate)}% {t('occupied')}\n                        </Badge>\n                      </div>\n                    </div>\n\n                    {building.amenities && (\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>{t('amenities')}</Label>\n                        <div className='flex flex-wrap gap-1 mt-1'>\n                          {(() => {\n                            try {\n                              const amenities =\n                                typeof building.amenities === 'string'\n                                  ? JSON.parse(building.amenities)\n                                  : building.amenities;\n                              return Array.isArray(amenities)\n                                ? amenities.slice(0, 3).map((amenity: string, index: number) => (\n                                    <Badge key={index} variant='outline' className='text-xs'>\n                                      {amenity}\n                                    </Badge>\n                                  ))\n                                : null;\n                            } catch (_e) {\n                              return (\n                                <span className='text-xs text-muted-foreground'>\n                                  {t('unableToDisplayAmenities')}\n                                </span>\n                              );\n                            }\n                          })()}\n                          {(() => {\n                            try {\n                              const amenities =\n                                typeof building.amenities === 'string'\n                                  ? JSON.parse(building.amenities)\n                                  : building.amenities;\n                              if (Array.isArray(amenities) && amenities.length > 3) {\n                                return (\n                                  <Badge variant='outline' className='text-xs'>\n                                    +{amenities.length - 3} {t('moreAmenities')}\n                                  </Badge>\n                                );\n                              }\n                            } catch (_e) {\n                              // Ignore error\n                            }\n                            return null;\n                          })()}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className='pt-4 border-t'>\n                    <Button\n                      onClick={() => handleViewDocuments(building.id)}\n                      variant='outline'\n                      size='sm'\n                      className='w-full justify-start'\n                    >\n                      <FileText className='w-4 h-4 mr-2' />\n                      {t('viewDocumentsButton')}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className='flex items-center justify-center gap-2 mt-8'>\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handlePreviousPage}\n                disabled={currentPage === 1}\n              >\n                <ChevronLeft className='h-4 w-4' />\n                {t('previous')}\n              </Button>\n\n              <div className='flex gap-1'>\n                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                  let pageNum;\n                  if (totalPages <= 5) {\n                    pageNum = i + 1;\n                  } else if (currentPage <= 3) {\n                    pageNum = i + 1;\n                  } else if (currentPage >= totalPages - 2) {\n                    pageNum = totalPages - 4 + i;\n                  } else {\n                    pageNum = currentPage - 2 + i;\n                  }\n\n                  return (\n                    <Button\n                      key={pageNum}\n                      variant={currentPage === pageNum ? 'default' : 'outline'}\n                      size='sm'\n                      onClick={() => handlePageClick(pageNum)}\n                    >\n                      {pageNum}\n                    </Button>\n                  );\n                })}\n              </div>\n\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handleNextPage}\n                disabled={currentPage === totalPages}\n              >\n                {t('next')}\n                <ChevronRight className='h-4 w-4' />\n              </Button>\n            </div>\n          )}\n\n          {/* Page info */}\n          <div className='text-center text-sm text-muted-foreground mt-4'>\n            {t('showing')} {startIndex + 1} to {Math.min(endIndex, buildings.length)} of {buildings.length}{' '}\n            {t('buildings')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}