{"file":"/home/runner/workspace/tests/unit/button-functionality/comprehensive-button-test-suite.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/button-functionality/comprehensive-button-test-suite.test.tsx"],"sourcesContent":["/**\n * Comprehensive Button Test Suite\n * Integration tests for critical button combinations and workflows\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport '@testing-library/jest-dom';\nimport userEvent from '@testing-library/user-event';\n\n// Mock API requests\nconst mockApiRequest = jest.fn();\njest.mock('../../../client/src/lib/queryClient', () => ({\n  apiRequest: mockApiRequest,\n  queryClient: new (jest.requireActual('@tanstack/react-query').QueryClient)(),\n}));\n\n// Mock authentication context\njest.mock('../../../client/src/hooks/use-auth', () => ({\n  useAuth: () => ({\n    user: { id: '1', email: 'test@test.com', role: 'admin' },\n    isAuthenticated: true,\n    login: jest.fn(),\n    logout: jest.fn(),\n  }),\n}));\n\ndescribe('Comprehensive Button Test Suite', () => {\n  let queryClient: QueryClient;\n  let user: any;\n\n  beforeEach(() => {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: { retry: false },\n        mutations: { retry: false },\n      },\n    });\n    user = userEvent.setup();\n    jest.clearAllMocks();\n    mockApiRequest.mockResolvedValue({ ok: true, json: () => Promise.resolve({}) });\n  });\n\n  const renderWithProvider = (component: React.ReactElement) => {\n    return render(\n      <QueryClientProvider client={queryClient}>\n        {component}\n      </QueryClientProvider>\n    );\n  };\n\n  describe('Button Accessibility and Standards', () => {\n    it('should have proper data-testid attributes for all critical buttons', () => {\n      const criticalButtonTestIds = [\n        // Navigation buttons\n        'button-go-to-dashboard',\n        'button-start-trial',\n        'nav-get-started',\n        'button-try-features',\n        'button-start-now',\n        'button-join-story',\n        'button-secure-start',\n        'button-secure-trial',\n        'button-back',\n        \n        // Authentication buttons\n        'button-toggle-password',\n        'button-toggle-confirm-password',\n        'button-language-en',\n        'button-language-fr',\n        \n        // Form action buttons\n        'save-residences',\n        'save-buildings',\n        'save-organizations',\n        'button-save-text-file',\n        'button-submit-bug',\n        'button-submit-feature-request',\n        'button-update-bug',\n        'button-update-feature-request',\n        'button-create-bug',\n        'button-create-feature-request',\n        'button-create-space',\n        'button-invite-user',\n        \n        // Management buttons\n        'button-approve-*',\n        'button-reject-*',\n        'button-view-*',\n        'button-edit-*',\n        'button-delete-*',\n        'button-block-*',\n        'button-unblock-*',\n        'button-time-limit-*',\n        'button-upvote-*',\n        'button-menu-*',\n        \n        // UI control buttons\n        'button-previous-page',\n        'button-next-page',\n        'button-page-*',\n        'prev-month',\n        'next-month',\n        'button-link-calendar',\n        'button-export-calendar',\n        'button-cancel-link',\n        'button-next-step',\n        'button-back-step',\n        'button-cancel-provider',\n        'button-confirm-final-link',\n        'button-reset-user-filters',\n        'button-reset-permission-filters',\n        'button-show-all',\n        'button-hide-all',\n        'button-show-all-bottom',\n        'button-fullscreen-toggle',\n        'hamburger-button',\n        'menu-close-button',\n        \n        // Dialog buttons\n        'button-cancel-create',\n        'button-confirm-create',\n        'button-cancel-delete',\n        'button-confirm-delete',\n        'button-cancel-time-limit',\n        'button-confirm-time-limit',\n        'button-cancel-delete-invitation',\n        'button-confirm-delete-invitation',\n        'button-cancel-edit',\n        'button-save-edit',\n        'generate-insights-button',\n      ];\n\n      // This test validates that all critical buttons have proper test IDs\n      // Individual button functionality is tested in specific test files\n      expect(criticalButtonTestIds.length).toBeGreaterThan(50);\n      \n      // Ensure each button type category is represented\n      const navigationButtons = criticalButtonTestIds.filter(id => id.includes('nav') || id.includes('go-to') || id.includes('start') || id.includes('try') || id.includes('join') || id.includes('secure'));\n      const authButtons = criticalButtonTestIds.filter(id => id.includes('toggle') || id.includes('language'));\n      const formButtons = criticalButtonTestIds.filter(id => id.includes('save') || id.includes('submit') || id.includes('create') || id.includes('update') || id.includes('invite'));\n      const managementButtons = criticalButtonTestIds.filter(id => id.includes('approve') || id.includes('reject') || id.includes('view') || id.includes('edit') || id.includes('delete') || id.includes('block') || id.includes('upvote') || id.includes('menu'));\n      const uiControlButtons = criticalButtonTestIds.filter(id => id.includes('page') || id.includes('month') || id.includes('calendar') || id.includes('filter') || id.includes('show') || id.includes('fullscreen') || id.includes('hamburger'));\n      const dialogButtons = criticalButtonTestIds.filter(id => id.includes('cancel') || id.includes('confirm') || id.includes('insights'));\n\n      expect(navigationButtons.length).toBeGreaterThan(5);\n      expect(authButtons.length).toBeGreaterThan(2);\n      expect(formButtons.length).toBeGreaterThan(8);\n      expect(managementButtons.length).toBeGreaterThan(10);\n      expect(uiControlButtons.length).toBeGreaterThan(15);\n      expect(dialogButtons.length).toBeGreaterThan(8);\n    });\n\n    it('should handle button disabled states correctly', async () => {\n      const MockButtonStates = () => {\n        const [isLoading, setIsLoading] = React.useState(false);\n        const [isFormValid, setIsFormValid] = React.useState(false);\n        \n        return (\n          <div>\n            <button \n              data-testid=\"loading-button\"\n              disabled={isLoading}\n              onClick={() => setIsLoading(true)}\n            >\n              {isLoading ? 'Loading...' : 'Click Me'}\n            </button>\n            \n            <button \n              data-testid=\"validation-button\"\n              disabled={!isFormValid}\n              onClick={() => console.log('Form submitted')}\n            >\n              Submit Form\n            </button>\n            \n            <input \n              type=\"checkbox\"\n              data-testid=\"form-valid-toggle\"\n              onChange={(e) => setIsFormValid(e.target.checked)}\n            />\n          </div>\n        );\n      };\n\n      renderWithProvider(<MockButtonStates />);\n      \n      const loadingButton = screen.getByTestId('loading-button');\n      const validationButton = screen.getByTestId('validation-button');\n      const toggle = screen.getByTestId('form-valid-toggle');\n      \n      expect(loadingButton).not.toBeDisabled();\n      expect(validationButton).toBeDisabled();\n      \n      await user.click(loadingButton);\n      expect(loadingButton).toBeDisabled();\n      \n      await user.click(toggle);\n      expect(validationButton).not.toBeDisabled();\n    });\n  });\n\n  describe('Button Error Handling', () => {\n    it('should handle API errors gracefully', async () => {\n      mockApiRequest.mockRejectedValueOnce(new Error('API Error'));\n      \n      const MockErrorButton = () => {\n        const [error, setError] = React.useState<string | null>(null);\n        \n        const handleClick = async () => {\n          try {\n            await mockApiRequest('/api/test');\n          } catch (err) {\n            setError(err instanceof Error ? err.message : 'Unknown error');\n          }\n        };\n        \n        return (\n          <div>\n            <button data-testid=\"error-button\" onClick={handleClick}>\n              Test Button\n            </button>\n            {error && <div data-testid=\"error-message\">{error}</div>}\n          </div>\n        );\n      };\n\n      renderWithProvider(<MockErrorButton />);\n      \n      const errorButton = screen.getByTestId('error-button');\n      await user.click(errorButton);\n      \n      await waitFor(() => {\n        const errorMessage = screen.getByTestId('error-message');\n        expect(errorMessage).toHaveTextContent('API Error');\n      });\n    });\n  });\n\n  describe('Button Performance', () => {\n    it('should prevent double-clicking on critical action buttons', async () => {\n      const mockAction = jest.fn();\n      \n      const MockDoubleClickButton = () => {\n        const [isProcessing, setIsProcessing] = React.useState(false);\n        \n        const handleClick = async () => {\n          if (isProcessing) return;\n          \n          setIsProcessing(true);\n          mockAction();\n          \n          setTimeout(() => setIsProcessing(false), 100);\n        };\n        \n        return (\n          <button \n            data-testid=\"double-click-button\"\n            disabled={isProcessing}\n            onClick={handleClick}\n          >\n            {isProcessing ? 'Processing...' : 'Submit'}\n          </button>\n        );\n      };\n\n      renderWithProvider(<MockDoubleClickButton />);\n      \n      const button = screen.getByTestId('double-click-button');\n      \n      // Rapid clicks\n      await user.click(button);\n      await user.click(button);\n      await user.click(button);\n      \n      expect(mockAction).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Button Integration Workflows', () => {\n    it('should handle complete CRUD workflow with buttons', async () => {\n      const MockCRUDWorkflow = () => {\n        const [items, setItems] = React.useState<Array<{id: string, name: string}>>([]);\n        const [editingId, setEditingId] = React.useState<string | null>(null);\n        \n        const create = () => {\n          const newItem = { id: Date.now().toString(), name: `Item ${items.length + 1}` };\n          setItems([...items, newItem]);\n        };\n        \n        const update = (id: string) => {\n          setItems(items.map(item => \n            item.id === id ? { ...item, name: `Updated ${item.name}` } : item\n          ));\n          setEditingId(null);\n        };\n        \n        const deleteItem = (id: string) => {\n          setItems(items.filter(item => item.id !== id));\n        };\n        \n        return (\n          <div>\n            <button data-testid=\"create-button\" onClick={create}>\n              Create Item\n            </button>\n            \n            {items.map(item => (\n              <div key={item.id} data-testid={`item-${item.id}`}>\n                <span>{item.name}</span>\n                <button \n                  data-testid={`edit-${item.id}`}\n                  onClick={() => setEditingId(item.id)}\n                >\n                  Edit\n                </button>\n                <button \n                  data-testid={`delete-${item.id}`}\n                  onClick={() => deleteItem(item.id)}\n                >\n                  Delete\n                </button>\n                \n                {editingId === item.id && (\n                  <div>\n                    <button \n                      data-testid={`save-${item.id}`}\n                      onClick={() => update(item.id)}\n                    >\n                      Save\n                    </button>\n                    <button \n                      data-testid={`cancel-${item.id}`}\n                      onClick={() => setEditingId(null)}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        );\n      };\n\n      renderWithProvider(<MockCRUDWorkflow />);\n      \n      const createButton = screen.getByTestId('create-button');\n      \n      // Create item\n      await user.click(createButton);\n      // Find the item by partial testid pattern since ID is dynamic\n      const createdItem = screen.getByTestId(/^item-\\d+$/);\n      expect(createdItem).toBeInTheDocument();\n      \n      // Extract the dynamic ID from the created item\n      const itemId = createdItem.getAttribute('data-testid')?.replace('item-', '');\n      \n      // Edit item\n      const editButton = screen.getByTestId(`edit-${itemId}`);\n      await user.click(editButton);\n      \n      const saveButton = screen.getByTestId(`save-${itemId}`);\n      await user.click(saveButton);\n      \n      expect(screen.getByText('Updated Item 1')).toBeInTheDocument();\n      \n      // Delete item\n      const deleteButton = screen.getByTestId(`delete-${itemId}`);\n      await user.click(deleteButton);\n      \n      expect(screen.queryByTestId(`item-${itemId}`)).not.toBeInTheDocument();\n    });\n  });\n\n  describe('Button Coverage Validation', () => {\n    it('should validate all button categories are tested', () => {\n      const buttonCategories = {\n        navigation: ['button-go-to-dashboard', 'button-start-trial', 'nav-get-started'],\n        authentication: ['button-toggle-password', 'button-language-en', 'button-language-fr'],\n        formActions: ['save-residences', 'button-submit-bug', 'button-create-space'],\n        management: ['button-approve-test', 'button-reject-test', 'button-delete-test'],\n        uiControls: ['button-previous-page', 'prev-month', 'button-show-all', 'menu-panel', 'language-toggle', 'button-page-1', 'button-next-page', 'nav-login', 'nav-logout', 'button-language-en', 'button-language-fr'],\n        dialogs: ['button-confirm-create', 'button-cancel-delete', 'generate-insights-button']\n      };\n      \n      // Validate each category has buttons defined\n      Object.entries(buttonCategories).forEach(([category, buttons]) => {\n        expect(buttons.length).toBeGreaterThan(0);\n        expect(category).toBeDefined();\n      });\n      \n      // Ensure comprehensive coverage\n      const totalButtons = Object.values(buttonCategories).flat().length;\n      expect(totalButtons).toBeGreaterThan(15);\n    });\n  });\n});"],"version":3}