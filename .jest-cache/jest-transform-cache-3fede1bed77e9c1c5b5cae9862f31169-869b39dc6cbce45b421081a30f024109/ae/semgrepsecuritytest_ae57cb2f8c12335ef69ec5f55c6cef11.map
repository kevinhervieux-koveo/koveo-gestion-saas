{"file":"/home/runner/workspace/tests/security/semgrep-security.test.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/security/semgrep-security.test.ts"],"sourcesContent":["import { execSync } from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\ndescribe('Semgrep Security Tests', () => {\n  let semgrepResults: any;\n  \n  beforeAll(() => {\n    // Ensure reports directory exists\n    if (!fs.existsSync('reports')) {\n      fs.mkdirSync('reports', { recursive: true });\n    }\n    \n    // Run Semgrep scan and capture results\n    try {\n      const semgrepOutput = execSync(\n        'semgrep --config=.semgrep.yml --json --no-git-ignore --include=\"*.ts\" --include=\"*.tsx\" .',\n        { \n          encoding: 'utf-8',\n          stdio: ['pipe', 'pipe', 'pipe'],\n          timeout: 30000\n        }\n      );\n      semgrepResults = JSON.parse(semgrepOutput);\n      \n      // Save results to reports directory\n      fs.writeFileSync('reports/semgrep-results.json', JSON.stringify(semgrepResults, null, 2));\n    } catch (error: any) {\n      // Semgrep may exit with code 1 when findings are detected, which is expected\n      if (error.stdout) {\n        try {\n          semgrepResults = JSON.parse(error.stdout);\n          fs.writeFileSync('reports/semgrep-results.json', JSON.stringify(semgrepResults, null, 2));\n        } catch (parseError) {\n          console.warn('Semgrep output parsing failed, using empty results');\n          semgrepResults = { results: [] };\n        }\n      } else {\n        console.warn('Semgrep execution completed with no output, using empty results');\n        semgrepResults = { results: [] };\n      }\n    }\n  });\n\n  describe('Security Rule Validation', () => {\n    test('should detect hardcoded secrets', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'hardcoded-secrets'\n      ) || [];\n      \n      // Should not have any hardcoded secrets in production code\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect SQL injection vulnerabilities', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'sql-injection-prevention'\n      ) || [];\n      \n      // Should not have any SQL injection vulnerabilities\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect XSS vulnerabilities in React components', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'xss-prevention-react'\n      ) || [];\n      \n      // Should not have any unvalidated dangerouslySetInnerHTML usage\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect weak cryptographic usage', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'weak-crypto-usage'\n      ) || [];\n      \n      // Should not use weak crypto algorithms\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect command injection risks', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'command-injection-risk'\n      ) || [];\n      \n      // Should not have command injection vulnerabilities\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect directory traversal vulnerabilities', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'directory-traversal-prevention'\n      ) || [];\n      \n      // Should not have path traversal vulnerabilities\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect environment variable exposure', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'env-var-exposure'\n      ) || [];\n      \n      // Should not expose environment variables in logs\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect database connection exposure', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'database-connection-exposure'\n      ) || [];\n      \n      // Should not expose database connection details\n      expect(violations.length).toBe(0);\n    });\n  });\n\n  describe('Quebec Law 25 Compliance', () => {\n    test('should flag potential personal data logging violations', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'law25-sensitive-data-logging'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ Potential Law 25 violations found:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // This is informational - log violations but don't fail the test\n      expect(violations).toBeDefined();\n    });\n\n    test('should flag cross-border data transfer without consent', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'law25-cross-border-transfer'\n      ) || [];\n      \n      // Critical compliance issue\n      expect(violations.length).toBe(0);\n    });\n\n    test('should flag missing encryption for sensitive data', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'law25-encryption-at-rest'\n      ) || [];\n      \n      // Critical compliance issue\n      expect(violations.length).toBe(0);\n    });\n\n    test('should flag insecure communication protocols', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'law25-secure-communication'\n      ) || [];\n      \n      // Critical compliance issue\n      expect(violations.length).toBe(0);\n    });\n  });\n\n  describe('Express.js Security', () => {\n    test('should detect CORS wildcard misconfigurations', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'express-cors-wildcard'\n      ) || [];\n      \n      // Should not have overly permissive CORS\n      expect(violations.length).toBe(0);\n    });\n\n    test('should detect missing rate limiting on auth endpoints', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'missing-rate-limiting'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ Auth endpoints without rate limiting:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // Warning level - log but don't fail\n      expect(violations).toBeDefined();\n    });\n\n    test('should detect insecure session configurations', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'session-security-missing'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ Session security issues:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // Warning level - check but don't fail tests\n      expect(violations).toBeDefined();\n    });\n  });\n\n  describe('React Security', () => {\n    test('should detect external links without security attributes', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'react-external-links'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ External links missing rel attributes:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // Warning level - informational\n      expect(violations).toBeDefined();\n    });\n\n    test('should detect potential prototype pollution', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'prototype-pollution-risk'\n      ) || [];\n      \n      // Critical security issue\n      expect(violations.length).toBe(0);\n    });\n  });\n\n  describe('Property Management Security', () => {\n    test('should protect tenant financial data', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'tenant-financial-data-protection'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ Tenant financial data protection concerns:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // Domain-specific warning\n      expect(violations).toBeDefined();\n    });\n\n    test('should protect building access data', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'building-access-data-security'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ Building access data security concerns:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // Domain-specific warning\n      expect(violations).toBeDefined();\n    });\n  });\n\n  describe('File Upload Security', () => {\n    test('should detect insecure file upload configurations', () => {\n      const violations = semgrepResults.results?.filter((result: any) => \n        result.check_id === 'file-upload-security'\n      ) || [];\n      \n      if (violations.length > 0) {\n        console.warn('⚠️ File upload security issues:', violations.length);\n        violations.forEach((v: any) => {\n          console.warn(`  - ${v.path}:${v.start.line} - ${v.message}`);\n        });\n      }\n      \n      // Warning level - should be addressed\n      expect(violations).toBeDefined();\n    });\n  });\n\n  describe('Security Summary Report', () => {\n    test('should generate security summary report', () => {\n      const totalFindings = semgrepResults.results?.length || 0;\n      const criticalFindings = semgrepResults.results?.filter((r: any) => r.severity === 'ERROR').length || 0;\n      const warningFindings = semgrepResults.results?.filter((r: any) => r.severity === 'WARNING').length || 0;\n      const infoFindings = semgrepResults.results?.filter((r: any) => r.severity === 'INFO').length || 0;\n\n      const summary = {\n        totalFindings,\n        criticalFindings,\n        warningFindings,\n        infoFindings,\n        scanDate: new Date().toISOString(),\n        rulesApplied: semgrepResults.results?.map((r: any) => r.check_id).filter((id: string, index: number, array: string[]) => array.indexOf(id) === index) || []\n      };\n\n      // Save security summary\n      fs.writeFileSync('reports/security-summary.json', JSON.stringify(summary, null, 2));\n\n      console.log('\\n🔒 Security Scan Summary:');\n      console.log(`   Total findings: ${totalFindings}`);\n      console.log(`   Critical: ${criticalFindings}`);\n      console.log(`   Warnings: ${warningFindings}`);\n      console.log(`   Info: ${infoFindings}`);\n      console.log(`   Rules applied: ${summary.rulesApplied.length}`);\n\n      // Test should pass if no critical findings\n      expect(criticalFindings).toBe(0);\n    });\n  });\n});"],"version":3}