{"file":"/home/runner/workspace/tests/unit/button-functionality/navigation-buttons.test.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/tests/unit/button-functionality/navigation-buttons.test.tsx"],"sourcesContent":["/**\n * Navigation Button Functionality Tests\n * Tests all navigation buttons throughout the application\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport '@testing-library/jest-dom';\n\n// Mock wouter navigation\nconst mockLocation = jest.fn();\nconst mockSetLocation = jest.fn();\n\njest.mock('wouter', () => ({\n  useLocation: () => [mockLocation(), mockSetLocation],\n  Link: ({ children, href, onClick, ...props }: any) => (\n    <a href={href} onClick={onClick} {...props}>\n      {children}\n    </a>\n  ),\n}));\n\n// Mock authentication context\njest.mock('../../../client/src/hooks/use-auth', () => ({\n  useAuth: () => ({\n    user: { id: '1', email: 'test@test.com', role: 'admin' },\n    isAuthenticated: true,\n    login: jest.fn(),\n    logout: jest.fn(),\n  }),\n}));\n\n// Import components to test\nimport HomePage from '../../../client/src/pages/home';\nimport PricingPage from '../../../client/src/pages/pricing';\nimport FeaturesPage from '../../../client/src/pages/features';\nimport StoryPage from '../../../client/src/pages/story';\nimport SecurityPage from '../../../client/src/pages/security';\n\ndescribe('Navigation Buttons Functionality', () => {\n  let queryClient: QueryClient;\n\n  beforeEach(() => {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: { retry: false },\n        mutations: { retry: false },\n      },\n    });\n    jest.clearAllMocks();\n    mockLocation.mockReturnValue('/');\n  });\n\n  const renderWithProvider = (component: React.ReactElement) => {\n    return render(\n      <QueryClientProvider client={queryClient}>\n        {component}\n      </QueryClientProvider>\n    );\n  };\n\n  describe('Home Page Navigation Buttons', () => {\n    it('should navigate to dashboard when \"Go to Dashboard\" button is clicked', async () => {\n      renderWithProvider(<HomePage />);\n      \n      const dashboardButton = screen.getByTestId('button-go-to-dashboard');\n      expect(dashboardButton).toBeInTheDocument();\n      \n      fireEvent.click(dashboardButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/dashboard');\n      });\n    });\n\n    it('should start trial when \"Start Trial\" button is clicked', async () => {\n      renderWithProvider(<HomePage />);\n      \n      const trialButton = screen.getByTestId('button-start-trial');\n      expect(trialButton).toBeInTheDocument();\n      \n      fireEvent.click(trialButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/auth/register');\n      });\n    });\n  });\n\n  describe('Pricing Page Navigation Buttons', () => {\n    it('should navigate to login when \"Get Started\" button is clicked', async () => {\n      renderWithProvider(<PricingPage />);\n      \n      const getStartedButton = screen.getByTestId('nav-get-started');\n      expect(getStartedButton).toBeInTheDocument();\n      \n      fireEvent.click(getStartedButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/login');\n      });\n    });\n  });\n\n  describe('Features Page Navigation Buttons', () => {\n    it('should navigate to trial when \"Try Features\" button is clicked', async () => {\n      renderWithProvider(<FeaturesPage />);\n      \n      const tryFeaturesButton = screen.getByTestId('button-try-features');\n      expect(tryFeaturesButton).toBeInTheDocument();\n      \n      fireEvent.click(tryFeaturesButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/auth/register');\n      });\n    });\n\n    it('should navigate to trial when \"Start Now\" button is clicked', async () => {\n      renderWithProvider(<FeaturesPage />);\n      \n      const startNowButton = screen.getByTestId('button-start-now');\n      expect(startNowButton).toBeInTheDocument();\n      \n      fireEvent.click(startNowButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/auth/register');\n      });\n    });\n  });\n\n  describe('Story Page Navigation Buttons', () => {\n    it('should navigate to registration when \"Join Story\" button is clicked', async () => {\n      renderWithProvider(<StoryPage />);\n      \n      const joinStoryButton = screen.getByTestId('button-join-story');\n      expect(joinStoryButton).toBeInTheDocument();\n      \n      fireEvent.click(joinStoryButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/auth/register');\n      });\n    });\n  });\n\n  describe('Security Page Navigation Buttons', () => {\n    it('should navigate to registration when \"Secure Start\" button is clicked', async () => {\n      renderWithProvider(<SecurityPage />);\n      \n      const secureStartButton = screen.getByTestId('button-secure-start');\n      expect(secureStartButton).toBeInTheDocument();\n      \n      fireEvent.click(secureStartButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/auth/register');\n      });\n    });\n\n    it('should navigate to registration when \"Secure Trial\" button is clicked', async () => {\n      renderWithProvider(<SecurityPage />);\n      \n      const secureTrialButton = screen.getByTestId('button-secure-trial');\n      expect(secureTrialButton).toBeInTheDocument();\n      \n      fireEvent.click(secureTrialButton);\n      \n      await waitFor(() => {\n        expect(mockSetLocation).toHaveBeenCalledWith('/auth/register');\n      });\n    });\n  });\n\n  describe('Back Navigation Buttons', () => {\n    it('should navigate back when back buttons are clicked', () => {\n      // These would be tested in their respective component contexts\n      const backButtonSelectors = [\n        'button-back',\n      ];\n\n      backButtonSelectors.forEach(selector => {\n        // Mock implementation - actual tests would render the specific components\n        const mockBackClick = jest.fn();\n        const backButton = document.createElement('button');\n        backButton.setAttribute('data-testid', selector);\n        backButton.onclick = mockBackClick;\n        \n        fireEvent.click(backButton);\n        expect(mockBackClick).toHaveBeenCalled();\n      });\n    });\n  });\n});"],"version":3}