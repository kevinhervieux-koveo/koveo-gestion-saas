{"file":"/home/runner/workspace/client/src/pages/admin/roadmap.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/admin/roadmap.tsx"],"sourcesContent":["import { useState, useMemo, useCallback } from 'react';\nimport { Header } from '@/components/layout/header';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from '@/components/ui/accordion';\nimport {\n  Home,\n  Building,\n  Users,\n  DollarSign,\n  FileText,\n  Wrench,\n  Bell,\n  Settings,\n  Shield,\n  Bot,\n  BarChart3,\n  Database,\n  Cloud,\n  Plus,\n  Terminal,\n  Globe,\n  Search,\n  Target,\n  CheckCircle2,\n  Clock,\n  Circle,\n  ChevronDown,\n  ChevronRight,\n  ListTodo,\n  MessageCircle,\n  Copy,\n  AlertTriangle,\n} from 'lucide-react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport type { Feature, ActionableItem } from '@shared/schema';\nimport { FeatureForm } from '@/components/forms';\nimport {\n  useFeatureDuplicateAnalysis,\n  getDuplicateBadge,\n  getDuplicateNote,\n} from '@/components/roadmap/feature-duplicate-analysis';\nimport { RoadmapSection, type Section } from '@/components/roadmap/roadmap-section';\nimport { generateLLMHelpForm } from '@/components/roadmap/llm-help-form';\nimport {\n  getStatusIcon,\n  getStatusBadge,\n  getPriorityBadge,\n  getActionableItemStatusIcon,\n  getActionableItemStatusBadge,\n} from '@/components/roadmap/feature-status-badges';\n\n/**\n * Owner roadmap page displaying all features with planning capabilities.\n * Users can click on any feature to open a detailed planning dialog.\n */\nexport default function OwnerRoadmap() {\n  const { toast } = useToast();\n\n  // Status change mutation\n  const statusMutation = useMutation({\n    mutationFn: ({ featureId, status }: { featureId: string; status: string }) =>\n      apiRequest('POST', `/api/features/${featureId}/update-status`, { status }),\n    onSuccess: () => {\n      toast({\n        title: 'Status Updated',\n        description: 'Feature status has been updated successfully.',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/features'] });\n    },\n    onError: () => {\n      toast({\n        title: 'Error',\n        description: 'Failed to update feature status.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Actionable item status update mutation\n  const actionableItemMutation = useMutation({\n    mutationFn: ({ itemId, status }: { itemId: string; status: string }) =>\n      apiRequest('PUT', `/api/actionable-items/${itemId}`, {\n        status,\n        completedAt: status === 'completed' ? new Date() : null,\n      }),\n    onSuccess: () => {\n      toast({\n        title: 'Task Updated',\n        description: 'Actionable item status has been updated successfully.',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/features'] });\n      // Note: Individual actionable items will invalidate their own queries\n    },\n    onError: () => {\n      toast({\n        title: 'Error',\n        description: 'Failed to update actionable item status.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Strategic path toggle mutation\n  const strategicMutation = useMutation({\n    mutationFn: ({ featureId, isStrategicPath }: { featureId: string; isStrategicPath: boolean }) =>\n      apiRequest('POST', `/api/features/${featureId}/toggle-strategic`, { isStrategicPath }),\n    onSuccess: () => {\n      toast({\n        title: 'Strategic Path Updated',\n        description: 'Feature strategic path status has been updated.',\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/features'] });\n    },\n    onError: () => {\n      toast({\n        title: 'Error',\n        description: 'Failed to update strategic path status.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Sync mutation for manual synchronization\n  const syncMutation = useMutation({\n    mutationFn: async () => {\n      const response = await fetch('/api/features/trigger-sync', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to sync features');\n      }\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: 'Sync Completed',\n        description: data.message || 'All features have been synchronized to production.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Sync Failed',\n        description: error.message || 'Failed to synchronize features to production.',\n        variant: 'destructive',\n      });\n    },\n  });\n  const [selectedFeature, setSelectedFeature] = useState<Feature | null>(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\n  const [expandedFeatures, setExpandedFeatures] = useState<string[]>([]);\n  const [actionableItems, setActionableItems] = useState<Record<string, ActionableItem[]>>({});\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Fetch features from the database\n  const {\n    data: features = [],\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: ['/api/features', 'roadmap'],\n    queryFn: async () => {\n      const res = await fetch('/api/features?roadmap=true', {\n        credentials: 'include',\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n      }\n      return res.json();\n    },\n  });\n\n  // Minimal debug logging only for actual errors\n\n  /**\n   * Fetches actionable items for a specific feature.\n   */\n  const fetchActionableItems = useCallback(async (featureId: string) => {\n    // Check if already fetched to prevent duplicate requests\n    setActionableItems((prev) => {\n      if (prev[featureId]) {\n        return prev; // Already fetched, don't update state\n      }\n      // Set as loading/empty to prevent duplicate requests\n      return { ...prev, [featureId]: [] };\n    });\n\n    try {\n      const response = await fetch(`/api/features/${featureId}/actionable-items`);\n      if (response.ok) {\n        const items = await response.json();\n        setActionableItems((current) => ({ ...current, [featureId]: items }));\n      } else {\n        // Failed to fetch actionable items\n      }\n    } catch (error) {\n      // Error fetching actionable items\n    }\n  }, []);\n\n  /**\n   * Copies text to clipboard with toast feedback.\n   * @param prompt\n   */\n  const handleCopyPrompt = async (prompt: string) => {\n    try {\n      await navigator.clipboard.writeText(prompt);\n      toast({\n        title: 'Prompt copied!',\n        description: 'The implementation prompt has been copied to your clipboard.',\n      });\n    } catch (error) {\n      // Error copying to clipboard\n      toast({\n        title: 'Failed to copy',\n        description: 'Could not copy the prompt to clipboard.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  /**\n   * Handles toggling actionable item status between pending and completed.\n   * @param item\n   */\n  const handleToggleActionableItem = (item: ActionableItem) => {\n    const newStatus = item.status === 'completed' ? 'pending' : 'completed';\n    actionableItemMutation.mutate({ itemId: item.id, status: newStatus });\n  };\n\n  /**\n   * Handles updating actionable item status via dropdown.\n   * @param item\n   * @param newStatus\n   */\n  const handleActionableItemStatusChange = (item: ActionableItem, newStatus: string) => {\n    actionableItemMutation.mutate({ itemId: item.id, status: newStatus });\n  };\n\n  /**\n   * Toggles feature expansion and fetches actionable items if needed.\n   * @param featureId\n   */\n  const toggleFeatureExpansion = useCallback(\n    (featureId: string) => {\n      setExpandedFeatures((prev) => {\n        const isExpanded = prev.includes(featureId);\n        if (isExpanded) {\n          return prev.filter((id) => id !== featureId);\n        } else {\n          // Fetch actionable items when expanding\n          fetchActionableItems(featureId);\n          return [...prev, featureId];\n        }\n      });\n    },\n    [fetchActionableItems]\n  );\n\n  // Use the duplicate analysis hook\n  const { duplicateAnalysis, duplicateStats } = useFeatureDuplicateAnalysis(features);\n\n  /**\n   * Handles clicking on a feature item to open the planning dialog.\n   * @param feature\n   */\n  const handleFeatureClick = (feature: Feature) => {\n    setSelectedFeature(feature);\n    setDialogOpen(true);\n  };\n\n  /**\n   * Handles creating a new feature item.\n   */\n  const handleCreateNewItem = () => {\n    setSelectedFeature(null);\n    setDialogOpen(true);\n  };\n\n  /**\n   * Copies LLM help form to clipboard for feature discussion.\n   */\n  const handleCopyLLMForm = async () => {\n    try {\n      await navigator.clipboard.writeText(generateLLMHelpForm());\n      toast({\n        title: 'Enhanced LLM Help Form Copied',\n        description:\n          'The enhanced feature discussion form with Koveo Gestion context has been copied. The LLM will focus specifically on your requirements.',\n        duration: 3000,\n      });\n    } catch (error) {\n      // Error copying LLM form\n      toast({\n        title: 'Copy Failed',\n        description: 'Failed to copy the form to clipboard.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Filter features based on search term\n  const filteredFeatures = useMemo(() => {\n    if (!searchTerm.trim()) {\n      return features;\n    }\n\n    const searchLower = searchTerm.toLowerCase().trim();\n    return features.filter(\n      (feature: Feature) =>\n        feature.name.toLowerCase().includes(searchLower) ||\n        feature.description?.toLowerCase().includes(searchLower) ||\n        feature.category.toLowerCase().includes(searchLower)\n    );\n  }, [features, searchTerm]);\n\n  // Group features by category and strategic path\n  const groupedFeatures = filteredFeatures.reduce(\n    (acc: Record<string, Feature[]>, feature: Feature) => {\n      // Handle Strategic Path as a special case\n      if ((feature as any).isStrategicPath) {\n        if (!acc['Strategic Path']) {\n          acc['Strategic Path'] = [];\n        }\n        acc['Strategic Path'].push(feature);\n      }\n\n      // Also group by category\n      if (!acc[feature.category]) {\n        acc[feature.category] = [];\n      }\n      acc[feature.category].push(feature);\n      return acc;\n    },\n    {}\n  );\n\n  // Debug logging\n\n  const sections: Section[] = [\n    {\n      title: 'Strategic Path',\n      icon: Target,\n      description: 'High-level strategic initiatives and business objectives',\n      features: groupedFeatures['Strategic Path'] || [],\n    },\n    {\n      title: 'Dashboard & Home',\n      icon: Home,\n      description: 'Central hub for property management overview',\n      features: groupedFeatures['Dashboard & Home'] || [],\n    },\n    {\n      title: 'Property Management',\n      icon: Building,\n      description: 'Building and residence management features',\n      features: groupedFeatures['Property Management'] || [],\n    },\n    {\n      title: 'Resident Management',\n      icon: Users,\n      description: 'Resident and tenant management system',\n      features: groupedFeatures['Resident Management'] || [],\n    },\n    {\n      title: 'Financial Management',\n      icon: DollarSign,\n      description: 'Comprehensive financial and billing system',\n      features: groupedFeatures['Financial Management'] || [],\n    },\n    {\n      title: 'Maintenance & Requests',\n      icon: Wrench,\n      description: 'Maintenance request and work order management',\n      features: groupedFeatures['Maintenance & Requests'] || [],\n    },\n    {\n      title: 'Document Management',\n      icon: FileText,\n      description: 'Centralized document storage and management',\n      features: groupedFeatures['Document Management'] || [],\n    },\n    {\n      title: 'Communication',\n      icon: Bell,\n      description: 'Multi-channel communication system',\n      features: groupedFeatures.Communication || [],\n    },\n    {\n      title: 'AI & Automation',\n      icon: Bot,\n      description: 'Artificial intelligence and automation features',\n      features: groupedFeatures['AI & Automation'] || [],\n    },\n    {\n      title: 'Compliance & Security',\n      icon: Shield,\n      description: 'Quebec Law 25 compliance and security features',\n      features: groupedFeatures['Compliance & Security'] || [],\n    },\n    {\n      title: 'Analytics & Reporting',\n      icon: BarChart3,\n      description: 'Business intelligence and reporting tools',\n      features: groupedFeatures['Analytics & Reporting'] || [],\n    },\n    {\n      title: 'Integration & API',\n      icon: Database,\n      description: 'Third-party integrations and API access',\n      features: groupedFeatures['Integration & API'] || [],\n    },\n    {\n      title: 'Infrastructure & Performance',\n      icon: Cloud,\n      description: 'Platform infrastructure and optimization',\n      features: groupedFeatures['Infrastructure & Performance'] || [],\n    },\n    {\n      title: 'Website',\n      icon: Globe,\n      description: 'Website features, SEO, and automation tools',\n      features: groupedFeatures.Website || [],\n    },\n  ];\n\n  const calculateProgress = (_features: Feature[]) => {\n    const completed = _features.filter((f) => f.status === 'completed').length;\n    const inProgress = _features.filter((f) => f.status === 'in-progress').length;\n    const total = _features.length;\n    const progress = total > 0 ? ((completed + inProgress * 0.5) / total) * 100 : 0;\n    return {\n      completed,\n      inProgress,\n      planned: _features.filter((f) => f.status === 'planned').length,\n      progress: Math.round(progress),\n    };\n  };\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title='Product Roadmap' subtitle='Loading roadmap data...' />\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <div className='animate-spin rounded-full h-12 w-12 border-b-2 border-koveo-navy mx-auto'></div>\n            <p className='mt-4 text-gray-600'>Loading features...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header\n        title='Product Roadmap'\n        subtitle='Complete feature list and development progress (Live Data)'\n      />\n\n      {/* Search Bar */}\n      <div className='bg-white border-b px-6 py-4'>\n        <div className='relative max-w-md'>\n          <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4' />\n          <Input\n            type='text'\n            placeholder='Search features by name, description, or category...'\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className='pl-10 pr-4'\n          />\n        </div>\n        {searchTerm && (\n          <div className='mt-2 text-sm text-gray-600'>\n            Found {filteredFeatures.length} feature{filteredFeatures.length !== 1 ? 's' : ''}{' '}\n            matching \"{searchTerm}\"\n            {filteredFeatures.length !== features.length && (\n              <button\n                onClick={() => setSearchTerm('')}\n                className='ml-2 text-blue-600 hover:text-blue-800 underline'\n              >\n                Clear search\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Refresh Command */}\n      <div className='border-b bg-gray-50 px-6 py-3'>\n        <div className='max-w-7xl mx-auto'>\n          <div className='flex items-center gap-2 text-sm text-gray-600'>\n            <Terminal className='h-4 w-4' />\n            <span className='font-medium'>Refresh Command:</span>\n            <code className='bg-gray-100 px-2 py-1 rounded text-xs font-mono'>\n              npm run validate\n            </code>\n          </div>\n        </div>\n      </div>\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Sync Status Info */}\n          <Card className='bg-blue-50 border-blue-200'>\n            <CardContent className='p-4'>\n              <div className='flex items-center justify-between'>\n                <div className='flex items-center gap-2'>\n                  <Database className='w-4 h-4 text-blue-600' />\n                  <span className='text-sm font-medium text-blue-800'>\n                    Automatic Synchronization\n                  </span>\n                </div>\n                <div className='text-xs text-blue-600'>\n                  {process.env.NODE_ENV === 'development'\n                    ? 'DEV → PROD Sync Enabled'\n                    : 'Production Environment'}\n                </div>\n              </div>\n              <p className='text-xs text-blue-700 mt-2'>\n                {process.env.NODE_ENV === 'development'\n                  ? 'New feature requests automatically appear as \"Submitted\" status and sync to production. Updates to roadmap features are automatically synchronized.'\n                  : 'This is the production roadmap. Changes are synchronized from the development environment.'}\n              </p>\n            </CardContent>\n          </Card>\n\n          {/* Create New Item Buttons */}\n          <div className='flex justify-end gap-3 mb-6'>\n            <Button\n              onClick={handleCopyLLMForm}\n              variant='outline'\n              className='border-purple-200 text-purple-700 hover:bg-purple-50'\n            >\n              <MessageCircle className='w-4 h-4 mr-2' />\n              LLM Help Form\n            </Button>\n            <Button\n              onClick={() => syncMutation.mutate()}\n              variant='outline'\n              disabled={syncMutation.isPending}\n              className='border-blue-200 text-blue-700 hover:bg-blue-50'\n            >\n              <Database className='w-4 h-4 mr-2' />\n              {syncMutation.isPending ? 'Syncing...' : 'Sync to Production'}\n            </Button>\n            <Button onClick={handleCreateNewItem} className='bg-koveo-navy hover:bg-koveo-navy/90'>\n              <Plus className='w-4 h-4 mr-2' />\n              Create New Item\n            </Button>\n          </div>\n          {/* Overview Stats */}\n          <div className='grid grid-cols-6 gap-4 mb-6'>\n            <Card>\n              <CardContent className='p-4'>\n                <div className='text-2xl font-bold text-green-600'>\n                  {sections.reduce(\n                    (acc, s) => acc + s.features.filter((f) => f.status === 'completed').length,\n                    0\n                  )}\n                </div>\n                <div className='text-sm text-gray-600'>Completed Features</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className='p-4'>\n                <div className='text-2xl font-bold text-blue-600'>\n                  {sections.reduce(\n                    (acc, s) => acc + s.features.filter((f) => f.status === 'in-progress').length,\n                    0\n                  )}\n                </div>\n                <div className='text-sm text-gray-600'>In Progress</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className='p-4'>\n                <div className='text-2xl font-bold text-gray-600'>\n                  {sections.reduce(\n                    (acc, s) => acc + s.features.filter((f) => f.status === 'planned').length,\n                    0\n                  )}\n                </div>\n                <div className='text-sm text-gray-600'>Planned Features</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className='p-4'>\n                <div className='text-2xl font-bold text-koveo-navy'>\n                  {sections.reduce((acc, s) => acc + s.features.length, 0)}\n                </div>\n                <div className='text-sm text-gray-600'>Total Features</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className='p-4'>\n                <div className='text-2xl font-bold text-red-600'>{duplicateStats.totalExact}</div>\n                <div className='text-sm text-gray-600'>Exact Duplicates</div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className='p-4'>\n                <div className='text-2xl font-bold text-orange-600'>\n                  {duplicateStats.totalSimilar}\n                </div>\n                <div className='text-sm text-gray-600'>Similar Features</div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Feature Sections - Now Collapsible */}\n          <Accordion\n            type='multiple'\n            value={expandedSections}\n            onValueChange={setExpandedSections}\n            className='space-y-4'\n          >\n            {sections.map((section) => {\n              const SectionIcon = section.icon;\n              const stats = calculateProgress(section.features);\n\n              return (\n                <AccordionItem\n                  key={section.title}\n                  value={section.title}\n                  className='border rounded-lg overflow-hidden'\n                >\n                  <AccordionTrigger className='hover:no-underline'>\n                    <Card className='w-full shadow-none border-none'>\n                      <CardHeader className='bg-gray-50'>\n                        <div className='flex items-start justify-between'>\n                          <div className='flex items-start space-x-3'>\n                            <div className='w-10 h-10 bg-koveo-navy rounded-lg flex items-center justify-center'>\n                              <SectionIcon className='w-5 h-5 text-white' />\n                            </div>\n                            <div>\n                              <CardTitle className='text-lg text-left'>{section.title}</CardTitle>\n                              <CardDescription className='mt-1 text-left'>\n                                {section.description}\n                              </CardDescription>\n                            </div>\n                          </div>\n                          <div className='text-right'>\n                            <div className='text-2xl font-bold text-koveo-navy'>\n                              {stats.progress}%\n                            </div>\n                            <div className='text-xs text-gray-500'>\n                              {stats.completed}/{section.features.length} complete\n                            </div>\n                          </div>\n                        </div>\n                        <div className='mt-4'>\n                          <div className='w-full bg-gray-200 rounded-full h-2 overflow-hidden'>\n                            <div\n                              className='h-full bg-gradient-to-r from-green-500 to-green-600 transition-all duration-500'\n                              style={{ width: `${stats.progress}%` }}\n                            />\n                          </div>\n                        </div>\n                      </CardHeader>\n                    </Card>\n                  </AccordionTrigger>\n                  <AccordionContent>\n                    <CardContent className='p-0 bg-white'>\n                      <div className='divide-y divide-gray-100'>\n                        {section.features.length === 0 ? (\n                          <div className='p-8 text-center text-gray-500'>\n                            <div className='mb-2'>No features in this category yet</div>\n                            <Button\n                              variant='outline'\n                              size='sm'\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleCreateNewItem();\n                              }}\n                            >\n                              <Plus className='w-4 h-4 mr-1' />\n                              Add First Feature\n                            </Button>\n                          </div>\n                        ) : (\n                          section.features.map((feature) => {\n                            const isExpanded = expandedFeatures.includes(\n                              feature.id || feature.name\n                            );\n                            const items = actionableItems[feature.id || feature.name] || [];\n\n                            return (\n                              <div\n                                key={feature.id || feature.name}\n                                className='border-l-4 border-transparent hover:border-blue-400'\n                              >\n                                {/* Feature Header */}\n                                <div className='p-4 hover:bg-blue-50 transition-colors'>\n                                  <div className='flex items-start space-x-3'>\n                                    <div className='flex items-center space-x-2'>\n                                      {getStatusIcon(feature.status)}\n                                      <button\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          toggleFeatureExpansion(feature.id || feature.name);\n                                        }}\n                                        className='p-1 hover:bg-gray-200 rounded transition-colors'\n                                      >\n                                        {isExpanded ? (\n                                          <ChevronDown className='w-4 h-4 text-gray-500' />\n                                        ) : (\n                                          <ChevronRight className='w-4 h-4 text-gray-500' />\n                                        )}\n                                      </button>\n                                    </div>\n                                    <div className='flex-1'>\n                                      <div className='flex items-center flex-wrap'>\n                                        <span\n                                          className='font-medium text-gray-900 hover:text-blue-600 transition-colors cursor-pointer'\n                                          onClick={() => handleFeatureClick(feature)}\n                                        >\n                                          {feature.name}\n                                        </span>\n                                        {getStatusBadge(feature.status)}\n                                        {feature.priority && getPriorityBadge(feature.priority)}\n                                        {getDuplicateBadge(feature.id || feature.name, undefined)}\n                                        {items.length > 0 && (\n                                          <Badge className='bg-purple-100 text-purple-800 hover:bg-purple-100 ml-2 text-xs'>\n                                            <ListTodo className='w-3 h-3 mr-1' />\n                                            {items.length} {items.length === 1 ? 'task' : 'tasks'}\n                                          </Badge>\n                                        )}\n                                        {(feature as any).isStrategicPath && (\n                                          <Badge className='bg-orange-100 text-orange-800 hover:bg-orange-100 ml-2 text-xs'>\n                                            <Target className='w-3 h-3 mr-1' />\n                                            Strategic\n                                          </Badge>\n                                        )}\n                                      </div>\n                                      <p className='text-sm text-gray-600 mt-1'>\n                                        {feature.description}\n                                      </p>\n\n                                      {/* Feature Controls */}\n                                      <div className='flex items-center gap-4 mt-3 pt-2 border-t border-gray-100'>\n                                        {/* Status Change */}\n                                        <div className='flex items-center gap-2'>\n                                          <Label\n                                            htmlFor={`status-${feature.id}`}\n                                            className='text-xs text-gray-600'\n                                          >\n                                            Status:\n                                          </Label>\n                                          <Select\n                                            value={feature.status}\n                                            onValueChange={(value) =>\n                                              statusMutation.mutate({\n                                                featureId: feature.id!,\n                                                status: value,\n                                              })\n                                            }\n                                            disabled={statusMutation.isPending}\n                                          >\n                                            <SelectTrigger\n                                              id={`status-${feature.id}`}\n                                              className='w-32 h-7 text-xs'\n                                            >\n                                              <SelectValue />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                              <SelectItem value='submitted'>Submitted</SelectItem>\n                                              <SelectItem value='planned'>Planned</SelectItem>\n                                              <SelectItem value='in-progress'>\n                                                In Progress\n                                              </SelectItem>\n                                              <SelectItem value='ai-analyzed'>\n                                                AI Analyzed\n                                              </SelectItem>\n                                              <SelectItem value='completed'>Completed</SelectItem>\n                                              <SelectItem value='cancelled'>Cancelled</SelectItem>\n                                            </SelectContent>\n                                          </Select>\n                                        </div>\n\n                                        {/* Strategic Path Toggle */}\n                                        <div className='flex items-center gap-2'>\n                                          <Label\n                                            htmlFor={`strategic-${feature.id}`}\n                                            className='text-xs text-gray-600'\n                                          >\n                                            Strategic Path:\n                                          </Label>\n                                          <Switch\n                                            id={`strategic-${feature.id}`}\n                                            checked={(feature as any).isStrategicPath || false}\n                                            onCheckedChange={(checked) =>\n                                              strategicMutation.mutate({\n                                                featureId: feature.id!,\n                                                isStrategicPath: checked,\n                                              })\n                                            }\n                                            disabled={strategicMutation.isPending}\n                                            className='scale-75'\n                                          />\n                                        </div>\n                                      </div>\n                                      {getDuplicateNote(feature.id || feature.name, undefined) && (\n                                        <div className='mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded text-xs text-yellow-800'>\n                                          {getDuplicateNote(feature.id || feature.name, undefined)}\n                                        </div>\n                                      )}\n                                    </div>\n                                  </div>\n                                </div>\n\n                                {/* Actionable Items */}\n                                {isExpanded && (\n                                  <div className='bg-gray-50 border-t border-gray-200'>\n                                    {items.length === 0 ? (\n                                      <div className='p-4 text-center text-gray-500 text-sm'>\n                                        <ListTodo className='w-6 h-6 mx-auto mb-2 text-gray-400' />\n                                        No actionable items yet.\n                                        <br />\n                                        <span className='text-xs'>\n                                          Generate a development prompt to create tasks.\n                                        </span>\n                                      </div>\n                                    ) : (\n                                      <div className='divide-y divide-gray-200'>\n                                        {items.map((item, _index) => (\n                                          <div\n                                            key={item.id || _index}\n                                            className='p-3 pl-12 hover:bg-white transition-colors'\n                                          >\n                                            <div className='flex items-start space-x-3'>\n                                              <button\n                                                onClick={() => handleToggleActionableItem(item)}\n                                                className='p-1 hover:bg-gray-100 rounded transition-colors'\n                                                title={`Mark as ${item.status === 'completed' ? 'pending' : 'completed'}`}\n                                              >\n                                                {getActionableItemStatusIcon(item.status)}\n                                              </button>\n                                              <div className='flex-1'>\n                                                <div className='flex items-center justify-between'>\n                                                  <div className='flex items-center space-x-2'>\n                                                    <span className='text-sm font-medium text-gray-900'>\n                                                      {item.title}\n                                                    </span>\n                                                    {getActionableItemStatusBadge(item.status)}\n                                                    {(item as any).estimatedEffort && (\n                                                      <Badge variant='outline' className='text-xs'>\n                                                        {(item as any).estimatedEffort}\n                                                      </Badge>\n                                                    )}\n                                                  </div>\n                                                  <div className='flex items-center gap-2'>\n                                                    <Select\n                                                      value={item.status}\n                                                      onValueChange={(_value) =>\n                                                        handleActionableItemStatusChange(\n                                                          item,\n                                                          _value\n                                                        )\n                                                      }\n                                                      disabled={actionableItemMutation.isPending}\n                                                    >\n                                                      <SelectTrigger className='w-24 h-6 text-xs'>\n                                                        <SelectValue />\n                                                      </SelectTrigger>\n                                                      <SelectContent>\n                                                        <SelectItem value='pending'>\n                                                          Todo\n                                                        </SelectItem>\n                                                        <SelectItem value='in-progress'>\n                                                          Working\n                                                        </SelectItem>\n                                                        <SelectItem value='completed'>\n                                                          Done\n                                                        </SelectItem>\n                                                        <SelectItem value='blocked'>\n                                                          Blocked\n                                                        </SelectItem>\n                                                      </SelectContent>\n                                                    </Select>\n                                                  </div>\n                                                </div>\n                                                <p className='text-xs text-gray-600 mt-1'>\n                                                  {item.description}\n                                                </p>\n                                                {(item as any).technicalDetails && (\n                                                  <p className='text-xs text-gray-500 mt-1'>\n                                                    <strong>Technical:</strong>{' '}\n                                                    {(item as any).technicalDetails}\n                                                  </p>\n                                                )}\n                                                {(item as any).implementationPrompt && (\n                                                  <div className='mt-2 p-2 bg-blue-50 border border-blue-200 rounded'>\n                                                    <div className='flex items-start justify-between'>\n                                                      <div className='flex-1'>\n                                                        <p className='text-xs font-medium text-blue-900 mb-1'>\n                                                          Replit AI Agent Prompt:\n                                                        </p>\n                                                        <p className='text-xs text-blue-800 whitespace-pre-wrap font-mono'>\n                                                          {(item as any).implementationPrompt}\n                                                        </p>\n                                                      </div>\n                                                      <Button\n                                                        variant='ghost'\n                                                        size='sm'\n                                                        className='ml-2 h-6 px-2'\n                                                        onClick={() =>\n                                                          handleCopyPrompt(\n                                                            (item as any).implementationPrompt || ''\n                                                          )\n                                                        }\n                                                      >\n                                                        <Copy className='w-3 h-3 mr-1' />\n                                                        Copy\n                                                      </Button>\n                                                    </div>\n                                                  </div>\n                                                )}\n                                              </div>\n                                            </div>\n                                          </div>\n                                        ))}\n                                      </div>\n                                    )}\n                                  </div>\n                                )}\n                              </div>\n                            );\n                          })\n                        )}\n                      </div>\n                    </CardContent>\n                  </AccordionContent>\n                </AccordionItem>\n              );\n            })}\n          </Accordion>\n        </div>\n      </div>\n\n      <FeatureForm feature={selectedFeature} open={dialogOpen} onOpenChange={setDialogOpen} />\n    </div>\n  );\n}\n"],"version":3}