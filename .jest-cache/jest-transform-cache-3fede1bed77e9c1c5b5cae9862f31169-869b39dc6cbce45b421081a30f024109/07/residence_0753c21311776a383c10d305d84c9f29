95b43c8c3122dc4baaa37b5098bcf5d3
"use strict";

/* istanbul ignore next */
function cov_12akx055c6() {
  var path = "/home/runner/workspace/client/src/pages/residents/residence.tsx";
  var hash = "c599c74b82b6f4a1b6659658a7be7cc76bd58cee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/runner/workspace/client/src/pages/residents/residence.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "7": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "8": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "9": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "10": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "11": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "12": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "13": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "14": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "15": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "16": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "17": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "18": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "19": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 28,
          column: 2
        }
      },
      "20": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "21": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "22": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "23": {
        start: {
          line: 36,
          column: 56
        },
        end: {
          line: 36,
          column: 81
        }
      },
      "24": {
        start: {
          line: 37,
          column: 58
        },
        end: {
          line: 37,
          column: 83
        }
      },
      "25": {
        start: {
          line: 38,
          column: 58
        },
        end: {
          line: 38,
          column: 86
        }
      },
      "26": {
        start: {
          line: 39,
          column: 48
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "27": {
        start: {
          line: 40,
          column: 42
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "28": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "29": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 52,
          column: 6
        }
      },
      "30": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "31": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 77
        }
      },
      "32": {
        start: {
          line: 59,
          column: 112
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "33": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "34": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "35": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 58
        }
      },
      "36": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 72,
          column: 14
        }
      },
      "37": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "38": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 62
        }
      },
      "39": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 35
        }
      },
      "40": {
        start: {
          line: 83,
          column: 37
        },
        end: {
          line: 83,
          column: 100
        }
      },
      "41": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "42": {
        start: {
          line: 86,
          column: 28
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "44": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "45": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 75
        }
      },
      "46": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 48
        }
      },
      "47": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 102,
          column: 54
        }
      },
      "48": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "49": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 44
        }
      },
      "50": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 91
        }
      },
      "51": {
        start: {
          line: 101,
          column: 54
        },
        end: {
          line: 101,
          column: 89
        }
      },
      "52": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 74
        }
      },
      "53": {
        start: {
          line: 105,
          column: 23
        },
        end: {
          line: 105,
          column: 55
        }
      },
      "54": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 106,
          column: 46
        }
      },
      "55": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 107,
          column: 76
        }
      },
      "56": {
        start: {
          line: 108,
          column: 31
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "57": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 56
        }
      },
      "58": {
        start: {
          line: 109,
          column: 33
        },
        end: {
          line: 109,
          column: 54
        }
      },
      "59": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "60": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 65
        }
      },
      "61": {
        start: {
          line: 112,
          column: 33
        },
        end: {
          line: 112,
          column: 63
        }
      },
      "62": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "63": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 29
        }
      },
      "64": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "65": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "66": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "67": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "68": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 61
        }
      },
      "69": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 41
        }
      },
      "70": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 84
        }
      },
      "71": {
        start: {
          line: 127,
          column: 46
        },
        end: {
          line: 127,
          column: 74
        }
      },
      "72": {
        start: {
          line: 130,
          column: 64
        },
        end: {
          line: 140,
          column: 6
        }
      },
      "73": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "74": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 26
        }
      },
      "75": {
        start: {
          line: 136,
          column: 29
        },
        end: {
          line: 136,
          column: 137
        }
      },
      "76": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 59
        }
      },
      "77": {
        start: {
          line: 142,
          column: 80
        },
        end: {
          line: 152,
          column: 6
        }
      },
      "78": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "79": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 26
        }
      },
      "80": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 145
        }
      },
      "81": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 59
        }
      },
      "82": {
        start: {
          line: 154,
          column: 31
        },
        end: {
          line: 176,
          column: 6
        }
      },
      "83": {
        start: {
          line: 155,
          column: 30
        },
        end: {
          line: 158,
          column: 10
        }
      },
      "84": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 96
        }
      },
      "85": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 42
        }
      },
      "86": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 36
        }
      },
      "87": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 32
        }
      },
      "88": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "89": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 174,
          column: 15
        }
      },
      "90": {
        start: {
          line: 177,
          column: 34
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "91": {
        start: {
          line: 178,
          column: 30
        },
        end: {
          line: 178,
          column: 113
        }
      },
      "92": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 96
        }
      },
      "93": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 42
        }
      },
      "94": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 36
        }
      },
      "95": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 32
        }
      },
      "96": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "97": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "98": {
        start: {
          line: 197,
          column: 34
        },
        end: {
          line: 213,
          column: 6
        }
      },
      "99": {
        start: {
          line: 198,
          column: 35
        },
        end: {
          line: 198,
          column: 104
        }
      },
      "100": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 96
        }
      },
      "101": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 204,
          column: 15
        }
      },
      "102": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "103": {
        start: {
          line: 214,
          column: 29
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "104": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "105": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 47
        }
      },
      "106": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 44
        }
      },
      "107": {
        start: {
          line: 222,
          column: 30
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "108": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 35
        }
      },
      "109": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "110": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 37
        }
      },
      "111": {
        start: {
          line: 233,
          column: 32
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "112": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "113": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 53
        }
      },
      "114": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "115": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 600
        }
      },
      "116": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "117": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 244,
          column: 98
        }
      },
      "118": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 266,
          column: 597
        }
      },
      "119": {
        start: {
          line: 247,
          column: 60
        },
        end: {
          line: 247,
          column: 89
        }
      },
      "120": {
        start: {
          line: 248,
          column: 60
        },
        end: {
          line: 248,
          column: 87
        }
      },
      "121": {
        start: {
          line: 249,
          column: 420
        },
        end: {
          line: 249,
          column: 553
        }
      },
      "122": {
        start: {
          line: 249,
          column: 1177
        },
        end: {
          line: 249,
          column: 1352
        }
      },
      "123": {
        start: {
          line: 249,
          column: 1560
        },
        end: {
          line: 251,
          column: 1367
        }
      },
      "124": {
        start: {
          line: 253,
          column: 40
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "125": {
        start: {
          line: 254,
          column: 44
        },
        end: {
          line: 254,
          column: 60
        }
      },
      "126": {
        start: {
          line: 256,
          column: 45
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "127": {
        start: {
          line: 257,
          column: 44
        },
        end: {
          line: 257,
          column: 60
        }
      },
      "128": {
        start: {
          line: 259,
          column: 45
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "129": {
        start: {
          line: 260,
          column: 44
        },
        end: {
          line: 260,
          column: 73
        }
      },
      "130": {
        start: {
          line: 263,
          column: 44
        },
        end: {
          line: 263,
          column: 74
        }
      },
      "131": {
        start: {
          line: 265,
          column: 40
        },
        end: {
          line: 265,
          column: 232
        }
      },
      "132": {
        start: {
          line: 265,
          column: 175
        },
        end: {
          line: 265,
          column: 199
        }
      }
    },
    fnMap: {
      "0": {
        name: "Residence",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 56,
            column: 18
          }
        },
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 77
          }
        },
        line: 56
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 17
          },
          end: {
            line: 61,
            column: 18
          }
        },
        loc: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 77,
            column: 9
          }
        },
        line: 61
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 85,
            column: 43
          },
          end: {
            line: 85,
            column: 44
          }
        },
        loc: {
          start: {
            line: 85,
            column: 49
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 85
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 87,
            column: 41
          },
          end: {
            line: 87,
            column: 42
          }
        },
        loc: {
          start: {
            line: 87,
            column: 56
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 87
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 52
          },
          end: {
            line: 95,
            column: 53
          }
        },
        loc: {
          start: {
            line: 95,
            column: 58
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 47
          },
          end: {
            line: 101,
            column: 48
          }
        },
        loc: {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 89
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 108,
            column: 31
          },
          end: {
            line: 108,
            column: 32
          }
        },
        loc: {
          start: {
            line: 108,
            column: 37
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 108
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 24
          }
        },
        loc: {
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 109,
            column: 54
          }
        },
        line: 109
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 28
          }
        },
        loc: {
          start: {
            line: 111,
            column: 33
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 111
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 24
          }
        },
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 63
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 29
          }
        },
        loc: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 114
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 118,
            column: 30
          }
        },
        loc: {
          start: {
            line: 118,
            column: 35
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 118
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 122,
            column: 51
          },
          end: {
            line: 122,
            column: 52
          }
        },
        loc: {
          start: {
            line: 122,
            column: 57
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 122
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 127,
            column: 39
          },
          end: {
            line: 127,
            column: 40
          }
        },
        loc: {
          start: {
            line: 127,
            column: 46
          },
          end: {
            line: 127,
            column: 74
          }
        },
        line: 127
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 132,
            column: 17
          },
          end: {
            line: 132,
            column: 18
          }
        },
        loc: {
          start: {
            line: 132,
            column: 29
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 132
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 144,
            column: 17
          },
          end: {
            line: 144,
            column: 18
          }
        },
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 144
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 155,
            column: 20
          },
          end: {
            line: 155,
            column: 21
          }
        },
        loc: {
          start: {
            line: 155,
            column: 30
          },
          end: {
            line: 158,
            column: 10
          }
        },
        line: 155
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 159,
            column: 20
          }
        },
        loc: {
          start: {
            line: 159,
            column: 25
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 159
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 169,
            column: 17
          },
          end: {
            line: 169,
            column: 18
          }
        },
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 169
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 21
          }
        },
        loc: {
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 178,
            column: 113
          }
        },
        line: 178
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 179,
            column: 19
          },
          end: {
            line: 179,
            column: 20
          }
        },
        loc: {
          start: {
            line: 179,
            column: 25
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 179
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 189,
            column: 17
          },
          end: {
            line: 189,
            column: 18
          }
        },
        loc: {
          start: {
            line: 189,
            column: 28
          },
          end: {
            line: 195,
            column: 9
          }
        },
        line: 189
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 21
          }
        },
        loc: {
          start: {
            line: 198,
            column: 35
          },
          end: {
            line: 198,
            column: 104
          }
        },
        line: 198
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 20
          }
        },
        loc: {
          start: {
            line: 199,
            column: 25
          },
          end: {
            line: 205,
            column: 9
          }
        },
        line: 199
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 206,
            column: 17
          },
          end: {
            line: 206,
            column: 18
          }
        },
        loc: {
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 212,
            column: 9
          }
        },
        line: 206
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 214,
            column: 29
          },
          end: {
            line: 214,
            column: 30
          }
        },
        loc: {
          start: {
            line: 214,
            column: 39
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 214
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 222,
            column: 30
          },
          end: {
            line: 222,
            column: 31
          }
        },
        loc: {
          start: {
            line: 222,
            column: 43
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 222
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 233,
            column: 32
          },
          end: {
            line: 233,
            column: 33
          }
        },
        loc: {
          start: {
            line: 233,
            column: 45
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 233
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 246,
            column: 1165
          },
          end: {
            line: 246,
            column: 1166
          }
        },
        loc: {
          start: {
            line: 246,
            column: 1176
          },
          end: {
            line: 249,
            column: 57
          }
        },
        line: 246
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 249,
            column: 405
          },
          end: {
            line: 249,
            column: 406
          }
        },
        loc: {
          start: {
            line: 249,
            column: 420
          },
          end: {
            line: 249,
            column: 553
          }
        },
        line: 249
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 249,
            column: 1161
          },
          end: {
            line: 249,
            column: 1162
          }
        },
        loc: {
          start: {
            line: 249,
            column: 1177
          },
          end: {
            line: 249,
            column: 1352
          }
        },
        line: 249
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 249,
            column: 1544
          },
          end: {
            line: 249,
            column: 1545
          }
        },
        loc: {
          start: {
            line: 249,
            column: 1560
          },
          end: {
            line: 251,
            column: 1367
          }
        },
        line: 249
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 251,
            column: 1852
          },
          end: {
            line: 251,
            column: 1853
          }
        },
        loc: {
          start: {
            line: 251,
            column: 1862
          },
          end: {
            line: 266,
            column: 37
          }
        },
        line: 251
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 265,
            column: 169
          },
          end: {
            line: 265,
            column: 170
          }
        },
        loc: {
          start: {
            line: 265,
            column: 175
          },
          end: {
            line: 265,
            column: 199
          }
        },
        line: 265
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 59,
            column: 18
          },
          end: {
            line: 59,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 59,
            column: 43
          }
        }],
        line: 59
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 83,
            column: 37
          },
          end: {
            line: 83,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 75
          },
          end: {
            line: 83,
            column: 95
          }
        }, {
          start: {
            line: 83,
            column: 98
          },
          end: {
            line: 83,
            column: 100
          }
        }],
        line: 83
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 88,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 88,
            column: 34
          }
        }, {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 88,
            column: 77
          }
        }],
        line: 88
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 32
          }
        }, {
          start: {
            line: 123,
            column: 36
          },
          end: {
            line: 123,
            column: 65
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 127,
            column: 15
          },
          end: {
            line: 127,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 15
          },
          end: {
            line: 127,
            column: 75
          }
        }, {
          start: {
            line: 127,
            column: 79
          },
          end: {
            line: 127,
            column: 83
          }
        }],
        line: 127
      },
      "10": {
        loc: {
          start: {
            line: 130,
            column: 18
          },
          end: {
            line: 130,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 31
          }
        }],
        line: 130
      },
      "11": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "12": {
        loc: {
          start: {
            line: 137,
            column: 19
          },
          end: {
            line: 137,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 45
          },
          end: {
            line: 137,
            column: 53
          }
        }, {
          start: {
            line: 137,
            column: 56
          },
          end: {
            line: 137,
            column: 58
          }
        }],
        line: 137
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 18
          },
          end: {
            line: 142,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 142,
            column: 37
          },
          end: {
            line: 142,
            column: 39
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "15": {
        loc: {
          start: {
            line: 149,
            column: 19
          },
          end: {
            line: 149,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 45
          },
          end: {
            line: 149,
            column: 53
          }
        }, {
          start: {
            line: 149,
            column: 56
          },
          end: {
            line: 149,
            column: 58
          }
        }],
        line: 149
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 29
          },
          end: {
            line: 172,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 29
          },
          end: {
            line: 172,
            column: 42
          }
        }, {
          start: {
            line: 172,
            column: 46
          },
          end: {
            line: 172,
            column: 68
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 192,
            column: 29
          },
          end: {
            line: 192,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 29
          },
          end: {
            line: 192,
            column: 42
          }
        }, {
          start: {
            line: 192,
            column: 46
          },
          end: {
            line: 192,
            column: 68
          }
        }],
        line: 192
      },
      "18": {
        loc: {
          start: {
            line: 209,
            column: 29
          },
          end: {
            line: 209,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 29
          },
          end: {
            line: 209,
            column: 42
          }
        }, {
          start: {
            line: 209,
            column: 46
          },
          end: {
            line: 209,
            column: 68
          }
        }],
        line: 209
      },
      "19": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: 218,
            column: 13
          },
          end: {
            line: 220,
            column: 9
          }
        }],
        line: 215
      },
      "20": {
        loc: {
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 228,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 228,
            column: 32
          }
        }, {
          start: {
            line: 228,
            column: 36
          },
          end: {
            line: 228,
            column: 38
          }
        }],
        line: 228
      },
      "21": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "22": {
        loc: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "23": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "24": {
        loc: {
          start: {
            line: 242,
            column: 441
          },
          end: {
            line: 244,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 30
          },
          end: {
            line: 243,
            column: 52
          }
        }, {
          start: {
            line: 244,
            column: 30
          },
          end: {
            line: 244,
            column: 53
          }
        }],
        line: 242
      },
      "25": {
        loc: {
          start: {
            line: 242,
            column: 441
          },
          end: {
            line: 242,
            column: 495
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 441
          },
          end: {
            line: 242,
            column: 451
          }
        }, {
          start: {
            line: 242,
            column: 455
          },
          end: {
            line: 242,
            column: 495
          }
        }],
        line: 242
      },
      "26": {
        loc: {
          start: {
            line: 246,
            column: 376
          },
          end: {
            line: 249,
            column: 1378
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 377
          },
          end: {
            line: 246,
            column: 397
          }
        }, {
          start: {
            line: 246,
            column: 401
          },
          end: {
            line: 246,
            column: 430
          }
        }, {
          start: {
            line: 246,
            column: 436
          },
          end: {
            line: 249,
            column: 1377
          }
        }],
        line: 246
      },
      "27": {
        loc: {
          start: {
            line: 246,
            column: 876
          },
          end: {
            line: 249,
            column: 568
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 876
          },
          end: {
            line: 246,
            column: 896
          }
        }, {
          start: {
            line: 246,
            column: 901
          },
          end: {
            line: 249,
            column: 567
          }
        }],
        line: 246
      },
      "28": {
        loc: {
          start: {
            line: 249,
            column: 570
          },
          end: {
            line: 249,
            column: 1366
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 570
          },
          end: {
            line: 249,
            column: 599
          }
        }, {
          start: {
            line: 249,
            column: 604
          },
          end: {
            line: 249,
            column: 1365
          }
        }],
        line: 249
      },
      "29": {
        loc: {
          start: {
            line: 249,
            column: 1301
          },
          end: {
            line: 249,
            column: 1334
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 1301
          },
          end: {
            line: 249,
            column: 1325
          }
        }, {
          start: {
            line: 249,
            column: 1329
          },
          end: {
            line: 249,
            column: 1334
          }
        }],
        line: 249
      },
      "30": {
        loc: {
          start: {
            line: 249,
            column: 1380
          },
          end: {
            line: 251,
            column: 1373
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 1380
          },
          end: {
            line: 249,
            column: 1408
          }
        }, {
          start: {
            line: 249,
            column: 1413
          },
          end: {
            line: 251,
            column: 1372
          }
        }],
        line: 249
      },
      "31": {
        loc: {
          start: {
            line: 249,
            column: 1998
          },
          end: {
            line: 249,
            column: 2054
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 1998
          },
          end: {
            line: 249,
            column: 2022
          }
        }, {
          start: {
            line: 249,
            column: 2026
          },
          end: {
            line: 249,
            column: 2054
          }
        }],
        line: 249
      },
      "32": {
        loc: {
          start: {
            line: 249,
            column: 2460
          },
          end: {
            line: 249,
            column: 2514
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 2460
          },
          end: {
            line: 249,
            column: 2487
          }
        }, {
          start: {
            line: 249,
            column: 2491
          },
          end: {
            line: 249,
            column: 2514
          }
        }],
        line: 249
      },
      "33": {
        loc: {
          start: {
            line: 249,
            column: 2597
          },
          end: {
            line: 249,
            column: 2630
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 2597
          },
          end: {
            line: 249,
            column: 2621
          }
        }, {
          start: {
            line: 249,
            column: 2625
          },
          end: {
            line: 249,
            column: 2630
          }
        }],
        line: 249
      },
      "34": {
        loc: {
          start: {
            line: 249,
            column: 2642
          },
          end: {
            line: 249,
            column: 2679
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 2642
          },
          end: {
            line: 249,
            column: 2670
          }
        }, {
          start: {
            line: 249,
            column: 2674
          },
          end: {
            line: 249,
            column: 2679
          }
        }],
        line: 249
      },
      "35": {
        loc: {
          start: {
            line: 249,
            column: 2686
          },
          end: {
            line: 249,
            column: 2722
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 2686
          },
          end: {
            line: 249,
            column: 2716
          }
        }, {
          start: {
            line: 249,
            column: 2720
          },
          end: {
            line: 249,
            column: 2722
          }
        }],
        line: 249
      },
      "36": {
        loc: {
          start: {
            line: 249,
            column: 2813
          },
          end: {
            line: 249,
            column: 3089
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 2813
          },
          end: {
            line: 249,
            column: 2828
          }
        }, {
          start: {
            line: 249,
            column: 2833
          },
          end: {
            line: 249,
            column: 3088
          }
        }],
        line: 249
      },
      "37": {
        loc: {
          start: {
            line: 249,
            column: 3091
          },
          end: {
            line: 249,
            column: 3382
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 3091
          },
          end: {
            line: 249,
            column: 3114
          }
        }, {
          start: {
            line: 249,
            column: 3119
          },
          end: {
            line: 249,
            column: 3381
          }
        }],
        line: 249
      },
      "38": {
        loc: {
          start: {
            line: 249,
            column: 3384
          },
          end: {
            line: 249,
            column: 3828
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 3384
          },
          end: {
            line: 249,
            column: 3402
          }
        }, {
          start: {
            line: 249,
            column: 3407
          },
          end: {
            line: 249,
            column: 3827
          }
        }],
        line: 249
      },
      "39": {
        loc: {
          start: {
            line: 249,
            column: 3830
          },
          end: {
            line: 249,
            column: 4278
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 3830
          },
          end: {
            line: 249,
            column: 3849
          }
        }, {
          start: {
            line: 249,
            column: 3854
          },
          end: {
            line: 249,
            column: 4277
          }
        }],
        line: 249
      },
      "40": {
        loc: {
          start: {
            line: 249,
            column: 4284
          },
          end: {
            line: 250,
            column: 543
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 4284
          },
          end: {
            line: 249,
            column: 4313
          }
        }, {
          start: {
            line: 250,
            column: 56
          },
          end: {
            line: 250,
            column: 96
          }
        }, {
          start: {
            line: 250,
            column: 101
          },
          end: {
            line: 250,
            column: 542
          }
        }],
        line: 249
      },
      "41": {
        loc: {
          start: {
            line: 250,
            column: 545
          },
          end: {
            line: 251,
            column: 547
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 545
          },
          end: {
            line: 250,
            column: 574
          }
        }, {
          start: {
            line: 251,
            column: 56
          },
          end: {
            line: 251,
            column: 96
          }
        }, {
          start: {
            line: 251,
            column: 101
          },
          end: {
            line: 251,
            column: 546
          }
        }],
        line: 250
      },
      "42": {
        loc: {
          start: {
            line: 251,
            column: 1375
          },
          end: {
            line: 266,
            column: 289
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 1375
          },
          end: {
            line: 251,
            column: 1389
          }
        }, {
          start: {
            line: 251,
            column: 1394
          },
          end: {
            line: 266,
            column: 288
          }
        }],
        line: 251
      },
      "43": {
        loc: {
          start: {
            line: 253,
            column: 40
          },
          end: {
            line: 264,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 40
          },
          end: {
            line: 264,
            column: 41
          }
        }, {
          start: {
            line: 256,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        }],
        line: 253
      },
      "44": {
        loc: {
          start: {
            line: 256,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        }, {
          start: {
            line: 259,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        }],
        line: 256
      },
      "45": {
        loc: {
          start: {
            line: 259,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        }, {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 264,
            column: 41
          }
        }],
        line: 259
      },
      "46": {
        loc: {
          start: {
            line: 265,
            column: 99
          },
          end: {
            line: 265,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 125
          },
          end: {
            line: 265,
            column: 134
          }
        }, {
          start: {
            line: 265,
            column: 137
          },
          end: {
            line: 265,
            column: 146
          }
        }],
        line: 265
      },
      "47": {
        loc: {
          start: {
            line: 266,
            column: 291
          },
          end: {
            line: 266,
            column: 584
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 291
          },
          end: {
            line: 266,
            column: 320
          }
        }, {
          start: {
            line: 266,
            column: 325
          },
          end: {
            line: 266,
            column: 583
          }
        }],
        line: 266
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "/home/runner/workspace/client/src/pages/residents/residence.tsx",
      mappings: ";;AAmHA,4BA4gBC;;AA/nBD,iCAA0C;AAC1C,uDAA8E;AAC9E,uDAAoD;AACpD,+CAAgF;AAEhF,+DAA0D;AAC1D,mDAAgD;AAEhD,iDAA8C;AAC9C,mDAMgC;AAkBhC,+CAmBsB;AACtB,qDAA0C;AAC1C,iDAAsD;AACtD,6BAAwB;AACxB,iDAA6C;AAC7C,uDAAmD;AACnD,mDAA+C;AAC/C,mCAA8B;AAuC9B,sBAAsB;AACtB,MAAM,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACjC,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,wBAAwB,CAAC;IACtD,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,uBAAuB,CAAC;IACpD,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC;IAChD,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC5B,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;CAChD,CAAC,CAAC;AAOH;;GAEG;AACH,SAAwB,SAAS;IAC/B,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,oBAAQ,GAAE,CAAC;IAC7B,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,0BAAW,GAAE,CAAC;IAC5B,MAAM,WAAW,GAAG,IAAA,4BAAc,GAAE,CAAC;IAErC,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,IAAA,gBAAQ,EAAS,EAAE,CAAC,CAAC;IACzE,MAAM,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,GAAG,IAAA,gBAAQ,EAAS,EAAE,CAAC,CAAC;IAC3E,MAAM,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IACtE,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,IAAA,gBAAQ,EAAiB,IAAI,CAAC,CAAC;IAC3E,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IAClD,MAAM,YAAY,GAAG,EAAE,CAAC;IAExB,8BAA8B;IAC9B,MAAM,WAAW,GAAG,IAAA,yBAAO,EAAkB;QAC3C,QAAQ,EAAE,IAAA,iBAAW,EAAC,iBAAiB,CAAC;QACxC,aAAa,EAAE;YACb,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,SAAS;SAChB;KACF,CAAC,CAAC;IAEH,qBAAqB;IACrB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAA,sBAAQ,EAAC;QAC9B,QAAQ,EAAE,CAAC,gBAAgB,CAAC;QAC5B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAA,wBAAU,EAAC,KAAK,EAAE,gBAAgB,CAAiB;KACnE,CAAC,CAAC;IAEH,+CAA+C;IAC/C,MAAM,EACJ,IAAI,EAAE,oBAAoB,GAAG,EAAE,EAC/B,SAAS,EACT,KAAK,EAAE,eAAe,EACtB,OAAO,EAAE,iBAAiB,GAC3B,GAAG,IAAA,sBAAQ,EAAC;QACX,QAAQ,EAAE,CAAC,uBAAuB,EAAE,IAAI,EAAE,EAAE,CAAC;QAC7C,OAAO,EAAE,KAAK,IAAI,EAAE;YAClB,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;gBACd,OAAO,EAAE,CAAC;YACZ,CAAC;YAED,yEAAyE;YACzE,MAAM,GAAG,GAAG,cAAc,IAAI,CAAC,EAAE,aAAa,CAAC;YAE/C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;gBAChC,WAAW,EAAE,SAAS;gBACtB,OAAO,EAAE;oBACP,eAAe,EAAE,UAAU;iBAC5B;aACF,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAChD,CAAC;YACD,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;QACnB,cAAc,EAAE,IAAI;QACpB,SAAS,EAAE,CAAC;KACb,CAAC,CAAC;IAEH,iDAAiD;IACjD,MAAM,wBAAwB,GAAG,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC;IAEjG,yDAAyD;IACzD,MAAM,SAAS,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC7B,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,wBAAwB,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YAC7C,IAAI,SAAS,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;gBAClE,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;IAC1C,CAAC,EAAE,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAE/B,8EAA8E;IAC9E,MAAM,kBAAkB,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QACtC,2DAA2D;QAC3D,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxB,OAAO,wBAAwB,CAAC;QAClC,CAAC;QAED,8BAA8B;QAC9B,OAAO,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,kBAAkB,CAAC,CAAC;IACrF,CAAC,EAAE,CAAC,wBAAwB,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEnD,0BAA0B;IAC1B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;IACvE,MAAM,UAAU,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IACpD,MAAM,QAAQ,GAAG,UAAU,GAAG,YAAY,CAAC;IAC3C,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAEzE,MAAM,kBAAkB,GAAG,GAAG,EAAE;QAC9B,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,CAAC,IAAY,EAAE,EAAE;QACvC,cAAc,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,uCAAuC;IACvC,MAAM,gBAAgB,GAAG,GAAG,EAAE;QAC5B,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;IAEF,oCAAoC;IACpC,MAAM,iBAAiB,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QACrC,IAAI,CAAC,mBAAmB,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1D,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjD,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,mBAAmB,CAAC,IAAI,IAAI,CAAC;IAC9E,CAAC,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAE9C,wCAAwC;IACxC,MAAM,EAAE,IAAI,EAAE,QAAQ,GAAG,EAAE,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,IAAA,sBAAQ,EAAC;QACnE,QAAQ,EAAE,CAAC,eAAe,EAAE,mBAAmB,CAAC;QAChD,OAAO,EAAE,KAAK,IAAI,EAAE;YAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBACzB,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAC/B,KAAK,EACL,2CAA2C,mBAAmB,EAAE,CACjE,CAAC;YACF,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QACjD,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,mBAAmB;KAC/B,CAAC,CAAC;IAEH,oDAAoD;IACpD,MAAM,EAAE,IAAI,EAAE,gBAAgB,GAAG,EAAE,EAAE,SAAS,EAAE,uBAAuB,EAAE,GAAG,IAAA,sBAAQ,EAAC;QACnF,QAAQ,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,iBAAiB,EAAE,UAAU,CAAC;QACtE,OAAO,EAAE,KAAK,IAAI,EAAE;YAClB,IAAI,CAAC,iBAAiB,EAAE,UAAU,EAAE,CAAC;gBACnC,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,MAAM,QAAQ,GAAG,MAAM,IAAA,wBAAU,EAC/B,KAAK,EACL,0CAA0C,iBAAiB,CAAC,UAAU,EAAE,CACzE,CAAC;YACF,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QACjD,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,iBAAiB,EAAE,UAAU;KACzC,CAAC,CAAC;IAEH,mCAAmC;IACnC,MAAM,kBAAkB,GAAG,IAAA,yBAAW,EAAC;QACrC,UAAU,EAAE,CAAC,IAAqB,EAAE,EAAE,CACpC,IAAA,wBAAU,EAAC,MAAM,EAAE,eAAe,EAAE;YAClC,GAAG,IAAI;YACP,WAAW,EAAE,mBAAmB;SACjC,CAAC;QACJ,SAAS,EAAE,GAAG,EAAE;YACd,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,eAAe,EAAE,mBAAmB,CAAC,EAAE,CAAC,CAAC;YACpF,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAC9B,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACxB,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC;gBACJ,KAAK,EAAE,4BAA4B;gBACnC,WAAW,EAAE,mDAAmD;aACjE,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;YACtB,KAAK,CAAC;gBACJ,KAAK,EAAE,uBAAuB;gBAC9B,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,sBAAsB;gBACpD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,IAAA,yBAAW,EAAC;QACxC,UAAU,EAAE,CAAC,IAAqB,EAAE,EAAE,CACpC,IAAA,wBAAU,EAAC,OAAO,EAAE,iBAAiB,cAAc,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;QAClE,SAAS,EAAE,GAAG,EAAE;YACd,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,eAAe,EAAE,mBAAmB,CAAC,EAAE,CAAC,CAAC;YACpF,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAC9B,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACxB,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC;gBACJ,KAAK,EAAE,8BAA8B;gBACrC,WAAW,EAAE,2CAA2C;aACzD,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;YACtB,KAAK,CAAC;gBACJ,KAAK,EAAE,0BAA0B;gBACjC,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,sBAAsB;gBACpD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,IAAA,yBAAW,EAAC;QACxC,UAAU,EAAE,CAAC,SAAiB,EAAE,EAAE,CAAC,IAAA,wBAAU,EAAC,QAAQ,EAAE,iBAAiB,SAAS,EAAE,CAAC;QACrF,SAAS,EAAE,GAAG,EAAE;YACd,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,eAAe,EAAE,mBAAmB,CAAC,EAAE,CAAC,CAAC;YACpF,KAAK,CAAC;gBACJ,KAAK,EAAE,8BAA8B;gBACrC,WAAW,EAAE,+BAA+B;aAC7C,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;YACtB,KAAK,CAAC;gBACJ,KAAK,EAAE,0BAA0B;gBACjC,WAAW,EAAE,KAAK,CAAC,OAAO,IAAI,sBAAsB;gBACpD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,MAAM,gBAAgB,GAAG,CAAC,IAAqB,EAAE,EAAE;QACjD,IAAI,cAAc,EAAE,CAAC;YACnB,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;aAAM,CAAC;YACN,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,CAAC,OAAgB,EAAE,EAAE;QAC7C,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC3B,WAAW,CAAC,KAAK,CAAC;YAChB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;YAC1B,IAAI,EAAE,OAAO,CAAC,IAAW;SAC1B,CAAC,CAAC;QACH,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,MAAM,mBAAmB,GAAG,CAAC,OAAgB,EAAE,EAAE;QAC/C,IAAI,OAAO,CAAC,+CAA+C,CAAC,EAAE,CAAC;YAC7D,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,SAAS,EAAE,CAAC;QACd,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IACL,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EACvB,QAAQ,EAAE,CAAC,CAAC,mBAAmB,CAAC,GAChC,EAEF,gCAAK,SAAS,EAAC,yCAAyC,YACtD,iCAAK,SAAS,EAAC,aAAa,aAC1B,gCAAK,SAAS,EAAC,2EAA2E,GAAO,EACjG,8BAAG,SAAS,EAAC,eAAe,YAAE,CAAC,CAAC,SAAS,CAAC,GAAK,IAC3C,GACF,IACF,CACP,CAAC;IACJ,CAAC;IAED,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACpC,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IACL,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EACvB,QAAQ,EAAE,CAAC,CAAC,mBAAmB,CAAC,GAChC,EAEF,gCAAK,SAAS,EAAC,6CAA6C,YAC1D,uBAAC,yBAAU,IACT,IAAI,EAAE,mBAAI,EACV,QAAQ,EAAC,mBAAmB,EAC5B,cAAc,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;4BACpE,CAAC,CAAC,sBAAsB;4BACxB,CAAC,CAAC,uBAAuB,EAC3B,MAAM,EAAC,uBAAuB,GAC9B,GACE,IACF,CACP,CAAC;IACJ,CAAC;IAED,OAAO,CACL,iCAAK,SAAS,EAAC,sCAAsC,aACnD,uBAAC,eAAM,IACL,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EACvB,QAAQ,EAAE,CAAC,CAAC,iBAAiB,CAAC,GAC9B,EAEF,gCAAK,SAAS,EAAC,0BAA0B,YACvC,iCAAK,SAAS,EAAC,6BAA6B,aAEzC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAC1D,wBAAC,WAAI,eACH,uBAAC,iBAAU,cACT,wBAAC,gBAAS,IAAC,SAAS,EAAC,yBAAyB,aAC5C,uBAAC,mBAAI,IAAC,SAAS,EAAC,SAAS,GAAG,wBAElB,GACD,EACb,uBAAC,kBAAW,cACV,iCAAK,SAAS,EAAC,iCAAiC,aAE7C,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CACvB,iCAAK,SAAS,EAAC,QAAQ,aACrB,uBAAC,aAAK,IAAC,SAAS,EAAC,gCAAgC,YAAE,CAAC,CAAC,WAAW,CAAC,GAAS,EAC1E,wBAAC,eAAM,IACL,KAAK,EAAE,kBAAkB,EACzB,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE;4DACvB,qBAAqB,CAAC,KAAK,CAAC,CAAC;4DAC7B,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,kDAAkD;wDAChF,CAAC,aAED,uBAAC,sBAAa,IAAC,SAAS,EAAC,QAAQ,YAC/B,uBAAC,oBAAW,IAAC,WAAW,EAAE,CAAC,CAAC,iBAAiB,CAAC,GAAI,GACpC,EAChB,wBAAC,sBAAa,eACZ,uBAAC,mBAAU,IAAC,KAAK,EAAC,KAAK,YAAE,CAAC,CAAC,cAAc,CAAC,GAAc,EACvD,SAAS,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,CAChC,wBAAC,mBAAU,IAAmB,KAAK,EAAE,QAAQ,CAAC,EAAE,aAC7C,QAAQ,CAAC,IAAI,SAAK,QAAQ,CAAC,OAAO,KADpB,QAAQ,CAAC,EAAE,CAEf,CACd,CAAC,IACY,IACT,IACL,CACP,EAGA,kBAAkB,CAAC,MAAM,GAAG,CAAC,IAAI,CAChC,iCAAK,SAAS,EAAC,QAAQ,aACrB,uBAAC,aAAK,IAAC,SAAS,EAAC,gCAAgC,YAC9C,CAAC,CAAC,iBAAiB,CAAC,GACf,EACR,wBAAC,eAAM,IAAC,KAAK,EAAE,mBAAmB,EAAE,aAAa,EAAE,sBAAsB,aACvE,uBAAC,sBAAa,IAAC,SAAS,EAAC,QAAQ,YAC/B,uBAAC,oBAAW,IAAC,WAAW,EAAE,CAAC,CAAC,kBAAkB,CAAC,GAAI,GACrC,EAChB,uBAAC,sBAAa,cACX,kBAAkB,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CACrC,wBAAC,mBAAU,IAAoB,KAAK,EAAE,SAAS,CAAC,EAAE,aAC/C,CAAC,CAAC,MAAM,CAAC,OAAG,SAAS,CAAC,UAAU,SAAK,SAAS,CAAC,QAAQ,EAAE,IAAI,IAAI,KAAK,KADxD,SAAS,CAAC,EAAE,CAEhB,CACd,CAAC,GACY,IACT,IACL,CACP,IACG,GACM,IACT,CACR,EAGA,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,CAC/B,gCAAK,SAAS,EAAC,sDAAsD,YAClE,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CACpC,wBAAC,WAAI,IAAoB,SAAS,EAAC,mCAAmC,aACpE,wBAAC,iBAAU,eACT,wBAAC,gBAAS,IAAC,SAAS,EAAC,yBAAyB,aAC5C,uBAAC,mBAAI,IAAC,SAAS,EAAC,SAAS,GAAG,EAC3B,CAAC,CAAC,MAAM,CAAC,OAAG,SAAS,CAAC,UAAU,IACvB,EACZ,gCAAK,SAAS,EAAC,uBAAuB,YACnC,SAAS,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,yBAAyB,CAAC,GACrD,IACK,EACb,wBAAC,kBAAW,IAAC,SAAS,EAAC,WAAW,aAChC,iCAAK,SAAS,EAAC,wBAAwB,aACrC,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,SAAS,CAAC,GAAS,EAC3E,8BAAG,SAAS,EAAC,uBAAuB,YACjC,SAAS,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC,oBAAoB,CAAC,GACrD,EACJ,+BAAG,SAAS,EAAC,uBAAuB,aACjC,SAAS,CAAC,QAAQ,EAAE,IAAI,IAAI,KAAK,OAAG,GAAG,EACvC,SAAS,CAAC,QAAQ,EAAE,QAAQ,IAAI,KAAK,EAAE,GAAG,EAC1C,SAAS,CAAC,QAAQ,EAAE,UAAU,IAAI,EAAE,IACnC,IACA,EAEN,iCAAK,SAAS,EAAC,wBAAwB,aACpC,SAAS,CAAC,KAAK,IAAI,CAClB,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,OAAO,CAAC,GAAS,EACzE,8BAAG,SAAS,EAAC,uBAAuB,YAAE,SAAS,CAAC,KAAK,GAAK,IACtD,CACP,EACA,SAAS,CAAC,aAAa,IAAI,CAC1B,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,MAAM,CAAC,GAAS,EACxE,8BAAG,SAAS,EAAC,uBAAuB,YAAE,SAAS,CAAC,aAAa,GAAK,IAC9D,CACP,EACA,SAAS,CAAC,QAAQ,IAAI,CACrB,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,UAAU,CAAC,GAAS,EAC5E,iCAAK,SAAS,EAAC,yBAAyB,aACtC,uBAAC,kBAAG,IAAC,SAAS,EAAC,SAAS,GAAG,EAC3B,iCAAM,SAAS,EAAC,uBAAuB,YAAE,SAAS,CAAC,QAAQ,GAAQ,IAC/D,IACF,CACP,EACA,SAAS,CAAC,SAAS,IAAI,CACtB,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,WAAW,CAAC,GAAS,EAC7E,iCAAK,SAAS,EAAC,yBAAyB,aACtC,uBAAC,mBAAI,IAAC,SAAS,EAAC,SAAS,GAAG,EAC5B,iCAAM,SAAS,EAAC,uBAAuB,YAAE,SAAS,CAAC,SAAS,GAAQ,IAChE,IACF,CACP,IACG,EAEL,SAAS,CAAC,mBAAmB;wDAC5B,SAAS,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,CAC1C,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,SAAS,CAAC,GAAS,EAC3E,iCAAK,SAAS,EAAC,yBAAyB,aACtC,uBAAC,kBAAG,IAAC,SAAS,EAAC,SAAS,GAAG,EAC3B,iCAAM,SAAS,EAAC,uBAAuB,YACpC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,GACpC,IACH,IACF,CACP,EAEF,SAAS,CAAC,mBAAmB;wDAC5B,SAAS,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,CAC1C,4CACE,uBAAC,aAAK,IAAC,SAAS,EAAC,mCAAmC,YAAE,CAAC,CAAC,SAAS,CAAC,GAAS,EAC3E,iCAAK,SAAS,EAAC,yBAAyB,aACtC,uBAAC,sBAAO,IAAC,SAAS,EAAC,SAAS,GAAG,EAC/B,iCAAM,SAAS,EAAC,uBAAuB,YACpC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,GACpC,IACH,IACF,CACP,IACC,EAEN,iCAAK,SAAS,EAAC,mCAAmC,aAChD,uBAAC,aAAI,IAAC,IAAI,EAAE,yBAAyB,SAAS,CAAC,EAAE,YAAY,YAC3D,wBAAC,eAAM,IAAC,OAAO,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,sBAAsB,aAClE,uBAAC,uBAAQ,IAAC,SAAS,EAAC,cAAc,GAAG,EACpC,CAAC,CAAC,0BAA0B,CAAC,IACvB,GACJ,EACP,uBAAC,aAAI,IAAC,IAAI,EAAE,wBAAwB,SAAS,CAAC,UAAU,YAAY,YAClE,wBAAC,eAAM,IAAC,OAAO,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,sBAAsB,aAClE,uBAAC,uBAAQ,IAAC,SAAS,EAAC,cAAc,GAAG,EACpC,CAAC,CAAC,yBAAyB,CAAC,IACtB,GACJ,IACH,IACM,KAlGL,SAAS,CAAC,EAAE,CAmGhB,CACR,CAAC,GACE,CACP,EAGA,UAAU,GAAG,CAAC,IAAI,CACjB,iCAAK,SAAS,EAAC,6CAA6C,aAC1D,wBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,kBAAkB,EAC3B,QAAQ,EAAE,WAAW,KAAK,CAAC,aAE3B,uBAAC,0BAAW,IAAC,SAAS,EAAC,SAAS,GAAG,EAClC,CAAC,CAAC,UAAU,CAAC,IACP,EAET,gCAAK,SAAS,EAAC,YAAY,YACxB,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wCACxD,IAAI,OAAO,CAAC;wCACZ,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC;4CACpB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;wCAClB,CAAC;6CAAM,IAAI,WAAW,IAAI,CAAC,EAAE,CAAC;4CAC5B,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;wCAClB,CAAC;6CAAM,IAAI,WAAW,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;4CACzC,OAAO,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;wCAC/B,CAAC;6CAAM,CAAC;4CACN,OAAO,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;wCAChC,CAAC;wCAED,OAAO,CACL,uBAAC,eAAM,IAEL,OAAO,EAAE,WAAW,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EACxD,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,YAEtC,OAAO,IALH,OAAO,CAML,CACV,CAAC;oCACJ,CAAC,CAAC,GACE,EAEN,wBAAC,eAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,cAAc,EACvB,QAAQ,EAAE,WAAW,KAAK,UAAU,aAEnC,CAAC,CAAC,MAAM,CAAC,EACV,uBAAC,2BAAY,IAAC,SAAS,EAAC,SAAS,GAAG,IAC7B,IACL,CACP,EAGA,kBAAkB,CAAC,MAAM,GAAG,CAAC,IAAI,CAChC,iCAAK,SAAS,EAAC,gDAAgD,aAC5D,CAAC,CAAC,SAAS,CAAC,OAAG,UAAU,GAAG,CAAC,UAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,MAAM,CAAC,SAAK,GAAG,EACxF,kBAAkB,CAAC,MAAM,OAAG,CAAC,CAAC,YAAY,CAAC,IACxC,CACP,IACG,GACF,IACF,CACP,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/home/runner/workspace/client/src/pages/residents/residence.tsx"],
      sourcesContent: ["import { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { NoDataCard } from '@/components/ui/no-data-card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Home,\n  Building,\n  MapPin,\n  Bed,\n  Bath,\n  Car,\n  Package,\n  Phone,\n  Mail,\n  User,\n  Edit,\n  Plus,\n  Trash2,\n  FileText,\n  Download,\n  Calendar,\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/hooks/use-language';\nimport { apiRequest } from '@/lib/queryClient';\nimport { Link } from 'wouter';\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  unitNumber: string;\n  floor?: number;\n  squareFootage?: string;\n  bedrooms?: number;\n  bathrooms?: string;\n  balcony?: boolean;\n  parkingSpaceNumbers?: string[];\n  storageSpaceNumbers?: string[];\n  isActive: boolean;\n  buildingId: string;\n  building: {\n    id: string;\n    name: string;\n    address: string;\n    city: string;\n    province: string;\n    postalCode: string;\n  };\n}\n\n/**\n *\n */\ninterface Contact {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone?: string;\n  type: string;\n}\n\n// Contact form schema\nconst contactFormSchema = z.object({\n  firstName: z.string().min(1, 'First name is required'),\n  lastName: z.string().min(1, 'Last name is required'),\n  email: z.string().email('Invalid email address'),\n  phone: z.string().optional(),\n  type: z.enum(['primary', 'emergency', 'other']),\n});\n\n/**\n *\n */\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\n/**\n *\n */\nexport default function Residence() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const queryClient = useQueryClient();\n\n  const [selectedBuildingId, setSelectedBuildingId] = useState<string>('');\n  const [selectedResidenceId, setSelectedResidenceId] = useState<string>('');\n  const [isContactDialogOpen, setIsContactDialogOpen] = useState(false);\n  const [editingContact, setEditingContact] = useState<Contact | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  // Form for contact management\n  const contactForm = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      type: 'primary',\n    },\n  });\n\n  // Fetch current user\n  const { data: user } = useQuery({\n    queryKey: ['/api/auth/user'],\n    queryFn: () => apiRequest('GET', '/api/auth/user') as Promise<any>,\n  });\n\n  // All users see only their assigned residences\n  const {\n    data: accessibleResidences = [],\n    isLoading,\n    error: residencesError,\n    refetch: refetchResidences,\n  } = useQuery({\n    queryKey: ['/api/users/residences', user?.id],\n    queryFn: async () => {\n      if (!user?.id) {\n        return [];\n      }\n\n      // All users (including admin/manager) see only their assigned residences\n      const url = `/api/users/${user.id}/residences`;\n\n      const response = await fetch(url, {\n        credentials: 'include',\n        headers: {\n          'Cache-Control': 'no-cache',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch residences');\n      }\n      return response.json();\n    },\n    enabled: !!user?.id,\n    refetchOnMount: true,\n    staleTime: 0,\n  });\n\n  // Ensure accessibleResidences is always an array\n  const safeAccessibleResidences = Array.isArray(accessibleResidences) ? accessibleResidences : [];\n\n  // Extract buildings from user's residences for filtering\n  const buildings = useMemo(() => {\n    const buildingMap = new Map();\n    safeAccessibleResidences.forEach((residence) => {\n      if (residence.building && !buildingMap.has(residence.building.id)) {\n        buildingMap.set(residence.building.id, residence.building);\n      }\n    });\n    return Array.from(buildingMap.values());\n  }, [safeAccessibleResidences]);\n\n  // Filter residences based on selected building (if multiple residences exist)\n  const filteredResidences = useMemo(() => {\n    // If no building filter is selected, return all residences\n    if (!selectedBuildingId) {\n      return safeAccessibleResidences;\n    }\n\n    // Filter by selected building\n    return safeAccessibleResidences.filter((r) => r.buildingId === selectedBuildingId);\n  }, [safeAccessibleResidences, selectedBuildingId]);\n\n  // Pagination calculations\n  const totalPages = Math.ceil(filteredResidences.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentResidences = filteredResidences.slice(startIndex, endIndex);\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prev) => Math.max(1, prev - 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prev) => Math.min(totalPages, prev + 1));\n  };\n\n  const handlePageClick = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  // Reset pagination when filters change\n  const resetToFirstPage = () => {\n    setCurrentPage(1);\n  };\n\n  // Select first residence by default\n  const selectedResidence = useMemo(() => {\n    if (!selectedResidenceId && filteredResidences.length > 0) {\n      setSelectedResidenceId(filteredResidences[0].id);\n      return filteredResidences[0];\n    }\n    return filteredResidences.find((r) => r.id === selectedResidenceId) || null;\n  }, [selectedResidenceId, filteredResidences]);\n\n  // Fetch contacts for selected residence\n  const { data: contacts = [], isLoading: contactsLoading } = useQuery({\n    queryKey: ['/api/contacts', selectedResidenceId],\n    queryFn: async () => {\n      if (!selectedResidenceId) {\n        return [];\n      }\n      const response = await apiRequest(\n        'GET',\n        `/api/contacts?entity=residence&entityId=${selectedResidenceId}`\n      );\n      return Array.isArray(response) ? response : [];\n    },\n    enabled: !!selectedResidenceId,\n  });\n\n  // Fetch building contacts (read-only for residents)\n  const { data: buildingContacts = [], isLoading: buildingContactsLoading } = useQuery({\n    queryKey: ['/api/contacts', 'building', selectedResidence?.buildingId],\n    queryFn: async () => {\n      if (!selectedResidence?.buildingId) {\n        return [];\n      }\n      const response = await apiRequest(\n        'GET',\n        `/api/contacts?entity=building&entityId=${selectedResidence.buildingId}`\n      );\n      return Array.isArray(response) ? response : [];\n    },\n    enabled: !!selectedResidence?.buildingId,\n  });\n\n  // Mutations for contact management\n  const addContactMutation = useMutation({\n    mutationFn: (data: ContactFormData) =>\n      apiRequest('POST', '/api/contacts', {\n        ...data,\n        residenceId: selectedResidenceId,\n      }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contacts', selectedResidenceId] });\n      setIsContactDialogOpen(false);\n      setEditingContact(null);\n      contactForm.reset();\n      toast({\n        title: 'Contact added successfully',\n        description: 'The new contact has been added to this residence.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Failed to add contact',\n        description: error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const updateContactMutation = useMutation({\n    mutationFn: (data: ContactFormData) =>\n      apiRequest('PATCH', `/api/contacts/${editingContact?.id}`, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contacts', selectedResidenceId] });\n      setIsContactDialogOpen(false);\n      setEditingContact(null);\n      contactForm.reset();\n      toast({\n        title: 'Contact updated successfully',\n        description: 'The contact information has been updated.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Failed to update contact',\n        description: error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const deleteContactMutation = useMutation({\n    mutationFn: (contactId: string) => apiRequest('DELETE', `/api/contacts/${contactId}`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/contacts', selectedResidenceId] });\n      toast({\n        title: 'Contact deleted successfully',\n        description: 'The contact has been removed.',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Failed to delete contact',\n        description: error.message || 'Something went wrong',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleAddContact = (data: ContactFormData) => {\n    if (editingContact) {\n      updateContactMutation.mutate(data);\n    } else {\n      addContactMutation.mutate(data);\n    }\n  };\n\n  const handleEditContact = (contact: Contact) => {\n    setEditingContact(contact);\n    contactForm.reset({\n      firstName: contact.firstName,\n      lastName: contact.lastName,\n      email: contact.email,\n      phone: contact.phone || '',\n      type: contact.type as any,\n    });\n    setIsContactDialogOpen(true);\n  };\n\n  const handleDeleteContact = (contact: Contact) => {\n    if (confirm('Are you sure you want to delete this contact?')) {\n      deleteContactMutation.mutate(contact.id);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header\n          title={t('myResidence')}\n          subtitle={t('viewResidenceInfo')}\n        />\n\n        <div className='flex-1 flex items-center justify-center'>\n          <div className='text-center'>\n            <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-4'></div>\n            <p className='text-gray-600'>{t('loading')}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (filteredResidences.length === 0) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header\n          title={t('myResidence')}\n          subtitle={t('viewResidenceInfo')}\n        />\n\n        <div className='flex-1 flex items-center justify-center p-6'>\n          <NoDataCard\n            icon={Home}\n            titleKey=\"noResidencesFound\"\n            descriptionKey={user?.role && ['admin', 'manager'].includes(user.role)\n              ? 'noResidencesFoundOrg'\n              : 'notAssignedResidences'}\n            testId=\"no-residences-message\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header\n        title={t('myResidence')}\n        subtitle={t('myResidenceInfo')}\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Building and Residence Filters */}\n          {(buildings.length > 1 || filteredResidences.length > 1) && (\n            <Card>\n              <CardHeader>\n                <CardTitle className='flex items-center gap-2'>\n                  <Home className='w-5 h-5' />\n                  Select Residence\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className='flex flex-col md:flex-row gap-4'>\n                  {/* Building Filter (if user has multiple buildings) */}\n                  {buildings.length > 1 && (\n                    <div className='flex-1'>\n                      <Label className='text-sm font-medium mb-2 block'>{t('building2')}</Label>\n                      <Select\n                        value={selectedBuildingId}\n                        onValueChange={(value) => {\n                          setSelectedBuildingId(value);\n                          setSelectedResidenceId(''); // Reset residence selection when building changes\n                        }}\n                      >\n                        <SelectTrigger className='w-full'>\n                          <SelectValue placeholder={t('selectABuilding')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"all\">{t('allBuildings')}</SelectItem>\n                          {buildings.map((building: any) => (\n                            <SelectItem key={building.id} value={building.id}>\n                              {building.name} - {building.address}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n\n                  {/* Residence Filter */}\n                  {filteredResidences.length > 1 && (\n                    <div className='flex-1'>\n                      <Label className='text-sm font-medium mb-2 block'>\n                        {t('selectResidence')}\n                      </Label>\n                      <Select value={selectedResidenceId} onValueChange={setSelectedResidenceId}>\n                        <SelectTrigger className='w-full'>\n                          <SelectValue placeholder={t('selectAResidence')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {filteredResidences.map((residence) => (\n                            <SelectItem key={residence.id} value={residence.id}>\n                              {t('unit')} {residence.unitNumber} - {residence.building?.name || 'N/A'}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Residence Cards */}\n          {currentResidences.length > 0 && (\n            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\n              {currentResidences.map((residence) => (\n                <Card key={residence.id} className='hover:shadow-lg transition-shadow'>\n                  <CardHeader>\n                    <CardTitle className='flex items-center gap-2'>\n                      <Home className='w-5 h-5' />\n                      {t('unit')} {residence.unitNumber}\n                    </CardTitle>\n                    <div className='text-sm text-gray-600'>\n                      {residence.building?.name || t('buildingInfoUnavailable')}\n                    </div>\n                  </CardHeader>\n                  <CardContent className='space-y-4'>\n                    <div className='grid grid-cols-1 gap-3'>\n                      <div>\n                        <Label className='text-xs font-medium text-gray-500'>{t('address')}</Label>\n                        <p className='text-sm text-gray-700'>\n                          {residence.building?.address || t('addressUnavailable')}\n                        </p>\n                        <p className='text-sm text-gray-700'>\n                          {residence.building?.city || 'N/A'},{' '}\n                          {residence.building?.province || 'N/A'}{' '}\n                          {residence.building?.postalCode || ''}\n                        </p>\n                      </div>\n\n                      <div className='grid grid-cols-2 gap-3'>\n                        {residence.floor && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('floor')}</Label>\n                            <p className='text-sm text-gray-700'>{residence.floor}</p>\n                          </div>\n                        )}\n                        {residence.squareFootage && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('sqFt')}</Label>\n                            <p className='text-sm text-gray-700'>{residence.squareFootage}</p>\n                          </div>\n                        )}\n                        {residence.bedrooms && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('bedrooms')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Bed className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>{residence.bedrooms}</span>\n                            </div>\n                          </div>\n                        )}\n                        {residence.bathrooms && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('bathrooms')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Bath className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>{residence.bathrooms}</span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      {residence.parkingSpaceNumbers &&\n                        residence.parkingSpaceNumbers.length > 0 && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('parking')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Car className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {residence.parkingSpaceNumbers.join(', ')}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n\n                      {residence.storageSpaceNumbers &&\n                        residence.storageSpaceNumbers.length > 0 && (\n                          <div>\n                            <Label className='text-xs font-medium text-gray-500'>{t('storage')}</Label>\n                            <div className='flex items-center gap-1'>\n                              <Package className='w-3 h-3' />\n                              <span className='text-sm text-gray-700'>\n                                {residence.storageSpaceNumbers.join(', ')}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n\n                    <div className='flex flex-col gap-2 pt-4 border-t'>\n                      <Link href={`/residents/residences/${residence.id}/documents`}>\n                        <Button variant='outline' size='sm' className='w-full justify-start'>\n                          <FileText className='w-4 h-4 mr-2' />\n                          {t('residenceDocumentsButton')}\n                        </Button>\n                      </Link>\n                      <Link href={`/residents/buildings/${residence.buildingId}/documents`}>\n                        <Button variant='outline' size='sm' className='w-full justify-start'>\n                          <Building className='w-4 h-4 mr-2' />\n                          {t('buildingDocumentsButton')}\n                        </Button>\n                      </Link>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className='flex items-center justify-center gap-2 mt-8'>\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handlePreviousPage}\n                disabled={currentPage === 1}\n              >\n                <ChevronLeft className='h-4 w-4' />\n                {t('previous')}\n              </Button>\n\n              <div className='flex gap-1'>\n                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                  let pageNum;\n                  if (totalPages <= 5) {\n                    pageNum = i + 1;\n                  } else if (currentPage <= 3) {\n                    pageNum = i + 1;\n                  } else if (currentPage >= totalPages - 2) {\n                    pageNum = totalPages - 4 + i;\n                  } else {\n                    pageNum = currentPage - 2 + i;\n                  }\n\n                  return (\n                    <Button\n                      key={pageNum}\n                      variant={currentPage === pageNum ? 'default' : 'outline'}\n                      size='sm'\n                      onClick={() => handlePageClick(pageNum)}\n                    >\n                      {pageNum}\n                    </Button>\n                  );\n                })}\n              </div>\n\n              <Button\n                variant='outline'\n                size='sm'\n                onClick={handleNextPage}\n                disabled={currentPage === totalPages}\n              >\n                {t('next')}\n                <ChevronRight className='h-4 w-4' />\n              </Button>\n            </div>\n          )}\n\n          {/* Page info */}\n          {filteredResidences.length > 0 && (\n            <div className='text-center text-sm text-muted-foreground mt-4'>\n              {t('showing')} {startIndex + 1} to {Math.min(endIndex, filteredResidences.length)} of{' '}\n              {filteredResidences.length} {t('residences')}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c599c74b82b6f4a1b6659658a7be7cc76bd58cee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12akx055c6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12akx055c6();
cov_12akx055c6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12akx055c6().s[1]++;
exports.default = Residence;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[2]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[3]++, require("react"));
const react_query_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[4]++, require("@tanstack/react-query"));
const header_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[5]++, require("@/components/layout/header"));
const card_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[6]++, require("@/components/ui/card"));
const no_data_card_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[7]++, require("@/components/ui/no-data-card"));
const button_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[8]++, require("@/components/ui/button"));
const label_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[9]++, require("@/components/ui/label"));
const select_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[10]++, require("@/components/ui/select"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[11]++, require("lucide-react"));
const react_hook_form_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[12]++, require("react-hook-form"));
const zod_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[13]++, require("@hookform/resolvers/zod"));
const zod_2 =
/* istanbul ignore next */
(cov_12akx055c6().s[14]++, require("zod"));
const use_toast_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[15]++, require("@/hooks/use-toast"));
const use_language_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[16]++, require("@/hooks/use-language"));
const queryClient_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[17]++, require("@/lib/queryClient"));
const wouter_1 =
/* istanbul ignore next */
(cov_12akx055c6().s[18]++, require("wouter"));
// Contact form schema
const contactFormSchema =
/* istanbul ignore next */
(cov_12akx055c6().s[19]++, zod_2.z.object({
  firstName: zod_2.z.string().min(1, 'First name is required'),
  lastName: zod_2.z.string().min(1, 'Last name is required'),
  email: zod_2.z.string().email('Invalid email address'),
  phone: zod_2.z.string().optional(),
  type: zod_2.z.enum(['primary', 'emergency', 'other'])
}));
/**
 *
 */
function Residence() {
  /* istanbul ignore next */
  cov_12akx055c6().f[0]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_12akx055c6().s[20]++, (0, use_toast_1.useToast)());
  const {
    t
  } =
  /* istanbul ignore next */
  (cov_12akx055c6().s[21]++, (0, use_language_1.useLanguage)());
  const queryClient =
  /* istanbul ignore next */
  (cov_12akx055c6().s[22]++, (0, react_query_1.useQueryClient)());
  const [selectedBuildingId, setSelectedBuildingId] =
  /* istanbul ignore next */
  (cov_12akx055c6().s[23]++, (0, react_1.useState)(''));
  const [selectedResidenceId, setSelectedResidenceId] =
  /* istanbul ignore next */
  (cov_12akx055c6().s[24]++, (0, react_1.useState)(''));
  const [isContactDialogOpen, setIsContactDialogOpen] =
  /* istanbul ignore next */
  (cov_12akx055c6().s[25]++, (0, react_1.useState)(false));
  const [editingContact, setEditingContact] =
  /* istanbul ignore next */
  (cov_12akx055c6().s[26]++, (0, react_1.useState)(null));
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_12akx055c6().s[27]++, (0, react_1.useState)(1));
  const itemsPerPage =
  /* istanbul ignore next */
  (cov_12akx055c6().s[28]++, 10);
  // Form for contact management
  const contactForm =
  /* istanbul ignore next */
  (cov_12akx055c6().s[29]++, (0, react_hook_form_1.useForm)({
    resolver: (0, zod_1.zodResolver)(contactFormSchema),
    defaultValues: {
      firstName: '',
      lastName: '',
      email: '',
      phone: '',
      type: 'primary'
    }
  }));
  // Fetch current user
  const {
    data: user
  } =
  /* istanbul ignore next */
  (cov_12akx055c6().s[30]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/auth/user'],
    queryFn: () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[1]++;
      cov_12akx055c6().s[31]++;
      return (0, queryClient_1.apiRequest)('GET', '/api/auth/user');
    }
  }));
  // All users see only their assigned residences
  const {
    data: accessibleResidences =
    /* istanbul ignore next */
    (cov_12akx055c6().b[0][0]++, []),
    isLoading,
    error: residencesError,
    refetch: refetchResidences
  } =
  /* istanbul ignore next */
  (cov_12akx055c6().s[32]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/users/residences', user?.id],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[2]++;
      cov_12akx055c6().s[33]++;
      if (!user?.id) {
        /* istanbul ignore next */
        cov_12akx055c6().b[1][0]++;
        cov_12akx055c6().s[34]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_12akx055c6().b[1][1]++;
      }
      // All users (including admin/manager) see only their assigned residences
      const url =
      /* istanbul ignore next */
      (cov_12akx055c6().s[35]++, `/api/users/${user.id}/residences`);
      const response =
      /* istanbul ignore next */
      (cov_12akx055c6().s[36]++, await fetch(url, {
        credentials: 'include',
        headers: {
          'Cache-Control': 'no-cache'
        }
      }));
      /* istanbul ignore next */
      cov_12akx055c6().s[37]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12akx055c6().b[2][0]++;
        cov_12akx055c6().s[38]++;
        throw new Error('Failed to fetch residences');
      } else
      /* istanbul ignore next */
      {
        cov_12akx055c6().b[2][1]++;
      }
      cov_12akx055c6().s[39]++;
      return response.json();
    },
    enabled: !!user?.id,
    refetchOnMount: true,
    staleTime: 0
  }));
  // Ensure accessibleResidences is always an array
  const safeAccessibleResidences =
  /* istanbul ignore next */
  (cov_12akx055c6().s[40]++, Array.isArray(accessibleResidences) ?
  /* istanbul ignore next */
  (cov_12akx055c6().b[3][0]++, accessibleResidences) :
  /* istanbul ignore next */
  (cov_12akx055c6().b[3][1]++, []));
  // Extract buildings from user's residences for filtering
  const buildings =
  /* istanbul ignore next */
  (cov_12akx055c6().s[41]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_12akx055c6().f[3]++;
    const buildingMap =
    /* istanbul ignore next */
    (cov_12akx055c6().s[42]++, new Map());
    /* istanbul ignore next */
    cov_12akx055c6().s[43]++;
    safeAccessibleResidences.forEach(residence => {
      /* istanbul ignore next */
      cov_12akx055c6().f[4]++;
      cov_12akx055c6().s[44]++;
      if (
      /* istanbul ignore next */
      (cov_12akx055c6().b[5][0]++, residence.building) &&
      /* istanbul ignore next */
      (cov_12akx055c6().b[5][1]++, !buildingMap.has(residence.building.id))) {
        /* istanbul ignore next */
        cov_12akx055c6().b[4][0]++;
        cov_12akx055c6().s[45]++;
        buildingMap.set(residence.building.id, residence.building);
      } else
      /* istanbul ignore next */
      {
        cov_12akx055c6().b[4][1]++;
      }
    });
    /* istanbul ignore next */
    cov_12akx055c6().s[46]++;
    return Array.from(buildingMap.values());
  }, [safeAccessibleResidences]));
  // Filter residences based on selected building (if multiple residences exist)
  const filteredResidences =
  /* istanbul ignore next */
  (cov_12akx055c6().s[47]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_12akx055c6().f[5]++;
    cov_12akx055c6().s[48]++;
    // If no building filter is selected, return all residences
    if (!selectedBuildingId) {
      /* istanbul ignore next */
      cov_12akx055c6().b[6][0]++;
      cov_12akx055c6().s[49]++;
      return safeAccessibleResidences;
    } else
    /* istanbul ignore next */
    {
      cov_12akx055c6().b[6][1]++;
    }
    // Filter by selected building
    cov_12akx055c6().s[50]++;
    return safeAccessibleResidences.filter(r => {
      /* istanbul ignore next */
      cov_12akx055c6().f[6]++;
      cov_12akx055c6().s[51]++;
      return r.buildingId === selectedBuildingId;
    });
  }, [safeAccessibleResidences, selectedBuildingId]));
  // Pagination calculations
  const totalPages =
  /* istanbul ignore next */
  (cov_12akx055c6().s[52]++, Math.ceil(filteredResidences.length / itemsPerPage));
  const startIndex =
  /* istanbul ignore next */
  (cov_12akx055c6().s[53]++, (currentPage - 1) * itemsPerPage);
  const endIndex =
  /* istanbul ignore next */
  (cov_12akx055c6().s[54]++, startIndex + itemsPerPage);
  const currentResidences =
  /* istanbul ignore next */
  (cov_12akx055c6().s[55]++, filteredResidences.slice(startIndex, endIndex));
  /* istanbul ignore next */
  cov_12akx055c6().s[56]++;
  const handlePreviousPage = () => {
    /* istanbul ignore next */
    cov_12akx055c6().f[7]++;
    cov_12akx055c6().s[57]++;
    setCurrentPage(prev => {
      /* istanbul ignore next */
      cov_12akx055c6().f[8]++;
      cov_12akx055c6().s[58]++;
      return Math.max(1, prev - 1);
    });
  };
  /* istanbul ignore next */
  cov_12akx055c6().s[59]++;
  const handleNextPage = () => {
    /* istanbul ignore next */
    cov_12akx055c6().f[9]++;
    cov_12akx055c6().s[60]++;
    setCurrentPage(prev => {
      /* istanbul ignore next */
      cov_12akx055c6().f[10]++;
      cov_12akx055c6().s[61]++;
      return Math.min(totalPages, prev + 1);
    });
  };
  /* istanbul ignore next */
  cov_12akx055c6().s[62]++;
  const handlePageClick = page => {
    /* istanbul ignore next */
    cov_12akx055c6().f[11]++;
    cov_12akx055c6().s[63]++;
    setCurrentPage(page);
  };
  // Reset pagination when filters change
  /* istanbul ignore next */
  cov_12akx055c6().s[64]++;
  const resetToFirstPage = () => {
    /* istanbul ignore next */
    cov_12akx055c6().f[12]++;
    cov_12akx055c6().s[65]++;
    setCurrentPage(1);
  };
  // Select first residence by default
  const selectedResidence =
  /* istanbul ignore next */
  (cov_12akx055c6().s[66]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_12akx055c6().f[13]++;
    cov_12akx055c6().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_12akx055c6().b[8][0]++, !selectedResidenceId) &&
    /* istanbul ignore next */
    (cov_12akx055c6().b[8][1]++, filteredResidences.length > 0)) {
      /* istanbul ignore next */
      cov_12akx055c6().b[7][0]++;
      cov_12akx055c6().s[68]++;
      setSelectedResidenceId(filteredResidences[0].id);
      /* istanbul ignore next */
      cov_12akx055c6().s[69]++;
      return filteredResidences[0];
    } else
    /* istanbul ignore next */
    {
      cov_12akx055c6().b[7][1]++;
    }
    cov_12akx055c6().s[70]++;
    return /* istanbul ignore next */(cov_12akx055c6().b[9][0]++, filteredResidences.find(r => {
      /* istanbul ignore next */
      cov_12akx055c6().f[14]++;
      cov_12akx055c6().s[71]++;
      return r.id === selectedResidenceId;
    })) ||
    /* istanbul ignore next */
    (cov_12akx055c6().b[9][1]++, null);
  }, [selectedResidenceId, filteredResidences]));
  // Fetch contacts for selected residence
  const {
    data: contacts =
    /* istanbul ignore next */
    (cov_12akx055c6().b[10][0]++, []),
    isLoading: contactsLoading
  } =
  /* istanbul ignore next */
  (cov_12akx055c6().s[72]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/contacts', selectedResidenceId],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[15]++;
      cov_12akx055c6().s[73]++;
      if (!selectedResidenceId) {
        /* istanbul ignore next */
        cov_12akx055c6().b[11][0]++;
        cov_12akx055c6().s[74]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_12akx055c6().b[11][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_12akx055c6().s[75]++, await (0, queryClient_1.apiRequest)('GET', `/api/contacts?entity=residence&entityId=${selectedResidenceId}`));
      /* istanbul ignore next */
      cov_12akx055c6().s[76]++;
      return Array.isArray(response) ?
      /* istanbul ignore next */
      (cov_12akx055c6().b[12][0]++, response) :
      /* istanbul ignore next */
      (cov_12akx055c6().b[12][1]++, []);
    },
    enabled: !!selectedResidenceId
  }));
  // Fetch building contacts (read-only for residents)
  const {
    data: buildingContacts =
    /* istanbul ignore next */
    (cov_12akx055c6().b[13][0]++, []),
    isLoading: buildingContactsLoading
  } =
  /* istanbul ignore next */
  (cov_12akx055c6().s[77]++, (0, react_query_1.useQuery)({
    queryKey: ['/api/contacts', 'building', selectedResidence?.buildingId],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[16]++;
      cov_12akx055c6().s[78]++;
      if (!selectedResidence?.buildingId) {
        /* istanbul ignore next */
        cov_12akx055c6().b[14][0]++;
        cov_12akx055c6().s[79]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_12akx055c6().b[14][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_12akx055c6().s[80]++, await (0, queryClient_1.apiRequest)('GET', `/api/contacts?entity=building&entityId=${selectedResidence.buildingId}`));
      /* istanbul ignore next */
      cov_12akx055c6().s[81]++;
      return Array.isArray(response) ?
      /* istanbul ignore next */
      (cov_12akx055c6().b[15][0]++, response) :
      /* istanbul ignore next */
      (cov_12akx055c6().b[15][1]++, []);
    },
    enabled: !!selectedResidence?.buildingId
  }));
  // Mutations for contact management
  const addContactMutation =
  /* istanbul ignore next */
  (cov_12akx055c6().s[82]++, (0, react_query_1.useMutation)({
    mutationFn: data => {
      /* istanbul ignore next */
      cov_12akx055c6().f[17]++;
      cov_12akx055c6().s[83]++;
      return (0, queryClient_1.apiRequest)('POST', '/api/contacts', {
        ...data,
        residenceId: selectedResidenceId
      });
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[18]++;
      cov_12akx055c6().s[84]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/contacts', selectedResidenceId]
      });
      /* istanbul ignore next */
      cov_12akx055c6().s[85]++;
      setIsContactDialogOpen(false);
      /* istanbul ignore next */
      cov_12akx055c6().s[86]++;
      setEditingContact(null);
      /* istanbul ignore next */
      cov_12akx055c6().s[87]++;
      contactForm.reset();
      /* istanbul ignore next */
      cov_12akx055c6().s[88]++;
      toast({
        title: 'Contact added successfully',
        description: 'The new contact has been added to this residence.'
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_12akx055c6().f[19]++;
      cov_12akx055c6().s[89]++;
      toast({
        title: 'Failed to add contact',
        description:
        /* istanbul ignore next */
        (cov_12akx055c6().b[16][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_12akx055c6().b[16][1]++, 'Something went wrong'),
        variant: 'destructive'
      });
    }
  }));
  const updateContactMutation =
  /* istanbul ignore next */
  (cov_12akx055c6().s[90]++, (0, react_query_1.useMutation)({
    mutationFn: data => {
      /* istanbul ignore next */
      cov_12akx055c6().f[20]++;
      cov_12akx055c6().s[91]++;
      return (0, queryClient_1.apiRequest)('PATCH', `/api/contacts/${editingContact?.id}`, data);
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[21]++;
      cov_12akx055c6().s[92]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/contacts', selectedResidenceId]
      });
      /* istanbul ignore next */
      cov_12akx055c6().s[93]++;
      setIsContactDialogOpen(false);
      /* istanbul ignore next */
      cov_12akx055c6().s[94]++;
      setEditingContact(null);
      /* istanbul ignore next */
      cov_12akx055c6().s[95]++;
      contactForm.reset();
      /* istanbul ignore next */
      cov_12akx055c6().s[96]++;
      toast({
        title: 'Contact updated successfully',
        description: 'The contact information has been updated.'
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_12akx055c6().f[22]++;
      cov_12akx055c6().s[97]++;
      toast({
        title: 'Failed to update contact',
        description:
        /* istanbul ignore next */
        (cov_12akx055c6().b[17][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_12akx055c6().b[17][1]++, 'Something went wrong'),
        variant: 'destructive'
      });
    }
  }));
  const deleteContactMutation =
  /* istanbul ignore next */
  (cov_12akx055c6().s[98]++, (0, react_query_1.useMutation)({
    mutationFn: contactId => {
      /* istanbul ignore next */
      cov_12akx055c6().f[23]++;
      cov_12akx055c6().s[99]++;
      return (0, queryClient_1.apiRequest)('DELETE', `/api/contacts/${contactId}`);
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_12akx055c6().f[24]++;
      cov_12akx055c6().s[100]++;
      queryClient.invalidateQueries({
        queryKey: ['/api/contacts', selectedResidenceId]
      });
      /* istanbul ignore next */
      cov_12akx055c6().s[101]++;
      toast({
        title: 'Contact deleted successfully',
        description: 'The contact has been removed.'
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_12akx055c6().f[25]++;
      cov_12akx055c6().s[102]++;
      toast({
        title: 'Failed to delete contact',
        description:
        /* istanbul ignore next */
        (cov_12akx055c6().b[18][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_12akx055c6().b[18][1]++, 'Something went wrong'),
        variant: 'destructive'
      });
    }
  }));
  /* istanbul ignore next */
  cov_12akx055c6().s[103]++;
  const handleAddContact = data => {
    /* istanbul ignore next */
    cov_12akx055c6().f[26]++;
    cov_12akx055c6().s[104]++;
    if (editingContact) {
      /* istanbul ignore next */
      cov_12akx055c6().b[19][0]++;
      cov_12akx055c6().s[105]++;
      updateContactMutation.mutate(data);
    } else {
      /* istanbul ignore next */
      cov_12akx055c6().b[19][1]++;
      cov_12akx055c6().s[106]++;
      addContactMutation.mutate(data);
    }
  };
  /* istanbul ignore next */
  cov_12akx055c6().s[107]++;
  const handleEditContact = contact => {
    /* istanbul ignore next */
    cov_12akx055c6().f[27]++;
    cov_12akx055c6().s[108]++;
    setEditingContact(contact);
    /* istanbul ignore next */
    cov_12akx055c6().s[109]++;
    contactForm.reset({
      firstName: contact.firstName,
      lastName: contact.lastName,
      email: contact.email,
      phone:
      /* istanbul ignore next */
      (cov_12akx055c6().b[20][0]++, contact.phone) ||
      /* istanbul ignore next */
      (cov_12akx055c6().b[20][1]++, ''),
      type: contact.type
    });
    /* istanbul ignore next */
    cov_12akx055c6().s[110]++;
    setIsContactDialogOpen(true);
  };
  /* istanbul ignore next */
  cov_12akx055c6().s[111]++;
  const handleDeleteContact = contact => {
    /* istanbul ignore next */
    cov_12akx055c6().f[28]++;
    cov_12akx055c6().s[112]++;
    if (confirm('Are you sure you want to delete this contact?')) {
      /* istanbul ignore next */
      cov_12akx055c6().b[21][0]++;
      cov_12akx055c6().s[113]++;
      deleteContactMutation.mutate(contact.id);
    } else
    /* istanbul ignore next */
    {
      cov_12akx055c6().b[21][1]++;
    }
  };
  /* istanbul ignore next */
  cov_12akx055c6().s[114]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_12akx055c6().b[22][0]++;
    cov_12akx055c6().s[115]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: t('myResidence'),
        subtitle: t('viewResidenceInfo')
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 flex items-center justify-center',
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: 'text-center',
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: 'animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-4'
          }), (0, jsx_runtime_1.jsx)("p", {
            className: 'text-gray-600',
            children: t('loading')
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_12akx055c6().b[22][1]++;
  }
  cov_12akx055c6().s[116]++;
  if (filteredResidences.length === 0) {
    /* istanbul ignore next */
    cov_12akx055c6().b[23][0]++;
    cov_12akx055c6().s[117]++;
    return (0, jsx_runtime_1.jsxs)("div", {
      className: 'flex-1 flex flex-col overflow-hidden',
      children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
        title: t('myResidence'),
        subtitle: t('viewResidenceInfo')
      }), (0, jsx_runtime_1.jsx)("div", {
        className: 'flex-1 flex items-center justify-center p-6',
        children: (0, jsx_runtime_1.jsx)(no_data_card_1.NoDataCard, {
          icon: lucide_react_1.Home,
          titleKey: "noResidencesFound",
          descriptionKey:
          /* istanbul ignore next */
          (cov_12akx055c6().b[25][0]++, user?.role) &&
          /* istanbul ignore next */
          (cov_12akx055c6().b[25][1]++, ['admin', 'manager'].includes(user.role)) ?
          /* istanbul ignore next */
          (cov_12akx055c6().b[24][0]++, 'noResidencesFoundOrg') :
          /* istanbul ignore next */
          (cov_12akx055c6().b[24][1]++, 'notAssignedResidences'),
          testId: "no-residences-message"
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_12akx055c6().b[23][1]++;
  }
  cov_12akx055c6().s[118]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: 'flex-1 flex flex-col overflow-hidden',
    children: [(0, jsx_runtime_1.jsx)(header_1.Header, {
      title: t('myResidence'),
      subtitle: t('myResidenceInfo')
    }), (0, jsx_runtime_1.jsx)("div", {
      className: 'flex-1 overflow-auto p-6',
      children: (0, jsx_runtime_1.jsxs)("div", {
        className: 'max-w-7xl mx-auto space-y-6',
        children: [(
        /* istanbul ignore next */
        (cov_12akx055c6().b[26][0]++, buildings.length > 1) ||
        /* istanbul ignore next */
        (cov_12akx055c6().b[26][1]++, filteredResidences.length > 1)) &&
        /* istanbul ignore next */
        (cov_12akx055c6().b[26][2]++, (0, jsx_runtime_1.jsxs)(card_1.Card, {
          children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
            children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
              className: 'flex items-center gap-2',
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Home, {
                className: 'w-5 h-5'
              }), "Select Residence"]
            })
          }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
            children: (0, jsx_runtime_1.jsxs)("div", {
              className: 'flex flex-col md:flex-row gap-4',
              children: [
              /* istanbul ignore next */
              (cov_12akx055c6().b[27][0]++, buildings.length > 1) &&
              /* istanbul ignore next */
              (cov_12akx055c6().b[27][1]++, (0, jsx_runtime_1.jsxs)("div", {
                className: 'flex-1',
                children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                  className: 'text-sm font-medium mb-2 block',
                  children: t('building2')
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: selectedBuildingId,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_12akx055c6().f[29]++;
                    cov_12akx055c6().s[119]++;
                    setSelectedBuildingId(value);
                    /* istanbul ignore next */
                    cov_12akx055c6().s[120]++;
                    setSelectedResidenceId(''); // Reset residence selection when building changes
                  },
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    className: 'w-full',
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                      placeholder: t('selectABuilding')
                    })
                  }), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, {
                    children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                      value: "all",
                      children: t('allBuildings')
                    }), buildings.map(building => {
                      /* istanbul ignore next */
                      cov_12akx055c6().f[30]++;
                      cov_12akx055c6().s[121]++;
                      return (0, jsx_runtime_1.jsxs)(select_1.SelectItem, {
                        value: building.id,
                        children: [building.name, " - ", building.address]
                      }, building.id);
                    })]
                  })]
                })]
              })),
              /* istanbul ignore next */
              (cov_12akx055c6().b[28][0]++, filteredResidences.length > 1) &&
              /* istanbul ignore next */
              (cov_12akx055c6().b[28][1]++, (0, jsx_runtime_1.jsxs)("div", {
                className: 'flex-1',
                children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                  className: 'text-sm font-medium mb-2 block',
                  children: t('selectResidence')
                }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
                  value: selectedResidenceId,
                  onValueChange: setSelectedResidenceId,
                  children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                    className: 'w-full',
                    children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {
                      placeholder: t('selectAResidence')
                    })
                  }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                    children: filteredResidences.map(residence => {
                      /* istanbul ignore next */
                      cov_12akx055c6().f[31]++;
                      cov_12akx055c6().s[122]++;
                      return (0, jsx_runtime_1.jsxs)(select_1.SelectItem, {
                        value: residence.id,
                        children: [t('unit'), " ", residence.unitNumber, " - ",
                        /* istanbul ignore next */
                        (cov_12akx055c6().b[29][0]++, residence.building?.name) ||
                        /* istanbul ignore next */
                        (cov_12akx055c6().b[29][1]++, 'N/A')]
                      }, residence.id);
                    })
                  })]
                })]
              }))]
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_12akx055c6().b[30][0]++, currentResidences.length > 0) &&
        /* istanbul ignore next */
        (cov_12akx055c6().b[30][1]++, (0, jsx_runtime_1.jsx)("div", {
          className: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6',
          children: currentResidences.map(residence => {
            /* istanbul ignore next */
            cov_12akx055c6().f[32]++;
            cov_12akx055c6().s[123]++;
            return (0, jsx_runtime_1.jsxs)(card_1.Card, {
              className: 'hover:shadow-lg transition-shadow',
              children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
                children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
                  className: 'flex items-center gap-2',
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Home, {
                    className: 'w-5 h-5'
                  }), t('unit'), " ", residence.unitNumber]
                }), (0, jsx_runtime_1.jsx)("div", {
                  className: 'text-sm text-gray-600',
                  children:
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[31][0]++, residence.building?.name) ||
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[31][1]++, t('buildingInfoUnavailable'))
                })]
              }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
                className: 'space-y-4',
                children: [(0, jsx_runtime_1.jsxs)("div", {
                  className: 'grid grid-cols-1 gap-3',
                  children: [(0, jsx_runtime_1.jsxs)("div", {
                    children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                      className: 'text-xs font-medium text-gray-500',
                      children: t('address')
                    }), (0, jsx_runtime_1.jsx)("p", {
                      className: 'text-sm text-gray-700',
                      children:
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[32][0]++, residence.building?.address) ||
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[32][1]++, t('addressUnavailable'))
                    }), (0, jsx_runtime_1.jsxs)("p", {
                      className: 'text-sm text-gray-700',
                      children: [
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[33][0]++, residence.building?.city) ||
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[33][1]++, 'N/A'), ",", ' ',
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[34][0]++, residence.building?.province) ||
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[34][1]++, 'N/A'), ' ',
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[35][0]++, residence.building?.postalCode) ||
                      /* istanbul ignore next */
                      (cov_12akx055c6().b[35][1]++, '')]
                    })]
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: 'grid grid-cols-2 gap-3',
                    children: [
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[36][0]++, residence.floor) &&
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[36][1]++, (0, jsx_runtime_1.jsxs)("div", {
                      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                        className: 'text-xs font-medium text-gray-500',
                        children: t('floor')
                      }), (0, jsx_runtime_1.jsx)("p", {
                        className: 'text-sm text-gray-700',
                        children: residence.floor
                      })]
                    })),
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[37][0]++, residence.squareFootage) &&
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[37][1]++, (0, jsx_runtime_1.jsxs)("div", {
                      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                        className: 'text-xs font-medium text-gray-500',
                        children: t('sqFt')
                      }), (0, jsx_runtime_1.jsx)("p", {
                        className: 'text-sm text-gray-700',
                        children: residence.squareFootage
                      })]
                    })),
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[38][0]++, residence.bedrooms) &&
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[38][1]++, (0, jsx_runtime_1.jsxs)("div", {
                      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                        className: 'text-xs font-medium text-gray-500',
                        children: t('bedrooms')
                      }), (0, jsx_runtime_1.jsxs)("div", {
                        className: 'flex items-center gap-1',
                        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Bed, {
                          className: 'w-3 h-3'
                        }), (0, jsx_runtime_1.jsx)("span", {
                          className: 'text-sm text-gray-700',
                          children: residence.bedrooms
                        })]
                      })]
                    })),
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[39][0]++, residence.bathrooms) &&
                    /* istanbul ignore next */
                    (cov_12akx055c6().b[39][1]++, (0, jsx_runtime_1.jsxs)("div", {
                      children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                        className: 'text-xs font-medium text-gray-500',
                        children: t('bathrooms')
                      }), (0, jsx_runtime_1.jsxs)("div", {
                        className: 'flex items-center gap-1',
                        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Bath, {
                          className: 'w-3 h-3'
                        }), (0, jsx_runtime_1.jsx)("span", {
                          className: 'text-sm text-gray-700',
                          children: residence.bathrooms
                        })]
                      })]
                    }))]
                  }),
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[40][0]++, residence.parkingSpaceNumbers) &&
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[40][1]++, residence.parkingSpaceNumbers.length > 0) &&
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[40][2]++, (0, jsx_runtime_1.jsxs)("div", {
                    children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                      className: 'text-xs font-medium text-gray-500',
                      children: t('parking')
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: 'flex items-center gap-1',
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Car, {
                        className: 'w-3 h-3'
                      }), (0, jsx_runtime_1.jsx)("span", {
                        className: 'text-sm text-gray-700',
                        children: residence.parkingSpaceNumbers.join(', ')
                      })]
                    })]
                  })),
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[41][0]++, residence.storageSpaceNumbers) &&
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[41][1]++, residence.storageSpaceNumbers.length > 0) &&
                  /* istanbul ignore next */
                  (cov_12akx055c6().b[41][2]++, (0, jsx_runtime_1.jsxs)("div", {
                    children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
                      className: 'text-xs font-medium text-gray-500',
                      children: t('storage')
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: 'flex items-center gap-1',
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Package, {
                        className: 'w-3 h-3'
                      }), (0, jsx_runtime_1.jsx)("span", {
                        className: 'text-sm text-gray-700',
                        children: residence.storageSpaceNumbers.join(', ')
                      })]
                    })]
                  }))]
                }), (0, jsx_runtime_1.jsxs)("div", {
                  className: 'flex flex-col gap-2 pt-4 border-t',
                  children: [(0, jsx_runtime_1.jsx)(wouter_1.Link, {
                    href: `/residents/residences/${residence.id}/documents`,
                    children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                      variant: 'outline',
                      size: 'sm',
                      className: 'w-full justify-start',
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.FileText, {
                        className: 'w-4 h-4 mr-2'
                      }), t('residenceDocumentsButton')]
                    })
                  }), (0, jsx_runtime_1.jsx)(wouter_1.Link, {
                    href: `/residents/buildings/${residence.buildingId}/documents`,
                    children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                      variant: 'outline',
                      size: 'sm',
                      className: 'w-full justify-start',
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Building, {
                        className: 'w-4 h-4 mr-2'
                      }), t('buildingDocumentsButton')]
                    })
                  })]
                })]
              })]
            }, residence.id);
          })
        })),
        /* istanbul ignore next */
        (cov_12akx055c6().b[42][0]++, totalPages > 1) &&
        /* istanbul ignore next */
        (cov_12akx055c6().b[42][1]++, (0, jsx_runtime_1.jsxs)("div", {
          className: 'flex items-center justify-center gap-2 mt-8',
          children: [(0, jsx_runtime_1.jsxs)(button_1.Button, {
            variant: 'outline',
            size: 'sm',
            onClick: handlePreviousPage,
            disabled: currentPage === 1,
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ChevronLeft, {
              className: 'h-4 w-4'
            }), t('previous')]
          }), (0, jsx_runtime_1.jsx)("div", {
            className: 'flex gap-1',
            children: Array.from({
              length: Math.min(5, totalPages)
            }, (_, i) => {
              /* istanbul ignore next */
              cov_12akx055c6().f[33]++;
              let pageNum;
              /* istanbul ignore next */
              cov_12akx055c6().s[124]++;
              if (totalPages <= 5) {
                /* istanbul ignore next */
                cov_12akx055c6().b[43][0]++;
                cov_12akx055c6().s[125]++;
                pageNum = i + 1;
              } else {
                /* istanbul ignore next */
                cov_12akx055c6().b[43][1]++;
                cov_12akx055c6().s[126]++;
                if (currentPage <= 3) {
                  /* istanbul ignore next */
                  cov_12akx055c6().b[44][0]++;
                  cov_12akx055c6().s[127]++;
                  pageNum = i + 1;
                } else {
                  /* istanbul ignore next */
                  cov_12akx055c6().b[44][1]++;
                  cov_12akx055c6().s[128]++;
                  if (currentPage >= totalPages - 2) {
                    /* istanbul ignore next */
                    cov_12akx055c6().b[45][0]++;
                    cov_12akx055c6().s[129]++;
                    pageNum = totalPages - 4 + i;
                  } else {
                    /* istanbul ignore next */
                    cov_12akx055c6().b[45][1]++;
                    cov_12akx055c6().s[130]++;
                    pageNum = currentPage - 2 + i;
                  }
                }
              }
              /* istanbul ignore next */
              cov_12akx055c6().s[131]++;
              return (0, jsx_runtime_1.jsx)(button_1.Button, {
                variant: currentPage === pageNum ?
                /* istanbul ignore next */
                (cov_12akx055c6().b[46][0]++, 'default') :
                /* istanbul ignore next */
                (cov_12akx055c6().b[46][1]++, 'outline'),
                size: 'sm',
                onClick: () => {
                  /* istanbul ignore next */
                  cov_12akx055c6().f[34]++;
                  cov_12akx055c6().s[132]++;
                  return handlePageClick(pageNum);
                },
                children: pageNum
              }, pageNum);
            })
          }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
            variant: 'outline',
            size: 'sm',
            onClick: handleNextPage,
            disabled: currentPage === totalPages,
            children: [t('next'), (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronRight, {
              className: 'h-4 w-4'
            })]
          })]
        })),
        /* istanbul ignore next */
        (cov_12akx055c6().b[47][0]++, filteredResidences.length > 0) &&
        /* istanbul ignore next */
        (cov_12akx055c6().b[47][1]++, (0, jsx_runtime_1.jsxs)("div", {
          className: 'text-center text-sm text-muted-foreground mt-4',
          children: [t('showing'), " ", startIndex + 1, " to ", Math.min(endIndex, filteredResidences.length), " of", ' ', filteredResidences.length, " ", t('residences')]
        }))]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTJha3gwNTVjNiIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJkZWZhdWx0IiwiUmVzaWRlbmNlIiwicmVhY3RfMSIsInJlcXVpcmUiLCJyZWFjdF9xdWVyeV8xIiwiaGVhZGVyXzEiLCJjYXJkXzEiLCJub19kYXRhX2NhcmRfMSIsImJ1dHRvbl8xIiwibGFiZWxfMSIsInNlbGVjdF8xIiwibHVjaWRlX3JlYWN0XzEiLCJyZWFjdF9ob29rX2Zvcm1fMSIsInpvZF8xIiwiem9kXzIiLCJ1c2VfdG9hc3RfMSIsInVzZV9sYW5ndWFnZV8xIiwicXVlcnlDbGllbnRfMSIsIndvdXRlcl8xIiwiY29udGFjdEZvcm1TY2hlbWEiLCJ6Iiwib2JqZWN0IiwiZmlyc3ROYW1lIiwic3RyaW5nIiwibWluIiwibGFzdE5hbWUiLCJlbWFpbCIsInBob25lIiwib3B0aW9uYWwiLCJ0eXBlIiwiZW51bSIsImYiLCJ0b2FzdCIsInVzZVRvYXN0IiwidCIsInVzZUxhbmd1YWdlIiwicXVlcnlDbGllbnQiLCJ1c2VRdWVyeUNsaWVudCIsInNlbGVjdGVkQnVpbGRpbmdJZCIsInNldFNlbGVjdGVkQnVpbGRpbmdJZCIsInVzZVN0YXRlIiwic2VsZWN0ZWRSZXNpZGVuY2VJZCIsInNldFNlbGVjdGVkUmVzaWRlbmNlSWQiLCJpc0NvbnRhY3REaWFsb2dPcGVuIiwic2V0SXNDb250YWN0RGlhbG9nT3BlbiIsImVkaXRpbmdDb250YWN0Iiwic2V0RWRpdGluZ0NvbnRhY3QiLCJjdXJyZW50UGFnZSIsInNldEN1cnJlbnRQYWdlIiwiaXRlbXNQZXJQYWdlIiwiY29udGFjdEZvcm0iLCJ1c2VGb3JtIiwicmVzb2x2ZXIiLCJ6b2RSZXNvbHZlciIsImRlZmF1bHRWYWx1ZXMiLCJkYXRhIiwidXNlciIsInVzZVF1ZXJ5IiwicXVlcnlLZXkiLCJxdWVyeUZuIiwiYXBpUmVxdWVzdCIsImFjY2Vzc2libGVSZXNpZGVuY2VzIiwiYiIsImlzTG9hZGluZyIsImVycm9yIiwicmVzaWRlbmNlc0Vycm9yIiwicmVmZXRjaCIsInJlZmV0Y2hSZXNpZGVuY2VzIiwiaWQiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwiY3JlZGVudGlhbHMiLCJoZWFkZXJzIiwib2siLCJFcnJvciIsImpzb24iLCJlbmFibGVkIiwicmVmZXRjaE9uTW91bnQiLCJzdGFsZVRpbWUiLCJzYWZlQWNjZXNzaWJsZVJlc2lkZW5jZXMiLCJBcnJheSIsImlzQXJyYXkiLCJidWlsZGluZ3MiLCJ1c2VNZW1vIiwiYnVpbGRpbmdNYXAiLCJNYXAiLCJmb3JFYWNoIiwicmVzaWRlbmNlIiwiYnVpbGRpbmciLCJoYXMiLCJzZXQiLCJmcm9tIiwidmFsdWVzIiwiZmlsdGVyZWRSZXNpZGVuY2VzIiwiZmlsdGVyIiwiciIsImJ1aWxkaW5nSWQiLCJ0b3RhbFBhZ2VzIiwiTWF0aCIsImNlaWwiLCJsZW5ndGgiLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJjdXJyZW50UmVzaWRlbmNlcyIsInNsaWNlIiwiaGFuZGxlUHJldmlvdXNQYWdlIiwicHJldiIsIm1heCIsImhhbmRsZU5leHRQYWdlIiwiaGFuZGxlUGFnZUNsaWNrIiwicGFnZSIsInJlc2V0VG9GaXJzdFBhZ2UiLCJzZWxlY3RlZFJlc2lkZW5jZSIsImZpbmQiLCJjb250YWN0cyIsImNvbnRhY3RzTG9hZGluZyIsImJ1aWxkaW5nQ29udGFjdHMiLCJidWlsZGluZ0NvbnRhY3RzTG9hZGluZyIsImFkZENvbnRhY3RNdXRhdGlvbiIsInVzZU11dGF0aW9uIiwibXV0YXRpb25GbiIsInJlc2lkZW5jZUlkIiwib25TdWNjZXNzIiwiaW52YWxpZGF0ZVF1ZXJpZXMiLCJyZXNldCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJvbkVycm9yIiwibWVzc2FnZSIsInZhcmlhbnQiLCJ1cGRhdGVDb250YWN0TXV0YXRpb24iLCJkZWxldGVDb250YWN0TXV0YXRpb24iLCJjb250YWN0SWQiLCJoYW5kbGVBZGRDb250YWN0IiwibXV0YXRlIiwiaGFuZGxlRWRpdENvbnRhY3QiLCJjb250YWN0IiwiaGFuZGxlRGVsZXRlQ29udGFjdCIsImNvbmZpcm0iLCJqc3hfcnVudGltZV8xIiwianN4cyIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwianN4IiwiSGVhZGVyIiwic3VidGl0bGUiLCJOb0RhdGFDYXJkIiwiaWNvbiIsIkhvbWUiLCJ0aXRsZUtleSIsImRlc2NyaXB0aW9uS2V5Iiwicm9sZSIsImluY2x1ZGVzIiwidGVzdElkIiwiQ2FyZCIsIkNhcmRIZWFkZXIiLCJDYXJkVGl0bGUiLCJDYXJkQ29udGVudCIsIkxhYmVsIiwiU2VsZWN0IiwidmFsdWUiLCJvblZhbHVlQ2hhbmdlIiwiU2VsZWN0VHJpZ2dlciIsIlNlbGVjdFZhbHVlIiwicGxhY2Vob2xkZXIiLCJTZWxlY3RDb250ZW50IiwiU2VsZWN0SXRlbSIsIm1hcCIsIm5hbWUiLCJhZGRyZXNzIiwidW5pdE51bWJlciIsImNpdHkiLCJwcm92aW5jZSIsInBvc3RhbENvZGUiLCJmbG9vciIsInNxdWFyZUZvb3RhZ2UiLCJiZWRyb29tcyIsIkJlZCIsImJhdGhyb29tcyIsIkJhdGgiLCJwYXJraW5nU3BhY2VOdW1iZXJzIiwiQ2FyIiwiam9pbiIsInN0b3JhZ2VTcGFjZU51bWJlcnMiLCJQYWNrYWdlIiwiTGluayIsImhyZWYiLCJCdXR0b24iLCJzaXplIiwiRmlsZVRleHQiLCJCdWlsZGluZyIsIm9uQ2xpY2siLCJkaXNhYmxlZCIsIkNoZXZyb25MZWZ0IiwiXyIsImkiLCJwYWdlTnVtIiwiQ2hldnJvblJpZ2h0Il0sInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9jbGllbnQvc3JjL3BhZ2VzL3Jlc2lkZW50cy9yZXNpZGVuY2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlUXVlcnksIHVzZU11dGF0aW9uLCB1c2VRdWVyeUNsaWVudCB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tICdAL2NvbXBvbmVudHMvbGF5b3V0L2hlYWRlcic7XG5pbXBvcnQgeyBDYXJkLCBDYXJkQ29udGVudCwgQ2FyZEhlYWRlciwgQ2FyZFRpdGxlIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2NhcmQnO1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYmFkZ2UnO1xuaW1wb3J0IHsgTm9EYXRhQ2FyZCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9uby1kYXRhLWNhcmQnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbic7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9pbnB1dCc7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9sYWJlbCc7XG5pbXBvcnQge1xuICBTZWxlY3QsXG4gIFNlbGVjdENvbnRlbnQsXG4gIFNlbGVjdEl0ZW0sXG4gIFNlbGVjdFRyaWdnZXIsXG4gIFNlbGVjdFZhbHVlLFxufSBmcm9tICdAL2NvbXBvbmVudHMvdWkvc2VsZWN0JztcbmltcG9ydCB7XG4gIERpYWxvZyxcbiAgRGlhbG9nQ29udGVudCxcbiAgRGlhbG9nSGVhZGVyLFxuICBEaWFsb2dUaXRsZSxcbiAgRGlhbG9nVHJpZ2dlcixcbiAgRGlhbG9nRGVzY3JpcHRpb24sXG4gIERpYWxvZ0Zvb3Rlcixcbn0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2RpYWxvZyc7XG5pbXBvcnQge1xuICBGb3JtLFxuICBGb3JtQ29udHJvbCxcbiAgRm9ybUZpZWxkLFxuICBGb3JtSXRlbSxcbiAgRm9ybUxhYmVsLFxuICBGb3JtTWVzc2FnZSxcbn0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2Zvcm0nO1xuaW1wb3J0IHtcbiAgSG9tZSxcbiAgQnVpbGRpbmcsXG4gIE1hcFBpbixcbiAgQmVkLFxuICBCYXRoLFxuICBDYXIsXG4gIFBhY2thZ2UsXG4gIFBob25lLFxuICBNYWlsLFxuICBVc2VyLFxuICBFZGl0LFxuICBQbHVzLFxuICBUcmFzaDIsXG4gIEZpbGVUZXh0LFxuICBEb3dubG9hZCxcbiAgQ2FsZW5kYXIsXG4gIENoZXZyb25MZWZ0LFxuICBDaGV2cm9uUmlnaHQsXG59IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5pbXBvcnQgeyB1c2VGb3JtIH0gZnJvbSAncmVhY3QtaG9vay1mb3JtJztcbmltcG9ydCB7IHpvZFJlc29sdmVyIH0gZnJvbSAnQGhvb2tmb3JtL3Jlc29sdmVycy96b2QnO1xuaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5pbXBvcnQgeyB1c2VUb2FzdCB9IGZyb20gJ0AvaG9va3MvdXNlLXRvYXN0JztcbmltcG9ydCB7IHVzZUxhbmd1YWdlIH0gZnJvbSAnQC9ob29rcy91c2UtbGFuZ3VhZ2UnO1xuaW1wb3J0IHsgYXBpUmVxdWVzdCB9IGZyb20gJ0AvbGliL3F1ZXJ5Q2xpZW50JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICd3b3V0ZXInO1xuXG4vKipcbiAqXG4gKi9cbmludGVyZmFjZSBSZXNpZGVuY2Uge1xuICBpZDogc3RyaW5nO1xuICB1bml0TnVtYmVyOiBzdHJpbmc7XG4gIGZsb29yPzogbnVtYmVyO1xuICBzcXVhcmVGb290YWdlPzogc3RyaW5nO1xuICBiZWRyb29tcz86IG51bWJlcjtcbiAgYmF0aHJvb21zPzogc3RyaW5nO1xuICBiYWxjb255PzogYm9vbGVhbjtcbiAgcGFya2luZ1NwYWNlTnVtYmVycz86IHN0cmluZ1tdO1xuICBzdG9yYWdlU3BhY2VOdW1iZXJzPzogc3RyaW5nW107XG4gIGlzQWN0aXZlOiBib29sZWFuO1xuICBidWlsZGluZ0lkOiBzdHJpbmc7XG4gIGJ1aWxkaW5nOiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgYWRkcmVzczogc3RyaW5nO1xuICAgIGNpdHk6IHN0cmluZztcbiAgICBwcm92aW5jZTogc3RyaW5nO1xuICAgIHBvc3RhbENvZGU6IHN0cmluZztcbiAgfTtcbn1cblxuLyoqXG4gKlxuICovXG5pbnRlcmZhY2UgQ29udGFjdCB7XG4gIGlkOiBzdHJpbmc7XG4gIGZpcnN0TmFtZTogc3RyaW5nO1xuICBsYXN0TmFtZTogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xufVxuXG4vLyBDb250YWN0IGZvcm0gc2NoZW1hXG5jb25zdCBjb250YWN0Rm9ybVNjaGVtYSA9IHoub2JqZWN0KHtcbiAgZmlyc3ROYW1lOiB6LnN0cmluZygpLm1pbigxLCAnRmlyc3QgbmFtZSBpcyByZXF1aXJlZCcpLFxuICBsYXN0TmFtZTogei5zdHJpbmcoKS5taW4oMSwgJ0xhc3QgbmFtZSBpcyByZXF1aXJlZCcpLFxuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbCgnSW52YWxpZCBlbWFpbCBhZGRyZXNzJyksXG4gIHBob25lOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHR5cGU6IHouZW51bShbJ3ByaW1hcnknLCAnZW1lcmdlbmN5JywgJ290aGVyJ10pLFxufSk7XG5cbi8qKlxuICpcbiAqL1xudHlwZSBDb250YWN0Rm9ybURhdGEgPSB6LmluZmVyPHR5cGVvZiBjb250YWN0Rm9ybVNjaGVtYT47XG5cbi8qKlxuICpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVzaWRlbmNlKCkge1xuICBjb25zdCB7IHRvYXN0IH0gPSB1c2VUb2FzdCgpO1xuICBjb25zdCB7IHQgfSA9IHVzZUxhbmd1YWdlKCk7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcblxuICBjb25zdCBbc2VsZWN0ZWRCdWlsZGluZ0lkLCBzZXRTZWxlY3RlZEJ1aWxkaW5nSWRdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG4gIGNvbnN0IFtzZWxlY3RlZFJlc2lkZW5jZUlkLCBzZXRTZWxlY3RlZFJlc2lkZW5jZUlkXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICBjb25zdCBbaXNDb250YWN0RGlhbG9nT3Blbiwgc2V0SXNDb250YWN0RGlhbG9nT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtlZGl0aW5nQ29udGFjdCwgc2V0RWRpdGluZ0NvbnRhY3RdID0gdXNlU3RhdGU8Q29udGFjdCB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbY3VycmVudFBhZ2UsIHNldEN1cnJlbnRQYWdlXSA9IHVzZVN0YXRlKDEpO1xuICBjb25zdCBpdGVtc1BlclBhZ2UgPSAxMDtcblxuICAvLyBGb3JtIGZvciBjb250YWN0IG1hbmFnZW1lbnRcbiAgY29uc3QgY29udGFjdEZvcm0gPSB1c2VGb3JtPENvbnRhY3RGb3JtRGF0YT4oe1xuICAgIHJlc29sdmVyOiB6b2RSZXNvbHZlcihjb250YWN0Rm9ybVNjaGVtYSksXG4gICAgZGVmYXVsdFZhbHVlczoge1xuICAgICAgZmlyc3ROYW1lOiAnJyxcbiAgICAgIGxhc3ROYW1lOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIHBob25lOiAnJyxcbiAgICAgIHR5cGU6ICdwcmltYXJ5JyxcbiAgICB9LFxuICB9KTtcblxuICAvLyBGZXRjaCBjdXJyZW50IHVzZXJcbiAgY29uc3QgeyBkYXRhOiB1c2VyIH0gPSB1c2VRdWVyeSh7XG4gICAgcXVlcnlLZXk6IFsnL2FwaS9hdXRoL3VzZXInXSxcbiAgICBxdWVyeUZuOiAoKSA9PiBhcGlSZXF1ZXN0KCdHRVQnLCAnL2FwaS9hdXRoL3VzZXInKSBhcyBQcm9taXNlPGFueT4sXG4gIH0pO1xuXG4gIC8vIEFsbCB1c2VycyBzZWUgb25seSB0aGVpciBhc3NpZ25lZCByZXNpZGVuY2VzXG4gIGNvbnN0IHtcbiAgICBkYXRhOiBhY2Nlc3NpYmxlUmVzaWRlbmNlcyA9IFtdLFxuICAgIGlzTG9hZGluZyxcbiAgICBlcnJvcjogcmVzaWRlbmNlc0Vycm9yLFxuICAgIHJlZmV0Y2g6IHJlZmV0Y2hSZXNpZGVuY2VzLFxuICB9ID0gdXNlUXVlcnkoe1xuICAgIHF1ZXJ5S2V5OiBbJy9hcGkvdXNlcnMvcmVzaWRlbmNlcycsIHVzZXI/LmlkXSxcbiAgICBxdWVyeUZuOiBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAoIXVzZXI/LmlkKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cblxuICAgICAgLy8gQWxsIHVzZXJzIChpbmNsdWRpbmcgYWRtaW4vbWFuYWdlcikgc2VlIG9ubHkgdGhlaXIgYXNzaWduZWQgcmVzaWRlbmNlc1xuICAgICAgY29uc3QgdXJsID0gYC9hcGkvdXNlcnMvJHt1c2VyLmlkfS9yZXNpZGVuY2VzYDtcblxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlJyxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCByZXNpZGVuY2VzJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgIH0sXG4gICAgZW5hYmxlZDogISF1c2VyPy5pZCxcbiAgICByZWZldGNoT25Nb3VudDogdHJ1ZSxcbiAgICBzdGFsZVRpbWU6IDAsXG4gIH0pO1xuXG4gIC8vIEVuc3VyZSBhY2Nlc3NpYmxlUmVzaWRlbmNlcyBpcyBhbHdheXMgYW4gYXJyYXlcbiAgY29uc3Qgc2FmZUFjY2Vzc2libGVSZXNpZGVuY2VzID0gQXJyYXkuaXNBcnJheShhY2Nlc3NpYmxlUmVzaWRlbmNlcykgPyBhY2Nlc3NpYmxlUmVzaWRlbmNlcyA6IFtdO1xuXG4gIC8vIEV4dHJhY3QgYnVpbGRpbmdzIGZyb20gdXNlcidzIHJlc2lkZW5jZXMgZm9yIGZpbHRlcmluZ1xuICBjb25zdCBidWlsZGluZ3MgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBidWlsZGluZ01hcCA9IG5ldyBNYXAoKTtcbiAgICBzYWZlQWNjZXNzaWJsZVJlc2lkZW5jZXMuZm9yRWFjaCgocmVzaWRlbmNlKSA9PiB7XG4gICAgICBpZiAocmVzaWRlbmNlLmJ1aWxkaW5nICYmICFidWlsZGluZ01hcC5oYXMocmVzaWRlbmNlLmJ1aWxkaW5nLmlkKSkge1xuICAgICAgICBidWlsZGluZ01hcC5zZXQocmVzaWRlbmNlLmJ1aWxkaW5nLmlkLCByZXNpZGVuY2UuYnVpbGRpbmcpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBBcnJheS5mcm9tKGJ1aWxkaW5nTWFwLnZhbHVlcygpKTtcbiAgfSwgW3NhZmVBY2Nlc3NpYmxlUmVzaWRlbmNlc10pO1xuXG4gIC8vIEZpbHRlciByZXNpZGVuY2VzIGJhc2VkIG9uIHNlbGVjdGVkIGJ1aWxkaW5nIChpZiBtdWx0aXBsZSByZXNpZGVuY2VzIGV4aXN0KVxuICBjb25zdCBmaWx0ZXJlZFJlc2lkZW5jZXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAvLyBJZiBubyBidWlsZGluZyBmaWx0ZXIgaXMgc2VsZWN0ZWQsIHJldHVybiBhbGwgcmVzaWRlbmNlc1xuICAgIGlmICghc2VsZWN0ZWRCdWlsZGluZ0lkKSB7XG4gICAgICByZXR1cm4gc2FmZUFjY2Vzc2libGVSZXNpZGVuY2VzO1xuICAgIH1cblxuICAgIC8vIEZpbHRlciBieSBzZWxlY3RlZCBidWlsZGluZ1xuICAgIHJldHVybiBzYWZlQWNjZXNzaWJsZVJlc2lkZW5jZXMuZmlsdGVyKChyKSA9PiByLmJ1aWxkaW5nSWQgPT09IHNlbGVjdGVkQnVpbGRpbmdJZCk7XG4gIH0sIFtzYWZlQWNjZXNzaWJsZVJlc2lkZW5jZXMsIHNlbGVjdGVkQnVpbGRpbmdJZF0pO1xuXG4gIC8vIFBhZ2luYXRpb24gY2FsY3VsYXRpb25zXG4gIGNvbnN0IHRvdGFsUGFnZXMgPSBNYXRoLmNlaWwoZmlsdGVyZWRSZXNpZGVuY2VzLmxlbmd0aCAvIGl0ZW1zUGVyUGFnZSk7XG4gIGNvbnN0IHN0YXJ0SW5kZXggPSAoY3VycmVudFBhZ2UgLSAxKSAqIGl0ZW1zUGVyUGFnZTtcbiAgY29uc3QgZW5kSW5kZXggPSBzdGFydEluZGV4ICsgaXRlbXNQZXJQYWdlO1xuICBjb25zdCBjdXJyZW50UmVzaWRlbmNlcyA9IGZpbHRlcmVkUmVzaWRlbmNlcy5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCk7XG5cbiAgY29uc3QgaGFuZGxlUHJldmlvdXNQYWdlID0gKCkgPT4ge1xuICAgIHNldEN1cnJlbnRQYWdlKChwcmV2KSA9PiBNYXRoLm1heCgxLCBwcmV2IC0gMSkpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU5leHRQYWdlID0gKCkgPT4ge1xuICAgIHNldEN1cnJlbnRQYWdlKChwcmV2KSA9PiBNYXRoLm1pbih0b3RhbFBhZ2VzLCBwcmV2ICsgMSkpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVBhZ2VDbGljayA9IChwYWdlOiBudW1iZXIpID0+IHtcbiAgICBzZXRDdXJyZW50UGFnZShwYWdlKTtcbiAgfTtcblxuICAvLyBSZXNldCBwYWdpbmF0aW9uIHdoZW4gZmlsdGVycyBjaGFuZ2VcbiAgY29uc3QgcmVzZXRUb0ZpcnN0UGFnZSA9ICgpID0+IHtcbiAgICBzZXRDdXJyZW50UGFnZSgxKTtcbiAgfTtcblxuICAvLyBTZWxlY3QgZmlyc3QgcmVzaWRlbmNlIGJ5IGRlZmF1bHRcbiAgY29uc3Qgc2VsZWN0ZWRSZXNpZGVuY2UgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBpZiAoIXNlbGVjdGVkUmVzaWRlbmNlSWQgJiYgZmlsdGVyZWRSZXNpZGVuY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgIHNldFNlbGVjdGVkUmVzaWRlbmNlSWQoZmlsdGVyZWRSZXNpZGVuY2VzWzBdLmlkKTtcbiAgICAgIHJldHVybiBmaWx0ZXJlZFJlc2lkZW5jZXNbMF07XG4gICAgfVxuICAgIHJldHVybiBmaWx0ZXJlZFJlc2lkZW5jZXMuZmluZCgocikgPT4gci5pZCA9PT0gc2VsZWN0ZWRSZXNpZGVuY2VJZCkgfHwgbnVsbDtcbiAgfSwgW3NlbGVjdGVkUmVzaWRlbmNlSWQsIGZpbHRlcmVkUmVzaWRlbmNlc10pO1xuXG4gIC8vIEZldGNoIGNvbnRhY3RzIGZvciBzZWxlY3RlZCByZXNpZGVuY2VcbiAgY29uc3QgeyBkYXRhOiBjb250YWN0cyA9IFtdLCBpc0xvYWRpbmc6IGNvbnRhY3RzTG9hZGluZyB9ID0gdXNlUXVlcnkoe1xuICAgIHF1ZXJ5S2V5OiBbJy9hcGkvY29udGFjdHMnLCBzZWxlY3RlZFJlc2lkZW5jZUlkXSxcbiAgICBxdWVyeUZuOiBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAoIXNlbGVjdGVkUmVzaWRlbmNlSWQpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlSZXF1ZXN0KFxuICAgICAgICAnR0VUJyxcbiAgICAgICAgYC9hcGkvY29udGFjdHM/ZW50aXR5PXJlc2lkZW5jZSZlbnRpdHlJZD0ke3NlbGVjdGVkUmVzaWRlbmNlSWR9YFxuICAgICAgKTtcbiAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHJlc3BvbnNlKSA/IHJlc3BvbnNlIDogW107XG4gICAgfSxcbiAgICBlbmFibGVkOiAhIXNlbGVjdGVkUmVzaWRlbmNlSWQsXG4gIH0pO1xuXG4gIC8vIEZldGNoIGJ1aWxkaW5nIGNvbnRhY3RzIChyZWFkLW9ubHkgZm9yIHJlc2lkZW50cylcbiAgY29uc3QgeyBkYXRhOiBidWlsZGluZ0NvbnRhY3RzID0gW10sIGlzTG9hZGluZzogYnVpbGRpbmdDb250YWN0c0xvYWRpbmcgfSA9IHVzZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogWycvYXBpL2NvbnRhY3RzJywgJ2J1aWxkaW5nJywgc2VsZWN0ZWRSZXNpZGVuY2U/LmJ1aWxkaW5nSWRdLFxuICAgIHF1ZXJ5Rm46IGFzeW5jICgpID0+IHtcbiAgICAgIGlmICghc2VsZWN0ZWRSZXNpZGVuY2U/LmJ1aWxkaW5nSWQpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlSZXF1ZXN0KFxuICAgICAgICAnR0VUJyxcbiAgICAgICAgYC9hcGkvY29udGFjdHM/ZW50aXR5PWJ1aWxkaW5nJmVudGl0eUlkPSR7c2VsZWN0ZWRSZXNpZGVuY2UuYnVpbGRpbmdJZH1gXG4gICAgICApO1xuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocmVzcG9uc2UpID8gcmVzcG9uc2UgOiBbXTtcbiAgICB9LFxuICAgIGVuYWJsZWQ6ICEhc2VsZWN0ZWRSZXNpZGVuY2U/LmJ1aWxkaW5nSWQsXG4gIH0pO1xuXG4gIC8vIE11dGF0aW9ucyBmb3IgY29udGFjdCBtYW5hZ2VtZW50XG4gIGNvbnN0IGFkZENvbnRhY3RNdXRhdGlvbiA9IHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbkZuOiAoZGF0YTogQ29udGFjdEZvcm1EYXRhKSA9PlxuICAgICAgYXBpUmVxdWVzdCgnUE9TVCcsICcvYXBpL2NvbnRhY3RzJywge1xuICAgICAgICAuLi5kYXRhLFxuICAgICAgICByZXNpZGVuY2VJZDogc2VsZWN0ZWRSZXNpZGVuY2VJZCxcbiAgICAgIH0pLFxuICAgIG9uU3VjY2VzczogKCkgPT4ge1xuICAgICAgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoeyBxdWVyeUtleTogWycvYXBpL2NvbnRhY3RzJywgc2VsZWN0ZWRSZXNpZGVuY2VJZF0gfSk7XG4gICAgICBzZXRJc0NvbnRhY3REaWFsb2dPcGVuKGZhbHNlKTtcbiAgICAgIHNldEVkaXRpbmdDb250YWN0KG51bGwpO1xuICAgICAgY29udGFjdEZvcm0ucmVzZXQoKTtcbiAgICAgIHRvYXN0KHtcbiAgICAgICAgdGl0bGU6ICdDb250YWN0IGFkZGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIG5ldyBjb250YWN0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgcmVzaWRlbmNlLicsXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uRXJyb3I6IChlcnJvcjogYW55KSA9PiB7XG4gICAgICB0b2FzdCh7XG4gICAgICAgIHRpdGxlOiAnRmFpbGVkIHRvIGFkZCBjb250YWN0JyxcbiAgICAgICAgZGVzY3JpcHRpb246IGVycm9yLm1lc3NhZ2UgfHwgJ1NvbWV0aGluZyB3ZW50IHdyb25nJyxcbiAgICAgICAgdmFyaWFudDogJ2Rlc3RydWN0aXZlJyxcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xuXG4gIGNvbnN0IHVwZGF0ZUNvbnRhY3RNdXRhdGlvbiA9IHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbkZuOiAoZGF0YTogQ29udGFjdEZvcm1EYXRhKSA9PlxuICAgICAgYXBpUmVxdWVzdCgnUEFUQ0gnLCBgL2FwaS9jb250YWN0cy8ke2VkaXRpbmdDb250YWN0Py5pZH1gLCBkYXRhKSxcbiAgICBvblN1Y2Nlc3M6ICgpID0+IHtcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHsgcXVlcnlLZXk6IFsnL2FwaS9jb250YWN0cycsIHNlbGVjdGVkUmVzaWRlbmNlSWRdIH0pO1xuICAgICAgc2V0SXNDb250YWN0RGlhbG9nT3BlbihmYWxzZSk7XG4gICAgICBzZXRFZGl0aW5nQ29udGFjdChudWxsKTtcbiAgICAgIGNvbnRhY3RGb3JtLnJlc2V0KCk7XG4gICAgICB0b2FzdCh7XG4gICAgICAgIHRpdGxlOiAnQ29udGFjdCB1cGRhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGNvbnRhY3QgaW5mb3JtYXRpb24gaGFzIGJlZW4gdXBkYXRlZC4nLFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkVycm9yOiAoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgdG9hc3Qoe1xuICAgICAgICB0aXRsZTogJ0ZhaWxlZCB0byB1cGRhdGUgY29udGFjdCcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBlcnJvci5tZXNzYWdlIHx8ICdTb21ldGhpbmcgd2VudCB3cm9uZycsXG4gICAgICAgIHZhcmlhbnQ6ICdkZXN0cnVjdGl2ZScsXG4gICAgICB9KTtcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCBkZWxldGVDb250YWN0TXV0YXRpb24gPSB1c2VNdXRhdGlvbih7XG4gICAgbXV0YXRpb25GbjogKGNvbnRhY3RJZDogc3RyaW5nKSA9PiBhcGlSZXF1ZXN0KCdERUxFVEUnLCBgL2FwaS9jb250YWN0cy8ke2NvbnRhY3RJZH1gKSxcbiAgICBvblN1Y2Nlc3M6ICgpID0+IHtcbiAgICAgIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHsgcXVlcnlLZXk6IFsnL2FwaS9jb250YWN0cycsIHNlbGVjdGVkUmVzaWRlbmNlSWRdIH0pO1xuICAgICAgdG9hc3Qoe1xuICAgICAgICB0aXRsZTogJ0NvbnRhY3QgZGVsZXRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSBjb250YWN0IGhhcyBiZWVuIHJlbW92ZWQuJyxcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25FcnJvcjogKGVycm9yOiBhbnkpID0+IHtcbiAgICAgIHRvYXN0KHtcbiAgICAgICAgdGl0bGU6ICdGYWlsZWQgdG8gZGVsZXRlIGNvbnRhY3QnLFxuICAgICAgICBkZXNjcmlwdGlvbjogZXJyb3IubWVzc2FnZSB8fCAnU29tZXRoaW5nIHdlbnQgd3JvbmcnLFxuICAgICAgICB2YXJpYW50OiAnZGVzdHJ1Y3RpdmUnLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG5cbiAgY29uc3QgaGFuZGxlQWRkQ29udGFjdCA9IChkYXRhOiBDb250YWN0Rm9ybURhdGEpID0+IHtcbiAgICBpZiAoZWRpdGluZ0NvbnRhY3QpIHtcbiAgICAgIHVwZGF0ZUNvbnRhY3RNdXRhdGlvbi5tdXRhdGUoZGF0YSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFkZENvbnRhY3RNdXRhdGlvbi5tdXRhdGUoZGF0YSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUVkaXRDb250YWN0ID0gKGNvbnRhY3Q6IENvbnRhY3QpID0+IHtcbiAgICBzZXRFZGl0aW5nQ29udGFjdChjb250YWN0KTtcbiAgICBjb250YWN0Rm9ybS5yZXNldCh7XG4gICAgICBmaXJzdE5hbWU6IGNvbnRhY3QuZmlyc3ROYW1lLFxuICAgICAgbGFzdE5hbWU6IGNvbnRhY3QubGFzdE5hbWUsXG4gICAgICBlbWFpbDogY29udGFjdC5lbWFpbCxcbiAgICAgIHBob25lOiBjb250YWN0LnBob25lIHx8ICcnLFxuICAgICAgdHlwZTogY29udGFjdC50eXBlIGFzIGFueSxcbiAgICB9KTtcbiAgICBzZXRJc0NvbnRhY3REaWFsb2dPcGVuKHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZURlbGV0ZUNvbnRhY3QgPSAoY29udGFjdDogQ29udGFjdCkgPT4ge1xuICAgIGlmIChjb25maXJtKCdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgY29udGFjdD8nKSkge1xuICAgICAgZGVsZXRlQ29udGFjdE11dGF0aW9uLm11dGF0ZShjb250YWN0LmlkKTtcbiAgICB9XG4gIH07XG5cbiAgaWYgKGlzTG9hZGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleC0xIGZsZXggZmxleC1jb2wgb3ZlcmZsb3ctaGlkZGVuJz5cbiAgICAgICAgPEhlYWRlclxuICAgICAgICAgIHRpdGxlPXt0KCdteVJlc2lkZW5jZScpfVxuICAgICAgICAgIHN1YnRpdGxlPXt0KCd2aWV3UmVzaWRlbmNlSW5mbycpfVxuICAgICAgICAvPlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4LTEgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXInPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LWNlbnRlcic+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTggdy04IGJvcmRlci1iLTIgYm9yZGVyLWdyYXktOTAwIG14LWF1dG8gbWItNCc+PC9kaXY+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9J3RleHQtZ3JheS02MDAnPnt0KCdsb2FkaW5nJyl9PC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICBpZiAoZmlsdGVyZWRSZXNpZGVuY2VzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleC0xIGZsZXggZmxleC1jb2wgb3ZlcmZsb3ctaGlkZGVuJz5cbiAgICAgICAgPEhlYWRlclxuICAgICAgICAgIHRpdGxlPXt0KCdteVJlc2lkZW5jZScpfVxuICAgICAgICAgIHN1YnRpdGxlPXt0KCd2aWV3UmVzaWRlbmNlSW5mbycpfVxuICAgICAgICAvPlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4LTEgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcC02Jz5cbiAgICAgICAgICA8Tm9EYXRhQ2FyZFxuICAgICAgICAgICAgaWNvbj17SG9tZX1cbiAgICAgICAgICAgIHRpdGxlS2V5PVwibm9SZXNpZGVuY2VzRm91bmRcIlxuICAgICAgICAgICAgZGVzY3JpcHRpb25LZXk9e3VzZXI/LnJvbGUgJiYgWydhZG1pbicsICdtYW5hZ2VyJ10uaW5jbHVkZXModXNlci5yb2xlKVxuICAgICAgICAgICAgICA/ICdub1Jlc2lkZW5jZXNGb3VuZE9yZydcbiAgICAgICAgICAgICAgOiAnbm90QXNzaWduZWRSZXNpZGVuY2VzJ31cbiAgICAgICAgICAgIHRlc3RJZD1cIm5vLXJlc2lkZW5jZXMtbWVzc2FnZVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleC0xIGZsZXggZmxleC1jb2wgb3ZlcmZsb3ctaGlkZGVuJz5cbiAgICAgIDxIZWFkZXJcbiAgICAgICAgdGl0bGU9e3QoJ215UmVzaWRlbmNlJyl9XG4gICAgICAgIHN1YnRpdGxlPXt0KCdteVJlc2lkZW5jZUluZm8nKX1cbiAgICAgIC8+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4LTEgb3ZlcmZsb3ctYXV0byBwLTYnPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWF4LXctN3hsIG14LWF1dG8gc3BhY2UteS02Jz5cbiAgICAgICAgICB7LyogQnVpbGRpbmcgYW5kIFJlc2lkZW5jZSBGaWx0ZXJzICovfVxuICAgICAgICAgIHsoYnVpbGRpbmdzLmxlbmd0aCA+IDEgfHwgZmlsdGVyZWRSZXNpZGVuY2VzLmxlbmd0aCA+IDEpICYmIChcbiAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgICAgICAgICA8Q2FyZFRpdGxlIGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTInPlxuICAgICAgICAgICAgICAgICAgPEhvbWUgY2xhc3NOYW1lPSd3LTUgaC01JyAvPlxuICAgICAgICAgICAgICAgICAgU2VsZWN0IFJlc2lkZW5jZVxuICAgICAgICAgICAgICAgIDwvQ2FyZFRpdGxlPlxuICAgICAgICAgICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICAgICAgICAgIDxDYXJkQ29udGVudD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBnYXAtNCc+XG4gICAgICAgICAgICAgICAgICB7LyogQnVpbGRpbmcgRmlsdGVyIChpZiB1c2VyIGhhcyBtdWx0aXBsZSBidWlsZGluZ3MpICovfVxuICAgICAgICAgICAgICAgICAge2J1aWxkaW5ncy5sZW5ndGggPiAxICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXgtMSc+XG4gICAgICAgICAgICAgICAgICAgICAgPExhYmVsIGNsYXNzTmFtZT0ndGV4dC1zbSBmb250LW1lZGl1bSBtYi0yIGJsb2NrJz57dCgnYnVpbGRpbmcyJyl9PC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17c2VsZWN0ZWRCdWlsZGluZ0lkfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25WYWx1ZUNoYW5nZT17KHZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkQnVpbGRpbmdJZCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkUmVzaWRlbmNlSWQoJycpOyAvLyBSZXNldCByZXNpZGVuY2Ugc2VsZWN0aW9uIHdoZW4gYnVpbGRpbmcgY2hhbmdlc1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8U2VsZWN0VHJpZ2dlciBjbGFzc05hbWU9J3ctZnVsbCc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxTZWxlY3RWYWx1ZSBwbGFjZWhvbGRlcj17dCgnc2VsZWN0QUJ1aWxkaW5nJyl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L1NlbGVjdFRyaWdnZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8U2VsZWN0Q29udGVudD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCJhbGxcIj57dCgnYWxsQnVpbGRpbmdzJyl9PC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7YnVpbGRpbmdzLm1hcCgoYnVpbGRpbmc6IGFueSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTZWxlY3RJdGVtIGtleT17YnVpbGRpbmcuaWR9IHZhbHVlPXtidWlsZGluZy5pZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7YnVpbGRpbmcubmFtZX0gLSB7YnVpbGRpbmcuYWRkcmVzc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NlbGVjdEl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9TZWxlY3RDb250ZW50PlxuICAgICAgICAgICAgICAgICAgICAgIDwvU2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICAgIHsvKiBSZXNpZGVuY2UgRmlsdGVyICovfVxuICAgICAgICAgICAgICAgICAge2ZpbHRlcmVkUmVzaWRlbmNlcy5sZW5ndGggPiAxICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXgtMSc+XG4gICAgICAgICAgICAgICAgICAgICAgPExhYmVsIGNsYXNzTmFtZT0ndGV4dC1zbSBmb250LW1lZGl1bSBtYi0yIGJsb2NrJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0KCdzZWxlY3RSZXNpZGVuY2UnKX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgIDxTZWxlY3QgdmFsdWU9e3NlbGVjdGVkUmVzaWRlbmNlSWR9IG9uVmFsdWVDaGFuZ2U9e3NldFNlbGVjdGVkUmVzaWRlbmNlSWR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFNlbGVjdFRyaWdnZXIgY2xhc3NOYW1lPSd3LWZ1bGwnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8U2VsZWN0VmFsdWUgcGxhY2Vob2xkZXI9e3QoJ3NlbGVjdEFSZXNpZGVuY2UnKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvU2VsZWN0VHJpZ2dlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTZWxlY3RDb250ZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7ZmlsdGVyZWRSZXNpZGVuY2VzLm1hcCgocmVzaWRlbmNlKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0ga2V5PXtyZXNpZGVuY2UuaWR9IHZhbHVlPXtyZXNpZGVuY2UuaWR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3QoJ3VuaXQnKX0ge3Jlc2lkZW5jZS51bml0TnVtYmVyfSAtIHtyZXNpZGVuY2UuYnVpbGRpbmc/Lm5hbWUgfHwgJ04vQSd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvU2VsZWN0Q29udGVudD5cbiAgICAgICAgICAgICAgICAgICAgICA8L1NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgICAgPC9DYXJkPlxuICAgICAgICAgICl9XG5cbiAgICAgICAgICB7LyogUmVzaWRlbmNlIENhcmRzICovfVxuICAgICAgICAgIHtjdXJyZW50UmVzaWRlbmNlcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGxnOmdyaWQtY29scy0zIGdhcC02Jz5cbiAgICAgICAgICAgICAge2N1cnJlbnRSZXNpZGVuY2VzLm1hcCgocmVzaWRlbmNlKSA9PiAoXG4gICAgICAgICAgICAgICAgPENhcmQga2V5PXtyZXNpZGVuY2UuaWR9IGNsYXNzTmFtZT0naG92ZXI6c2hhZG93LWxnIHRyYW5zaXRpb24tc2hhZG93Jz5cbiAgICAgICAgICAgICAgICAgIDxDYXJkSGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICA8Q2FyZFRpdGxlIGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTInPlxuICAgICAgICAgICAgICAgICAgICAgIDxIb21lIGNsYXNzTmFtZT0ndy01IGgtNScgLz5cbiAgICAgICAgICAgICAgICAgICAgICB7dCgndW5pdCcpfSB7cmVzaWRlbmNlLnVuaXROdW1iZXJ9XG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LWdyYXktNjAwJz5cbiAgICAgICAgICAgICAgICAgICAgICB7cmVzaWRlbmNlLmJ1aWxkaW5nPy5uYW1lIHx8IHQoJ2J1aWxkaW5nSW5mb1VuYXZhaWxhYmxlJyl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgICAgICAgICAgICAgPENhcmRDb250ZW50IGNsYXNzTmFtZT0nc3BhY2UteS00Jz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2dyaWQgZ3JpZC1jb2xzLTEgZ2FwLTMnPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TGFiZWwgY2xhc3NOYW1lPSd0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS01MDAnPnt0KCdhZGRyZXNzJyl9PC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LWdyYXktNzAwJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc2lkZW5jZS5idWlsZGluZz8uYWRkcmVzcyB8fCB0KCdhZGRyZXNzVW5hdmFpbGFibGUnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LWdyYXktNzAwJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc2lkZW5jZS5idWlsZGluZz8uY2l0eSB8fCAnTi9BJ30seycgJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc2lkZW5jZS5idWlsZGluZz8ucHJvdmluY2UgfHwgJ04vQSd9eycgJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc2lkZW5jZS5idWlsZGluZz8ucG9zdGFsQ29kZSB8fCAnJ31cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdncmlkIGdyaWQtY29scy0yIGdhcC0zJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZXNpZGVuY2UuZmxvb3IgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbCBjbGFzc05hbWU9J3RleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTUwMCc+e3QoJ2Zsb29yJyl9PC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J3RleHQtc20gdGV4dC1ncmF5LTcwMCc+e3Jlc2lkZW5jZS5mbG9vcn08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZXNpZGVuY2Uuc3F1YXJlRm9vdGFnZSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExhYmVsIGNsYXNzTmFtZT0ndGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwJz57dCgnc3FGdCcpfTwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSd0ZXh0LXNtIHRleHQtZ3JheS03MDAnPntyZXNpZGVuY2Uuc3F1YXJlRm9vdGFnZX08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZXNpZGVuY2UuYmVkcm9vbXMgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbCBjbGFzc05hbWU9J3RleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTUwMCc+e3QoJ2JlZHJvb21zJyl9PC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTEnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJlZCBjbGFzc05hbWU9J3ctMyBoLTMnIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3RleHQtc20gdGV4dC1ncmF5LTcwMCc+e3Jlc2lkZW5jZS5iZWRyb29tc308L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZXNpZGVuY2UuYmF0aHJvb21zICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGFiZWwgY2xhc3NOYW1lPSd0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS01MDAnPnt0KCdiYXRocm9vbXMnKX08L0xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QmF0aCBjbGFzc05hbWU9J3ctMyBoLTMnIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3RleHQtc20gdGV4dC1ncmF5LTcwMCc+e3Jlc2lkZW5jZS5iYXRocm9vbXN9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICB7cmVzaWRlbmNlLnBhcmtpbmdTcGFjZU51bWJlcnMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc2lkZW5jZS5wYXJraW5nU3BhY2VOdW1iZXJzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbCBjbGFzc05hbWU9J3RleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTUwMCc+e3QoJ3BhcmtpbmcnKX08L0xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2FyIGNsYXNzTmFtZT0ndy0zIGgtMycgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LWdyYXktNzAwJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc2lkZW5jZS5wYXJraW5nU3BhY2VOdW1iZXJzLmpvaW4oJywgJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgIHtyZXNpZGVuY2Uuc3RvcmFnZVNwYWNlTnVtYmVycyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzaWRlbmNlLnN0b3JhZ2VTcGFjZU51bWJlcnMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExhYmVsIGNsYXNzTmFtZT0ndGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwJz57dCgnc3RvcmFnZScpfTwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIGdhcC0xJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxQYWNrYWdlIGNsYXNzTmFtZT0ndy0zIGgtMycgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LWdyYXktNzAwJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc2lkZW5jZS5zdG9yYWdlU3BhY2VOdW1iZXJzLmpvaW4oJywgJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggZmxleC1jb2wgZ2FwLTIgcHQtNCBib3JkZXItdCc+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9yZXNpZGVudHMvcmVzaWRlbmNlcy8ke3Jlc2lkZW5jZS5pZH0vZG9jdW1lbnRzYH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9J291dGxpbmUnIHNpemU9J3NtJyBjbGFzc05hbWU9J3ctZnVsbCBqdXN0aWZ5LXN0YXJ0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEZpbGVUZXh0IGNsYXNzTmFtZT0ndy00IGgtNCBtci0yJyAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7dCgncmVzaWRlbmNlRG9jdW1lbnRzQnV0dG9uJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9yZXNpZGVudHMvYnVpbGRpbmdzLyR7cmVzaWRlbmNlLmJ1aWxkaW5nSWR9L2RvY3VtZW50c2B9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PSdvdXRsaW5lJyBzaXplPSdzbScgY2xhc3NOYW1lPSd3LWZ1bGwganVzdGlmeS1zdGFydCc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxCdWlsZGluZyBjbGFzc05hbWU9J3ctNCBoLTQgbXItMicgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAge3QoJ2J1aWxkaW5nRG9jdW1lbnRzQnV0dG9uJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHsvKiBQYWdpbmF0aW9uICovfVxuICAgICAgICAgIHt0b3RhbFBhZ2VzID4gMSAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwLTIgbXQtOCc+XG4gICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICB2YXJpYW50PSdvdXRsaW5lJ1xuICAgICAgICAgICAgICAgIHNpemU9J3NtJ1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVByZXZpb3VzUGFnZX1cbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17Y3VycmVudFBhZ2UgPT09IDF9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Q2hldnJvbkxlZnQgY2xhc3NOYW1lPSdoLTQgdy00JyAvPlxuICAgICAgICAgICAgICAgIHt0KCdwcmV2aW91cycpfVxuICAgICAgICAgICAgICA8L0J1dHRvbj5cblxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBnYXAtMSc+XG4gICAgICAgICAgICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IE1hdGgubWluKDUsIHRvdGFsUGFnZXMpIH0sIChfLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICBsZXQgcGFnZU51bTtcbiAgICAgICAgICAgICAgICAgIGlmICh0b3RhbFBhZ2VzIDw9IDUpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZU51bSA9IGkgKyAxO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjdXJyZW50UGFnZSA8PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2VOdW0gPSBpICsgMTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY3VycmVudFBhZ2UgPj0gdG90YWxQYWdlcyAtIDIpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZU51bSA9IHRvdGFsUGFnZXMgLSA0ICsgaTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2VOdW0gPSBjdXJyZW50UGFnZSAtIDIgKyBpO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAga2V5PXtwYWdlTnVtfVxuICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9e2N1cnJlbnRQYWdlID09PSBwYWdlTnVtID8gJ2RlZmF1bHQnIDogJ291dGxpbmUnfVxuICAgICAgICAgICAgICAgICAgICAgIHNpemU9J3NtJ1xuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZVBhZ2VDbGljayhwYWdlTnVtKX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIHtwYWdlTnVtfVxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICB2YXJpYW50PSdvdXRsaW5lJ1xuICAgICAgICAgICAgICAgIHNpemU9J3NtJ1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU5leHRQYWdlfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtjdXJyZW50UGFnZSA9PT0gdG90YWxQYWdlc31cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt0KCduZXh0Jyl9XG4gICAgICAgICAgICAgICAgPENoZXZyb25SaWdodCBjbGFzc05hbWU9J2gtNCB3LTQnIC8+XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHsvKiBQYWdlIGluZm8gKi99XG4gICAgICAgICAge2ZpbHRlcmVkUmVzaWRlbmNlcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LWNlbnRlciB0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBtdC00Jz5cbiAgICAgICAgICAgICAge3QoJ3Nob3dpbmcnKX0ge3N0YXJ0SW5kZXggKyAxfSB0byB7TWF0aC5taW4oZW5kSW5kZXgsIGZpbHRlcmVkUmVzaWRlbmNlcy5sZW5ndGgpfSBvZnsnICd9XG4gICAgICAgICAgICAgIHtmaWx0ZXJlZFJlc2lkZW5jZXMubGVuZ3RofSB7dCgncmVzaWRlbmNlcycpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXVEQTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7O0FBNERBQyxPQUFBLENBQUFDLE9BQUEsR0FBQUMsU0FBQTs7OztBQW5IQSxNQUFBQyxPQUFBO0FBQUE7QUFBQSxDQUFBTixjQUFBLEdBQUFFLENBQUEsT0FBQUssT0FBQTtBQUNBLE1BQUFDLGFBQUE7QUFBQTtBQUFBLENBQUFSLGNBQUEsR0FBQUUsQ0FBQSxPQUFBSyxPQUFBO0FBQ0EsTUFBQUUsUUFBQTtBQUFBO0FBQUEsQ0FBQVQsY0FBQSxHQUFBRSxDQUFBLE9BQUFLLE9BQUE7QUFDQSxNQUFBRyxNQUFBO0FBQUE7QUFBQSxDQUFB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