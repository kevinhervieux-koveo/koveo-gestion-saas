{"file":"/home/runner/workspace/client/src/pages/manager/demands.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/manager/demands.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { Plus, Search } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { queryClient } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/hooks/use-language';\nimport DemandDetailsPopup from '@/components/demands/demand-details-popup';\nimport { Header } from '@/components/layout/header';\nimport type { Demand as DemandType } from '@/../../shared/schema';\n\n// Types - extending the base Demand type with populated relations\ninterface Demand extends Omit<DemandType, 'createdAt' | 'updatedAt'> {\n  createdAt: string;\n  updatedAt: string;\n  submitter?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  residence?: {\n    id: string;\n    unitNumber: string;\n    buildingId: string;\n  };\n  building?: {\n    id: string;\n    name: string;\n    address: string;\n  };\n}\n\n/**\n *\n */\ninterface Building {\n  id: string;\n  name: string;\n}\n\n/**\n *\n */\ninterface Residence {\n  id: string;\n  name: string;\n  buildingId: string;\n}\n\n// Form schemas\nconst demandSchema = z.object({\n  type: z.enum(['maintenance', 'complaint', 'information', 'other']),\n  description: z.string().min(10, 'Description must be at least 10 characters'),\n  buildingId: z.string().min(1, 'Building is required'),\n  residenceId: z.string().optional(),\n  assignationBuildingId: z.string().optional(),\n  assignationResidenceId: z.string().optional(),\n});\n\n/**\n *\n */\ntype DemandFormData = z.infer<typeof demandSchema>;\n\nconst statusColors = {\n  draft: 'bg-gray-100 text-gray-800',\n  submitted: 'bg-blue-100 text-blue-800',\n  under_review: 'bg-yellow-100 text-yellow-800',\n  approved: 'bg-green-100 text-green-800',\n  rejected: 'bg-red-100 text-red-800',\n  in_progress: 'bg-purple-100 text-purple-800',\n  completed: 'bg-emerald-100 text-emerald-800',\n  cancelled: 'bg-gray-100 text-gray-800',\n};\n\n// Type labels will use translation function instead of static object\n\n/**\n *\n */\nexport default function ManagerDemandsPage() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n\n  // Function to get translated type labels\n  const getTypeLabel = (type: string) => {\n    switch (type) {\n      case 'maintenance': return t('maintenanceType');\n      case 'complaint': return t('complaintType');\n      case 'information': return t('informationType');\n      case 'other': return t('otherType');\n      default: return type;\n    }\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [selectedDemand, setSelectedDemand] = useState<Demand | null>(null);\n  const [isNewDemandOpen, setIsNewDemandOpen] = useState(false);\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n\n  // Fetch demands\n  const {\n    data: demands = [],\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: ['/api/demands'],\n    refetchInterval: 30000, // Refresh every 30 seconds\n  });\n\n  // Fetch buildings\n  const { data: buildings = [] } = useQuery<Building[]>({\n    queryKey: ['/api/buildings'],\n  });\n\n  // Fetch residences\n  const { data: residences = [] } = useQuery<Residence[]>({\n    queryKey: ['/api/residences'],\n  });\n\n  // Fetch current user\n  const { data: currentUser } = useQuery({\n    queryKey: ['/api/auth/user'],\n  });\n\n  // Provide default user to prevent type errors\n  const defaultUser = currentUser || {\n    id: '',\n    role: 'tenant' as const,\n    email: '',\n    firstName: '',\n    lastName: '',\n    isActive: true,\n    createdAt: '',\n    updatedAt: '',\n  };\n\n  // Create demand mutation\n  const createDemandMutation = useMutation({\n    mutationFn: async (data: DemandFormData) => {\n      const response = await fetch('/api/demands', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create demand');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/demands'] });\n      setIsNewDemandOpen(false);\n      newDemandForm.reset();\n      toast({\n        title: t('success'),\n        description: t('demandCreatedSuccess'),\n      });\n    },\n    onError: (error: any) => {\n      // Error creating demand\n      toast({\n        title: t('error'),\n        description: t('failedCreateDemand'),\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Forms\n  const newDemandForm = useForm<DemandFormData>({\n    resolver: zodResolver(demandSchema),\n    defaultValues: {\n      type: 'maintenance',\n      description: '',\n      buildingId: '',\n      residenceId: '',\n      assignationBuildingId: '',\n      assignationResidenceId: '',\n    },\n  });\n\n  // Filter demands - ensure demands is an array\n  const demandsArray = Array.isArray(demands) ? demands : [];\n  const filteredDemands = demandsArray.filter((demand: Demand) => {\n    const matchesSearch =\n      demand.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      getTypeLabel(demand.type)?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      demand.submitter?.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      demand.submitter?.lastName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      demand.building?.name?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || demand.status === statusFilter;\n    const matchesType = typeFilter === 'all' || demand.type === typeFilter;\n\n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  // Group demands by status for manager view\n  const pendingDemands = filteredDemands.filter((d: Demand) =>\n    ['submitted', 'under_review'].includes(d.status)\n  );\n  const activeDemands = filteredDemands.filter((d: Demand) =>\n    ['approved', 'in_progress'].includes(d.status)\n  );\n  const completedDemands = filteredDemands.filter((d: Demand) =>\n    ['completed', 'rejected', 'cancelled'].includes(d.status)\n  );\n  const allDemands = filteredDemands;\n\n  const handleCreateDemand = (data: DemandFormData) => {\n    createDemandMutation.mutate(data);\n  };\n\n  const handleDemandClick = (demand: Demand) => {\n    setSelectedDemand(demand);\n    setIsDetailsOpen(true);\n  };\n\n  const handleDemandUpdated = () => {\n    queryClient.invalidateQueries({ queryKey: ['/api/demands'] });\n  };\n\n  const DemandCard = ({ demand }: { demand: Demand }) => {\n    const building = buildings.find((b) => b.id === demand.buildingId);\n    const residence = residences.find((r) => r.id === demand.residenceId);\n\n    return (\n      <Card\n        className='cursor-pointer hover:shadow-md transition-shadow'\n        onClick={() => handleDemandClick(demand)}\n      >\n        <CardHeader className='pb-3'>\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center gap-2'>\n              <Badge variant='outline'>{getTypeLabel(demand.type)}</Badge>\n              <Badge className={statusColors[demand.status]}>\n                {demand.status.replace('_', ' ')}\n              </Badge>\n            </div>\n          </div>\n          <CardTitle className='text-base line-clamp-2'>\n            {demand.description.substring(0, 100)}\n            {demand.description.length > 100 && '...'}\n          </CardTitle>\n        </CardHeader>\n        <CardContent className='pt-0'>\n          <div className='text-sm text-muted-foreground space-y-1'>\n            <p>\n              <strong>{t('submittedBy')}:</strong> {demand.submitter?.firstName}{' '}\n              {demand.submitter?.lastName}\n            </p>\n            <p>\n              <strong>{t('building')}:</strong> {building?.name || t('unknown')}\n            </p>\n            {residence && (\n              <p>\n                <strong>{t('residence')}:</strong> {residence.name}\n              </p>\n            )}\n            <p>\n              <strong>{t('created')}:</strong> {new Date(demand.createdAt).toLocaleDateString()}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }; /**\n   * If function.\n   * @param isLoading - IsLoading parameter.\n   */ /**\n   * If function.\n   * @param isLoading - IsLoading parameter.\n   */\n\n  if (isLoading) {\n    return (\n      <div className='flex-1 flex flex-col overflow-hidden'>\n        <Header title={t('demandsManagement')} subtitle={t('demandsSubtitle')} />\n        <div className='flex-1 overflow-auto p-6'>\n          <div className='flex items-center justify-center h-64'>\n            <div className='text-center'>{t('loadingDemands')}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden'>\n      <Header title={t('demandsManagement')} subtitle={t('demandsSubtitle')} />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n          {/* Header Actions */}\n          <div className='flex items-center justify-between'>\n            <div>\n              <h2 className='text-2xl font-bold'>{t('allDemands')}</h2>\n              <p className='text-muted-foreground'>{t('reviewManageDemands')}</p>\n            </div>\n            <Dialog open={isNewDemandOpen} onOpenChange={setIsNewDemandOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Plus className='h-4 w-4 mr-2' />\n                  {t('newDemand')}\n                </Button>\n              </DialogTrigger>\n              <DialogContent className='max-w-md'>\n                <DialogHeader>\n                  <DialogTitle>{t('createNewDemand')}</DialogTitle>\n                  <DialogDescription>{t('createDemandBehalf')}</DialogDescription>\n                </DialogHeader>\n                <Form {...newDemandForm}>\n                  <form\n                    onSubmit={newDemandForm.handleSubmit(handleCreateDemand)}\n                    className='space-y-4'\n                  >\n                    <FormField\n                      control={newDemandForm.control}\n                      name='type'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('type')}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder={t('selectType')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value='maintenance'>{t('maintenanceType')}</SelectItem>\n                              <SelectItem value='complaint'>{t('complaintType')}</SelectItem>\n                              <SelectItem value='information'>{t('informationType')}</SelectItem>\n                              <SelectItem value='other'>{t('otherType')}</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={newDemandForm.control}\n                      name='buildingId'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('building')}</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder={t('selectBuilding')} />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              {buildings.map((building) => (\n                                <SelectItem key={building.id} value={building.id}>\n                                  {building.name}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={newDemandForm.control}\n                      name='description'\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>{t('description')}</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              placeholder={t('describeDemandDetail')}\n                              className='min-h-[100px]'\n                              {...field}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <DialogFooter>\n                      <Button type='submit' disabled={createDemandMutation.isPending}>\n                        {createDemandMutation.isPending ? t('creating') : t('create')}\n                      </Button>\n                    </DialogFooter>\n                  </form>\n                </Form>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Filters */}\n          <div className='flex items-center gap-4'>\n            <div className='relative flex-1 max-w-sm'>\n              <Search className='absolute left-3 top-3 h-4 w-4 text-muted-foreground' />\n              <Input\n                placeholder={t('searchDemands')}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className='pl-10'\n              />\n            </div>\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className='w-40'>\n                <SelectValue placeholder={t('status')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='all'>{t('allStatus')}</SelectItem>\n                <SelectItem value='draft'>{t('draft')}</SelectItem>\n                <SelectItem value='submitted'>{t('submitted')}</SelectItem>\n                <SelectItem value='under_review'>{t('underReview')}</SelectItem>\n                <SelectItem value='approved'>{t('approved')}</SelectItem>\n                <SelectItem value='in_progress'>{t('inProgress')}</SelectItem>\n                <SelectItem value='completed'>{t('completed')}</SelectItem>\n                <SelectItem value='rejected'>{t('rejected')}</SelectItem>\n                <SelectItem value='cancelled'>{t('cancelled')}</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={typeFilter} onValueChange={setTypeFilter}>\n              <SelectTrigger className='w-40'>\n                <SelectValue placeholder={t('type')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value='all'>{t('allTypes')}</SelectItem>\n                <SelectItem value='maintenance'>{t('maintenanceType')}</SelectItem>\n                <SelectItem value='complaint'>{t('complaintType')}</SelectItem>\n                <SelectItem value='information'>{t('informationType')}</SelectItem>\n                <SelectItem value='other'>{t('otherType')}</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Demands List */}\n          <Tabs defaultValue='pending' className='w-full'>\n            <TabsList>\n              <TabsTrigger value='pending'>{t('pendingReview')} ({pendingDemands.length})</TabsTrigger>\n              <TabsTrigger value='active'>{t('activeTab')} ({activeDemands.length})</TabsTrigger>\n              <TabsTrigger value='completed'>{t('completedTab')} ({completedDemands.length})</TabsTrigger>\n              <TabsTrigger value='all'>{t('all')} ({allDemands.length})</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value='pending' className='space-y-4'>\n              {pendingDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noDemandsPending')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {pendingDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value='active' className='space-y-4'>\n              {activeDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noActiveDemands')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {activeDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value='completed' className='space-y-4'>\n              {completedDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noCompletedDemands')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {completedDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value='all' className='space-y-4'>\n              {isLoading ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('loadingDemands')}</p>\n                  </CardContent>\n                </Card>\n              ) : allDemands.length === 0 ? (\n                <Card>\n                  <CardContent className='p-6 text-center'>\n                    <p className='text-muted-foreground'>{t('noDemandsFound')}</p>\n                    {demandsArray.length > 0 && (\n                      <p className='text-sm text-gray-400 mt-2'>\n                        ({demandsArray.length} {t('totalDemandsLoaded')})\n                      </p>\n                    )}\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className='grid gap-4 md:grid-cols-2 lg:grid-cols-3'>\n                  {allDemands.map((demand: Demand) => (\n                    <DemandCard key={demand.id} demand={demand} />\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n          </Tabs>\n\n          {/* Demand Details Popup */}\n          <DemandDetailsPopup\n            demand={selectedDemand as any}\n            isOpen={isDetailsOpen}\n            onClose={() => setIsDetailsOpen(false)}\n            user={currentUser as any}\n            onDemandUpdated={handleDemandUpdated}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"version":3}