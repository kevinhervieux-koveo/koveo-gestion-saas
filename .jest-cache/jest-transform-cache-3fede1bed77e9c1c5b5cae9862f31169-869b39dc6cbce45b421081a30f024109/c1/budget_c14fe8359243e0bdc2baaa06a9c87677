ea7a24d366e384a341947afe88b5a76d
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const header_1 = require("@/components/layout/header");
const use_language_1 = require("@/hooks/use-language");
const card_1 = require("@/components/ui/card");
const badge_1 = require("@/components/ui/badge");
const button_1 = require("@/components/ui/button");
const withHierarchicalSelection_1 = require("@/components/hoc/withHierarchicalSelection");
const wouter_1 = require("wouter");
const lucide_react_1 = require("lucide-react");
function BudgetInner({ organizationId, buildingId }) {
    const { t } = (0, use_language_1.useLanguage)();
    const [, navigate] = (0, wouter_1.useLocation)();
    const handleBackToOrganization = () => {
        navigate('/manager/budget');
    };
    const handleBackToBuilding = () => {
        navigate(`/manager/budget?organization=${organizationId}`);
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: 'flex-1 flex flex-col overflow-hidden', children: [(0, jsx_runtime_1.jsx)(header_1.Header, { title: t('budgetDashboard'), subtitle: t('budgetSubtitle') }), (organizationId || buildingId) && ((0, jsx_runtime_1.jsx)("div", { className: "p-4 border-b border-gray-200", children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "outline", onClick: buildingId ? handleBackToBuilding : handleBackToOrganization, className: "flex items-center gap-2", "data-testid": buildingId ? "button-back-to-building" : "button-back-to-organization", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ArrowLeft, { className: "w-4 h-4" }), buildingId ? t('building') : t('organization')] }) })), (0, jsx_runtime_1.jsx)("div", { className: 'flex-1 overflow-auto p-6', children: (0, jsx_runtime_1.jsxs)("div", { className: 'max-w-7xl mx-auto space-y-6', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'grid grid-cols-1 md:grid-cols-4 gap-6', children: [(0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: t('totalBudget') }), (0, jsx_runtime_1.jsx)(lucide_react_1.DollarSign, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "$125,000" }), (0, jsx_runtime_1.jsxs)("p", { className: 'text-xs text-muted-foreground', children: [(0, jsx_runtime_1.jsx)("span", { className: 'text-green-600', children: "+2.1%" }), " ", t('fromLastYear')] })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: t('usedBudget') }), (0, jsx_runtime_1.jsx)(lucide_react_1.Calculator, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "$87,500" }), (0, jsx_runtime_1.jsxs)("p", { className: 'text-xs text-muted-foreground', children: ["70% ", t('ofTotalBudget')] })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: t('remaining') }), (0, jsx_runtime_1.jsx)(lucide_react_1.TrendingUp, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold', children: "$37,500" }), (0, jsx_runtime_1.jsxs)("p", { className: 'text-xs text-muted-foreground', children: ["30% ", t('percentRemaining')] })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: 'flex flex-row items-center justify-between space-y-0 pb-2', children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: 'text-sm font-medium', children: t('variance') }), (0, jsx_runtime_1.jsx)(lucide_react_1.TrendingDown, { className: 'h-4 w-4 text-muted-foreground' })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-2xl font-bold text-green-600', children: "-$2,500" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-xs text-muted-foreground', children: t('underBudget') })] })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, { children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.PieChart, { className: 'w-5 h-5' }), t('budgetCategories')] }) }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)("div", { className: 'space-y-4', children: [
                                            { category: t('maintenance'), budget: 45000, used: 32000, color: 'bg-blue-500' },
                                            { category: t('utilities'), budget: 30000, used: 28000, color: 'bg-green-500' },
                                            { category: t('insurance'), budget: 25000, used: 15000, color: 'bg-purple-500' },
                                            { category: t('administration'), budget: 15000, used: 8500, color: 'bg-orange-500' },
                                            { category: t('cleaning'), budget: 10000, used: 4000, color: 'bg-red-500' },
                                        ].map((item) => ((0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center justify-between p-4 border rounded-lg', children: [(0, jsx_runtime_1.jsxs)("div", { className: 'flex items-center gap-3', children: [(0, jsx_runtime_1.jsx)("div", { className: `w-4 h-4 rounded-full ${item.color}` }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { className: 'font-semibold', children: item.category }), (0, jsx_runtime_1.jsxs)("p", { className: 'text-sm text-gray-600', children: ["$", item.used.toLocaleString(), " / $", item.budget.toLocaleString()] })] })] }), (0, jsx_runtime_1.jsxs)(badge_1.Badge, { variant: item.used > item.budget ? 'destructive' : 'secondary', children: [Math.round((item.used / item.budget) * 100), "%"] })] }, item.category))) }) })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, { children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: 'flex items-center gap-2', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.BarChart, { className: 'w-5 h-5' }), t('monthlySpendingTrend')] }) }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)("div", { className: 'h-64 flex items-center justify-center text-gray-500', children: (0, jsx_runtime_1.jsxs)("div", { className: 'text-center', children: [(0, jsx_runtime_1.jsx)(lucide_react_1.BarChart, { className: 'w-12 h-12 mx-auto mb-4 text-gray-300' }), (0, jsx_runtime_1.jsx)("p", { children: t('budgetAnalyticsChart') })] }) }) })] })] }) })] }));
}
// Wrap with hierarchical selection HOC using 2-level hierarchy (organization â†’ building)
const Budget = (0, withHierarchicalSelection_1.withHierarchicalSelection)(BudgetInner, {
    hierarchy: ['organization', 'building']
});
exports.default = Budget;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,