{"file":"/home/runner/workspace/server/api/bugs.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/server/api/bugs.ts"],"sourcesContent":["import type { Express } from 'express';\nimport { storage } from '../storage';\nimport { insertBugSchema, type Bug, type InsertBug } from '@shared/schema';\nimport { z } from 'zod';\nimport { requireAuth } from '../auth';\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Configure multer for file uploads\nconst storage_config = multer.diskStorage({\n  destination: (req, file, cb) => {\n    const uploadDir = path.join(process.cwd(), 'uploads', 'general');\n    if (!fs.existsSync(uploadDir)) {\n      fs.mkdirSync(uploadDir, { recursive: true });\n    }\n    cb(null, uploadDir);\n  },\n  filename: (req, file, cb) => {\n    const uniqueId = uuidv4();\n    const originalName = file.originalname.replace(/[^a-zA-Z0-9.-]/g, '_');\n    const fileName = `${uniqueId}-${originalName}`;\n    cb(null, fileName);\n  },\n});\n\nconst upload = multer({ storage: storage_config });\n\n/**\n * Registers all bug-related API endpoints.\n *\n * @param app - Express application instance.\n */\nexport function registerBugRoutes(app: Express): void {\n  /**\n   * GET /api/bugs - Retrieves bugs based on current user's role and access.\n   */\n  app.get('/api/bugs', requireAuth, async (req: any, res) => {\n    try {\n      const currentUser = req.user || req.session?.user;\n      if (!currentUser) {\n        return res.status(401).json({\n          message: 'Authentication required',\n          code: 'AUTH_REQUIRED',\n        });\n      }\n\n      console.log(`📋 Fetching bugs for user ${currentUser.id} with role ${currentUser.role}`);\n\n      const bugs = await storage.getBugsForUser(\n        currentUser.id,\n        currentUser.role,\n        currentUser.organizationId\n      );\n\n      console.log(`✅ Found ${bugs.length} bugs for user ${currentUser.id}`);\n      \n      // Debug: Log file attachment info for each bug\n      bugs.forEach(bug => {\n        if (bug.file_path) {\n          console.log(`🔗 Bug ${bug.id} has file: ${bug.file_name} at ${bug.file_path}`);\n        }\n      });\n      \n      res.json(bugs);\n    } catch (error: any) {\n      console.error('❌ Error fetching bugs:', error);\n      res.status(500).json({\n        error: 'Internal server error',\n        message: 'Failed to fetch bugs',\n      });\n    }\n  });\n\n  /**\n   * GET /api/bugs/:id - Retrieves a specific bug by ID.\n   */\n  app.get('/api/bugs/:id', requireAuth, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const currentUser = req.user || req.session?.user;\n\n      if (!currentUser) {\n        return res.status(401).json({\n          message: 'Authentication required',\n          code: 'AUTH_REQUIRED',\n        });\n      }\n\n      if (!id) {\n        return res.status(400).json({\n          error: 'Bad request',\n          message: 'Bug ID is required',\n        });\n      }\n\n      const bug = await storage.getBug(\n        id,\n        currentUser.id,\n        currentUser.role,\n        currentUser.organizationId\n      );\n\n      if (!bug) {\n        return res.status(404).json({\n          error: 'Not found',\n          message: 'Bug not found or access denied',\n        });\n      }\n\n      res.json(bug);\n    } catch (error: any) {\n      console.error('❌ Error fetching bug:', error);\n      res.status(500).json({\n        error: 'Internal server error',\n        message: 'Failed to fetch bug',\n      });\n    }\n  });\n\n  /**\n   * POST /api/bugs - Creates a new bug report with optional single file attachment.\n   */\n  app.post('/api/bugs', requireAuth, upload.single('attachment'), async (req: any, res) => {\n    try {\n      const currentUser = req.user || req.session?.user;\n      if (!currentUser) {\n        return res.status(401).json({\n          message: 'Authentication required',\n          code: 'AUTH_REQUIRED',\n        });\n      }\n\n      // Validate the request body\n      const validation = insertBugSchema.safeParse({\n        ...req.body,\n        createdBy: currentUser.id,\n      });\n\n      if (!validation.success) {\n        return res.status(400).json({\n          error: 'Validation failed',\n          message: 'Invalid bug data',\n          details: validation.error.issues,\n        });\n      }\n\n      let bugData = validation.data;\n\n      // Handle single file attachment if present\n      if (req.file) {\n        // Fix filename encoding issues\n        const originalname = Buffer.from(req.file.originalname, 'latin1').toString('utf8');\n        console.log(`📎 Processing attachment for new bug:`, {\n          originalname: originalname,\n          filename: req.file.filename,\n          size: req.file.size,\n          mimetype: req.file.mimetype\n        });\n        bugData = {\n          ...bugData,\n          filePath: `general/${req.file.filename}`,\n          fileName: originalname,\n          fileSize: req.file.size,\n        };\n      }\n\n      // Handle text content if present - save as .txt file\n      if (req.body.file_content && !req.file) {\n        try {\n          const textFilePath = path.join(process.cwd(), 'uploads', 'bugs');\n          if (!fs.existsSync(textFilePath)) {\n            fs.mkdirSync(textFilePath, { recursive: true });\n          }\n          \n          const fileName = `${uuidv4()}-text-document.txt`;\n          const fullPath = path.join(textFilePath, fileName);\n          fs.writeFileSync(fullPath, req.body.file_content, 'utf8');\n          \n          // Set file fields for text content\n          bugData = {\n            ...bugData,\n            filePath: `bugs/${fileName}`,\n            fileName: `${bugData.title}-text-content.txt`,\n            fileSize: Buffer.byteLength(req.body.file_content, 'utf8'),\n          };\n        } catch (fsError) {\n          console.error('Error saving bug text content:', fsError);\n          return res.status(500).json({ \n            error: 'Internal server error',\n            message: 'Failed to save text content as file' \n          });\n        }\n      }\n\n      // Log the final bugData before saving\n      console.log(`🐛 Creating bug with data:`, {\n        title: bugData.title,\n        hasFile: !!bugData.filePath,\n        filePath: bugData.filePath,\n        fileName: bugData.fileName,\n        fileSize: bugData.fileSize\n      });\n\n      const bug = await storage.createBug(bugData);\n\n      console.log(`✅ Created new bug ${bug.id} by user ${currentUser.id}`);\n      res.status(201).json(bug);\n    } catch (error: any) {\n      console.error('❌ Error creating bug:', error);\n      res.status(500).json({\n        error: 'Internal server error',\n        message: 'Failed to create bug',\n      });\n    }\n  });\n\n  /**\n   * PATCH /api/bugs/:id - Updates an existing bug.\n   * Users can edit their own bugs, admins and managers can edit any bug.\n   */\n  app.patch('/api/bugs/:id', requireAuth, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const currentUser = req.user || req.session?.user;\n\n      if (!currentUser) {\n        return res.status(401).json({\n          message: 'Authentication required',\n          code: 'AUTH_REQUIRED',\n        });\n      }\n\n      if (!id) {\n        return res.status(400).json({\n          error: 'Bad request',\n          message: 'Bug ID is required',\n        });\n      }\n\n      // Validate the request body\n      const updateSchema = z.object({\n        title: z\n          .string()\n          .min(1, 'Title is required')\n          .max(200, 'Title must not exceed 200 characters')\n          .optional(),\n        description: z\n          .string()\n          .min(10, 'Description must be at least 10 characters')\n          .max(2000, 'Description must not exceed 2000 characters')\n          .optional(),\n        category: z\n          .enum([\n            'ui_ux',\n            'functionality',\n            'performance',\n            'data',\n            'security',\n            'integration',\n            'other',\n          ])\n          .optional(),\n        page: z.string().min(1, 'Page is required').optional(),\n        priority: z.enum(['low', 'medium', 'high', 'critical']).optional(),\n        reproductionSteps: z.string().optional(),\n        environment: z.string().optional(),\n        status: z.enum(['new', 'acknowledged', 'in_progress', 'resolved', 'closed']).optional(),\n        assignedTo: z.string().uuid().nullable().optional(),\n        notes: z.string().optional(),\n        resolvedBy: z.string().uuid().nullable().optional(),\n        resolvedAt: z.date().nullable().optional(),\n      });\n\n      const validation = updateSchema.safeParse(req.body);\n      if (!validation.success) {\n        return res.status(400).json({\n          error: 'Validation failed',\n          message: 'Invalid update data',\n          details: validation.error.issues,\n        });\n      }\n\n      const updates = validation.data;\n      const bug = await storage.updateBug(id, updates, currentUser.id, currentUser.role);\n\n      if (!bug) {\n        return res.status(404).json({\n          error: 'Not found',\n          message: 'Bug not found or access denied',\n        });\n      }\n\n      console.log(`📝 Updated bug ${id} by user ${currentUser.id}`);\n      res.json(bug);\n    } catch (error: any) {\n      console.error('❌ Error updating bug:', error);\n      res.status(500).json({\n        error: 'Internal server error',\n        message: 'Failed to update bug',\n      });\n    }\n  });\n\n  /**\n   * GET /api/bugs/:id/file - Serves the file attachment for a bug.\n   */\n  app.get('/api/bugs/:id/file', requireAuth, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const { download } = req.query;\n      const currentUser = req.user || req.session?.user;\n\n      if (!currentUser) {\n        return res.status(401).json({\n          message: 'Authentication required',\n          code: 'AUTH_REQUIRED',\n        });\n      }\n\n      // Get the bug with file info\n      const bug = await storage.getBug(\n        id,\n        currentUser.id,\n        currentUser.role,\n        currentUser.organizationId\n      );\n\n      console.log('🐛 getBug result:', bug ? { id: bug.id, filePath: bug.filePath, fileName: bug.fileName } : 'undefined');\n\n      if (!bug) {\n        return res.status(404).json({\n          error: 'Not found',\n          message: 'Bug not found',\n        });\n      }\n\n      // Check both camelCase and snake_case field names for compatibility\n      const filePath = bug.filePath || (bug as any).file_path;\n      const fileName = bug.fileName || (bug as any).file_name;\n      \n      if (!filePath) {\n        return res.status(404).json({\n          error: 'Not found',\n          message: 'No file attached to this bug',\n        });\n      }\n\n      // Handle different path formats (absolute vs relative)\n      const fullPath = path.isAbsolute(filePath) \n        ? filePath \n        : path.join(process.cwd(), 'uploads', filePath);\n      \n      // Check if file exists\n      if (!fs.existsSync(fullPath)) {\n        return res.status(404).json({\n          error: 'Not found',\n          message: 'File not found on server',\n        });\n      }\n      \n      // Detect MIME type based on file extension\n      const getContentType = (filename: string) => {\n        const ext = filename.toLowerCase().split('.').pop();\n        switch (ext) {\n          case 'pdf': return 'application/pdf';\n          case 'jpg': case 'jpeg': return 'image/jpeg';\n          case 'png': return 'image/png';\n          case 'gif': return 'image/gif';\n          case 'doc': return 'application/msword';\n          case 'docx': return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n          case 'txt': return 'text/plain';\n          default: return 'application/octet-stream';\n        }\n      };\n\n      // Set proper content type for viewing\n      const contentType = getContentType(fileName || 'attachment');\n      res.setHeader('Content-Type', contentType);\n      \n      // Properly encode filename for French characters and other special characters\n      const encodedFilename = Buffer.from(fileName || 'attachment', 'utf8').toString('binary');\n\n      // Set appropriate headers\n      if (download === 'true') {\n        res.setHeader('Content-Disposition', `attachment; filename=\"${encodedFilename}\"; filename*=UTF-8''${encodeURIComponent(fileName || 'attachment')}`);\n      } else {\n        res.setHeader('Content-Disposition', `inline; filename=\"${encodedFilename}\"; filename*=UTF-8''${encodeURIComponent(fileName || 'attachment')}`);\n      }\n\n      // Stream the file\n      const fileStream = fs.createReadStream(fullPath);\n      fileStream.pipe(res);\n      \n      fileStream.on('error', (error) => {\n        console.error(`❌ Error streaming file for bug ${id}:`, error);\n        if (!res.headersSent) {\n          res.status(500).json({ error: 'Failed to stream file' });\n        }\n      });\n    } catch (error: any) {\n      console.error('❌ Error serving bug file:', error);\n      res.status(500).json({\n        error: 'Internal server error',\n        message: 'Failed to serve file',\n      });\n    }\n  });\n\n  /**\n   * DELETE /api/bugs/:id - Deletes a bug.\n   * Only admins can delete bugs.\n   */\n  app.delete('/api/bugs/:id', requireAuth, async (req: any, res) => {\n    try {\n      const { id } = req.params;\n      const currentUser = req.user || req.session?.user;\n\n      if (!currentUser) {\n        return res.status(401).json({\n          message: 'Authentication required',\n          code: 'AUTH_REQUIRED',\n        });\n      }\n\n      if (!id) {\n        return res.status(400).json({\n          error: 'Bad request',\n          message: 'Bug ID is required',\n        });\n      }\n\n      const deleted = await storage.deleteBug(id, currentUser.id, currentUser.role);\n\n      if (!deleted) {\n        return res.status(404).json({\n          error: 'Not found',\n          message: 'Bug not found or access denied',\n        });\n      }\n\n      console.log(`🗑️ Deleted bug ${id} by user ${currentUser.id}`);\n      res.status(204).send();\n    } catch (error: any) {\n      console.error('❌ Error deleting bug:', error);\n      res.status(500).json({\n        error: 'Internal server error',\n        message: 'Failed to delete bug',\n      });\n    }\n  });\n}\n"],"version":3}