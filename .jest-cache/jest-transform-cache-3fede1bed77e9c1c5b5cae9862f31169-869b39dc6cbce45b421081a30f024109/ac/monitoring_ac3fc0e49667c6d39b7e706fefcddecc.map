{"file":"/home/runner/workspace/shared/schemas/monitoring.ts","mappings":"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","names":[],"sources":["/home/runner/workspace/shared/schemas/monitoring.ts"],"sourcesContent":["import { sql } from 'drizzle-orm';\nimport {\n  pgTable,\n  text,\n  varchar,\n  timestamp,\n  jsonb,\n  uuid,\n  pgEnum,\n  boolean,\n  integer,\n  decimal,\n  date,\n} from 'drizzle-orm/pg-core';\nimport { createInsertSchema } from 'drizzle-zod';\nimport { z } from 'zod';\nimport { relations } from 'drizzle-orm';\nimport { users } from './core';\n\n// Monitoring enums\nexport const validationStatusEnum = pgEnum('validation_status', [\n  'pending',\n  'true_positive', // Metric correctly predicted an issue\n  'false_positive', // Metric predicted issue but none found\n  'true_negative', // Metric correctly predicted no issue\n  'false_negative', // Metric missed a real issue\n]);\n\nexport const issueSeverityEnum = pgEnum('issue_severity', [\n  'info', // Minor suggestions\n  'low', // Non-critical improvements\n  'medium', // Important but not urgent\n  'high', // Significant issues affecting operations\n  'critical', // Severe issues affecting compliance or safety\n  'quebec_compliance', // Issues affecting Quebec Law 25 or provincial regulations\n]);\n\nexport const metricTypeEnum = pgEnum('metric_type', [\n  'code_coverage',\n  'code_quality',\n  'security_vulnerabilities',\n  'build_time',\n  'translation_coverage',\n  'api_response_time',\n  'memory_usage',\n  'bundle_size',\n  'database_query_time',\n  'page_load_time',\n  'accessibility_score',\n  'seo_score',\n  'quebec_compliance_score',\n]);\n\n// Monitoring tables\n/**\n * Tracks effectiveness of quality metrics in predicting real issues.\n * Used for continuous improvement of the quality assessment system.\n */\nexport const metricEffectivenessTracking = pgTable('metric_effectiveness_tracking', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  metricType: metricTypeEnum('metric_type').notNull(),\n  calculatedValue: decimal('calculated_value', { precision: 10, scale: 4 }).notNull(),\n  actualOutcome: text('actual_outcome').notNull(),\n  accuracy: decimal('accuracy', { precision: 5, scale: 4 }).notNull(),\n  precision: decimal('precision', { precision: 5, scale: 4 }).notNull(),\n  recall: decimal('recall', { precision: 5, scale: 4 }).notNull(),\n  f1Score: decimal('f1_score', { precision: 5, scale: 4 }).notNull(),\n  calibrationScore: decimal('calibration_score', { precision: 5, scale: 4 }),\n  predictionConfidence: decimal('prediction_confidence', { precision: 5, scale: 4 }),\n  validationDate: date('validation_date').notNull(),\n  quebecComplianceImpact: boolean('quebec_compliance_impact').notNull().default(false),\n  propertyManagementContext: text('property_management_context'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Stores predictions made by quality metrics before validation.\n * Links predictions to actual outcomes for effectiveness tracking.\n */\nexport const metricPredictions = pgTable('metric_predictions', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  metricType: metricTypeEnum('metric_type').notNull(),\n  predictedValue: decimal('predicted_value', { precision: 10, scale: 4 }).notNull(),\n  confidenceLevel: decimal('confidence_level', { precision: 5, scale: 4 }).notNull(),\n  thresholdUsed: decimal('threshold_used', { precision: 10, scale: 4 }).notNull(),\n  contextData: jsonb('context_data'),\n  predictionReason: text('prediction_reason'),\n  expectedSeverity: issueSeverityEnum('expected_severity').notNull(),\n  quebecComplianceRelevant: boolean('quebec_compliance_relevant').notNull().default(false),\n  propertyManagementCategory: text('property_management_category'),\n  filePath: text('file_path'),\n  lineNumber: integer('line_number'),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\n/**\n * Validates metric predictions against real outcomes.\n * Essential for measuring and improving metric effectiveness.\n */\nexport const predictionValidations = pgTable('prediction_validations', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  predictionId: uuid('prediction_id')\n    .notNull()\n    .references(() => metricPredictions.id),\n  validationStatus: validationStatusEnum('validation_status').notNull(),\n  actualOutcome: text('actual_outcome').notNull(),\n  validationMethod: text('validation_method').notNull(),\n  validatorId: varchar('validator_id').references(() => users.id),\n  timeTaken: integer('time_taken'), // Hours to validate\n  impactLevel: issueSeverityEnum('impact_level'),\n  resolutionActions: text('resolution_actions'),\n  quebecComplianceNotes: text('quebec_compliance_notes'),\n  costImpact: decimal('cost_impact', { precision: 10, scale: 2 }),\n  validatedAt: timestamp('validated_at').notNull(),\n  createdAt: timestamp('created_at').defaultNow(),\n});\n\n/**\n * Stores calibration data for improving metric accuracy.\n * Used for machine learning model optimization and threshold tuning.\n */\nexport const metricCalibrationData = pgTable('metric_calibration_data', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  metricType: metricTypeEnum('metric_type').notNull(),\n  calibrationModel: text('calibration_model').notNull(),\n  trainingDataSize: integer('training_data_size').notNull(),\n  accuracy: decimal('accuracy', { precision: 5, scale: 4 }).notNull(),\n  precision: decimal('precision', { precision: 5, scale: 4 }).notNull(),\n  recall: decimal('recall', { precision: 5, scale: 4 }).notNull(),\n  f1Score: decimal('f1_score', { precision: 5, scale: 4 }).notNull(),\n  crossValidationScore: decimal('cross_validation_score', { precision: 5, scale: 4 }),\n  featureImportance: jsonb('feature_importance'),\n  hyperparameters: jsonb('hyperparameters'),\n  quebecSpecificFactors: jsonb('quebec_specific_factors'),\n  lastTrainingDate: date('last_training_date').notNull(),\n  modelVersion: text('model_version').notNull(),\n  isActive: boolean('is_active').notNull().default(true),\n  performanceMetrics: jsonb('performance_metrics'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n/**\n * Tracks quality issues found in the codebase and their resolution.\n * Links back to metric predictions for effectiveness validation.\n */\nexport const qualityIssues = pgTable('quality_issues', {\n  id: uuid('id')\n    .primaryKey()\n    .default(sql`gen_random_uuid()`),\n  title: text('title').notNull(),\n  description: text('description').notNull(),\n  category: text('category').notNull(),\n  severity: issueSeverityEnum('severity').notNull(),\n  filePath: text('file_path').notNull(),\n  lineNumber: integer('line_number'),\n  detectionMethod: text('detection_method').notNull(),\n  detectedBy: varchar('detected_by').references(() => users.id),\n  relatedMetricType: metricTypeEnum('related_metric_type'),\n  wasPredicted: boolean('was_predicted').notNull().default(false),\n  predictionId: uuid('prediction_id').references(() => metricPredictions.id),\n  resolutionStatus: text('resolution_status').notNull().default('open'),\n  resolutionTime: integer('resolution_time'), // Hours to resolve\n  resolutionActions: text('resolution_actions'),\n  quebecComplianceRelated: boolean('quebec_compliance_related').notNull().default(false),\n  propertyManagementImpact: text('property_management_impact'),\n  costToFix: decimal('cost_to_fix', { precision: 10, scale: 2 }),\n  actualCost: decimal('actual_cost', { precision: 10, scale: 2 }),\n  discoveredAt: timestamp('discovered_at').notNull(),\n  resolvedAt: timestamp('resolved_at'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\n// Insert schemas\nexport const insertMetricEffectivenessTrackingSchema = z.object({\n  metricType: z.enum([\n    'code_coverage',\n    'code_quality',\n    'security_vulnerabilities',\n    'build_time',\n    'translation_coverage',\n    'api_response_time',\n    'deployment_success_rate',\n    'user_satisfaction',\n    'performance_score',\n    'test_reliability',\n    'quebec_compliance_score',\n    'maintenance_productivity',\n  ]),\n  calculatedValue: z.number(),\n  actualOutcome: z.number(),\n  accuracy: z.number(),\n  precision: z.number(),\n  recall: z.number(),\n  f1Score: z.number(),\n  calibrationScore: z.number(),\n  predictionConfidence: z.number(),\n  validationDate: z.date(),\n  quebecComplianceImpact: z.string().optional(),\n  propertyManagementContext: z.string().optional(),\n});\n\nexport const insertMetricPredictionSchema = z.object({\n  metricType: z.enum([\n    'code_coverage',\n    'code_quality',\n    'security_vulnerabilities',\n    'build_time',\n    'translation_coverage',\n    'api_response_time',\n    'deployment_success_rate',\n    'user_satisfaction',\n    'performance_score',\n    'test_reliability',\n    'quebec_compliance_score',\n    'maintenance_productivity',\n  ]),\n  predictedValue: z.number(),\n  confidenceLevel: z.number(),\n  thresholdUsed: z.number(),\n  contextData: z.record(z.string(), z.any()).optional(),\n  predictionReason: z.string(),\n  expectedSeverity: z.string(),\n  quebecComplianceRelevant: z.boolean().default(false),\n  propertyManagementCategory: z.string().optional(),\n  filePath: z.string(),\n  lineNumber: z.number().int().optional(),\n});\n\nexport const insertPredictionValidationSchema = z.object({\n  predictionId: z.string().uuid(),\n  validationStatus: z.enum(['validated', 'failed', 'partially_validated', 'needs_review']),\n  actualOutcome: z.number(),\n  validationMethod: z.string(),\n  validatorId: z.string().uuid().optional(),\n  timeTaken: z.number().optional(),\n  impactLevel: z.string().optional(),\n  resolutionActions: z.string().optional(),\n  quebecComplianceNotes: z.string().optional(),\n  costImpact: z.number().optional(),\n  validatedAt: z.date(),\n});\n\nexport const insertMetricCalibrationDataSchema = z.object({\n  metricType: z.string(),\n  calibrationModel: z.string(),\n  trainingDataSize: z.number().int(),\n  accuracy: z.number(),\n  precision: z.number(),\n  recall: z.number(),\n  f1Score: z.number(),\n  crossValidationScore: z.number(),\n  featureImportance: z.record(z.string(), z.number()).optional(),\n  hyperparameters: z.record(z.string(), z.any()).optional(),\n  quebecSpecificFactors: z.record(z.string(), z.any()).optional(),\n  lastTrainingDate: z.date(),\n  modelVersion: z.string(),\n  isActive: z.boolean().default(true),\n  performanceMetrics: z.record(z.string(), z.number()).optional(),\n});\n\nexport const insertQualityIssueSchema = z.object({\n  title: z.string(),\n  description: z.string(),\n  category: z.string(),\n  severity: z.string(),\n  filePath: z.string(),\n  lineNumber: z.number().int().optional(),\n  detectionMethod: z.string(),\n  detectedBy: z.string().uuid().optional(),\n  relatedMetricType: z.string().optional(),\n  wasPredicted: z.boolean().default(false),\n  predictionId: z.string().uuid().optional(),\n  resolutionStatus: z.string().default('open'),\n  resolutionTime: z.number().int().optional(),\n  resolutionActions: z.string().optional(),\n  quebecComplianceRelated: z.boolean().default(false),\n  propertyManagementImpact: z.string().optional(),\n  costToFix: z.number().optional(),\n  actualCost: z.number().optional(),\n  discoveredAt: z.date(),\n  resolvedAt: z.date().optional(),\n});\n\n// Types\n/**\n *\n */\nexport type InsertMetricEffectivenessTracking = z.infer<\n  typeof insertMetricEffectivenessTrackingSchema\n>;\n/**\n *\n */\nexport type MetricEffectivenessTracking = typeof metricEffectivenessTracking.$inferSelect;\n\n/**\n *\n */\nexport type InsertMetricPrediction = z.infer<typeof insertMetricPredictionSchema>;\n/**\n *\n */\nexport type MetricPrediction = typeof metricPredictions.$inferSelect;\n\n/**\n *\n */\nexport type InsertPredictionValidation = z.infer<typeof insertPredictionValidationSchema>;\n/**\n *\n */\nexport type PredictionValidation = typeof predictionValidations.$inferSelect;\n\n/**\n *\n */\nexport type InsertMetricCalibrationData = z.infer<typeof insertMetricCalibrationDataSchema>;\n/**\n *\n */\nexport type MetricCalibrationData = typeof metricCalibrationData.$inferSelect;\n\n/**\n *\n */\nexport type InsertQualityIssue = z.infer<typeof insertQualityIssueSchema>;\n/**\n *\n */\nexport type QualityIssue = typeof qualityIssues.$inferSelect;\n\n// Relations\n// Relations - temporarily commented out due to drizzle-orm version compatibility\n// export const metricPredictionsRelations = relations(metricPredictions, ({ many }) => ({\n//   validations: many(predictionValidations),\n//   qualityIssues: many(qualityIssues),\n// }));\n\n// export const predictionValidationsRelations = relations(predictionValidations, ({ one }) => ({\n//   prediction: one(metricPredictions, {\n//     fields: [predictionValidations.predictionId],\n//     references: [metricPredictions.id],\n//   }),\n//   validator: one(users, {\n//     fields: [predictionValidations.validatorId],\n//     references: [users.id],\n//   }),\n// }));\n\n// export const qualityIssuesRelations = relations(qualityIssues, ({ one }) => ({\n//   detectedBy: one(users, {\n//     fields: [qualityIssues.detectedBy],\n//     references: [users.id],\n//   }),\n//   prediction: one(metricPredictions, {\n//     fields: [qualityIssues.predictionId],\n//     references: [metricPredictions.id],\n//   }),\n// }));\n"],"version":3}