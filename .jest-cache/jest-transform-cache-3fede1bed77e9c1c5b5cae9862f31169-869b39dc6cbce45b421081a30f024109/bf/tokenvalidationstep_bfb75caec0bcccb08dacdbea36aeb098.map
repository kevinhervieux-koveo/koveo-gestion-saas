{"file":"/home/runner/workspace/client/src/components/auth/steps/token-validation-step.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/auth/steps/token-validation-step.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle, Clock, XCircle, AlertTriangle, Shield, Mail } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { WizardStepProps } from '../registration-wizard';\n\n/**\n * Interface for token validation step data.\n * Contains invitation token details and validation status.\n */\ninterface TokenValidationData {\n  token: string;\n  email: string;\n  role: string;\n  organizationName: string;\n  inviterName: string;\n  expiresAt: string;\n  isValid: boolean;\n  error?: string;\n}\n\n/**\n * Token Validation Step Component.\n *\n * Validates invitation token and displays invitation details.\n * Handles expired, invalid, and malformed tokens with appropriate feedback.\n * @param root0 - The wizard step props.\n * @param root0.data - Current step data.\n * @param root0.onDataChange - Callback when step data changes.\n * @param root0.onValidationChange - Callback when validation status changes.\n * @returns JSX element for the token validation step.\n */\n/**\n * TokenValidationStep function.\n * @param root0\n * @param root0.data\n * @param root0.onDataChange\n * @param root0.onValidationChange\n * @param root0._data\n * @returns Function result.\n */\nexport function TokenValidationStep({ _data, onDataChange, onValidationChange }: WizardStepProps) {\n  const { t: _t } = useLanguage();\n  const [isValidating, setIsValidating] = useState(false);\n  const [validationResult, setValidationResult] = useState<TokenValidationData | null>(\n    (_data as unknown as TokenValidationData) || null\n  );\n  const [validatedToken, setValidatedToken] = useState<string | null>(() => {\n    // Initialize from sessionStorage to persist across component re-renders\n    if (typeof window !== 'undefined') {\n      return sessionStorage.getItem('koveo-validated-token');\n    }\n    return null;\n  }); // Track which token was validated\n\n  const hasValidatedRef = useRef<Set<string>>(new Set()); // Prevent duplicate validations completely\n\n  const validateToken = async (token: string) => {\n\n    // Triple-check: state, sessionStorage, and ref guard\n    const sessionValidatedToken = sessionStorage.getItem('koveo-validated-token');\n\n    // Skip if already validating this token OR if already validated\n    if (\n      validatedToken === token ||\n      sessionValidatedToken === token ||\n      hasValidatedRef.current.has(token) ||\n      isValidating\n    ) {\n      // Token validation skipped\n      return;\n    }\n\n    // Mark this token as being validated in state, sessionStorage, AND ref\n    setValidatedToken(token);\n    sessionStorage.setItem('koveo-validated-token', token);\n    hasValidatedRef.current.add(token);\n    setIsValidating(true);\n\n    try {\n      const response = await fetch('/api/invitations/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok && result.isValid) {\n        const validationData: TokenValidationData = {\n          token,\n          email: result.invitation.email,\n          role: result.invitation.role,\n          organizationName: result.organizationName || 'Koveo Gestion',\n          inviterName: result.inviterName || 'Administrateur',\n          expiresAt: result.invitation.expiresAt,\n          isValid: true,\n        };\n\n\n        // Store successful validation in sessionStorage\n        sessionStorage.setItem('koveo-validation-result', JSON.stringify(validationData));\n\n        setValidationResult(validationData);\n        onDataChange(validationData as unknown as Record<string, unknown>);\n        onValidationChange(true);\n      } else {\n        const errorData: TokenValidationData = {\n          token,\n          email: '',\n          role: '',\n          organizationName: '',\n          inviterName: '',\n          expiresAt: '',\n          isValid: false,\n          error: result.message || 'Token invalide',\n        };\n\n        setValidationResult(errorData);\n        onDataChange(errorData as unknown as Record<string, unknown>);\n        onValidationChange(false);\n      }\n    } catch (error: any) {\n      // Error validating token\n      const errorData: TokenValidationData = {\n        token,\n        email: '',\n        role: '',\n        organizationName: '',\n        inviterName: '',\n        expiresAt: '',\n        isValid: false,\n        error: 'Erreur de connexion au serveur',\n      };\n\n      setValidationResult(errorData);\n      onDataChange(errorData as unknown as Record<string, unknown>);\n      onValidationChange(false);\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  // Track if initial effect has run to prevent multiple executions\n  const initialEffectRan = useRef(false);\n\n  useEffect(() => {\n    // Prevent running multiple times\n    if (initialEffectRan.current) return;\n    initialEffectRan.current = true;\n\n    // Auto-validate if token is provided via URL params\n    const urlParams = new window.URLSearchParams(window.location.search);\n    const token = urlParams.get('token') || urlParams.get('invitation');\n    // Token auto-validation check\n\n    if (token && validatedToken !== token && !hasValidatedRef.current.has(token) && !isValidating) {\n      validateToken(token);\n    }\n  }, []); // Only run once on component mount\n\n  const getTimeRemaining = (expiresAt: string) => {\n    const now = new Date();\n    const expires = new Date(expiresAt);\n    const diff = expires.getTime() - now.getTime();\n\n    if (diff <= 0) {\n      return 'Expiré';\n    }\n\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n    if (days > 0) {\n      return `${days} jour${days > 1 ? 's' : ''} restant${days > 1 ? 's' : ''}`;\n    } else if (hours > 0) {\n      return `${hours} heure${hours > 1 ? 's' : ''} restante${hours > 1 ? 's' : ''}`;\n    } else {\n      return 'Expire bientôt';\n    }\n  };\n\n  const getRoleBadgeColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'bg-red-100 text-red-800';\n      case 'manager':\n        return 'bg-blue-100 text-blue-800';\n      case 'tenant':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (isValidating) {\n    return (\n      <div className='flex flex-col items-center justify-center py-12'>\n        <div className='animate-spin rounded-full h-12 w-12 border-b-2 border-primary mb-4' />\n        <h3 className='text-lg font-medium text-gray-900 mb-2'>Validation de l'invitation</h3>\n        <p className='text-gray-600 text-center max-w-md'>\n          Vérification du token d'invitation et des détails associés...\n        </p>\n      </div>\n    );\n  }\n\n  if (!validationResult) {\n    return (\n      <div className='flex flex-col items-center justify-center py-12'>\n        <AlertTriangle className='h-12 w-12 text-yellow-500 mb-4' />\n        <h3 className='text-lg font-medium text-gray-900 mb-2'>Token d'invitation requis</h3>\n        <p className='text-gray-600 text-center max-w-md'>\n          Aucun token d'invitation valide n'a été trouvé. Veuillez utiliser le lien d'invitation\n          reçu par email.\n        </p>\n      </div>\n    );\n  }\n\n  if (!validationResult.isValid) {\n    return (\n      <div className='space-y-4'>\n        <Alert variant='destructive'>\n          <XCircle className='h-4 w-4' />\n          <AlertDescription>\n            <strong>Invitation invalide:</strong> {validationResult.error}\n          </AlertDescription>\n        </Alert>\n\n        <Card className='border-red-200 bg-red-50'>\n          <CardContent className='pt-6'>\n            <div className='text-center'>\n              <XCircle className='h-12 w-12 text-red-500 mx-auto mb-4' />\n              <h3 className='text-lg font-medium text-red-900 mb-2'>\n                Impossible de valider l'invitation\n              </h3>\n              <p className='text-red-700 mb-4'>\n                Le lien d'invitation peut être expiré, invalide ou déjà utilisé.\n              </p>\n              <div className='text-sm text-red-600 space-y-1'>\n                <p>• Vérifiez que vous utilisez le lien complet reçu par email</p>\n                <p>• Assurez-vous que l'invitation n'est pas expirée</p>\n                <p>• Contactez l'administrateur si le problème persiste</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className='space-y-6'>\n      <Alert className='border-green-200 bg-green-50'>\n        <CheckCircle className='h-4 w-4 text-green-600' />\n        <AlertDescription className='text-green-800'>\n          <strong>Invitation valide!</strong> Vous pouvez procéder à la création de votre compte.\n        </AlertDescription>\n      </Alert>\n\n      <Card className='border-green-200 bg-green-50'>\n        <CardContent className='pt-6'>\n          <div className='text-center mb-6'>\n            <CheckCircle className='h-12 w-12 text-green-500 mx-auto mb-4' />\n            <h3 className='text-lg font-medium text-green-900 mb-2'>Invitation confirmée</h3>\n            <p className='text-green-700'>\n              Vous avez été invité(e) à rejoindre {validationResult.organizationName}\n            </p>\n          </div>\n\n          <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n            {/* Email */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Mail className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Email</span>\n              </div>\n              <p className='text-gray-900 font-medium'>{validationResult.email}</p>\n            </div>\n\n            {/* Role */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Shield className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Rôle</span>\n              </div>\n              <Badge className={getRoleBadgeColor(validationResult.role)}>\n                {validationResult.role === 'admin' && 'Administrateur'}\n                {validationResult.role === 'manager' && 'Gestionnaire'}\n                {validationResult.role === 'tenant' && 'Locataire'}\n                {validationResult.role === 'resident' && 'Résident'}\n              </Badge>\n            </div>\n\n            {/* Inviter */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Shield className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Invité par</span>\n              </div>\n              <p className='text-gray-900'>{validationResult.inviterName}</p>\n            </div>\n\n            {/* Expiration */}\n            <div className='bg-white p-4 rounded-lg border border-green-200'>\n              <div className='flex items-center mb-2'>\n                <Clock className='h-5 w-5 text-gray-500 mr-2' />\n                <span className='text-sm font-medium text-gray-600'>Validité</span>\n              </div>\n              <p className='text-gray-900'>{getTimeRemaining(validationResult.expiresAt)}</p>\n            </div>\n          </div>\n\n          {/* Quebec Law 25 Notice */}\n          <div className='mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg'>\n            <h4 className='text-sm font-medium text-blue-900 mb-2'>\n              🛡️ Protection des données personnelles (Loi 25 - Québec)\n            </h4>\n            <p className='text-xs text-blue-800'>\n              En acceptant cette invitation, vous reconnaissez avoir été informé(e) de la collecte\n              et de l'utilisation de vos données personnelles conformément à la Loi 25 du Québec sur\n              la protection des renseignements personnels dans le secteur privé.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"version":3}