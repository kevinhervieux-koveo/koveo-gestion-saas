{"file":"/home/runner/workspace/client/src/components/common/BillForm.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/components/common/BillForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { FileText, Upload, Sparkles, Paperclip } from 'lucide-react';\nimport { useLanguage } from '@/hooks/use-language';\nimport type { Bill } from '@shared/schema';\nimport { FileUpload } from '@/components/ui/file-upload';\n\n// Unified form schema\nconst billFormSchema = z.object({\n  title: z.string().min(1, 'Bill title is required (example: Monthly Electricity Bill)').max(200, 'Title must be less than 200 characters'),\n  description: z.string().max(1000, 'Description must be less than 1000 characters').optional(),\n  category: z.enum([\n    'insurance',\n    'maintenance',\n    'salary',\n    'utilities',\n    'cleaning',\n    'security',\n    'landscaping',\n    'professional_services',\n    'administration',\n    'repairs',\n    'supplies',\n    'taxes',\n    'technology',\n    'reserves',\n    'other',\n  ]),\n  vendor: z.string().max(150, 'Vendor name must be less than 150 characters').optional(),\n  paymentType: z.enum(['unique', 'recurrent']),\n  schedulePayment: z.enum(['weekly', 'monthly', 'quarterly', 'yearly', 'custom']).optional(),\n  totalAmount: z.string().min(1, 'Amount is required and must be a valid number (example: 1250.50)').refine((val) => {\n    const num = parseFloat(val);\n    return !isNaN(num) && num > 0 && num <= 999999.99;\n  }, 'Amount must be between $0.01 and $999,999.99 (example: 1250.50)'),\n  startDate: z.string().min(1, 'Start date is required (example: 2025-01-15)').refine((val) => {\n    return !isNaN(Date.parse(val));\n  }, 'Start date must be a valid date (example: 2025-01-15)'),\n  endDate: z.string().optional().refine((val) => {\n    if (!val) return true;\n    return !isNaN(Date.parse(val));\n  }, 'End date must be a valid date (example: 2025-12-31)'),\n  status: z.enum(['draft', 'sent', 'overdue', 'paid', 'cancelled']),\n  notes: z.string().max(2000, 'Notes must be less than 2000 characters').optional(),\n});\n\n/**\n *\n */\ntype BillFormData = z.infer<typeof billFormSchema>;\n\n// AI analysis result interface\n/**\n *\n */\ninterface AiAnalysisResult {\n  title: string;\n  vendor?: string;\n  category: BillFormData['category'];\n  totalAmount: string;\n  description?: string;\n  issueDate?: string;\n  billNumber?: string;\n  confidence: number;\n}\n\n// Component props interface\n/**\n *\n */\ninterface BillFormProps {\n  mode: 'create' | 'edit';\n  buildingId: string;\n  bill?: Bill; // Required for edit mode\n  onSuccess: () => void;\n  onCancel?: () => void; // Optional for create mode\n}\n\n// Bill category options - centralized list\nexport const BILL_CATEGORIES = [\n  { value: 'insurance', label: 'Insurance' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'salary', label: 'Salary' },\n  { value: 'utilities', label: 'Utilities' },\n  { value: 'cleaning', label: 'Cleaning' },\n  { value: 'security', label: 'Security' },\n  { value: 'landscaping', label: 'Landscaping' },\n  { value: 'professional_services', label: 'Professional Services' },\n  { value: 'administration', label: 'Administration' },\n  { value: 'repairs', label: 'Repairs' },\n  { value: 'supplies', label: 'Supplies' },\n  { value: 'taxes', label: 'Taxes' },\n  { value: 'technology', label: 'Technology' },\n  { value: 'reserves', label: 'Reserves' },\n  { value: 'other', label: 'Other' },\n] as const;\n\n// Payment type options\nexport const PAYMENT_TYPES = [\n  { value: 'unique', label: 'One-time Payment' },\n  { value: 'recurrent', label: 'Recurring Payment' },\n] as const;\n\n// Schedule options\nexport const SCHEDULE_OPTIONS = [\n  { value: 'weekly', label: 'Weekly' },\n  { value: 'monthly', label: 'Monthly' },\n  { value: 'quarterly', label: 'Quarterly' },\n  { value: 'yearly', label: 'Yearly' },\n] as const;\n\n// Status options\nexport const STATUS_OPTIONS = [\n  { value: 'draft', label: 'Draft' },\n  { value: 'sent', label: 'Sent' },\n  { value: 'overdue', label: 'Overdue' },\n  { value: 'paid', label: 'Paid' },\n  { value: 'cancelled', label: 'Cancelled' },\n] as const;\n\n/**\n * Unified bill form component for creating and editing bills.\n * Supports both manual entry and AI document analysis for creation.\n * @param root0\n * @param root0.mode\n * @param root0.buildingId\n * @param root0.bill\n * @param root0.onSuccess\n * @param root0.onCancel\n */\nexport function BillForm({ mode, buildingId, bill, onSuccess, onCancel }: BillFormProps) {\n  const { t } = useLanguage();\n  const [activeTab, setActiveTab] = useState('manual');\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [aiAnalysisData, setAiAnalysisData] = useState<AiAnalysisResult | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState<File[]>([]);\n\n  const queryClient = useQueryClient();\n\n  // Form setup with default values based on mode\n  const getDefaultValues = (): BillFormData => {\n    if (mode === 'edit' && bill) {\n      return {\n        title: bill.title,\n        description: bill.description || '',\n        category: bill.category,\n        vendor: bill.vendor || '',\n        paymentType: bill.paymentType,\n        schedulePayment: bill.schedulePayment || 'monthly',\n        totalAmount: bill.totalAmount.toString(),\n        startDate: bill.startDate,\n        endDate: bill.endDate || '',\n        status: bill.status,\n        notes: bill.notes || '',\n      };\n    }\n\n    // Default values for create mode\n    return {\n      title: '',\n      description: '',\n      category: 'other',\n      vendor: '',\n      paymentType: 'unique',\n      schedulePayment: 'monthly',\n      totalAmount: '',\n      startDate: new Date().toISOString().split('T')[0],\n      endDate: '',\n      status: 'draft',\n      notes: '',\n    };\n  };\n\n  const form = useForm<BillFormData>({\n    resolver: zodResolver(billFormSchema),\n    defaultValues: getDefaultValues(),\n  });\n\n  // Update form when bill changes (for edit mode)\n  useEffect(() => {\n    if (mode === 'edit' && bill) {\n      form.reset(getDefaultValues());\n    }\n  }, [mode, bill]);\n\n  // Main mutation for create/update\n  const submitMutation = useMutation({\n    mutationFn: async (billData: BillFormData) => {\n      const url = mode === 'create' ? '/api/bills' : `/api/bills/${bill?.id}`;\n      const method = mode === 'create' ? 'POST' : 'PATCH';\n\n      const payload = {\n        ...billData,\n        costs: [parseFloat(billData.totalAmount)],\n        ...(mode === 'create' && { buildingId }),\n      };\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to ${mode} bill`);\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/bills'] });\n      onSuccess();\n    },\n  });\n\n  // AI analysis mutation (only for create mode)\n  const uploadAndAnalyzeMutation = useMutation({\n    mutationFn: async (file: File) => {\n      setIsAnalyzing(true);\n\n      // First create a draft bill\n      const createResponse = await fetch('/api/bills', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          buildingId,\n          title: 'AI Analysis Draft',\n          category: 'other',\n          paymentType: 'unique',\n          totalAmount: 0,\n          costs: [0],\n          startDate: new Date().toISOString().split('T')[0],\n          status: 'draft',\n          notes: 'Draft bill created for AI analysis',\n        }),\n      });\n\n      if (!createResponse.ok) {\n        throw new Error('Failed to create draft bill');\n      }\n\n      const draftBill = await createResponse.json();\n\n      // Upload and analyze the document\n      const formData = new FormData();\n      formData.append('document', file);\n\n      const uploadResponse = await fetch(`/api/bills/${draftBill.bill.id}/upload-document`, {\n        method: 'POST',\n        credentials: 'include',\n        body: formData,\n      });\n\n      if (!uploadResponse.ok) {\n        throw new Error('Failed to upload and analyze document');\n      }\n\n      const result = await uploadResponse.json();\n      return { ...result, billId: draftBill.bill.id };\n    },\n    onSuccess: (data) => {\n      setIsAnalyzing(false);\n      setAiAnalysisData(data.analysisResult);\n      setActiveTab('manual'); // Switch to manual tab to show populated form\n    },\n    onError: () => {\n      setIsAnalyzing(false);\n    },\n  });\n\n  // Event handlers\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && mode === 'create') {\n      setUploadedFile(file);\n      uploadAndAnalyzeMutation.mutate(file);\n    }\n  };\n\n  const applyAiAnalysis = () => {\n    if (aiAnalysisData) {\n      form.setValue('title', aiAnalysisData.title);\n      form.setValue('vendor', aiAnalysisData.vendor || '');\n      form.setValue('category', aiAnalysisData.category);\n      form.setValue('totalAmount', aiAnalysisData.totalAmount);\n      form.setValue('description', aiAnalysisData.description || '');\n\n      if (aiAnalysisData.issueDate) {\n        form.setValue('startDate', aiAnalysisData.issueDate);\n      }\n\n      const notes = `AI-analyzed document. Original bill number: ${aiAnalysisData.billNumber || 'N/A'}. Confidence: ${(aiAnalysisData.confidence * 100).toFixed(1)}%.`;\n      form.setValue('notes', notes);\n    }\n  };\n\n  const onSubmit = (values: BillFormData) => {\n    submitMutation.mutate(values);\n    // TODO: Handle attached files upload after bill creation\n  };\n\n  // Handle file attachments\n  const handleFilesSelect = useCallback((files: File[]) => {\n    setAttachedFiles(prev => [...prev, ...files]);\n  }, []);\n\n  const handleFileRemove = useCallback((fileIndex: number) => {\n    setAttachedFiles(prev => prev.filter((_, index) => index !== fileIndex));\n  }, []);\n\n  const renderFormFields = () => (\n    <>\n      <div className='grid grid-cols-2 gap-4'>\n        {/* Title */}\n        <FormField\n          control={form.control}\n          name='title'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('title')} *</FormLabel>\n              <FormControl>\n                <Input {...field} placeholder={t('billTitle')} data-testid='input-title' />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Vendor */}\n        <FormField\n          control={form.control}\n          name='vendor'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('vendor')}</FormLabel>\n              <FormControl>\n                <Input\n                  {...field}\n                  placeholder={t('companyOrServiceProvider')}\n                  data-testid='input-vendor'\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Category */}\n        <FormField\n          control={form.control}\n          name='category'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('category')} *</FormLabel>\n              <Select onValueChange={field.onChange} value={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid='select-category'>\n                    <SelectValue placeholder={t('selectCategory')} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {BILL_CATEGORIES.map((category) => (\n                    <SelectItem key={category.value} value={category.value}>\n                      {category.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Total Amount */}\n        <FormField\n          control={form.control}\n          name='totalAmount'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Total Amount *</FormLabel>\n              <FormControl>\n                <Input\n                  {...field}\n                  type='number'\n                  step='0.01'\n                  placeholder='0.00'\n                  data-testid='input-amount'\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Payment Type */}\n        <FormField\n          control={form.control}\n          name='paymentType'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Payment Type *</FormLabel>\n              <Select onValueChange={field.onChange} value={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid='select-payment-type'>\n                    <SelectValue placeholder='Select payment type' />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {PAYMENT_TYPES.map((type) => (\n                    <SelectItem key={type.value} value={type.value}>\n                      {type.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Schedule Payment (only for recurrent) */}\n        {form.watch('paymentType') === 'recurrent' && (\n          <FormField\n            control={form.control}\n            name='schedulePayment'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Schedule *</FormLabel>\n                <Select onValueChange={field.onChange} value={field.value}>\n                  <FormControl>\n                    <SelectTrigger data-testid='select-schedule'>\n                      <SelectValue placeholder='Select schedule' />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {SCHEDULE_OPTIONS.map((option) => (\n                      <SelectItem key={option.value} value={option.value}>\n                        {option.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {/* Start Date */}\n        <FormField\n          control={form.control}\n          name='startDate'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Start Date *</FormLabel>\n              <FormControl>\n                <Input {...field} type='date' data-testid='input-start-date' />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* End Date (only for recurrent) */}\n        {form.watch('paymentType') === 'recurrent' && (\n          <FormField\n            control={form.control}\n            name='endDate'\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>End Date (Optional)</FormLabel>\n                <FormControl>\n                  <Input {...field} type='date' data-testid='input-end-date' />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        )}\n\n        {/* Status */}\n        <FormField\n          control={form.control}\n          name='status'\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Status *</FormLabel>\n              <Select onValueChange={field.onChange} value={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid='select-status'>\n                    <SelectValue placeholder='Select status' />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {STATUS_OPTIONS.map((status) => (\n                    <SelectItem key={status.value} value={status.value}>\n                      {status.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      </div>\n\n      {/* Description */}\n      <FormField\n        control={form.control}\n        name='description'\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Description</FormLabel>\n            <FormControl>\n              <Textarea\n                {...field}\n                placeholder='Bill description...'\n                rows={3}\n                data-testid='textarea-description'\n              />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      {/* Notes */}\n      <FormField\n        control={form.control}\n        name='notes'\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Notes</FormLabel>\n            <FormControl>\n              <Textarea\n                {...field}\n                placeholder='Additional notes...'\n                rows={3}\n                data-testid='textarea-notes'\n              />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      {/* File Attachments */}\n      <div className=\"space-y-3\">\n        <div className=\"flex items-center gap-2\">\n          <Paperclip className=\"w-4 h-4 text-gray-500\" />\n          <label className=\"text-sm font-medium text-gray-700\">\n            Attachments\n          </label>\n          <span className=\"text-xs text-gray-500\">\n            (Optional - Screenshots, receipts, supporting documents)\n          </span>\n        </div>\n        <FileUpload\n          onFilesSelect={handleFilesSelect}\n          onFilesRemove={handleFileRemove}\n          maxFiles={5}\n          maxSize={10}\n          acceptedTypes={['image/*', '.pdf', '.doc', '.docx', '.txt']}\n          allowPaste={true}\n          className=\"border border-gray-200 rounded-lg p-4\"\n          data-testid=\"bill-file-upload\"\n        >\n          <div className=\"text-center py-6\">\n            <Upload className=\"mx-auto h-8 w-8 text-gray-400 mb-2\" />\n            <p className=\"text-sm text-gray-600\">\n              Drop files here, click to browse, or paste screenshots\n            </p>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Attach receipts, screenshots, or supporting documents\n            </p>\n          </div>\n        </FileUpload>\n      </div>\n    </>\n  );\n\n  // For edit mode, render simple form\n  if (mode === 'edit') {\n    return (\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6 pt-4 border-t'>\n          {renderFormFields()}\n\n          {/* Form Actions */}\n          <div className='flex justify-end gap-2 pt-4 border-t'>\n            {onCancel && (\n              <Button\n                type='button'\n                variant='outline'\n                onClick={onCancel}\n                data-testid='button-cancel'\n              >\n                Cancel\n              </Button>\n            )}\n            <Button type='submit' disabled={submitMutation.isPending} data-testid='button-update'>\n              {submitMutation.isPending ? 'Updating...' : 'Update Bill'}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    );\n  }\n\n  // For create mode, render with tabs (manual + AI upload)\n  return (\n    <div className='space-y-6'>\n      <Tabs value={activeTab} onValueChange={setActiveTab} className='w-full'>\n        <TabsList className='grid w-full grid-cols-2'>\n          <TabsTrigger value='manual' className='flex items-center gap-2' data-testid='tab-manual'>\n            <FileText className='w-4 h-4' />\n            Create Manually\n          </TabsTrigger>\n          <TabsTrigger value='upload' className='flex items-center gap-2' data-testid='tab-upload'>\n            <Upload className='w-4 h-4' />\n            Upload & Analyze\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value='upload' className='space-y-4'>\n          <div className='p-6 text-center border-2 border-dashed border-gray-200 rounded-lg'>\n            <Upload className='w-12 h-12 mx-auto text-gray-400 mb-4' />\n            <h3 className='text-lg font-semibold mb-2'>Upload Bill Document</h3>\n            <p className='text-gray-600 mb-4'>\n              Upload an image or PDF of your bill for AI analysis\n            </p>\n\n            <Input\n              type='file'\n              accept='image/*,.pdf'\n              onChange={handleFileUpload}\n              disabled={isAnalyzing}\n              className='max-w-sm mx-auto'\n              data-testid='input-file-upload'\n            />\n\n            {isAnalyzing && (\n              <div\n                className='mt-4 flex items-center justify-center gap-2'\n                data-testid='loading-analysis'\n              >\n                <div className='animate-spin w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full'></div>\n                <span className='text-sm text-gray-600'>Analyzing document with AI...</span>\n              </div>\n            )}\n\n            {aiAnalysisData && (\n              <div className='mt-4 p-4 bg-blue-50 rounded-lg' data-testid='ai-analysis-result'>\n                <div className='flex items-center gap-2 mb-2'>\n                  <Sparkles className='w-5 h-5 text-blue-600' />\n                  <span className='font-medium text-blue-800'>AI Analysis Complete</span>\n                  <Badge variant='outline' className='text-xs'>\n                    {(aiAnalysisData.confidence * 100).toFixed(1)}% confidence\n                  </Badge>\n                </div>\n                <div className='text-sm text-blue-700 space-y-1'>\n                  <p>\n                    <strong>Title:</strong> {aiAnalysisData.title}\n                  </p>\n                  <p>\n                    <strong>Vendor:</strong> {aiAnalysisData.vendor}\n                  </p>\n                  <p>\n                    <strong>Amount:</strong> ${aiAnalysisData.totalAmount}\n                  </p>\n                  <p>\n                    <strong>Category:</strong> {aiAnalysisData.category}\n                  </p>\n                </div>\n                <Button\n                  onClick={applyAiAnalysis}\n                  className='mt-3 w-full'\n                  size='sm'\n                  data-testid='button-apply-ai'\n                >\n                  Apply to Form\n                </Button>\n              </div>\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value='manual' className='space-y-4'>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-6'>\n              {renderFormFields()}\n\n              {/* AI Analysis Info */}\n              {aiAnalysisData && (\n                <div\n                  className='p-4 bg-blue-50 rounded-lg border border-blue-200'\n                  data-testid='ai-info-badge'\n                >\n                  <div className='flex items-center gap-2 mb-2'>\n                    <Sparkles className='w-4 h-4 text-blue-600' />\n                    <span className='text-sm font-medium text-blue-800'>\n                      Form populated from AI analysis\n                    </span>\n                    <Badge variant='outline' className='text-xs'>\n                      {(aiAnalysisData.confidence * 100).toFixed(1)}% confidence\n                    </Badge>\n                  </div>\n                  <p className='text-xs text-blue-600'>\n                    Review and modify the form as needed before creating the bill.\n                  </p>\n                </div>\n              )}\n\n              {/* Form Actions */}\n              <div className='flex justify-end gap-2 pt-4 border-t'>\n                <Button\n                  type='submit'\n                  disabled={submitMutation.isPending}\n                  className='min-w-[120px]'\n                  data-testid='button-create'\n                >\n                  {submitMutation.isPending ? 'Creating...' : 'Create Bill'}\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default BillForm;\n"],"version":3}