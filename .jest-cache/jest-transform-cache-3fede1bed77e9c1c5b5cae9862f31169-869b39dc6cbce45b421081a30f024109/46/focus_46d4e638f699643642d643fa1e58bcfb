6af9d58d2209147f143421a7180ac117
'use strict';
require('../utils/dataTransfer/Clipboard.js');
var getActiveElement = require('../utils/focus/getActiveElement.js');
var isFocusable = require('../utils/focus/isFocusable.js');
var findClosest = require('../utils/misc/findClosest.js');
var updateSelectionOnFocus = require('./selection/updateSelectionOnFocus.js');
var wrapEvent = require('./wrapEvent.js');
// Browsers do not dispatch FocusEvent if the document does not have focus.
// TODO: simulate FocusEvent in browsers
/**
 * Focus closest focusable element.
 */ function focusElement(element) {
    const target = findClosest.findClosest(element, isFocusable.isFocusable);
    const activeElement = getActiveElement.getActiveElement(element.ownerDocument);
    if ((target !== null && target !== undefined ? target : element.ownerDocument.body) === activeElement) {
        return;
    }
    else if (target) {
        wrapEvent.wrapEvent(() => target.focus());
    }
    else {
        wrapEvent.wrapEvent(() => activeElement === null || activeElement === undefined ? undefined : activeElement.blur());
    }
    updateSelectionOnFocus.updateSelectionOnFocus(target !== null && target !== undefined ? target : element.ownerDocument.body);
}
function blurElement(element) {
    if (!isFocusable.isFocusable(element))
        return;
    const wasActive = getActiveElement.getActiveElement(element.ownerDocument) === element;
    if (!wasActive)
        return;
    wrapEvent.wrapEvent(() => element.blur());
}
exports.blurElement = blurElement;
exports.focusElement = focusElement;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQHRlc3RpbmctbGlicmFyeS91c2VyLWV2ZW50L2Rpc3QvY2pzL2V2ZW50L2ZvY3VzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUViLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQzlDLElBQUksZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7QUFDckUsSUFBSSxXQUFXLEdBQUcsT0FBTyxDQUFDLCtCQUErQixDQUFDLENBQUM7QUFDM0QsSUFBSSxXQUFXLEdBQUcsT0FBTyxDQUFDLDhCQUE4QixDQUFDLENBQUM7QUFDMUQsSUFBSSxzQkFBc0IsR0FBRyxPQUFPLENBQUMsdUNBQXVDLENBQUMsQ0FBQztBQUM5RSxJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUUxQywyRUFBMkU7QUFDM0Usd0NBQXdDO0FBQ3hDOztHQUVHLENBQUMsU0FBUyxZQUFZLENBQUMsT0FBTztJQUM3QixNQUFNLE1BQU0sR0FBRyxXQUFXLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDekUsTUFBTSxhQUFhLEdBQUcsZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQy9FLElBQUksQ0FBQyxNQUFNLEtBQUssSUFBSSxJQUFJLE1BQU0sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxhQUFhLEVBQUUsQ0FBQztRQUNwRyxPQUFPO0lBQ1gsQ0FBQztTQUFNLElBQUksTUFBTSxFQUFFLENBQUM7UUFDaEIsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFFLEVBQUUsQ0FBQSxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM1QyxDQUFDO1NBQU0sQ0FBQztRQUNKLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRSxFQUFFLENBQUEsYUFBYSxLQUFLLElBQUksSUFBSSxhQUFhLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3RILENBQUM7SUFDRCxzQkFBc0IsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLEtBQUssSUFBSSxJQUFJLE1BQU0sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqSSxDQUFDO0FBQ0QsU0FBUyxXQUFXLENBQUMsT0FBTztJQUN4QixJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFBRSxPQUFPO0lBQzlDLE1BQU0sU0FBUyxHQUFHLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxPQUFPLENBQUM7SUFDdkYsSUFBSSxDQUFDLFNBQVM7UUFBRSxPQUFPO0lBQ3ZCLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRSxFQUFFLENBQUEsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7QUFDNUMsQ0FBQztBQUVELE9BQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO0FBQ2xDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0B0ZXN0aW5nLWxpYnJhcnkvdXNlci1ldmVudC9kaXN0L2Nqcy9ldmVudC9mb2N1cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnJlcXVpcmUoJy4uL3V0aWxzL2RhdGFUcmFuc2Zlci9DbGlwYm9hcmQuanMnKTtcbnZhciBnZXRBY3RpdmVFbGVtZW50ID0gcmVxdWlyZSgnLi4vdXRpbHMvZm9jdXMvZ2V0QWN0aXZlRWxlbWVudC5qcycpO1xudmFyIGlzRm9jdXNhYmxlID0gcmVxdWlyZSgnLi4vdXRpbHMvZm9jdXMvaXNGb2N1c2FibGUuanMnKTtcbnZhciBmaW5kQ2xvc2VzdCA9IHJlcXVpcmUoJy4uL3V0aWxzL21pc2MvZmluZENsb3Nlc3QuanMnKTtcbnZhciB1cGRhdGVTZWxlY3Rpb25PbkZvY3VzID0gcmVxdWlyZSgnLi9zZWxlY3Rpb24vdXBkYXRlU2VsZWN0aW9uT25Gb2N1cy5qcycpO1xudmFyIHdyYXBFdmVudCA9IHJlcXVpcmUoJy4vd3JhcEV2ZW50LmpzJyk7XG5cbi8vIEJyb3dzZXJzIGRvIG5vdCBkaXNwYXRjaCBGb2N1c0V2ZW50IGlmIHRoZSBkb2N1bWVudCBkb2VzIG5vdCBoYXZlIGZvY3VzLlxuLy8gVE9ETzogc2ltdWxhdGUgRm9jdXNFdmVudCBpbiBicm93c2Vyc1xuLyoqXG4gKiBGb2N1cyBjbG9zZXN0IGZvY3VzYWJsZSBlbGVtZW50LlxuICovIGZ1bmN0aW9uIGZvY3VzRWxlbWVudChlbGVtZW50KSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZmluZENsb3Nlc3QuZmluZENsb3Nlc3QoZWxlbWVudCwgaXNGb2N1c2FibGUuaXNGb2N1c2FibGUpO1xuICAgIGNvbnN0IGFjdGl2ZUVsZW1lbnQgPSBnZXRBY3RpdmVFbGVtZW50LmdldEFjdGl2ZUVsZW1lbnQoZWxlbWVudC5vd25lckRvY3VtZW50KTtcbiAgICBpZiAoKHRhcmdldCAhPT0gbnVsbCAmJiB0YXJnZXQgIT09IHVuZGVmaW5lZCA/IHRhcmdldCA6IGVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5KSA9PT0gYWN0aXZlRWxlbWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmICh0YXJnZXQpIHtcbiAgICAgICAgd3JhcEV2ZW50LndyYXBFdmVudCgoKT0+dGFyZ2V0LmZvY3VzKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHdyYXBFdmVudC53cmFwRXZlbnQoKCk9PmFjdGl2ZUVsZW1lbnQgPT09IG51bGwgfHwgYWN0aXZlRWxlbWVudCA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogYWN0aXZlRWxlbWVudC5ibHVyKCkpO1xuICAgIH1cbiAgICB1cGRhdGVTZWxlY3Rpb25PbkZvY3VzLnVwZGF0ZVNlbGVjdGlvbk9uRm9jdXModGFyZ2V0ICE9PSBudWxsICYmIHRhcmdldCAhPT0gdW5kZWZpbmVkID8gdGFyZ2V0IDogZWxlbWVudC5vd25lckRvY3VtZW50LmJvZHkpO1xufVxuZnVuY3Rpb24gYmx1ckVsZW1lbnQoZWxlbWVudCkge1xuICAgIGlmICghaXNGb2N1c2FibGUuaXNGb2N1c2FibGUoZWxlbWVudCkpIHJldHVybjtcbiAgICBjb25zdCB3YXNBY3RpdmUgPSBnZXRBY3RpdmVFbGVtZW50LmdldEFjdGl2ZUVsZW1lbnQoZWxlbWVudC5vd25lckRvY3VtZW50KSA9PT0gZWxlbWVudDtcbiAgICBpZiAoIXdhc0FjdGl2ZSkgcmV0dXJuO1xuICAgIHdyYXBFdmVudC53cmFwRXZlbnQoKCk9PmVsZW1lbnQuYmx1cigpKTtcbn1cblxuZXhwb3J0cy5ibHVyRWxlbWVudCA9IGJsdXJFbGVtZW50O1xuZXhwb3J0cy5mb2N1c0VsZW1lbnQgPSBmb2N1c0VsZW1lbnQ7XG4iXSwidmVyc2lvbiI6M30=