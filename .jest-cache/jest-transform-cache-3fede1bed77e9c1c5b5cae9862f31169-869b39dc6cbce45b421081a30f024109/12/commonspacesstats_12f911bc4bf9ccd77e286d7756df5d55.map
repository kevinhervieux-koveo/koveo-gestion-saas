{"file":"/home/runner/workspace/client/src/pages/manager/common-spaces-stats.tsx","mappings":"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","names":[],"sources":["/home/runner/workspace/client/src/pages/manager/common-spaces-stats.tsx"],"sourcesContent":["import { useState, useMemo, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Header } from '@/components/layout/header';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { NoDataCard } from '@/components/ui/no-data-card';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Building2,\n  Users,\n  Clock,\n  BarChart3,\n  Ban,\n  CheckCircle,\n  User,\n  TrendingUp,\n  Calendar,\n  Plus,\n  Timer,\n  CalendarDays,\n  Eye,\n  Edit,\n} from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { CalendarView } from '@/components/common-spaces/calendar-view';\nimport { CommonSpaceCalendar } from '@/components/common-spaces/common-space-calendar';\n\n/**\n * Building interface.\n */\ninterface Building {\n  id: string;\n  name: string;\n  address: string;\n  city: string;\n  organizationId: string;\n}\n\n/**\n * Common Space interface.\n */\ninterface CommonSpace {\n  id: string;\n  name: string;\n  description?: string;\n  buildingId: string;\n  isReservable: boolean;\n  capacity?: number;\n}\n\n/**\n * User stats interface.\n */\ninterface UserStats {\n  userId: string;\n  userName: string;\n  userEmail: string;\n  totalHours: number;\n  totalBookings: number;\n}\n\n/**\n * Summary stats interface.\n */\ninterface SummaryStats {\n  totalBookings: number;\n  totalHours: number;\n  uniqueUsers: number;\n}\n\n/**\n * Space stats response interface.\n */\ninterface SpaceStatsResponse {\n  spaceName: string;\n  period: string;\n  summary: SummaryStats;\n  userStats: UserStats[];\n}\n\n/**\n * User restriction interface.\n */\ninterface UserRestriction {\n  userId: string;\n  commonSpaceId: string;\n  isBlocked: boolean;\n  reason?: string;\n}\n\n/**\n * Role checking HOC component.\n * @param Component\n */\nfunction withManagerAccess<P extends object>(Component: React.ComponentType<P>) {\n  return function ManagerAccessComponent(props: P) {\n    const { user } = useAuth();\n    const { language } = useLanguage();\n\n    if (!user || !['manager', 'admin', 'demo_manager'].includes(user.role)) {\n      return (\n        <div className='flex-1 flex flex-col overflow-hidden'>\n          <Header \n            title={language === 'fr' ? 'Gestion Espaces Communs' : 'Manage Common Spaces'}\n            subtitle={language === 'fr' ? 'Accès refusé' : 'Access Denied'}\n          />\n          <div className='flex-1 overflow-auto p-6 flex items-center justify-center'>\n            <Card className='max-w-md w-full'>\n              <CardContent className='text-center py-12'>\n                <Ban className='w-16 h-16 mx-auto mb-4 text-red-500' />\n                <h2 className='text-xl font-semibold text-gray-900 mb-2'>\n                  {language === 'fr' ? 'Accès refusé' : 'Access Denied'}\n                </h2>\n                <p className='text-gray-600'>\n                  {language === 'fr'\n                    ? 'Vous devez être gestionnaire ou administrateur pour accéder à cette page.'\n                    : 'You must be a manager or administrator to access this page.'}\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      );\n    }\n\n    return <Component {...props} />;\n  };\n}\n\n/**\n * Manager Common Spaces Statistics Page.\n */\nfunction CommonSpacesStatsPage() {\n  const { user } = useAuth();\n  const { language } = useLanguage();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [selectedBuildingId, setSelectedBuildingId] = useState<string>('');\n  const [selectedSpaceId, setSelectedSpaceId] = useState<string>('');\n  const [restrictionDialogOpen, setRestrictionDialogOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<UserStats | null>(null);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [createFormData, setCreateFormData] = useState({\n    name: '',\n    description: '',\n    building_id: '',\n    is_reservable: true,\n    capacity: '',\n    hours_mode: 'same' as 'same' | 'custom',\n    opening_hours: {\n      start: '08:00',\n      end: '22:00',\n    },\n    weekly_hours: {\n      monday: { start: '08:00', end: '22:00' },\n      tuesday: { start: '08:00', end: '22:00' },\n      wednesday: { start: '08:00', end: '22:00' },\n      thursday: { start: '08:00', end: '22:00' },\n      friday: { start: '08:00', end: '22:00' },\n      saturday: { start: '09:00', end: '21:00' },\n      sunday: { start: '09:00', end: '21:00' },\n    },\n    available_days: {\n      monday: true,\n      tuesday: true,\n      wednesday: true,\n      thursday: true,\n      friday: true,\n      saturday: true,\n      sunday: true,\n    },\n  });\n  const [timeLimitDialogOpen, setTimeLimitDialogOpen] = useState(false);\n  const [timeLimitFormData, setTimeLimitFormData] = useState({\n    limit_type: 'monthly' as 'monthly' | 'yearly',\n    limit_hours: '10',\n    common_space_id: '',\n  });\n\n  // Fetch buildings accessible to the manager\n  const { data: buildingsResponse, isLoading: buildingsLoading } = useQuery<{\n    buildings: Building[];\n  }>({\n    queryKey: ['/api/manager/buildings'],\n    enabled: !!user,\n  });\n\n  const buildings = buildingsResponse?.buildings || [];\n\n  // Fetch common spaces for selected building\n  const { data: commonSpaces = [], isLoading: spacesLoading } = useQuery<CommonSpace[]>({\n    queryKey: ['/api/common-spaces', selectedBuildingId],\n    queryFn: () =>\n      fetch(`/api/common-spaces?building_id=${selectedBuildingId}`).then((res) => res.json()),\n    enabled: !!selectedBuildingId,\n  });\n\n  // Fetch statistics for selected space\n  const { data: spaceStats, isLoading: statsLoading } = useQuery<SpaceStatsResponse>({\n    queryKey: ['/api/common-spaces', selectedSpaceId, 'stats'],\n    queryFn: () => fetch(`/api/common-spaces/${selectedSpaceId}/stats`).then((res) => res.json()),\n    enabled: !!selectedSpaceId,\n  });\n\n  // Block/Unblock user mutation\n  const toggleUserRestrictionMutation = useMutation({\n    mutationFn: async ({\n      userId,\n      isBlocked,\n      reason,\n    }: {\n      userId: string;\n      isBlocked: boolean;\n      reason?: string;\n    }) => {\n      return apiRequest('POST', `/api/common-spaces/users/${userId}/restrictions`, {\n        common_space_id: selectedSpaceId,\n        is_blocked: isBlocked,\n        reason: reason || '',\n      });\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/common-spaces', selectedSpaceId, 'stats'] });\n      toast({\n        title: language === 'fr' ? 'Restriction mise à jour' : 'Restriction Updated',\n        description: variables.isBlocked\n          ? language === 'fr'\n            ? 'Utilisateur bloqué avec succès'\n            : 'User blocked successfully'\n          : language === 'fr'\n            ? 'Utilisateur débloqué avec succès'\n            : 'User unblocked successfully',\n      });\n      setRestrictionDialogOpen(false);\n      setSelectedUser(null);\n    },\n    onError: (error: any) => {\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description: error.message || 'Une erreur est survenue',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Mutation to create or update a common space\n  const createSpaceMutation = useMutation({\n    mutationFn: async (spaceData: {\n      name: string;\n      description?: string;\n      building_id: string;\n      is_reservable: boolean;\n      capacity?: number;\n      opening_hours?: { start: string; end: string };\n      weekly_hours?: any;\n      available_days?: string[];\n    }) => {\n      if (isEditMode && selectedSpaceId) {\n        return apiRequest('PUT', `/api/common-spaces/${selectedSpaceId}`, spaceData);\n      } else {\n        return apiRequest('POST', '/api/common-spaces', spaceData);\n      }\n    },\n    onSuccess: () => {\n      try {\n        queryClient.invalidateQueries({ queryKey: ['/api/common-spaces'] });\n        toast({\n        title: language === 'fr' ? 'Succès' : 'Success',\n        description: isEditMode\n          ? language === 'fr'\n            ? \"L'espace commun a été modifié avec succès.\"\n            : 'Common space updated successfully.'\n          : language === 'fr'\n            ? \"L'espace commun a été créé avec succès.\"\n            : 'Common space created successfully.',\n      });\n      setCreateDialogOpen(false);\n      setIsEditMode(false);\n      setCreateFormData({\n        name: '',\n        description: '',\n        building_id: '',\n        is_reservable: true,\n        capacity: '',\n        hours_mode: 'same',\n        opening_hours: {\n          start: '08:00',\n          end: '22:00',\n        },\n        weekly_hours: {\n          monday: { start: '08:00', end: '22:00' },\n          tuesday: { start: '08:00', end: '22:00' },\n          wednesday: { start: '08:00', end: '22:00' },\n          thursday: { start: '08:00', end: '22:00' },\n          friday: { start: '08:00', end: '22:00' },\n          saturday: { start: '09:00', end: '21:00' },\n          sunday: { start: '09:00', end: '21:00' },\n        },\n        available_days: {\n          monday: true,\n          tuesday: true,\n          wednesday: true,\n          thursday: true,\n          friday: true,\n          saturday: true,\n          sunday: true,\n        },\n      });\n    } catch (error) {\n      // Error creating/updating space\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description: isEditMode\n          ? language === 'fr'\n            ? \"Impossible de modifier l'espace commun.\"\n            : 'Failed to update common space.'\n          : language === 'fr'\n            ? \"Impossible de créer l'espace commun.\"\n            : 'Failed to create common space.',\n        variant: 'destructive',\n      });\n    }\n    },\n    onError: (error: any) => {\n      // Error processing request\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description: 'An error occurred while processing the request.',\n        variant: 'destructive',\n      });\n    }\n  });\n\n  const handleCreateSpace = () => {\n    if (!createFormData.name.trim() || !createFormData.building_id) {\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description:\n          language === 'fr'\n            ? 'Veuillez remplir tous les champs obligatoires.'\n            : 'Please fill in all required fields.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const spaceData = {\n      name: createFormData.name.trim(),\n      description: createFormData.description.trim() || undefined,\n      building_id: createFormData.building_id,\n      is_reservable: createFormData.is_reservable,\n      capacity: createFormData.capacity ? parseInt(createFormData.capacity) : undefined,\n      opening_hours:\n        createFormData.hours_mode === 'same'\n          ? createFormData.opening_hours.start && createFormData.opening_hours.end\n            ? createFormData.opening_hours\n            : undefined\n          : undefined,\n      weekly_hours:\n        createFormData.hours_mode === 'custom' ? createFormData.weekly_hours : undefined,\n      available_days: Object.entries(createFormData.available_days)\n        .filter(([_, isAvailable]) => isAvailable)\n        .map(([day, _]) => day),\n    };\n\n    createSpaceMutation.mutate(spaceData);\n  };\n\n  // Mutation to set user time limits\n  const setTimeLimitMutation = useMutation({\n    mutationFn: async (limitData: {\n      user_id: string;\n      limit_type: 'monthly' | 'yearly';\n      limit_hours: number;\n      common_space_id?: string;\n    }) => {\n      return apiRequest('POST', `/api/common-spaces/users/${limitData.user_id}/time-limits`, {\n        user_id: limitData.user_id,\n        limit_type: limitData.limit_type,\n        limit_hours: limitData.limit_hours,\n        common_space_id: limitData.common_space_id,\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/common-spaces', selectedSpaceId, 'stats'] });\n      toast({\n        title: language === 'fr' ? 'Succès' : 'Success',\n        description:\n          language === 'fr'\n            ? 'Limite de temps définie avec succès.'\n            : 'Time limit set successfully.',\n      });\n      setTimeLimitDialogOpen(false);\n    },\n    onError: (error: any) => {\n      // Error setting time limit\n      toast({\n        title: language === 'fr' ? 'Erreur' : 'Error',\n        description:\n          language === 'fr'\n            ? 'Impossible de définir la limite de temps.'\n            : 'Failed to set time limit.',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  const handleSetTimeLimit = () => {\n    if (!selectedUser || !timeLimitFormData.limit_hours) {\n      return;\n    }\n\n    const limitData = {\n      user_id: selectedUser.userId,\n      limit_type: timeLimitFormData.limit_type,\n      limit_hours: parseInt(timeLimitFormData.limit_hours),\n      common_space_id: timeLimitFormData.common_space_id || undefined,\n    };\n\n    setTimeLimitMutation.mutate(limitData);\n  };\n\n  // Reset space selection when building changes\n  useEffect(() => {\n    setSelectedSpaceId('');\n  }, [selectedBuildingId]);\n\n  // Prepare chart data\n  const chartData = useMemo(() => {\n    if (!spaceStats?.userStats) {\n      return [];\n    }\n\n    return spaceStats.userStats.slice(0, 10).map((user) => ({\n      name: user.userName,\n      hours: Math.round(user.totalHours * 10) / 10,\n      bookings: user.totalBookings,\n    }));\n  }, [spaceStats]);\n\n  const handleToggleRestriction = (user: UserStats, isBlocked: boolean) => {\n    setSelectedUser(user);\n    setRestrictionDialogOpen(true);\n\n    const reason = isBlocked ? 'Accès restreint par le gestionnaire' : '';\n\n    toggleUserRestrictionMutation.mutate({\n      userId: user.userId,\n      isBlocked,\n      reason,\n    });\n  };\n\n  return (\n    <div className='flex-1 flex flex-col overflow-hidden' data-testid='common-spaces-stats-page'>\n      <Header\n        title={language === 'fr' ? 'Gestion Espaces Communs' : 'Manage Common Spaces'}\n        subtitle={\n          language === 'fr'\n            ? 'Statistiques et gestion des utilisateurs'\n            : 'Statistics and user management'\n        }\n      />\n\n      <div className='flex-1 overflow-auto p-6'>\n        <div className='max-w-7xl mx-auto space-y-6'>\n        {/* Filters Section */}\n        <Card className='mb-8'>\n          <CardHeader>\n            <CardTitle className='flex items-center justify-between'>\n              <div className='flex items-center gap-2'>\n                <Building2 className='w-5 h-5' />\n                {language === 'fr' ? 'Sélection' : 'Selection'}\n              </div>\n              <Dialog open={createDialogOpen} onOpenChange={setCreateDialogOpen}>\n                <DialogTrigger asChild>\n                  <Button\n                    variant='default'\n                    size='sm'\n                    className='flex items-center gap-2'\n                    data-testid='button-create-space'\n                  >\n                    <Plus className='w-4 h-4' />\n                    {language === 'fr' ? 'Créer un espace' : 'Create Space'}\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className='max-w-lg max-h-[90vh] overflow-hidden flex flex-col'>\n                  <DialogHeader className='flex-shrink-0'>\n                    <DialogTitle>\n                      {isEditMode\n                        ? language === 'fr'\n                          ? \"Modifier l'espace commun\"\n                          : 'Edit Common Space'\n                        : language === 'fr'\n                          ? 'Créer un nouvel espace commun'\n                          : 'Create New Common Space'}\n                    </DialogTitle>\n                    <DialogDescription>\n                      {isEditMode\n                        ? language === 'fr'\n                          ? 'Modifiez les détails de cet espace partagé.'\n                          : 'Edit the details of this shared space.'\n                        : language === 'fr'\n                          ? 'Ajoutez un nouvel espace partagé pour les résidents de ce bâtiment.'\n                          : 'Add a new shared space for residents in this building.'}\n                    </DialogDescription>\n                  </DialogHeader>\n\n                  <div className='flex-1 overflow-y-auto px-1'>\n                    <div className='space-y-4 py-4'>\n                      <div className='space-y-2'>\n                        <Label htmlFor='space-name'>\n                          {language === 'fr' ? \"Nom de l'espace\" : 'Space Name'} *\n                        </Label>\n                        <Input\n                          id='space-name'\n                          type='text'\n                          placeholder={\n                            language === 'fr' ? 'ex: Salle de réunion' : 'e.g. Meeting Room'\n                          }\n                          value={createFormData.name}\n                          onChange={(e) =>\n                            setCreateFormData({ ...createFormData, name: e.target.value })\n                          }\n                          data-testid='input-space-name'\n                        />\n                      </div>\n\n                      <div className='space-y-2'>\n                        <Label htmlFor='space-description'>\n                          {language === 'fr' ? 'Description' : 'Description'}\n                        </Label>\n                        <Textarea\n                          id='space-description'\n                          placeholder={\n                            language === 'fr'\n                              ? \"Description optionnelle de l'espace\"\n                              : 'Optional description of the space'\n                          }\n                          value={createFormData.description}\n                          onChange={(e) =>\n                            setCreateFormData({ ...createFormData, description: e.target.value })\n                          }\n                          data-testid='textarea-space-description'\n                        />\n                      </div>\n\n                      <div className='space-y-2'>\n                        <Label htmlFor='space-building'>\n                          {language === 'fr' ? 'Bâtiment' : 'Building'} *\n                        </Label>\n                        <Select\n                          value={createFormData.building_id}\n                          onValueChange={(value) =>\n                            setCreateFormData({ ...createFormData, building_id: value })\n                          }\n                        >\n                          <SelectTrigger data-testid='select-space-building'>\n                            <SelectValue\n                              placeholder={\n                                language === 'fr' ? 'Sélectionnez un bâtiment' : 'Select a building'\n                              }\n                            />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {buildings.map((building) => (\n                              <SelectItem key={building.id} value={building.id}>\n                                {building.name} - {building.address}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className='grid grid-cols-2 gap-4'>\n                        <div className='space-y-2'>\n                          <Label htmlFor='space-capacity'>\n                            {language === 'fr' ? 'Capacité' : 'Capacity'}\n                          </Label>\n                          <Input\n                            id='space-capacity'\n                            type='number'\n                            placeholder='20'\n                            value={createFormData.capacity}\n                            onChange={(e) =>\n                              setCreateFormData({ ...createFormData, capacity: e.target.value })\n                            }\n                            data-testid='input-space-capacity'\n                          />\n                        </div>\n\n                        <div className='space-y-2 flex items-end'>\n                          <div className='flex items-center space-x-2'>\n                            <Checkbox\n                              id='space-reservable'\n                              checked={createFormData.is_reservable}\n                              onCheckedChange={(checked) =>\n                                setCreateFormData({\n                                  ...createFormData,\n                                  is_reservable: checked === true,\n                                })\n                              }\n                              data-testid='checkbox-space-reservable'\n                            />\n                            <Label htmlFor='space-reservable' className='text-sm'>\n                              {language === 'fr' ? 'Réservable' : 'Bookable'}\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='space-y-4'>\n                        <Label>{language === 'fr' ? \"Heures d'ouverture\" : 'Opening Hours'}</Label>\n\n                        {/* Hours Mode Selection */}\n                        <div className='space-y-3'>\n                          <div className='flex items-center space-x-4'>\n                            <div className='flex items-center space-x-2'>\n                              <input\n                                type='radio'\n                                id='hours-same'\n                                name='hours-mode'\n                                value='same'\n                                checked={createFormData.hours_mode === 'same'}\n                                onChange={(e) =>\n                                  setCreateFormData({ ...createFormData, hours_mode: 'same' })\n                                }\n                                className='w-4 h-4 text-blue-600'\n                                data-testid='radio-hours-same'\n                              />\n                              <Label htmlFor='hours-same' className='text-sm'>\n                                {language === 'fr'\n                                  ? 'Mêmes heures tous les jours'\n                                  : 'Same hours every day'}\n                              </Label>\n                            </div>\n                            <div className='flex items-center space-x-2'>\n                              <input\n                                type='radio'\n                                id='hours-custom'\n                                name='hours-mode'\n                                value='custom'\n                                checked={createFormData.hours_mode === 'custom'}\n                                onChange={(e) =>\n                                  setCreateFormData({ ...createFormData, hours_mode: 'custom' })\n                                }\n                                className='w-4 h-4 text-blue-600'\n                                data-testid='radio-hours-custom'\n                              />\n                              <Label htmlFor='hours-custom' className='text-sm'>\n                                {language === 'fr'\n                                  ? 'Heures personnalisées par jour'\n                                  : 'Custom hours per day'}\n                              </Label>\n                            </div>\n                          </div>\n\n                          {createFormData.hours_mode === 'same' ? (\n                            // Same hours for all days\n                            <div className='grid grid-cols-2 gap-4'>\n                              <div className='space-y-1'>\n                                <Label htmlFor='opening-start' className='text-xs text-gray-500'>\n                                  {language === 'fr' ? 'Ouverture' : 'Start'}\n                                </Label>\n                                <Input\n                                  id='opening-start'\n                                  type='time'\n                                  value={createFormData.opening_hours.start}\n                                  onChange={(e) =>\n                                    setCreateFormData({\n                                      ...createFormData,\n                                      opening_hours: {\n                                        ...createFormData.opening_hours,\n                                        start: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  data-testid='input-opening-start'\n                                />\n                              </div>\n                              <div className='space-y-1'>\n                                <Label htmlFor='opening-end' className='text-xs text-gray-500'>\n                                  {language === 'fr' ? 'Fermeture' : 'End'}\n                                </Label>\n                                <Input\n                                  id='opening-end'\n                                  type='time'\n                                  value={createFormData.opening_hours.end}\n                                  onChange={(e) =>\n                                    setCreateFormData({\n                                      ...createFormData,\n                                      opening_hours: {\n                                        ...createFormData.opening_hours,\n                                        end: e.target.value,\n                                      },\n                                    })\n                                  }\n                                  data-testid='input-opening-end'\n                                />\n                              </div>\n                            </div>\n                          ) : (\n                            // Custom hours per day\n                            <div className='space-y-3 max-h-64 overflow-y-auto'>\n                              {Object.entries(createFormData.weekly_hours).map(([day, hours]) => {\n                                const dayLabels = {\n                                  monday: language === 'fr' ? 'Lundi' : 'Monday',\n                                  tuesday: language === 'fr' ? 'Mardi' : 'Tuesday',\n                                  wednesday: language === 'fr' ? 'Mercredi' : 'Wednesday',\n                                  thursday: language === 'fr' ? 'Jeudi' : 'Thursday',\n                                  friday: language === 'fr' ? 'Vendredi' : 'Friday',\n                                  saturday: language === 'fr' ? 'Samedi' : 'Saturday',\n                                  sunday: language === 'fr' ? 'Dimanche' : 'Sunday',\n                                };\n\n                                return (\n                                  <div key={day} className='grid grid-cols-4 gap-3 items-center'>\n                                    <div className='flex items-center space-x-2'>\n                                      <Checkbox\n                                        id={`available-${day}`}\n                                        checked={createFormData.available_days[day as keyof typeof createFormData.available_days]}\n                                        onCheckedChange={(checked) =>\n                                          setCreateFormData({\n                                            ...createFormData,\n                                            available_days: {\n                                              ...createFormData.available_days,\n                                              [day]: checked === true,\n                                            },\n                                          })\n                                        }\n                                        data-testid={`checkbox-${day}-available`}\n                                      />\n                                      <Label htmlFor={`available-${day}`} className='text-sm font-medium w-20'>\n                                        {dayLabels[day as keyof typeof dayLabels]}\n                                      </Label>\n                                    </div>\n                                    <Input\n                                      type='time'\n                                      value={hours.start}\n                                      disabled={!createFormData.available_days[day as keyof typeof createFormData.available_days]}\n                                      onChange={(e) =>\n                                        setCreateFormData({\n                                          ...createFormData,\n                                          weekly_hours: {\n                                            ...createFormData.weekly_hours,\n                                            [day]: { ...hours, start: e.target.value },\n                                          },\n                                        })\n                                      }\n                                      data-testid={`input-${day}-start`}\n                                    />\n                                    <Input\n                                      type='time'\n                                      value={hours.end}\n                                      disabled={!createFormData.available_days[day as keyof typeof createFormData.available_days]}\n                                      onChange={(e) =>\n                                        setCreateFormData({\n                                          ...createFormData,\n                                          weekly_hours: {\n                                            ...createFormData.weekly_hours,\n                                            [day]: { ...hours, end: e.target.value },\n                                          },\n                                        })\n                                      }\n                                      data-testid={`input-${day}-end`}\n                                    />\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <DialogFooter className='flex-shrink-0 mt-4'>\n                    <Button\n                      variant='outline'\n                      onClick={() => {\n                        setCreateDialogOpen(false);\n                        setIsEditMode(false);\n                      }}\n                      data-testid='button-cancel-create'\n                    >\n                      {language === 'fr' ? 'Annuler' : 'Cancel'}\n                    </Button>\n                    <Button\n                      onClick={handleCreateSpace}\n                      disabled={\n                        createSpaceMutation.isPending ||\n                        !createFormData.name.trim() ||\n                        !createFormData.building_id\n                      }\n                      data-testid='button-confirm-create'\n                    >\n                      {createSpaceMutation.isPending\n                        ? isEditMode\n                          ? language === 'fr'\n                            ? 'Modification...'\n                            : 'Updating...'\n                          : language === 'fr'\n                            ? 'Création...'\n                            : 'Creating...'\n                        : isEditMode\n                          ? language === 'fr'\n                            ? \"Modifier l'espace\"\n                            : 'Update Space'\n                          : language === 'fr'\n                            ? \"Créer l'espace\"\n                            : 'Create Space'}\n                    </Button>\n                  </DialogFooter>\n                </DialogContent>\n              </Dialog>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n              <div className='space-y-2'>\n                <label className='text-sm font-medium' data-testid='building-select-label'>\n                  {language === 'fr' ? 'Bâtiment' : 'Building'}\n                </label>\n                <Select value={selectedBuildingId} onValueChange={setSelectedBuildingId}>\n                  <SelectTrigger data-testid='building-select'>\n                    <SelectValue\n                      placeholder={\n                        language === 'fr' ? 'Sélectionnez un bâtiment' : 'Select a building'\n                      }\n                    />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {buildings.map((building) => (\n                      <SelectItem key={building.id} value={building.id}>\n                        {building.name} - {building.address}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className='space-y-2'>\n                <label className='text-sm font-medium' data-testid='space-select-label'>\n                  {language === 'fr' ? 'Espace commun' : 'Common Space'}\n                </label>\n                <Select\n                  value={selectedSpaceId}\n                  onValueChange={setSelectedSpaceId}\n                  disabled={!selectedBuildingId || spacesLoading}\n                >\n                  <SelectTrigger data-testid='space-select'>\n                    <SelectValue\n                      placeholder={language === 'fr' ? 'Sélectionnez un espace' : 'Select a space'}\n                    />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {commonSpaces.map((space) => (\n                      <SelectItem key={space.id} value={space.id}>\n                        {space.name}\n                        {!space.isReservable && (\n                          <Badge variant='secondary' className='ml-2'>\n                            {language === 'fr' ? 'Non réservable' : 'Not bookable'}\n                          </Badge>\n                        )}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Tabs defaultValue='stats' className='space-y-6'>\n          <div className='flex items-center justify-between'>\n            <TabsList className='grid grid-cols-2 max-w-md'>\n              <TabsTrigger\n                value='stats'\n                className='flex items-center gap-2'\n                data-testid='tab-stats'\n              >\n                <BarChart3 className='h-4 w-4' />\n                {language === 'fr' ? 'Statistiques' : 'Statistics'}\n              </TabsTrigger>\n              <TabsTrigger\n                value='calendar'\n                className='flex items-center gap-2'\n                data-testid='tab-calendar'\n              >\n                <CalendarDays className='h-4 w-4' />\n                {language === 'fr' ? 'Calendrier' : 'Calendar'}\n              </TabsTrigger>\n            </TabsList>\n\n            <Button\n              variant='outline'\n              size='sm'\n              className='flex items-center gap-2'\n              disabled={!selectedSpaceId}\n              onClick={() => {\n                if (selectedSpaceId) {\n                  // Find the selected space details\n                  const selectedSpace = commonSpaces.find((s) => s.id === selectedSpaceId);\n                  if (selectedSpace) {\n                    setCreateFormData({\n                      name: selectedSpace.name,\n                      description: selectedSpace.description || '',\n                      building_id: selectedBuildingId,\n                      is_reservable: selectedSpace.isReservable,\n                      capacity: selectedSpace.capacity?.toString() || '',\n                      hours_mode: 'same',\n                      opening_hours: {\n                        start: '08:00',\n                        end: '22:00',\n                      },\n                      weekly_hours: {\n                        monday: { start: '08:00', end: '22:00' },\n                        tuesday: { start: '08:00', end: '22:00' },\n                        wednesday: { start: '08:00', end: '22:00' },\n                        thursday: { start: '08:00', end: '22:00' },\n                        friday: { start: '08:00', end: '22:00' },\n                        saturday: { start: '09:00', end: '21:00' },\n                        sunday: { start: '09:00', end: '21:00' },\n                      },\n                      available_days: {\n                        monday: true,\n                        tuesday: true,\n                        wednesday: true,\n                        thursday: true,\n                        friday: true,\n                        saturday: true,\n                        sunday: true,\n                      },\n                    });\n                    setIsEditMode(true);\n                    setCreateDialogOpen(true);\n                  }\n                }\n              }}\n              data-testid='button-edit-space'\n            >\n              <Edit className='h-4 w-4' />\n              {language === 'fr' ? 'Modifier' : 'Edit'}\n            </Button>\n          </div>\n\n          <TabsContent value='stats' className='space-y-6'>\n            {spaceStats && (\n              <>\n                {/* Summary Statistics */}\n                <div className='grid grid-cols-1 md:grid-cols-3 gap-6'>\n                  <Card>\n                    <CardContent className='pt-6'>\n                      <div className='flex items-center'>\n                        <Calendar className='h-4 w-4 text-blue-600' />\n                        <div className='ml-4'>\n                          <p\n                            className='text-sm font-medium text-gray-600'\n                            data-testid='total-bookings-label'\n                          >\n                            {language === 'fr' ? 'Réservations totales' : 'Total Bookings'}\n                          </p>\n                          <p\n                            className='text-2xl font-bold text-gray-900'\n                            data-testid='total-bookings-value'\n                          >\n                            {spaceStats.summary.totalBookings}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardContent className='pt-6'>\n                      <div className='flex items-center'>\n                        <Clock className='h-4 w-4 text-green-600' />\n                        <div className='ml-4'>\n                          <p\n                            className='text-sm font-medium text-gray-600'\n                            data-testid='total-hours-label'\n                          >\n                            {language === 'fr' ? 'Heures totales' : 'Total Hours'}\n                          </p>\n                          <p\n                            className='text-2xl font-bold text-gray-900'\n                            data-testid='total-hours-value'\n                          >\n                            {Math.round(spaceStats.summary.totalHours * 10) / 10}h\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardContent className='pt-6'>\n                      <div className='flex items-center'>\n                        <Users className='h-4 w-4 text-purple-600' />\n                        <div className='ml-4'>\n                          <p\n                            className='text-sm font-medium text-gray-600'\n                            data-testid='unique-users-label'\n                          >\n                            {language === 'fr' ? 'Utilisateurs uniques' : 'Unique Users'}\n                          </p>\n                          <p\n                            className='text-2xl font-bold text-gray-900'\n                            data-testid='unique-users-value'\n                          >\n                            {spaceStats.summary.uniqueUsers}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Usage Chart */}\n                {chartData.length > 0 && (\n                  <Card className='mb-8'>\n                    <CardHeader>\n                      <CardTitle className='flex items-center gap-2'>\n                        <BarChart3 className='w-5 h-5' />\n                        {language === 'fr'\n                          ? 'Top 10 utilisateurs par heures'\n                          : 'Top 10 Users by Hours'}\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className='h-80' data-testid='usage-chart'>\n                        <ResponsiveContainer width='100%' height='100%'>\n                          <BarChart data={chartData}>\n                            <CartesianGrid strokeDasharray='3 3' />\n                            <XAxis dataKey='name' angle={-45} textAnchor='end' height={100} />\n                            <YAxis />\n                            <Tooltip\n                              formatter={(value, name) => [\n                                value,\n                                name === 'hours'\n                                  ? language === 'fr'\n                                    ? 'Heures'\n                                    : 'Hours'\n                                  : language === 'fr'\n                                    ? 'Réservations'\n                                    : 'Bookings',\n                              ]}\n                            />\n                            <Legend\n                              formatter={(value) =>\n                                value === 'hours'\n                                  ? language === 'fr'\n                                    ? 'Heures'\n                                    : 'Hours'\n                                  : language === 'fr'\n                                    ? 'Réservations'\n                                    : 'Bookings'\n                              }\n                            />\n                            <Bar dataKey='hours' fill='#3b82f6' name='hours' />\n                            <Bar dataKey='bookings' fill='#10b981' name='bookings' />\n                          </BarChart>\n                        </ResponsiveContainer>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Users Table */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className='flex items-center gap-2'>\n                      <Users className='w-5 h-5' />\n                      {language === 'fr' ? 'Statistiques des utilisateurs' : 'User Statistics'}\n                    </CardTitle>\n                    <p className='text-sm text-gray-600'>\n                      {spaceStats.period} - {spaceStats.spaceName}\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    {spaceStats.userStats.length > 0 ? (\n                      <Table data-testid='users-stats-table'>\n                        <TableHeader>\n                          <TableRow>\n                            <TableHead>{language === 'fr' ? 'Utilisateur' : 'User'}</TableHead>\n                            <TableHead>{language === 'fr' ? 'Email' : 'Email'}</TableHead>\n                            <TableHead className='text-right'>\n                              {language === 'fr' ? 'Heures totales' : 'Total Hours'}\n                            </TableHead>\n                            <TableHead className='text-right'>\n                              {language === 'fr' ? 'Réservations' : 'Bookings'}\n                            </TableHead>\n                            <TableHead className='text-center'>\n                              {language === 'fr' ? 'Actions' : 'Actions'}\n                            </TableHead>\n                          </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                          {spaceStats.userStats.map((userStat) => (\n                            <TableRow\n                              key={userStat.userId}\n                              data-testid={`user-row-${userStat.userId}`}\n                            >\n                              <TableCell className='flex items-center gap-2'>\n                                <User className='w-4 h-4 text-gray-500' />\n                                <span className='font-medium'>{userStat.userName}</span>\n                              </TableCell>\n                              <TableCell className='text-gray-600'>{userStat.userEmail}</TableCell>\n                              <TableCell className='text-right font-mono'>\n                                {Math.round(userStat.totalHours * 10) / 10}h\n                              </TableCell>\n                              <TableCell className='text-right font-mono'>\n                                {userStat.totalBookings}\n                              </TableCell>\n                              <TableCell className='text-center'>\n                                <div className='flex gap-2 justify-center'>\n                                  <Button\n                                    variant='destructive'\n                                    size='sm'\n                                    onClick={() => handleToggleRestriction(userStat, true)}\n                                    disabled={toggleUserRestrictionMutation.isPending}\n                                    data-testid={`button-block-${userStat.userId}`}\n                                  >\n                                    <Ban className='w-4 h-4 mr-1' />\n                                    {language === 'fr' ? 'Bloquer' : 'Block'}\n                                  </Button>\n                                  <Button\n                                    variant='outline'\n                                    size='sm'\n                                    onClick={() => handleToggleRestriction(userStat, false)}\n                                    disabled={toggleUserRestrictionMutation.isPending}\n                                    data-testid={`button-unblock-${userStat.userId}`}\n                                  >\n                                    <CheckCircle className='w-4 h-4 mr-1' />\n                                    {language === 'fr' ? 'Débloquer' : 'Unblock'}\n                                  </Button>\n                                  <Button\n                                    variant='secondary'\n                                    size='sm'\n                                    onClick={() => {\n                                      setSelectedUser(userStat);\n                                      setTimeLimitFormData({\n                                        limit_type: 'monthly',\n                                        limit_hours: '10',\n                                        common_space_id: selectedSpaceId,\n                                      });\n                                      setTimeLimitDialogOpen(true);\n                                    }}\n                                    data-testid={`button-time-limit-${userStat.userId}`}\n                                  >\n                                    <Timer className='w-4 h-4 mr-1' />\n                                    {language === 'fr' ? 'Limite' : 'Limit'}\n                                  </Button>\n                                </div>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    ) : (\n                      <div className='py-4'>\n                        <NoDataCard\n                          icon={TrendingUp}\n                          titleKey=\"noDataAvailable\"\n                          descriptionKey=\"noBookingsFoundMessage\"\n                          testId=\"no-stats-message\"\n                          iconSize={12}\n                        />\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </>\n            )}\n\n            {!selectedSpaceId && (\n              <NoDataCard\n                icon={Building2}\n                titleKey=\"selectCommonSpace\"\n                descriptionKey=\"selectCommonSpaceMessage\"\n                testId=\"select-common-space-message\"\n                iconSize={12}\n              />\n            )}\n\n            {/* Time Limit Dialog */}\n            <Dialog open={timeLimitDialogOpen} onOpenChange={setTimeLimitDialogOpen}>\n              <DialogContent className='max-w-md'>\n                <DialogHeader>\n                  <DialogTitle>\n                    {language === 'fr' ? 'Définir la limite de temps' : 'Set Time Limit'}\n                  </DialogTitle>\n                  <DialogDescription>\n                    {language === 'fr'\n                      ? `Définir une limite de réservation pour ${selectedUser?.userName}`\n                      : `Set booking time limit for ${selectedUser?.userName}`}\n                  </DialogDescription>\n                </DialogHeader>\n\n                <div className='space-y-4 py-4'>\n                  <div className='space-y-2'>\n                    <Label htmlFor='limit-type'>\n                      {language === 'fr' ? 'Type de limite' : 'Limit Type'}\n                    </Label>\n                    <Select\n                      value={timeLimitFormData.limit_type}\n                      onValueChange={(value: 'monthly' | 'yearly') =>\n                        setTimeLimitFormData({ ...timeLimitFormData, limit_type: value })\n                      }\n                    >\n                      <SelectTrigger data-testid='select-limit-type'>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value='monthly'>\n                          {language === 'fr' ? 'Mensuelle' : 'Monthly'}\n                        </SelectItem>\n                        <SelectItem value='yearly'>\n                          {language === 'fr' ? 'Annuelle' : 'Yearly'}\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className='space-y-2'>\n                    <Label htmlFor='limit-hours'>\n                      {language === 'fr' ? 'Limite en heures' : 'Hour Limit'}\n                    </Label>\n                    <Input\n                      id='limit-hours'\n                      type='number'\n                      min='1'\n                      max='8760'\n                      placeholder='10'\n                      value={timeLimitFormData.limit_hours}\n                      onChange={(e) =>\n                        setTimeLimitFormData({\n                          ...timeLimitFormData,\n                          limit_hours: e.target.value,\n                        })\n                      }\n                      data-testid='input-limit-hours'\n                    />\n                    <p className='text-xs text-gray-500'>\n                      {language === 'fr'\n                        ? `Limite ${timeLimitFormData.limit_type === 'monthly' ? 'mensuelle' : 'annuelle'} en heures`\n                        : `${timeLimitFormData.limit_type === 'monthly' ? 'Monthly' : 'Yearly'} limit in hours`}\n                    </p>\n                  </div>\n\n                  <div className='space-y-2'>\n                    <Label htmlFor='limit-scope'>{language === 'fr' ? 'Portée' : 'Scope'}</Label>\n                    <Select\n                      value={timeLimitFormData.common_space_id}\n                      onValueChange={(value) =>\n                        setTimeLimitFormData({ ...timeLimitFormData, common_space_id: value })\n                      }\n                    >\n                      <SelectTrigger data-testid='select-limit-scope'>\n                        <SelectValue\n                          placeholder={\n                            language === 'fr' ? 'Sélectionnez la portée' : 'Select scope'\n                          }\n                        />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=''>\n                          {language === 'fr' ? 'Tous les espaces' : 'All spaces'}\n                        </SelectItem>\n                        <SelectItem value={selectedSpaceId}>\n                          {language === 'fr' ? 'Cet espace uniquement' : 'This space only'}\n                        </SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <DialogFooter>\n                  <Button\n                    variant='outline'\n                    onClick={() => setTimeLimitDialogOpen(false)}\n                    data-testid='button-cancel-time-limit'\n                  >\n                    {language === 'fr' ? 'Annuler' : 'Cancel'}\n                  </Button>\n                  <Button\n                    onClick={handleSetTimeLimit}\n                    disabled={setTimeLimitMutation.isPending || !timeLimitFormData.limit_hours}\n                    data-testid='button-confirm-time-limit'\n                  >\n                    {setTimeLimitMutation.isPending\n                      ? language === 'fr'\n                        ? 'Application...'\n                        : 'Setting...'\n                      : language === 'fr'\n                        ? 'Appliquer la limite'\n                        : 'Set Limit'}\n                  </Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n          </TabsContent>\n\n          <TabsContent value='calendar' className='space-y-6'>\n            <Card>\n              <CardHeader>\n                <CardTitle className='flex items-center gap-2'>\n                  <Eye className='h-5 w-5' />\n                  {language === 'fr' ? 'Vue Calendrier Manager' : 'Manager Calendar View'}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {selectedSpaceId ? (\n                  <div className='p-0'>\n                    <CommonSpaceCalendar\n                      space={{\n                        id: selectedSpaceId,\n                        name:\n                          commonSpaces.find((s) => s.id === selectedSpaceId)?.name ||\n                          'Espace sélectionné',\n                        isReservable: false,\n                      }}\n                      className='border-0 shadow-none bg-transparent p-0'\n                    />\n                  </div>\n                ) : selectedBuildingId ? (\n                  <CalendarView\n                    mode='building'\n                    buildingId={selectedBuildingId}\n                    showControls={true}\n                    onEventClick={(event) => {\n                      // Manager viewing building event\n                    }}\n                    data-testid='manager-building-calendar-view'\n                  />\n                ) : (\n                  <div className='text-center py-12 text-muted-foreground'>\n                    <CalendarDays className='h-16 w-16 mx-auto mb-4 opacity-20' />\n                    <h3 className='text-lg font-medium mb-2'>\n                      {language === 'fr'\n                        ? 'Sélectionnez un espace ou un bâtiment'\n                        : 'Select a space or building'}\n                    </h3>\n                    <p>\n                      {language === 'fr'\n                        ? 'Choisissez un bâtiment ou un espace spécifique pour voir son calendrier de réservations avec les détails complets'\n                        : 'Choose a building or specific space to view its booking calendar with full details'}\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Export the component wrapped with access control\nexport default withManagerAccess(CommonSpacesStatsPage);\n"],"version":3}