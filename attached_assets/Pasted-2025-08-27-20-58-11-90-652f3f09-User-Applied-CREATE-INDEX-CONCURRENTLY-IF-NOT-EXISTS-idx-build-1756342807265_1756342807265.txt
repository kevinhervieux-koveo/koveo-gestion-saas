2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_buildings_active_org ON buildings(organization_id) WHERE is_active = true
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_residences_active_building ON residences(building_id) WHERE is_active = true
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_bills_unpaid ON bills(residence_id, due_date) WHERE status IN ('sent', 'overdue')
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_maintenance_open ON maintenance_requests(residence_id, priority) WHERE status IN ('submitted', 'acknowledged', 'in_progress')
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_notifications_unread ON notifications(user_id, created_at) WHERE is_read = false
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied covering _index: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_covering ON users(email) INCLUDE (first_name, last_name, role, is_active)
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied covering _index: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_buildings_covering ON buildings(organization_id) INCLUDE (name, address, city, building_type, is_active)
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied covering _index: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_residences_covering ON residences(building_id) INCLUDE (unit_number, floor, square_footage, is_active)
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied covering _index: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_bills_covering ON bills(residence_id, status) INCLUDE (bill_number, amount, due_date, type)
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied covering _index: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_maintenance_covering ON maintenance_requests(residence_id, status) INCLUDE (title, priority, category, scheduled_date)
2025-08-27 20:58:11.90
652f3f09
User
‚úì Applied covering _index: CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_notifications_covering ON notifications(user_id, is_read) INCLUDE (title, message, type, created_at)
2025-08-27 20:58:11.90
652f3f09
User
‚úì Created materialized view
2025-08-27 20:58:11.90
652f3f09
User
‚úì Created materialized view
2025-08-27 20:58:11.90
652f3f09
User
‚úì Created materialized view
2025-08-27 20:58:11.90
652f3f09
User
Database optimizations complete
2025-08-27 20:58:12.03
652f3f09
User
‚úÖ Database connection successful
2025-08-27 20:58:12.07
652f3f09
User
Database pool error: password authentication failed for user 'neondb_owner'
2025-08-27 20:58:12.40
652f3f09
User
12:58:12 AM [express] üîÑ Checking database optimization status...
2025-08-27 20:58:12.40
652f3f09
User
12:58:12 AM [express] üè≠ Production mode: Performing safe database checks...
2025-08-27 20:58:12.40
652f3f09
User
Unexpected result format from index check query: SQL {
2025-08-27 20:58:12.40
652f3f09
User
decoder: { mapFromDriverValue: [Function: mapFromDriverValue] },
2025-08-27 20:58:12.40
652f3f09
User
shouldInlineParams: false,
2025-08-27 20:58:12.40
652f3f09
User
usedTables: [],
2025-08-27 20:58:12.40
652f3f09
User
queryChunks: [ StringChunk { value: [Array] } ]
2025-08-27 20:58:12.40
652f3f09
User
}
2025-08-27 20:58:12.41
652f3f09
User
12:58:12 AM [express] ‚ö†Ô∏è Production mode: Skipping database index creation for safety
2025-08-27 20:58:12.41
652f3f09
User
12:58:12 AM [express] ‚ö†Ô∏è Consider running database optimizations in maintenance mode
2025-08-27 20:58:12.41
652f3f09
User
12:58:12 AM [express] üîÑ Background work complete - all routes already loaded
2025-08-27 20:58:12.95
652f3f09
User
üîç Attempting to serve index.html from: /home/runner/workspace/dist/public/index.html
2025-08-27 20:58:12.95
652f3f09
User
‚úÖ index.html found, serving to client
2025-08-27 20:58:22.63
f038ccc8
User
12:58:22 AM [express] üìä Memory usage: 117MB